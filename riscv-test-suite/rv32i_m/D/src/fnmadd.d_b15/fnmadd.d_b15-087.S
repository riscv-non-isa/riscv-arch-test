
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_66048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2500fffffffffff; valaddr_reg:x3; val_offset:198144*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198144*0 + 3*0*FLEN/8, x4, x1, x2)

inst_66049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2501fffffffffff; valaddr_reg:x3; val_offset:198147*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198147*0 + 3*1*FLEN/8, x4, x1, x2)

inst_66050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2503fffffffffff; valaddr_reg:x3; val_offset:198150*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198150*0 + 3*2*FLEN/8, x4, x1, x2)

inst_66051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x2507fffffffffff; valaddr_reg:x3; val_offset:198153*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198153*0 + 3*3*FLEN/8, x4, x1, x2)

inst_66052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x250ffffffffffff; valaddr_reg:x3; val_offset:198156*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198156*0 + 3*4*FLEN/8, x4, x1, x2)

inst_66053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x251ffffffffffff; valaddr_reg:x3; val_offset:198159*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198159*0 + 3*5*FLEN/8, x4, x1, x2)

inst_66054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x253ffffffffffff; valaddr_reg:x3; val_offset:198162*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198162*0 + 3*6*FLEN/8, x4, x1, x2)

inst_66055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x257ffffffffffff; valaddr_reg:x3; val_offset:198165*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198165*0 + 3*7*FLEN/8, x4, x1, x2)

inst_66056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x258000000000000; valaddr_reg:x3; val_offset:198168*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198168*0 + 3*8*FLEN/8, x4, x1, x2)

inst_66057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25c000000000000; valaddr_reg:x3; val_offset:198171*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198171*0 + 3*9*FLEN/8, x4, x1, x2)

inst_66058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25e000000000000; valaddr_reg:x3; val_offset:198174*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198174*0 + 3*10*FLEN/8, x4, x1, x2)

inst_66059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25f000000000000; valaddr_reg:x3; val_offset:198177*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198177*0 + 3*11*FLEN/8, x4, x1, x2)

inst_66060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25f800000000000; valaddr_reg:x3; val_offset:198180*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198180*0 + 3*12*FLEN/8, x4, x1, x2)

inst_66061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fc00000000000; valaddr_reg:x3; val_offset:198183*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198183*0 + 3*13*FLEN/8, x4, x1, x2)

inst_66062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fe00000000000; valaddr_reg:x3; val_offset:198186*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198186*0 + 3*14*FLEN/8, x4, x1, x2)

inst_66063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ff00000000000; valaddr_reg:x3; val_offset:198189*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198189*0 + 3*15*FLEN/8, x4, x1, x2)

inst_66064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ff80000000000; valaddr_reg:x3; val_offset:198192*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198192*0 + 3*16*FLEN/8, x4, x1, x2)

inst_66065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffc0000000000; valaddr_reg:x3; val_offset:198195*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198195*0 + 3*17*FLEN/8, x4, x1, x2)

inst_66066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffe0000000000; valaddr_reg:x3; val_offset:198198*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198198*0 + 3*18*FLEN/8, x4, x1, x2)

inst_66067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fff0000000000; valaddr_reg:x3; val_offset:198201*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198201*0 + 3*19*FLEN/8, x4, x1, x2)

inst_66068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fff8000000000; valaddr_reg:x3; val_offset:198204*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198204*0 + 3*20*FLEN/8, x4, x1, x2)

inst_66069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffc000000000; valaddr_reg:x3; val_offset:198207*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198207*0 + 3*21*FLEN/8, x4, x1, x2)

inst_66070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffe000000000; valaddr_reg:x3; val_offset:198210*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198210*0 + 3*22*FLEN/8, x4, x1, x2)

inst_66071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffff000000000; valaddr_reg:x3; val_offset:198213*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198213*0 + 3*23*FLEN/8, x4, x1, x2)

inst_66072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffff800000000; valaddr_reg:x3; val_offset:198216*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198216*0 + 3*24*FLEN/8, x4, x1, x2)

inst_66073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffc00000000; valaddr_reg:x3; val_offset:198219*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198219*0 + 3*25*FLEN/8, x4, x1, x2)

inst_66074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffe00000000; valaddr_reg:x3; val_offset:198222*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198222*0 + 3*26*FLEN/8, x4, x1, x2)

inst_66075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffff00000000; valaddr_reg:x3; val_offset:198225*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198225*0 + 3*27*FLEN/8, x4, x1, x2)

inst_66076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffff80000000; valaddr_reg:x3; val_offset:198228*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198228*0 + 3*28*FLEN/8, x4, x1, x2)

inst_66077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffc0000000; valaddr_reg:x3; val_offset:198231*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198231*0 + 3*29*FLEN/8, x4, x1, x2)

inst_66078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffe0000000; valaddr_reg:x3; val_offset:198234*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198234*0 + 3*30*FLEN/8, x4, x1, x2)

inst_66079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffff0000000; valaddr_reg:x3; val_offset:198237*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198237*0 + 3*31*FLEN/8, x4, x1, x2)

inst_66080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffff8000000; valaddr_reg:x3; val_offset:198240*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198240*0 + 3*32*FLEN/8, x4, x1, x2)

inst_66081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffc000000; valaddr_reg:x3; val_offset:198243*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198243*0 + 3*33*FLEN/8, x4, x1, x2)

inst_66082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffe000000; valaddr_reg:x3; val_offset:198246*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198246*0 + 3*34*FLEN/8, x4, x1, x2)

inst_66083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffff000000; valaddr_reg:x3; val_offset:198249*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198249*0 + 3*35*FLEN/8, x4, x1, x2)

inst_66084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffff800000; valaddr_reg:x3; val_offset:198252*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198252*0 + 3*36*FLEN/8, x4, x1, x2)

inst_66085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffc00000; valaddr_reg:x3; val_offset:198255*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198255*0 + 3*37*FLEN/8, x4, x1, x2)

inst_66086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffe00000; valaddr_reg:x3; val_offset:198258*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198258*0 + 3*38*FLEN/8, x4, x1, x2)

inst_66087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffff00000; valaddr_reg:x3; val_offset:198261*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198261*0 + 3*39*FLEN/8, x4, x1, x2)

inst_66088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffff80000; valaddr_reg:x3; val_offset:198264*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198264*0 + 3*40*FLEN/8, x4, x1, x2)

inst_66089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffc0000; valaddr_reg:x3; val_offset:198267*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198267*0 + 3*41*FLEN/8, x4, x1, x2)

inst_66090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffe0000; valaddr_reg:x3; val_offset:198270*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198270*0 + 3*42*FLEN/8, x4, x1, x2)

inst_66091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffff0000; valaddr_reg:x3; val_offset:198273*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198273*0 + 3*43*FLEN/8, x4, x1, x2)

inst_66092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffff8000; valaddr_reg:x3; val_offset:198276*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198276*0 + 3*44*FLEN/8, x4, x1, x2)

inst_66093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffffc000; valaddr_reg:x3; val_offset:198279*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198279*0 + 3*45*FLEN/8, x4, x1, x2)

inst_66094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffffe000; valaddr_reg:x3; val_offset:198282*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198282*0 + 3*46*FLEN/8, x4, x1, x2)

inst_66095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffff000; valaddr_reg:x3; val_offset:198285*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198285*0 + 3*47*FLEN/8, x4, x1, x2)

inst_66096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffff800; valaddr_reg:x3; val_offset:198288*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198288*0 + 3*48*FLEN/8, x4, x1, x2)

inst_66097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffffc00; valaddr_reg:x3; val_offset:198291*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198291*0 + 3*49*FLEN/8, x4, x1, x2)

inst_66098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffffe00; valaddr_reg:x3; val_offset:198294*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198294*0 + 3*50*FLEN/8, x4, x1, x2)

inst_66099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffffff00; valaddr_reg:x3; val_offset:198297*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198297*0 + 3*51*FLEN/8, x4, x1, x2)

inst_66100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffffff80; valaddr_reg:x3; val_offset:198300*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198300*0 + 3*52*FLEN/8, x4, x1, x2)

inst_66101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffffffc0; valaddr_reg:x3; val_offset:198303*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198303*0 + 3*53*FLEN/8, x4, x1, x2)

inst_66102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffffffe0; valaddr_reg:x3; val_offset:198306*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198306*0 + 3*54*FLEN/8, x4, x1, x2)

inst_66103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffffff0; valaddr_reg:x3; val_offset:198309*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198309*0 + 3*55*FLEN/8, x4, x1, x2)

inst_66104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffffff8; valaddr_reg:x3; val_offset:198312*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198312*0 + 3*56*FLEN/8, x4, x1, x2)

inst_66105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffffffc; valaddr_reg:x3; val_offset:198315*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198315*0 + 3*57*FLEN/8, x4, x1, x2)

inst_66106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25ffffffffffffe; valaddr_reg:x3; val_offset:198318*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198318*0 + 3*58*FLEN/8, x4, x1, x2)

inst_66107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x423a8b3f85d4b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa423a8b3f85d4b; op2val:0x0;
op3val:0x25fffffffffffff; valaddr_reg:x3; val_offset:198321*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198321*0 + 3*59*FLEN/8, x4, x1, x2)

inst_66108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000000000; valaddr_reg:x3; val_offset:198324*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198324*0 + 3*60*FLEN/8, x4, x1, x2)

inst_66109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000000001; valaddr_reg:x3; val_offset:198327*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198327*0 + 3*61*FLEN/8, x4, x1, x2)

inst_66110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000000003; valaddr_reg:x3; val_offset:198330*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198330*0 + 3*62*FLEN/8, x4, x1, x2)

inst_66111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000000007; valaddr_reg:x3; val_offset:198333*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198333*0 + 3*63*FLEN/8, x4, x1, x2)

inst_66112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000000000f; valaddr_reg:x3; val_offset:198336*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198336*0 + 3*64*FLEN/8, x4, x1, x2)

inst_66113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000000001f; valaddr_reg:x3; val_offset:198339*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198339*0 + 3*65*FLEN/8, x4, x1, x2)

inst_66114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000000003f; valaddr_reg:x3; val_offset:198342*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198342*0 + 3*66*FLEN/8, x4, x1, x2)

inst_66115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000000007f; valaddr_reg:x3; val_offset:198345*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198345*0 + 3*67*FLEN/8, x4, x1, x2)

inst_66116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000000000ff; valaddr_reg:x3; val_offset:198348*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198348*0 + 3*68*FLEN/8, x4, x1, x2)

inst_66117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000000001ff; valaddr_reg:x3; val_offset:198351*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198351*0 + 3*69*FLEN/8, x4, x1, x2)

inst_66118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000000003ff; valaddr_reg:x3; val_offset:198354*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198354*0 + 3*70*FLEN/8, x4, x1, x2)

inst_66119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000000007ff; valaddr_reg:x3; val_offset:198357*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198357*0 + 3*71*FLEN/8, x4, x1, x2)

inst_66120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000000fff; valaddr_reg:x3; val_offset:198360*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198360*0 + 3*72*FLEN/8, x4, x1, x2)

inst_66121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000001fff; valaddr_reg:x3; val_offset:198363*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198363*0 + 3*73*FLEN/8, x4, x1, x2)

inst_66122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000003fff; valaddr_reg:x3; val_offset:198366*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198366*0 + 3*74*FLEN/8, x4, x1, x2)

inst_66123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000007fff; valaddr_reg:x3; val_offset:198369*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198369*0 + 3*75*FLEN/8, x4, x1, x2)

inst_66124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000000ffff; valaddr_reg:x3; val_offset:198372*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198372*0 + 3*76*FLEN/8, x4, x1, x2)

inst_66125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000001ffff; valaddr_reg:x3; val_offset:198375*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198375*0 + 3*77*FLEN/8, x4, x1, x2)

inst_66126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000003ffff; valaddr_reg:x3; val_offset:198378*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198378*0 + 3*78*FLEN/8, x4, x1, x2)

inst_66127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000007ffff; valaddr_reg:x3; val_offset:198381*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198381*0 + 3*79*FLEN/8, x4, x1, x2)

inst_66128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000000fffff; valaddr_reg:x3; val_offset:198384*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198384*0 + 3*80*FLEN/8, x4, x1, x2)

inst_66129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000001fffff; valaddr_reg:x3; val_offset:198387*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198387*0 + 3*81*FLEN/8, x4, x1, x2)

inst_66130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000003fffff; valaddr_reg:x3; val_offset:198390*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198390*0 + 3*82*FLEN/8, x4, x1, x2)

inst_66131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000007fffff; valaddr_reg:x3; val_offset:198393*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198393*0 + 3*83*FLEN/8, x4, x1, x2)

inst_66132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000000ffffff; valaddr_reg:x3; val_offset:198396*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198396*0 + 3*84*FLEN/8, x4, x1, x2)

inst_66133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000001ffffff; valaddr_reg:x3; val_offset:198399*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198399*0 + 3*85*FLEN/8, x4, x1, x2)

inst_66134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000003ffffff; valaddr_reg:x3; val_offset:198402*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198402*0 + 3*86*FLEN/8, x4, x1, x2)

inst_66135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000007ffffff; valaddr_reg:x3; val_offset:198405*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198405*0 + 3*87*FLEN/8, x4, x1, x2)

inst_66136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000000fffffff; valaddr_reg:x3; val_offset:198408*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198408*0 + 3*88*FLEN/8, x4, x1, x2)

inst_66137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000001fffffff; valaddr_reg:x3; val_offset:198411*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198411*0 + 3*89*FLEN/8, x4, x1, x2)

inst_66138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000003fffffff; valaddr_reg:x3; val_offset:198414*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198414*0 + 3*90*FLEN/8, x4, x1, x2)

inst_66139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000007fffffff; valaddr_reg:x3; val_offset:198417*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198417*0 + 3*91*FLEN/8, x4, x1, x2)

inst_66140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400000ffffffff; valaddr_reg:x3; val_offset:198420*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198420*0 + 3*92*FLEN/8, x4, x1, x2)

inst_66141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400001ffffffff; valaddr_reg:x3; val_offset:198423*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198423*0 + 3*93*FLEN/8, x4, x1, x2)

inst_66142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400003ffffffff; valaddr_reg:x3; val_offset:198426*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198426*0 + 3*94*FLEN/8, x4, x1, x2)

inst_66143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400007ffffffff; valaddr_reg:x3; val_offset:198429*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198429*0 + 3*95*FLEN/8, x4, x1, x2)

inst_66144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940000fffffffff; valaddr_reg:x3; val_offset:198432*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198432*0 + 3*96*FLEN/8, x4, x1, x2)

inst_66145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940001fffffffff; valaddr_reg:x3; val_offset:198435*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198435*0 + 3*97*FLEN/8, x4, x1, x2)

inst_66146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940003fffffffff; valaddr_reg:x3; val_offset:198438*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198438*0 + 3*98*FLEN/8, x4, x1, x2)

inst_66147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940007fffffffff; valaddr_reg:x3; val_offset:198441*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198441*0 + 3*99*FLEN/8, x4, x1, x2)

inst_66148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394000ffffffffff; valaddr_reg:x3; val_offset:198444*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198444*0 + 3*100*FLEN/8, x4, x1, x2)

inst_66149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394001ffffffffff; valaddr_reg:x3; val_offset:198447*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198447*0 + 3*101*FLEN/8, x4, x1, x2)

inst_66150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394003ffffffffff; valaddr_reg:x3; val_offset:198450*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198450*0 + 3*102*FLEN/8, x4, x1, x2)

inst_66151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394007ffffffffff; valaddr_reg:x3; val_offset:198453*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198453*0 + 3*103*FLEN/8, x4, x1, x2)

inst_66152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39400fffffffffff; valaddr_reg:x3; val_offset:198456*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198456*0 + 3*104*FLEN/8, x4, x1, x2)

inst_66153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39401fffffffffff; valaddr_reg:x3; val_offset:198459*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198459*0 + 3*105*FLEN/8, x4, x1, x2)

inst_66154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39403fffffffffff; valaddr_reg:x3; val_offset:198462*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198462*0 + 3*106*FLEN/8, x4, x1, x2)

inst_66155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x39407fffffffffff; valaddr_reg:x3; val_offset:198465*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198465*0 + 3*107*FLEN/8, x4, x1, x2)

inst_66156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3940ffffffffffff; valaddr_reg:x3; val_offset:198468*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198468*0 + 3*108*FLEN/8, x4, x1, x2)

inst_66157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3941ffffffffffff; valaddr_reg:x3; val_offset:198471*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198471*0 + 3*109*FLEN/8, x4, x1, x2)

inst_66158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3943ffffffffffff; valaddr_reg:x3; val_offset:198474*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198474*0 + 3*110*FLEN/8, x4, x1, x2)

inst_66159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3947ffffffffffff; valaddr_reg:x3; val_offset:198477*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198477*0 + 3*111*FLEN/8, x4, x1, x2)

inst_66160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3948000000000000; valaddr_reg:x3; val_offset:198480*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198480*0 + 3*112*FLEN/8, x4, x1, x2)

inst_66161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394c000000000000; valaddr_reg:x3; val_offset:198483*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198483*0 + 3*113*FLEN/8, x4, x1, x2)

inst_66162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394e000000000000; valaddr_reg:x3; val_offset:198486*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198486*0 + 3*114*FLEN/8, x4, x1, x2)

inst_66163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394f000000000000; valaddr_reg:x3; val_offset:198489*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198489*0 + 3*115*FLEN/8, x4, x1, x2)

inst_66164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394f800000000000; valaddr_reg:x3; val_offset:198492*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198492*0 + 3*116*FLEN/8, x4, x1, x2)

inst_66165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fc00000000000; valaddr_reg:x3; val_offset:198495*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198495*0 + 3*117*FLEN/8, x4, x1, x2)

inst_66166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fe00000000000; valaddr_reg:x3; val_offset:198498*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198498*0 + 3*118*FLEN/8, x4, x1, x2)

inst_66167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ff00000000000; valaddr_reg:x3; val_offset:198501*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198501*0 + 3*119*FLEN/8, x4, x1, x2)

inst_66168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ff80000000000; valaddr_reg:x3; val_offset:198504*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198504*0 + 3*120*FLEN/8, x4, x1, x2)

inst_66169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffc0000000000; valaddr_reg:x3; val_offset:198507*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198507*0 + 3*121*FLEN/8, x4, x1, x2)

inst_66170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffe0000000000; valaddr_reg:x3; val_offset:198510*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198510*0 + 3*122*FLEN/8, x4, x1, x2)

inst_66171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fff0000000000; valaddr_reg:x3; val_offset:198513*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198513*0 + 3*123*FLEN/8, x4, x1, x2)

inst_66172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fff8000000000; valaddr_reg:x3; val_offset:198516*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198516*0 + 3*124*FLEN/8, x4, x1, x2)

inst_66173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffc000000000; valaddr_reg:x3; val_offset:198519*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198519*0 + 3*125*FLEN/8, x4, x1, x2)

inst_66174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffe000000000; valaddr_reg:x3; val_offset:198522*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198522*0 + 3*126*FLEN/8, x4, x1, x2)

inst_66175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffff000000000; valaddr_reg:x3; val_offset:198525*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198525*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_66176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffff800000000; valaddr_reg:x3; val_offset:198528*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198528*0 + 3*128*FLEN/8, x4, x1, x2)

inst_66177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffc00000000; valaddr_reg:x3; val_offset:198531*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198531*0 + 3*129*FLEN/8, x4, x1, x2)

inst_66178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffe00000000; valaddr_reg:x3; val_offset:198534*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198534*0 + 3*130*FLEN/8, x4, x1, x2)

inst_66179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffff00000000; valaddr_reg:x3; val_offset:198537*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198537*0 + 3*131*FLEN/8, x4, x1, x2)

inst_66180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffff80000000; valaddr_reg:x3; val_offset:198540*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198540*0 + 3*132*FLEN/8, x4, x1, x2)

inst_66181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffc0000000; valaddr_reg:x3; val_offset:198543*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198543*0 + 3*133*FLEN/8, x4, x1, x2)

inst_66182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffe0000000; valaddr_reg:x3; val_offset:198546*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198546*0 + 3*134*FLEN/8, x4, x1, x2)

inst_66183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffff0000000; valaddr_reg:x3; val_offset:198549*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198549*0 + 3*135*FLEN/8, x4, x1, x2)

inst_66184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffff8000000; valaddr_reg:x3; val_offset:198552*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198552*0 + 3*136*FLEN/8, x4, x1, x2)

inst_66185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffc000000; valaddr_reg:x3; val_offset:198555*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198555*0 + 3*137*FLEN/8, x4, x1, x2)

inst_66186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffe000000; valaddr_reg:x3; val_offset:198558*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198558*0 + 3*138*FLEN/8, x4, x1, x2)

inst_66187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffff000000; valaddr_reg:x3; val_offset:198561*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198561*0 + 3*139*FLEN/8, x4, x1, x2)

inst_66188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffff800000; valaddr_reg:x3; val_offset:198564*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198564*0 + 3*140*FLEN/8, x4, x1, x2)

inst_66189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffc00000; valaddr_reg:x3; val_offset:198567*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198567*0 + 3*141*FLEN/8, x4, x1, x2)

inst_66190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffe00000; valaddr_reg:x3; val_offset:198570*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198570*0 + 3*142*FLEN/8, x4, x1, x2)

inst_66191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffff00000; valaddr_reg:x3; val_offset:198573*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198573*0 + 3*143*FLEN/8, x4, x1, x2)

inst_66192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffff80000; valaddr_reg:x3; val_offset:198576*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198576*0 + 3*144*FLEN/8, x4, x1, x2)

inst_66193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffc0000; valaddr_reg:x3; val_offset:198579*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198579*0 + 3*145*FLEN/8, x4, x1, x2)

inst_66194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffe0000; valaddr_reg:x3; val_offset:198582*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198582*0 + 3*146*FLEN/8, x4, x1, x2)

inst_66195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffff0000; valaddr_reg:x3; val_offset:198585*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198585*0 + 3*147*FLEN/8, x4, x1, x2)

inst_66196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffff8000; valaddr_reg:x3; val_offset:198588*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198588*0 + 3*148*FLEN/8, x4, x1, x2)

inst_66197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffffc000; valaddr_reg:x3; val_offset:198591*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198591*0 + 3*149*FLEN/8, x4, x1, x2)

inst_66198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffffe000; valaddr_reg:x3; val_offset:198594*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198594*0 + 3*150*FLEN/8, x4, x1, x2)

inst_66199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffff000; valaddr_reg:x3; val_offset:198597*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198597*0 + 3*151*FLEN/8, x4, x1, x2)

inst_66200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffff800; valaddr_reg:x3; val_offset:198600*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198600*0 + 3*152*FLEN/8, x4, x1, x2)

inst_66201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffffc00; valaddr_reg:x3; val_offset:198603*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198603*0 + 3*153*FLEN/8, x4, x1, x2)

inst_66202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffffe00; valaddr_reg:x3; val_offset:198606*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198606*0 + 3*154*FLEN/8, x4, x1, x2)

inst_66203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffffff00; valaddr_reg:x3; val_offset:198609*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198609*0 + 3*155*FLEN/8, x4, x1, x2)

inst_66204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffffff80; valaddr_reg:x3; val_offset:198612*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198612*0 + 3*156*FLEN/8, x4, x1, x2)

inst_66205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffffffc0; valaddr_reg:x3; val_offset:198615*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198615*0 + 3*157*FLEN/8, x4, x1, x2)

inst_66206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffffffe0; valaddr_reg:x3; val_offset:198618*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198618*0 + 3*158*FLEN/8, x4, x1, x2)

inst_66207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffffff0; valaddr_reg:x3; val_offset:198621*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198621*0 + 3*159*FLEN/8, x4, x1, x2)

inst_66208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffffff8; valaddr_reg:x3; val_offset:198624*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198624*0 + 3*160*FLEN/8, x4, x1, x2)

inst_66209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffffffc; valaddr_reg:x3; val_offset:198627*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198627*0 + 3*161*FLEN/8, x4, x1, x2)

inst_66210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394ffffffffffffe; valaddr_reg:x3; val_offset:198630*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198630*0 + 3*162*FLEN/8, x4, x1, x2)

inst_66211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x394 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x394fffffffffffff; valaddr_reg:x3; val_offset:198633*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198633*0 + 3*163*FLEN/8, x4, x1, x2)

inst_66212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:198636*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198636*0 + 3*164*FLEN/8, x4, x1, x2)

inst_66213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:198639*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198639*0 + 3*165*FLEN/8, x4, x1, x2)

inst_66214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:198642*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198642*0 + 3*166*FLEN/8, x4, x1, x2)

inst_66215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:198645*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198645*0 + 3*167*FLEN/8, x4, x1, x2)

inst_66216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:198648*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198648*0 + 3*168*FLEN/8, x4, x1, x2)

inst_66217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:198651*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198651*0 + 3*169*FLEN/8, x4, x1, x2)

inst_66218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:198654*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198654*0 + 3*170*FLEN/8, x4, x1, x2)

inst_66219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:198657*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198657*0 + 3*171*FLEN/8, x4, x1, x2)

inst_66220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:198660*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198660*0 + 3*172*FLEN/8, x4, x1, x2)

inst_66221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:198663*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198663*0 + 3*173*FLEN/8, x4, x1, x2)

inst_66222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:198666*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198666*0 + 3*174*FLEN/8, x4, x1, x2)

inst_66223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:198669*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198669*0 + 3*175*FLEN/8, x4, x1, x2)

inst_66224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:198672*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198672*0 + 3*176*FLEN/8, x4, x1, x2)

inst_66225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:198675*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198675*0 + 3*177*FLEN/8, x4, x1, x2)

inst_66226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:198678*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198678*0 + 3*178*FLEN/8, x4, x1, x2)

inst_66227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:198681*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198681*0 + 3*179*FLEN/8, x4, x1, x2)

inst_66228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:198684*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198684*0 + 3*180*FLEN/8, x4, x1, x2)

inst_66229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:198687*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198687*0 + 3*181*FLEN/8, x4, x1, x2)

inst_66230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:198690*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198690*0 + 3*182*FLEN/8, x4, x1, x2)

inst_66231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:198693*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198693*0 + 3*183*FLEN/8, x4, x1, x2)

inst_66232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:198696*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198696*0 + 3*184*FLEN/8, x4, x1, x2)

inst_66233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42f486b30f553 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x95da1b7bd6797 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa42f486b30f553; op2val:0x20395da1b7bd6797;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:198699*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198699*0 + 3*185*FLEN/8, x4, x1, x2)

inst_66234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000000000; valaddr_reg:x3; val_offset:198702*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198702*0 + 3*186*FLEN/8, x4, x1, x2)

inst_66235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000000001; valaddr_reg:x3; val_offset:198705*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198705*0 + 3*187*FLEN/8, x4, x1, x2)

inst_66236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000000003; valaddr_reg:x3; val_offset:198708*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198708*0 + 3*188*FLEN/8, x4, x1, x2)

inst_66237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000000007; valaddr_reg:x3; val_offset:198711*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198711*0 + 3*189*FLEN/8, x4, x1, x2)

inst_66238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000000000f; valaddr_reg:x3; val_offset:198714*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198714*0 + 3*190*FLEN/8, x4, x1, x2)

inst_66239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000000001f; valaddr_reg:x3; val_offset:198717*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198717*0 + 3*191*FLEN/8, x4, x1, x2)

inst_66240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000000003f; valaddr_reg:x3; val_offset:198720*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198720*0 + 3*192*FLEN/8, x4, x1, x2)

inst_66241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000000007f; valaddr_reg:x3; val_offset:198723*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198723*0 + 3*193*FLEN/8, x4, x1, x2)

inst_66242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000000000ff; valaddr_reg:x3; val_offset:198726*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198726*0 + 3*194*FLEN/8, x4, x1, x2)

inst_66243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000000001ff; valaddr_reg:x3; val_offset:198729*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198729*0 + 3*195*FLEN/8, x4, x1, x2)

inst_66244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000000003ff; valaddr_reg:x3; val_offset:198732*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198732*0 + 3*196*FLEN/8, x4, x1, x2)

inst_66245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000000007ff; valaddr_reg:x3; val_offset:198735*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198735*0 + 3*197*FLEN/8, x4, x1, x2)

inst_66246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000000fff; valaddr_reg:x3; val_offset:198738*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198738*0 + 3*198*FLEN/8, x4, x1, x2)

inst_66247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000001fff; valaddr_reg:x3; val_offset:198741*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198741*0 + 3*199*FLEN/8, x4, x1, x2)

inst_66248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000003fff; valaddr_reg:x3; val_offset:198744*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198744*0 + 3*200*FLEN/8, x4, x1, x2)

inst_66249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000007fff; valaddr_reg:x3; val_offset:198747*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198747*0 + 3*201*FLEN/8, x4, x1, x2)

inst_66250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000000ffff; valaddr_reg:x3; val_offset:198750*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198750*0 + 3*202*FLEN/8, x4, x1, x2)

inst_66251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000001ffff; valaddr_reg:x3; val_offset:198753*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198753*0 + 3*203*FLEN/8, x4, x1, x2)

inst_66252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000003ffff; valaddr_reg:x3; val_offset:198756*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198756*0 + 3*204*FLEN/8, x4, x1, x2)

inst_66253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000007ffff; valaddr_reg:x3; val_offset:198759*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198759*0 + 3*205*FLEN/8, x4, x1, x2)

inst_66254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000000fffff; valaddr_reg:x3; val_offset:198762*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198762*0 + 3*206*FLEN/8, x4, x1, x2)

inst_66255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000001fffff; valaddr_reg:x3; val_offset:198765*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198765*0 + 3*207*FLEN/8, x4, x1, x2)

inst_66256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000003fffff; valaddr_reg:x3; val_offset:198768*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198768*0 + 3*208*FLEN/8, x4, x1, x2)

inst_66257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000007fffff; valaddr_reg:x3; val_offset:198771*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198771*0 + 3*209*FLEN/8, x4, x1, x2)

inst_66258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000000ffffff; valaddr_reg:x3; val_offset:198774*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198774*0 + 3*210*FLEN/8, x4, x1, x2)

inst_66259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000001ffffff; valaddr_reg:x3; val_offset:198777*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198777*0 + 3*211*FLEN/8, x4, x1, x2)

inst_66260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000003ffffff; valaddr_reg:x3; val_offset:198780*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198780*0 + 3*212*FLEN/8, x4, x1, x2)

inst_66261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000007ffffff; valaddr_reg:x3; val_offset:198783*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198783*0 + 3*213*FLEN/8, x4, x1, x2)

inst_66262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000000fffffff; valaddr_reg:x3; val_offset:198786*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198786*0 + 3*214*FLEN/8, x4, x1, x2)

inst_66263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000001fffffff; valaddr_reg:x3; val_offset:198789*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198789*0 + 3*215*FLEN/8, x4, x1, x2)

inst_66264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000003fffffff; valaddr_reg:x3; val_offset:198792*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198792*0 + 3*216*FLEN/8, x4, x1, x2)

inst_66265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000007fffffff; valaddr_reg:x3; val_offset:198795*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198795*0 + 3*217*FLEN/8, x4, x1, x2)

inst_66266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100000ffffffff; valaddr_reg:x3; val_offset:198798*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198798*0 + 3*218*FLEN/8, x4, x1, x2)

inst_66267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100001ffffffff; valaddr_reg:x3; val_offset:198801*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198801*0 + 3*219*FLEN/8, x4, x1, x2)

inst_66268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100003ffffffff; valaddr_reg:x3; val_offset:198804*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198804*0 + 3*220*FLEN/8, x4, x1, x2)

inst_66269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100007ffffffff; valaddr_reg:x3; val_offset:198807*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198807*0 + 3*221*FLEN/8, x4, x1, x2)

inst_66270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10000fffffffff; valaddr_reg:x3; val_offset:198810*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198810*0 + 3*222*FLEN/8, x4, x1, x2)

inst_66271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10001fffffffff; valaddr_reg:x3; val_offset:198813*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198813*0 + 3*223*FLEN/8, x4, x1, x2)

inst_66272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10003fffffffff; valaddr_reg:x3; val_offset:198816*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198816*0 + 3*224*FLEN/8, x4, x1, x2)

inst_66273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10007fffffffff; valaddr_reg:x3; val_offset:198819*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198819*0 + 3*225*FLEN/8, x4, x1, x2)

inst_66274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1000ffffffffff; valaddr_reg:x3; val_offset:198822*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198822*0 + 3*226*FLEN/8, x4, x1, x2)

inst_66275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1001ffffffffff; valaddr_reg:x3; val_offset:198825*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198825*0 + 3*227*FLEN/8, x4, x1, x2)

inst_66276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1003ffffffffff; valaddr_reg:x3; val_offset:198828*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198828*0 + 3*228*FLEN/8, x4, x1, x2)

inst_66277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1007ffffffffff; valaddr_reg:x3; val_offset:198831*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198831*0 + 3*229*FLEN/8, x4, x1, x2)

inst_66278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb100fffffffffff; valaddr_reg:x3; val_offset:198834*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198834*0 + 3*230*FLEN/8, x4, x1, x2)

inst_66279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb101fffffffffff; valaddr_reg:x3; val_offset:198837*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198837*0 + 3*231*FLEN/8, x4, x1, x2)

inst_66280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb103fffffffffff; valaddr_reg:x3; val_offset:198840*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198840*0 + 3*232*FLEN/8, x4, x1, x2)

inst_66281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb107fffffffffff; valaddr_reg:x3; val_offset:198843*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198843*0 + 3*233*FLEN/8, x4, x1, x2)

inst_66282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb10ffffffffffff; valaddr_reg:x3; val_offset:198846*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198846*0 + 3*234*FLEN/8, x4, x1, x2)

inst_66283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb11ffffffffffff; valaddr_reg:x3; val_offset:198849*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198849*0 + 3*235*FLEN/8, x4, x1, x2)

inst_66284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb13ffffffffffff; valaddr_reg:x3; val_offset:198852*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198852*0 + 3*236*FLEN/8, x4, x1, x2)

inst_66285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb17ffffffffffff; valaddr_reg:x3; val_offset:198855*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198855*0 + 3*237*FLEN/8, x4, x1, x2)

inst_66286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb18000000000000; valaddr_reg:x3; val_offset:198858*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198858*0 + 3*238*FLEN/8, x4, x1, x2)

inst_66287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1c000000000000; valaddr_reg:x3; val_offset:198861*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198861*0 + 3*239*FLEN/8, x4, x1, x2)

inst_66288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1e000000000000; valaddr_reg:x3; val_offset:198864*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198864*0 + 3*240*FLEN/8, x4, x1, x2)

inst_66289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1f000000000000; valaddr_reg:x3; val_offset:198867*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198867*0 + 3*241*FLEN/8, x4, x1, x2)

inst_66290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1f800000000000; valaddr_reg:x3; val_offset:198870*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198870*0 + 3*242*FLEN/8, x4, x1, x2)

inst_66291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fc00000000000; valaddr_reg:x3; val_offset:198873*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198873*0 + 3*243*FLEN/8, x4, x1, x2)

inst_66292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fe00000000000; valaddr_reg:x3; val_offset:198876*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198876*0 + 3*244*FLEN/8, x4, x1, x2)

inst_66293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ff00000000000; valaddr_reg:x3; val_offset:198879*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198879*0 + 3*245*FLEN/8, x4, x1, x2)

inst_66294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ff80000000000; valaddr_reg:x3; val_offset:198882*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198882*0 + 3*246*FLEN/8, x4, x1, x2)

inst_66295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffc0000000000; valaddr_reg:x3; val_offset:198885*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198885*0 + 3*247*FLEN/8, x4, x1, x2)

inst_66296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffe0000000000; valaddr_reg:x3; val_offset:198888*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198888*0 + 3*248*FLEN/8, x4, x1, x2)

inst_66297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fff0000000000; valaddr_reg:x3; val_offset:198891*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198891*0 + 3*249*FLEN/8, x4, x1, x2)

inst_66298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fff8000000000; valaddr_reg:x3; val_offset:198894*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198894*0 + 3*250*FLEN/8, x4, x1, x2)

inst_66299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffc000000000; valaddr_reg:x3; val_offset:198897*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198897*0 + 3*251*FLEN/8, x4, x1, x2)

inst_66300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffe000000000; valaddr_reg:x3; val_offset:198900*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198900*0 + 3*252*FLEN/8, x4, x1, x2)

inst_66301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffff000000000; valaddr_reg:x3; val_offset:198903*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198903*0 + 3*253*FLEN/8, x4, x1, x2)

inst_66302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffff800000000; valaddr_reg:x3; val_offset:198906*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198906*0 + 3*254*FLEN/8, x4, x1, x2)

inst_66303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffc00000000; valaddr_reg:x3; val_offset:198909*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198909*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_66304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffe00000000; valaddr_reg:x3; val_offset:198912*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198912*0 + 3*256*FLEN/8, x4, x1, x2)

inst_66305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffff00000000; valaddr_reg:x3; val_offset:198915*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198915*0 + 3*257*FLEN/8, x4, x1, x2)

inst_66306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffff80000000; valaddr_reg:x3; val_offset:198918*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198918*0 + 3*258*FLEN/8, x4, x1, x2)

inst_66307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffc0000000; valaddr_reg:x3; val_offset:198921*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198921*0 + 3*259*FLEN/8, x4, x1, x2)

inst_66308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffe0000000; valaddr_reg:x3; val_offset:198924*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198924*0 + 3*260*FLEN/8, x4, x1, x2)

inst_66309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffff0000000; valaddr_reg:x3; val_offset:198927*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198927*0 + 3*261*FLEN/8, x4, x1, x2)

inst_66310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffff8000000; valaddr_reg:x3; val_offset:198930*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198930*0 + 3*262*FLEN/8, x4, x1, x2)

inst_66311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffc000000; valaddr_reg:x3; val_offset:198933*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198933*0 + 3*263*FLEN/8, x4, x1, x2)

inst_66312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffe000000; valaddr_reg:x3; val_offset:198936*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198936*0 + 3*264*FLEN/8, x4, x1, x2)

inst_66313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffff000000; valaddr_reg:x3; val_offset:198939*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198939*0 + 3*265*FLEN/8, x4, x1, x2)

inst_66314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffff800000; valaddr_reg:x3; val_offset:198942*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198942*0 + 3*266*FLEN/8, x4, x1, x2)

inst_66315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffc00000; valaddr_reg:x3; val_offset:198945*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198945*0 + 3*267*FLEN/8, x4, x1, x2)

inst_66316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffe00000; valaddr_reg:x3; val_offset:198948*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198948*0 + 3*268*FLEN/8, x4, x1, x2)

inst_66317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffff00000; valaddr_reg:x3; val_offset:198951*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198951*0 + 3*269*FLEN/8, x4, x1, x2)

inst_66318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffff80000; valaddr_reg:x3; val_offset:198954*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198954*0 + 3*270*FLEN/8, x4, x1, x2)

inst_66319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffc0000; valaddr_reg:x3; val_offset:198957*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198957*0 + 3*271*FLEN/8, x4, x1, x2)

inst_66320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffe0000; valaddr_reg:x3; val_offset:198960*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198960*0 + 3*272*FLEN/8, x4, x1, x2)

inst_66321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffff0000; valaddr_reg:x3; val_offset:198963*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198963*0 + 3*273*FLEN/8, x4, x1, x2)

inst_66322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffff8000; valaddr_reg:x3; val_offset:198966*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198966*0 + 3*274*FLEN/8, x4, x1, x2)

inst_66323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffffc000; valaddr_reg:x3; val_offset:198969*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198969*0 + 3*275*FLEN/8, x4, x1, x2)

inst_66324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffffe000; valaddr_reg:x3; val_offset:198972*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198972*0 + 3*276*FLEN/8, x4, x1, x2)

inst_66325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffff000; valaddr_reg:x3; val_offset:198975*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198975*0 + 3*277*FLEN/8, x4, x1, x2)

inst_66326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffff800; valaddr_reg:x3; val_offset:198978*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198978*0 + 3*278*FLEN/8, x4, x1, x2)

inst_66327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffffc00; valaddr_reg:x3; val_offset:198981*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198981*0 + 3*279*FLEN/8, x4, x1, x2)

inst_66328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffffe00; valaddr_reg:x3; val_offset:198984*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198984*0 + 3*280*FLEN/8, x4, x1, x2)

inst_66329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffffff00; valaddr_reg:x3; val_offset:198987*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198987*0 + 3*281*FLEN/8, x4, x1, x2)

inst_66330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffffff80; valaddr_reg:x3; val_offset:198990*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198990*0 + 3*282*FLEN/8, x4, x1, x2)

inst_66331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffffffc0; valaddr_reg:x3; val_offset:198993*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198993*0 + 3*283*FLEN/8, x4, x1, x2)

inst_66332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffffffe0; valaddr_reg:x3; val_offset:198996*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198996*0 + 3*284*FLEN/8, x4, x1, x2)

inst_66333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffffff0; valaddr_reg:x3; val_offset:198999*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198999*0 + 3*285*FLEN/8, x4, x1, x2)

inst_66334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffffff8; valaddr_reg:x3; val_offset:199002*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199002*0 + 3*286*FLEN/8, x4, x1, x2)

inst_66335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffffffc; valaddr_reg:x3; val_offset:199005*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199005*0 + 3*287*FLEN/8, x4, x1, x2)

inst_66336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1ffffffffffffe; valaddr_reg:x3; val_offset:199008*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199008*0 + 3*288*FLEN/8, x4, x1, x2)

inst_66337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3b1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbb1fffffffffffff; valaddr_reg:x3; val_offset:199011*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199011*0 + 3*289*FLEN/8, x4, x1, x2)

inst_66338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:199014*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199014*0 + 3*290*FLEN/8, x4, x1, x2)

inst_66339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:199017*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199017*0 + 3*291*FLEN/8, x4, x1, x2)

inst_66340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:199020*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199020*0 + 3*292*FLEN/8, x4, x1, x2)

inst_66341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:199023*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199023*0 + 3*293*FLEN/8, x4, x1, x2)

inst_66342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:199026*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199026*0 + 3*294*FLEN/8, x4, x1, x2)

inst_66343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:199029*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199029*0 + 3*295*FLEN/8, x4, x1, x2)

inst_66344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:199032*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199032*0 + 3*296*FLEN/8, x4, x1, x2)

inst_66345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:199035*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199035*0 + 3*297*FLEN/8, x4, x1, x2)

inst_66346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:199038*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199038*0 + 3*298*FLEN/8, x4, x1, x2)

inst_66347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:199041*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199041*0 + 3*299*FLEN/8, x4, x1, x2)

inst_66348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:199044*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199044*0 + 3*300*FLEN/8, x4, x1, x2)

inst_66349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:199047*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199047*0 + 3*301*FLEN/8, x4, x1, x2)

inst_66350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:199050*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199050*0 + 3*302*FLEN/8, x4, x1, x2)

inst_66351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:199053*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199053*0 + 3*303*FLEN/8, x4, x1, x2)

inst_66352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:199056*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199056*0 + 3*304*FLEN/8, x4, x1, x2)

inst_66353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:199059*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199059*0 + 3*305*FLEN/8, x4, x1, x2)

inst_66354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:199062*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199062*0 + 3*306*FLEN/8, x4, x1, x2)

inst_66355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:199065*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199065*0 + 3*307*FLEN/8, x4, x1, x2)

inst_66356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:199068*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199068*0 + 3*308*FLEN/8, x4, x1, x2)

inst_66357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:199071*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199071*0 + 3*309*FLEN/8, x4, x1, x2)

inst_66358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:199074*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199074*0 + 3*310*FLEN/8, x4, x1, x2)

inst_66359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4550cd40a27ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x92e83c2bb7d44 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4550cd40a27ab; op2val:0x9fc92e83c2bb7d44;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:199077*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199077*0 + 3*311*FLEN/8, x4, x1, x2)

inst_66360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:199080*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199080*0 + 3*312*FLEN/8, x4, x1, x2)

inst_66361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:199083*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199083*0 + 3*313*FLEN/8, x4, x1, x2)

inst_66362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:199086*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199086*0 + 3*314*FLEN/8, x4, x1, x2)

inst_66363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:199089*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199089*0 + 3*315*FLEN/8, x4, x1, x2)

inst_66364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:199092*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199092*0 + 3*316*FLEN/8, x4, x1, x2)

inst_66365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:199095*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199095*0 + 3*317*FLEN/8, x4, x1, x2)

inst_66366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:199098*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199098*0 + 3*318*FLEN/8, x4, x1, x2)

inst_66367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:199101*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199101*0 + 3*319*FLEN/8, x4, x1, x2)

inst_66368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:199104*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199104*0 + 3*320*FLEN/8, x4, x1, x2)

inst_66369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:199107*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199107*0 + 3*321*FLEN/8, x4, x1, x2)

inst_66370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:199110*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199110*0 + 3*322*FLEN/8, x4, x1, x2)

inst_66371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:199113*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199113*0 + 3*323*FLEN/8, x4, x1, x2)

inst_66372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:199116*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199116*0 + 3*324*FLEN/8, x4, x1, x2)

inst_66373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:199119*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199119*0 + 3*325*FLEN/8, x4, x1, x2)

inst_66374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:199122*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199122*0 + 3*326*FLEN/8, x4, x1, x2)

inst_66375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:199125*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199125*0 + 3*327*FLEN/8, x4, x1, x2)

inst_66376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:199128*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199128*0 + 3*328*FLEN/8, x4, x1, x2)

inst_66377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:199131*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199131*0 + 3*329*FLEN/8, x4, x1, x2)

inst_66378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:199134*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199134*0 + 3*330*FLEN/8, x4, x1, x2)

inst_66379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:199137*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199137*0 + 3*331*FLEN/8, x4, x1, x2)

inst_66380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:199140*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199140*0 + 3*332*FLEN/8, x4, x1, x2)

inst_66381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:199143*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199143*0 + 3*333*FLEN/8, x4, x1, x2)

inst_66382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000000000; valaddr_reg:x3; val_offset:199146*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199146*0 + 3*334*FLEN/8, x4, x1, x2)

inst_66383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000000001; valaddr_reg:x3; val_offset:199149*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199149*0 + 3*335*FLEN/8, x4, x1, x2)

inst_66384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000000003; valaddr_reg:x3; val_offset:199152*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199152*0 + 3*336*FLEN/8, x4, x1, x2)

inst_66385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000000007; valaddr_reg:x3; val_offset:199155*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199155*0 + 3*337*FLEN/8, x4, x1, x2)

inst_66386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000000000f; valaddr_reg:x3; val_offset:199158*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199158*0 + 3*338*FLEN/8, x4, x1, x2)

inst_66387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000000001f; valaddr_reg:x3; val_offset:199161*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199161*0 + 3*339*FLEN/8, x4, x1, x2)

inst_66388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000000003f; valaddr_reg:x3; val_offset:199164*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199164*0 + 3*340*FLEN/8, x4, x1, x2)

inst_66389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000000007f; valaddr_reg:x3; val_offset:199167*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199167*0 + 3*341*FLEN/8, x4, x1, x2)

inst_66390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000000000ff; valaddr_reg:x3; val_offset:199170*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199170*0 + 3*342*FLEN/8, x4, x1, x2)

inst_66391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000000001ff; valaddr_reg:x3; val_offset:199173*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199173*0 + 3*343*FLEN/8, x4, x1, x2)

inst_66392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000000003ff; valaddr_reg:x3; val_offset:199176*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199176*0 + 3*344*FLEN/8, x4, x1, x2)

inst_66393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000000007ff; valaddr_reg:x3; val_offset:199179*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199179*0 + 3*345*FLEN/8, x4, x1, x2)

inst_66394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000000fff; valaddr_reg:x3; val_offset:199182*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199182*0 + 3*346*FLEN/8, x4, x1, x2)

inst_66395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000001fff; valaddr_reg:x3; val_offset:199185*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199185*0 + 3*347*FLEN/8, x4, x1, x2)

inst_66396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000003fff; valaddr_reg:x3; val_offset:199188*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199188*0 + 3*348*FLEN/8, x4, x1, x2)

inst_66397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000007fff; valaddr_reg:x3; val_offset:199191*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199191*0 + 3*349*FLEN/8, x4, x1, x2)

inst_66398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000000ffff; valaddr_reg:x3; val_offset:199194*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199194*0 + 3*350*FLEN/8, x4, x1, x2)

inst_66399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000001ffff; valaddr_reg:x3; val_offset:199197*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199197*0 + 3*351*FLEN/8, x4, x1, x2)

inst_66400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000003ffff; valaddr_reg:x3; val_offset:199200*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199200*0 + 3*352*FLEN/8, x4, x1, x2)

inst_66401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000007ffff; valaddr_reg:x3; val_offset:199203*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199203*0 + 3*353*FLEN/8, x4, x1, x2)

inst_66402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000000fffff; valaddr_reg:x3; val_offset:199206*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199206*0 + 3*354*FLEN/8, x4, x1, x2)

inst_66403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000001fffff; valaddr_reg:x3; val_offset:199209*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199209*0 + 3*355*FLEN/8, x4, x1, x2)

inst_66404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000003fffff; valaddr_reg:x3; val_offset:199212*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199212*0 + 3*356*FLEN/8, x4, x1, x2)

inst_66405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000007fffff; valaddr_reg:x3; val_offset:199215*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199215*0 + 3*357*FLEN/8, x4, x1, x2)

inst_66406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000000ffffff; valaddr_reg:x3; val_offset:199218*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199218*0 + 3*358*FLEN/8, x4, x1, x2)

inst_66407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000001ffffff; valaddr_reg:x3; val_offset:199221*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199221*0 + 3*359*FLEN/8, x4, x1, x2)

inst_66408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000003ffffff; valaddr_reg:x3; val_offset:199224*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199224*0 + 3*360*FLEN/8, x4, x1, x2)

inst_66409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000007ffffff; valaddr_reg:x3; val_offset:199227*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199227*0 + 3*361*FLEN/8, x4, x1, x2)

inst_66410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000000fffffff; valaddr_reg:x3; val_offset:199230*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199230*0 + 3*362*FLEN/8, x4, x1, x2)

inst_66411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000001fffffff; valaddr_reg:x3; val_offset:199233*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199233*0 + 3*363*FLEN/8, x4, x1, x2)

inst_66412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000003fffffff; valaddr_reg:x3; val_offset:199236*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199236*0 + 3*364*FLEN/8, x4, x1, x2)

inst_66413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000007fffffff; valaddr_reg:x3; val_offset:199239*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199239*0 + 3*365*FLEN/8, x4, x1, x2)

inst_66414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500000ffffffff; valaddr_reg:x3; val_offset:199242*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199242*0 + 3*366*FLEN/8, x4, x1, x2)

inst_66415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500001ffffffff; valaddr_reg:x3; val_offset:199245*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199245*0 + 3*367*FLEN/8, x4, x1, x2)

inst_66416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500003ffffffff; valaddr_reg:x3; val_offset:199248*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199248*0 + 3*368*FLEN/8, x4, x1, x2)

inst_66417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500007ffffffff; valaddr_reg:x3; val_offset:199251*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199251*0 + 3*369*FLEN/8, x4, x1, x2)

inst_66418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150000fffffffff; valaddr_reg:x3; val_offset:199254*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199254*0 + 3*370*FLEN/8, x4, x1, x2)

inst_66419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150001fffffffff; valaddr_reg:x3; val_offset:199257*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199257*0 + 3*371*FLEN/8, x4, x1, x2)

inst_66420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150003fffffffff; valaddr_reg:x3; val_offset:199260*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199260*0 + 3*372*FLEN/8, x4, x1, x2)

inst_66421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150007fffffffff; valaddr_reg:x3; val_offset:199263*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199263*0 + 3*373*FLEN/8, x4, x1, x2)

inst_66422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15000ffffffffff; valaddr_reg:x3; val_offset:199266*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199266*0 + 3*374*FLEN/8, x4, x1, x2)

inst_66423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15001ffffffffff; valaddr_reg:x3; val_offset:199269*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199269*0 + 3*375*FLEN/8, x4, x1, x2)

inst_66424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15003ffffffffff; valaddr_reg:x3; val_offset:199272*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199272*0 + 3*376*FLEN/8, x4, x1, x2)

inst_66425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15007ffffffffff; valaddr_reg:x3; val_offset:199275*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199275*0 + 3*377*FLEN/8, x4, x1, x2)

inst_66426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1500fffffffffff; valaddr_reg:x3; val_offset:199278*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199278*0 + 3*378*FLEN/8, x4, x1, x2)

inst_66427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1501fffffffffff; valaddr_reg:x3; val_offset:199281*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199281*0 + 3*379*FLEN/8, x4, x1, x2)

inst_66428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1503fffffffffff; valaddr_reg:x3; val_offset:199284*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199284*0 + 3*380*FLEN/8, x4, x1, x2)

inst_66429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x1507fffffffffff; valaddr_reg:x3; val_offset:199287*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199287*0 + 3*381*FLEN/8, x4, x1, x2)

inst_66430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x150ffffffffffff; valaddr_reg:x3; val_offset:199290*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199290*0 + 3*382*FLEN/8, x4, x1, x2)

inst_66431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x151ffffffffffff; valaddr_reg:x3; val_offset:199293*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199293*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_66432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x153ffffffffffff; valaddr_reg:x3; val_offset:199296*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199296*0 + 3*384*FLEN/8, x4, x1, x2)

inst_66433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x157ffffffffffff; valaddr_reg:x3; val_offset:199299*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199299*0 + 3*385*FLEN/8, x4, x1, x2)

inst_66434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x158000000000000; valaddr_reg:x3; val_offset:199302*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199302*0 + 3*386*FLEN/8, x4, x1, x2)

inst_66435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15c000000000000; valaddr_reg:x3; val_offset:199305*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199305*0 + 3*387*FLEN/8, x4, x1, x2)

inst_66436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15e000000000000; valaddr_reg:x3; val_offset:199308*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199308*0 + 3*388*FLEN/8, x4, x1, x2)

inst_66437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15f000000000000; valaddr_reg:x3; val_offset:199311*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199311*0 + 3*389*FLEN/8, x4, x1, x2)

inst_66438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15f800000000000; valaddr_reg:x3; val_offset:199314*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199314*0 + 3*390*FLEN/8, x4, x1, x2)

inst_66439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fc00000000000; valaddr_reg:x3; val_offset:199317*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199317*0 + 3*391*FLEN/8, x4, x1, x2)

inst_66440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fe00000000000; valaddr_reg:x3; val_offset:199320*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199320*0 + 3*392*FLEN/8, x4, x1, x2)

inst_66441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ff00000000000; valaddr_reg:x3; val_offset:199323*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199323*0 + 3*393*FLEN/8, x4, x1, x2)

inst_66442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ff80000000000; valaddr_reg:x3; val_offset:199326*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199326*0 + 3*394*FLEN/8, x4, x1, x2)

inst_66443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffc0000000000; valaddr_reg:x3; val_offset:199329*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199329*0 + 3*395*FLEN/8, x4, x1, x2)

inst_66444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffe0000000000; valaddr_reg:x3; val_offset:199332*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199332*0 + 3*396*FLEN/8, x4, x1, x2)

inst_66445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fff0000000000; valaddr_reg:x3; val_offset:199335*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199335*0 + 3*397*FLEN/8, x4, x1, x2)

inst_66446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fff8000000000; valaddr_reg:x3; val_offset:199338*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199338*0 + 3*398*FLEN/8, x4, x1, x2)

inst_66447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffc000000000; valaddr_reg:x3; val_offset:199341*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199341*0 + 3*399*FLEN/8, x4, x1, x2)

inst_66448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffe000000000; valaddr_reg:x3; val_offset:199344*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199344*0 + 3*400*FLEN/8, x4, x1, x2)

inst_66449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffff000000000; valaddr_reg:x3; val_offset:199347*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199347*0 + 3*401*FLEN/8, x4, x1, x2)

inst_66450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffff800000000; valaddr_reg:x3; val_offset:199350*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199350*0 + 3*402*FLEN/8, x4, x1, x2)

inst_66451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffc00000000; valaddr_reg:x3; val_offset:199353*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199353*0 + 3*403*FLEN/8, x4, x1, x2)

inst_66452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffe00000000; valaddr_reg:x3; val_offset:199356*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199356*0 + 3*404*FLEN/8, x4, x1, x2)

inst_66453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffff00000000; valaddr_reg:x3; val_offset:199359*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199359*0 + 3*405*FLEN/8, x4, x1, x2)

inst_66454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffff80000000; valaddr_reg:x3; val_offset:199362*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199362*0 + 3*406*FLEN/8, x4, x1, x2)

inst_66455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffc0000000; valaddr_reg:x3; val_offset:199365*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199365*0 + 3*407*FLEN/8, x4, x1, x2)

inst_66456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffe0000000; valaddr_reg:x3; val_offset:199368*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199368*0 + 3*408*FLEN/8, x4, x1, x2)

inst_66457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffff0000000; valaddr_reg:x3; val_offset:199371*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199371*0 + 3*409*FLEN/8, x4, x1, x2)

inst_66458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffff8000000; valaddr_reg:x3; val_offset:199374*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199374*0 + 3*410*FLEN/8, x4, x1, x2)

inst_66459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffc000000; valaddr_reg:x3; val_offset:199377*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199377*0 + 3*411*FLEN/8, x4, x1, x2)

inst_66460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffe000000; valaddr_reg:x3; val_offset:199380*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199380*0 + 3*412*FLEN/8, x4, x1, x2)

inst_66461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffff000000; valaddr_reg:x3; val_offset:199383*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199383*0 + 3*413*FLEN/8, x4, x1, x2)

inst_66462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffff800000; valaddr_reg:x3; val_offset:199386*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199386*0 + 3*414*FLEN/8, x4, x1, x2)

inst_66463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffc00000; valaddr_reg:x3; val_offset:199389*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199389*0 + 3*415*FLEN/8, x4, x1, x2)

inst_66464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffe00000; valaddr_reg:x3; val_offset:199392*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199392*0 + 3*416*FLEN/8, x4, x1, x2)

inst_66465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffff00000; valaddr_reg:x3; val_offset:199395*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199395*0 + 3*417*FLEN/8, x4, x1, x2)

inst_66466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffff80000; valaddr_reg:x3; val_offset:199398*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199398*0 + 3*418*FLEN/8, x4, x1, x2)

inst_66467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffc0000; valaddr_reg:x3; val_offset:199401*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199401*0 + 3*419*FLEN/8, x4, x1, x2)

inst_66468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffe0000; valaddr_reg:x3; val_offset:199404*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199404*0 + 3*420*FLEN/8, x4, x1, x2)

inst_66469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffff0000; valaddr_reg:x3; val_offset:199407*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199407*0 + 3*421*FLEN/8, x4, x1, x2)

inst_66470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffff8000; valaddr_reg:x3; val_offset:199410*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199410*0 + 3*422*FLEN/8, x4, x1, x2)

inst_66471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffffc000; valaddr_reg:x3; val_offset:199413*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199413*0 + 3*423*FLEN/8, x4, x1, x2)

inst_66472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffffe000; valaddr_reg:x3; val_offset:199416*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199416*0 + 3*424*FLEN/8, x4, x1, x2)

inst_66473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffff000; valaddr_reg:x3; val_offset:199419*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199419*0 + 3*425*FLEN/8, x4, x1, x2)

inst_66474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffff800; valaddr_reg:x3; val_offset:199422*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199422*0 + 3*426*FLEN/8, x4, x1, x2)

inst_66475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffffc00; valaddr_reg:x3; val_offset:199425*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199425*0 + 3*427*FLEN/8, x4, x1, x2)

inst_66476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffffe00; valaddr_reg:x3; val_offset:199428*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199428*0 + 3*428*FLEN/8, x4, x1, x2)

inst_66477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffffff00; valaddr_reg:x3; val_offset:199431*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199431*0 + 3*429*FLEN/8, x4, x1, x2)

inst_66478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffffff80; valaddr_reg:x3; val_offset:199434*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199434*0 + 3*430*FLEN/8, x4, x1, x2)

inst_66479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffffffc0; valaddr_reg:x3; val_offset:199437*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199437*0 + 3*431*FLEN/8, x4, x1, x2)

inst_66480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffffffe0; valaddr_reg:x3; val_offset:199440*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199440*0 + 3*432*FLEN/8, x4, x1, x2)

inst_66481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffffff0; valaddr_reg:x3; val_offset:199443*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199443*0 + 3*433*FLEN/8, x4, x1, x2)

inst_66482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffffff8; valaddr_reg:x3; val_offset:199446*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199446*0 + 3*434*FLEN/8, x4, x1, x2)

inst_66483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffffffc; valaddr_reg:x3; val_offset:199449*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199449*0 + 3*435*FLEN/8, x4, x1, x2)

inst_66484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15ffffffffffffe; valaddr_reg:x3; val_offset:199452*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199452*0 + 3*436*FLEN/8, x4, x1, x2)

inst_66485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x456e74cf8ed09 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa456e74cf8ed09; op2val:0x0;
op3val:0x15fffffffffffff; valaddr_reg:x3; val_offset:199455*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199455*0 + 3*437*FLEN/8, x4, x1, x2)

inst_66486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:199458*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199458*0 + 3*438*FLEN/8, x4, x1, x2)

inst_66487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:199461*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199461*0 + 3*439*FLEN/8, x4, x1, x2)

inst_66488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:199464*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199464*0 + 3*440*FLEN/8, x4, x1, x2)

inst_66489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:199467*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199467*0 + 3*441*FLEN/8, x4, x1, x2)

inst_66490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:199470*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199470*0 + 3*442*FLEN/8, x4, x1, x2)

inst_66491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:199473*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199473*0 + 3*443*FLEN/8, x4, x1, x2)

inst_66492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:199476*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199476*0 + 3*444*FLEN/8, x4, x1, x2)

inst_66493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:199479*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199479*0 + 3*445*FLEN/8, x4, x1, x2)

inst_66494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:199482*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199482*0 + 3*446*FLEN/8, x4, x1, x2)

inst_66495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:199485*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199485*0 + 3*447*FLEN/8, x4, x1, x2)

inst_66496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:199488*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199488*0 + 3*448*FLEN/8, x4, x1, x2)

inst_66497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:199491*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199491*0 + 3*449*FLEN/8, x4, x1, x2)

inst_66498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:199494*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199494*0 + 3*450*FLEN/8, x4, x1, x2)

inst_66499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:199497*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199497*0 + 3*451*FLEN/8, x4, x1, x2)

inst_66500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:199500*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199500*0 + 3*452*FLEN/8, x4, x1, x2)

inst_66501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:199503*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199503*0 + 3*453*FLEN/8, x4, x1, x2)

inst_66502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:199506*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199506*0 + 3*454*FLEN/8, x4, x1, x2)

inst_66503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:199509*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199509*0 + 3*455*FLEN/8, x4, x1, x2)

inst_66504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:199512*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199512*0 + 3*456*FLEN/8, x4, x1, x2)

inst_66505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:199515*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199515*0 + 3*457*FLEN/8, x4, x1, x2)

inst_66506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:199518*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199518*0 + 3*458*FLEN/8, x4, x1, x2)

inst_66507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:199521*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199521*0 + 3*459*FLEN/8, x4, x1, x2)

inst_66508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000000000; valaddr_reg:x3; val_offset:199524*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199524*0 + 3*460*FLEN/8, x4, x1, x2)

inst_66509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000000001; valaddr_reg:x3; val_offset:199527*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199527*0 + 3*461*FLEN/8, x4, x1, x2)

inst_66510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000000003; valaddr_reg:x3; val_offset:199530*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199530*0 + 3*462*FLEN/8, x4, x1, x2)

inst_66511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000000007; valaddr_reg:x3; val_offset:199533*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199533*0 + 3*463*FLEN/8, x4, x1, x2)

inst_66512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000000000f; valaddr_reg:x3; val_offset:199536*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199536*0 + 3*464*FLEN/8, x4, x1, x2)

inst_66513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000000001f; valaddr_reg:x3; val_offset:199539*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199539*0 + 3*465*FLEN/8, x4, x1, x2)

inst_66514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000000003f; valaddr_reg:x3; val_offset:199542*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199542*0 + 3*466*FLEN/8, x4, x1, x2)

inst_66515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000000007f; valaddr_reg:x3; val_offset:199545*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199545*0 + 3*467*FLEN/8, x4, x1, x2)

inst_66516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000000000ff; valaddr_reg:x3; val_offset:199548*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199548*0 + 3*468*FLEN/8, x4, x1, x2)

inst_66517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000000001ff; valaddr_reg:x3; val_offset:199551*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199551*0 + 3*469*FLEN/8, x4, x1, x2)

inst_66518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000000003ff; valaddr_reg:x3; val_offset:199554*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199554*0 + 3*470*FLEN/8, x4, x1, x2)

inst_66519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000000007ff; valaddr_reg:x3; val_offset:199557*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199557*0 + 3*471*FLEN/8, x4, x1, x2)

inst_66520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000000fff; valaddr_reg:x3; val_offset:199560*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199560*0 + 3*472*FLEN/8, x4, x1, x2)

inst_66521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000001fff; valaddr_reg:x3; val_offset:199563*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199563*0 + 3*473*FLEN/8, x4, x1, x2)

inst_66522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000003fff; valaddr_reg:x3; val_offset:199566*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199566*0 + 3*474*FLEN/8, x4, x1, x2)

inst_66523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000007fff; valaddr_reg:x3; val_offset:199569*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199569*0 + 3*475*FLEN/8, x4, x1, x2)

inst_66524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000000ffff; valaddr_reg:x3; val_offset:199572*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199572*0 + 3*476*FLEN/8, x4, x1, x2)

inst_66525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000001ffff; valaddr_reg:x3; val_offset:199575*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199575*0 + 3*477*FLEN/8, x4, x1, x2)

inst_66526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000003ffff; valaddr_reg:x3; val_offset:199578*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199578*0 + 3*478*FLEN/8, x4, x1, x2)

inst_66527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000007ffff; valaddr_reg:x3; val_offset:199581*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199581*0 + 3*479*FLEN/8, x4, x1, x2)

inst_66528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000000fffff; valaddr_reg:x3; val_offset:199584*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199584*0 + 3*480*FLEN/8, x4, x1, x2)

inst_66529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000001fffff; valaddr_reg:x3; val_offset:199587*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199587*0 + 3*481*FLEN/8, x4, x1, x2)

inst_66530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000003fffff; valaddr_reg:x3; val_offset:199590*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199590*0 + 3*482*FLEN/8, x4, x1, x2)

inst_66531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000007fffff; valaddr_reg:x3; val_offset:199593*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199593*0 + 3*483*FLEN/8, x4, x1, x2)

inst_66532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000000ffffff; valaddr_reg:x3; val_offset:199596*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199596*0 + 3*484*FLEN/8, x4, x1, x2)

inst_66533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000001ffffff; valaddr_reg:x3; val_offset:199599*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199599*0 + 3*485*FLEN/8, x4, x1, x2)

inst_66534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000003ffffff; valaddr_reg:x3; val_offset:199602*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199602*0 + 3*486*FLEN/8, x4, x1, x2)

inst_66535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000007ffffff; valaddr_reg:x3; val_offset:199605*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199605*0 + 3*487*FLEN/8, x4, x1, x2)

inst_66536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000000fffffff; valaddr_reg:x3; val_offset:199608*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199608*0 + 3*488*FLEN/8, x4, x1, x2)

inst_66537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000001fffffff; valaddr_reg:x3; val_offset:199611*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199611*0 + 3*489*FLEN/8, x4, x1, x2)

inst_66538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000003fffffff; valaddr_reg:x3; val_offset:199614*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199614*0 + 3*490*FLEN/8, x4, x1, x2)

inst_66539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000007fffffff; valaddr_reg:x3; val_offset:199617*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199617*0 + 3*491*FLEN/8, x4, x1, x2)

inst_66540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00000ffffffff; valaddr_reg:x3; val_offset:199620*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199620*0 + 3*492*FLEN/8, x4, x1, x2)

inst_66541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00001ffffffff; valaddr_reg:x3; val_offset:199623*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199623*0 + 3*493*FLEN/8, x4, x1, x2)

inst_66542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00003ffffffff; valaddr_reg:x3; val_offset:199626*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199626*0 + 3*494*FLEN/8, x4, x1, x2)

inst_66543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00007ffffffff; valaddr_reg:x3; val_offset:199629*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199629*0 + 3*495*FLEN/8, x4, x1, x2)

inst_66544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0000fffffffff; valaddr_reg:x3; val_offset:199632*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199632*0 + 3*496*FLEN/8, x4, x1, x2)

inst_66545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0001fffffffff; valaddr_reg:x3; val_offset:199635*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199635*0 + 3*497*FLEN/8, x4, x1, x2)

inst_66546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0003fffffffff; valaddr_reg:x3; val_offset:199638*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199638*0 + 3*498*FLEN/8, x4, x1, x2)

inst_66547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0007fffffffff; valaddr_reg:x3; val_offset:199641*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199641*0 + 3*499*FLEN/8, x4, x1, x2)

inst_66548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f000ffffffffff; valaddr_reg:x3; val_offset:199644*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199644*0 + 3*500*FLEN/8, x4, x1, x2)

inst_66549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f001ffffffffff; valaddr_reg:x3; val_offset:199647*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199647*0 + 3*501*FLEN/8, x4, x1, x2)

inst_66550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f003ffffffffff; valaddr_reg:x3; val_offset:199650*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199650*0 + 3*502*FLEN/8, x4, x1, x2)

inst_66551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f007ffffffffff; valaddr_reg:x3; val_offset:199653*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199653*0 + 3*503*FLEN/8, x4, x1, x2)

inst_66552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f00fffffffffff; valaddr_reg:x3; val_offset:199656*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199656*0 + 3*504*FLEN/8, x4, x1, x2)

inst_66553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f01fffffffffff; valaddr_reg:x3; val_offset:199659*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199659*0 + 3*505*FLEN/8, x4, x1, x2)

inst_66554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f03fffffffffff; valaddr_reg:x3; val_offset:199662*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199662*0 + 3*506*FLEN/8, x4, x1, x2)

inst_66555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f07fffffffffff; valaddr_reg:x3; val_offset:199665*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199665*0 + 3*507*FLEN/8, x4, x1, x2)

inst_66556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f0ffffffffffff; valaddr_reg:x3; val_offset:199668*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199668*0 + 3*508*FLEN/8, x4, x1, x2)

inst_66557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f1ffffffffffff; valaddr_reg:x3; val_offset:199671*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199671*0 + 3*509*FLEN/8, x4, x1, x2)

inst_66558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f3ffffffffffff; valaddr_reg:x3; val_offset:199674*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199674*0 + 3*510*FLEN/8, x4, x1, x2)

inst_66559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f7ffffffffffff; valaddr_reg:x3; val_offset:199677*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199677*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_66560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1f8000000000000; valaddr_reg:x3; val_offset:199680*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199680*0 + 3*512*FLEN/8, x4, x1, x2)

inst_66561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fc000000000000; valaddr_reg:x3; val_offset:199683*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199683*0 + 3*513*FLEN/8, x4, x1, x2)

inst_66562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fe000000000000; valaddr_reg:x3; val_offset:199686*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199686*0 + 3*514*FLEN/8, x4, x1, x2)

inst_66563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ff000000000000; valaddr_reg:x3; val_offset:199689*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199689*0 + 3*515*FLEN/8, x4, x1, x2)

inst_66564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ff800000000000; valaddr_reg:x3; val_offset:199692*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199692*0 + 3*516*FLEN/8, x4, x1, x2)

inst_66565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffc00000000000; valaddr_reg:x3; val_offset:199695*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199695*0 + 3*517*FLEN/8, x4, x1, x2)

inst_66566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffe00000000000; valaddr_reg:x3; val_offset:199698*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199698*0 + 3*518*FLEN/8, x4, x1, x2)

inst_66567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fff00000000000; valaddr_reg:x3; val_offset:199701*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199701*0 + 3*519*FLEN/8, x4, x1, x2)

inst_66568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fff80000000000; valaddr_reg:x3; val_offset:199704*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199704*0 + 3*520*FLEN/8, x4, x1, x2)

inst_66569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffc0000000000; valaddr_reg:x3; val_offset:199707*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199707*0 + 3*521*FLEN/8, x4, x1, x2)

inst_66570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffe0000000000; valaddr_reg:x3; val_offset:199710*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199710*0 + 3*522*FLEN/8, x4, x1, x2)

inst_66571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffff0000000000; valaddr_reg:x3; val_offset:199713*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199713*0 + 3*523*FLEN/8, x4, x1, x2)

inst_66572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffff8000000000; valaddr_reg:x3; val_offset:199716*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199716*0 + 3*524*FLEN/8, x4, x1, x2)

inst_66573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffc000000000; valaddr_reg:x3; val_offset:199719*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199719*0 + 3*525*FLEN/8, x4, x1, x2)

inst_66574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffe000000000; valaddr_reg:x3; val_offset:199722*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199722*0 + 3*526*FLEN/8, x4, x1, x2)

inst_66575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffff000000000; valaddr_reg:x3; val_offset:199725*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199725*0 + 3*527*FLEN/8, x4, x1, x2)

inst_66576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffff800000000; valaddr_reg:x3; val_offset:199728*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199728*0 + 3*528*FLEN/8, x4, x1, x2)

inst_66577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffc00000000; valaddr_reg:x3; val_offset:199731*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199731*0 + 3*529*FLEN/8, x4, x1, x2)

inst_66578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffe00000000; valaddr_reg:x3; val_offset:199734*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199734*0 + 3*530*FLEN/8, x4, x1, x2)

inst_66579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffff00000000; valaddr_reg:x3; val_offset:199737*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199737*0 + 3*531*FLEN/8, x4, x1, x2)

inst_66580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffff80000000; valaddr_reg:x3; val_offset:199740*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199740*0 + 3*532*FLEN/8, x4, x1, x2)

inst_66581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffc0000000; valaddr_reg:x3; val_offset:199743*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199743*0 + 3*533*FLEN/8, x4, x1, x2)

inst_66582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffe0000000; valaddr_reg:x3; val_offset:199746*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199746*0 + 3*534*FLEN/8, x4, x1, x2)

inst_66583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffff0000000; valaddr_reg:x3; val_offset:199749*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199749*0 + 3*535*FLEN/8, x4, x1, x2)

inst_66584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffff8000000; valaddr_reg:x3; val_offset:199752*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199752*0 + 3*536*FLEN/8, x4, x1, x2)

inst_66585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffc000000; valaddr_reg:x3; val_offset:199755*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199755*0 + 3*537*FLEN/8, x4, x1, x2)

inst_66586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffe000000; valaddr_reg:x3; val_offset:199758*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199758*0 + 3*538*FLEN/8, x4, x1, x2)

inst_66587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffff000000; valaddr_reg:x3; val_offset:199761*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199761*0 + 3*539*FLEN/8, x4, x1, x2)

inst_66588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffff800000; valaddr_reg:x3; val_offset:199764*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199764*0 + 3*540*FLEN/8, x4, x1, x2)

inst_66589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffc00000; valaddr_reg:x3; val_offset:199767*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199767*0 + 3*541*FLEN/8, x4, x1, x2)

inst_66590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffe00000; valaddr_reg:x3; val_offset:199770*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199770*0 + 3*542*FLEN/8, x4, x1, x2)

inst_66591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffff00000; valaddr_reg:x3; val_offset:199773*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199773*0 + 3*543*FLEN/8, x4, x1, x2)

inst_66592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffff80000; valaddr_reg:x3; val_offset:199776*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199776*0 + 3*544*FLEN/8, x4, x1, x2)

inst_66593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffc0000; valaddr_reg:x3; val_offset:199779*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199779*0 + 3*545*FLEN/8, x4, x1, x2)

inst_66594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffe0000; valaddr_reg:x3; val_offset:199782*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199782*0 + 3*546*FLEN/8, x4, x1, x2)

inst_66595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffff0000; valaddr_reg:x3; val_offset:199785*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199785*0 + 3*547*FLEN/8, x4, x1, x2)

inst_66596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffff8000; valaddr_reg:x3; val_offset:199788*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199788*0 + 3*548*FLEN/8, x4, x1, x2)

inst_66597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffffc000; valaddr_reg:x3; val_offset:199791*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199791*0 + 3*549*FLEN/8, x4, x1, x2)

inst_66598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffffe000; valaddr_reg:x3; val_offset:199794*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199794*0 + 3*550*FLEN/8, x4, x1, x2)

inst_66599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffff000; valaddr_reg:x3; val_offset:199797*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199797*0 + 3*551*FLEN/8, x4, x1, x2)

inst_66600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffff800; valaddr_reg:x3; val_offset:199800*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199800*0 + 3*552*FLEN/8, x4, x1, x2)

inst_66601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffffc00; valaddr_reg:x3; val_offset:199803*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199803*0 + 3*553*FLEN/8, x4, x1, x2)

inst_66602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffffe00; valaddr_reg:x3; val_offset:199806*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199806*0 + 3*554*FLEN/8, x4, x1, x2)

inst_66603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffffff00; valaddr_reg:x3; val_offset:199809*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199809*0 + 3*555*FLEN/8, x4, x1, x2)

inst_66604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffffff80; valaddr_reg:x3; val_offset:199812*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199812*0 + 3*556*FLEN/8, x4, x1, x2)

inst_66605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffffffc0; valaddr_reg:x3; val_offset:199815*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199815*0 + 3*557*FLEN/8, x4, x1, x2)

inst_66606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffffffe0; valaddr_reg:x3; val_offset:199818*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199818*0 + 3*558*FLEN/8, x4, x1, x2)

inst_66607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffffff0; valaddr_reg:x3; val_offset:199821*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199821*0 + 3*559*FLEN/8, x4, x1, x2)

inst_66608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffffff8; valaddr_reg:x3; val_offset:199824*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199824*0 + 3*560*FLEN/8, x4, x1, x2)

inst_66609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffffffc; valaddr_reg:x3; val_offset:199827*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199827*0 + 3*561*FLEN/8, x4, x1, x2)

inst_66610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1fffffffffffffe; valaddr_reg:x3; val_offset:199830*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199830*0 + 3*562*FLEN/8, x4, x1, x2)

inst_66611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x459e2f2c17128 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa459e2f2c17128; op2val:0x0;
op3val:0x1ffffffffffffff; valaddr_reg:x3; val_offset:199833*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199833*0 + 3*563*FLEN/8, x4, x1, x2)

inst_66612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:199836*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199836*0 + 3*564*FLEN/8, x4, x1, x2)

inst_66613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:199839*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199839*0 + 3*565*FLEN/8, x4, x1, x2)

inst_66614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:199842*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199842*0 + 3*566*FLEN/8, x4, x1, x2)

inst_66615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:199845*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199845*0 + 3*567*FLEN/8, x4, x1, x2)

inst_66616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:199848*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199848*0 + 3*568*FLEN/8, x4, x1, x2)

inst_66617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:199851*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199851*0 + 3*569*FLEN/8, x4, x1, x2)

inst_66618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:199854*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199854*0 + 3*570*FLEN/8, x4, x1, x2)

inst_66619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:199857*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199857*0 + 3*571*FLEN/8, x4, x1, x2)

inst_66620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:199860*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199860*0 + 3*572*FLEN/8, x4, x1, x2)

inst_66621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:199863*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199863*0 + 3*573*FLEN/8, x4, x1, x2)

inst_66622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:199866*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199866*0 + 3*574*FLEN/8, x4, x1, x2)

inst_66623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:199869*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199869*0 + 3*575*FLEN/8, x4, x1, x2)

inst_66624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:199872*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199872*0 + 3*576*FLEN/8, x4, x1, x2)

inst_66625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:199875*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199875*0 + 3*577*FLEN/8, x4, x1, x2)

inst_66626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:199878*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199878*0 + 3*578*FLEN/8, x4, x1, x2)

inst_66627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:199881*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199881*0 + 3*579*FLEN/8, x4, x1, x2)

inst_66628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:199884*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199884*0 + 3*580*FLEN/8, x4, x1, x2)

inst_66629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:199887*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199887*0 + 3*581*FLEN/8, x4, x1, x2)

inst_66630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:199890*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199890*0 + 3*582*FLEN/8, x4, x1, x2)

inst_66631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:199893*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199893*0 + 3*583*FLEN/8, x4, x1, x2)

inst_66632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:199896*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199896*0 + 3*584*FLEN/8, x4, x1, x2)

inst_66633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:199899*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199899*0 + 3*585*FLEN/8, x4, x1, x2)

inst_66634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000000000; valaddr_reg:x3; val_offset:199902*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199902*0 + 3*586*FLEN/8, x4, x1, x2)

inst_66635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000000001; valaddr_reg:x3; val_offset:199905*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199905*0 + 3*587*FLEN/8, x4, x1, x2)

inst_66636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000000003; valaddr_reg:x3; val_offset:199908*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199908*0 + 3*588*FLEN/8, x4, x1, x2)

inst_66637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000000007; valaddr_reg:x3; val_offset:199911*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199911*0 + 3*589*FLEN/8, x4, x1, x2)

inst_66638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000000000f; valaddr_reg:x3; val_offset:199914*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199914*0 + 3*590*FLEN/8, x4, x1, x2)

inst_66639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000000001f; valaddr_reg:x3; val_offset:199917*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199917*0 + 3*591*FLEN/8, x4, x1, x2)

inst_66640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000000003f; valaddr_reg:x3; val_offset:199920*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199920*0 + 3*592*FLEN/8, x4, x1, x2)

inst_66641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000000007f; valaddr_reg:x3; val_offset:199923*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199923*0 + 3*593*FLEN/8, x4, x1, x2)

inst_66642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000000000ff; valaddr_reg:x3; val_offset:199926*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199926*0 + 3*594*FLEN/8, x4, x1, x2)

inst_66643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000000001ff; valaddr_reg:x3; val_offset:199929*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199929*0 + 3*595*FLEN/8, x4, x1, x2)

inst_66644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000000003ff; valaddr_reg:x3; val_offset:199932*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199932*0 + 3*596*FLEN/8, x4, x1, x2)

inst_66645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000000007ff; valaddr_reg:x3; val_offset:199935*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199935*0 + 3*597*FLEN/8, x4, x1, x2)

inst_66646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000000fff; valaddr_reg:x3; val_offset:199938*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199938*0 + 3*598*FLEN/8, x4, x1, x2)

inst_66647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000001fff; valaddr_reg:x3; val_offset:199941*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199941*0 + 3*599*FLEN/8, x4, x1, x2)

inst_66648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000003fff; valaddr_reg:x3; val_offset:199944*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199944*0 + 3*600*FLEN/8, x4, x1, x2)

inst_66649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000007fff; valaddr_reg:x3; val_offset:199947*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199947*0 + 3*601*FLEN/8, x4, x1, x2)

inst_66650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000000ffff; valaddr_reg:x3; val_offset:199950*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199950*0 + 3*602*FLEN/8, x4, x1, x2)

inst_66651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000001ffff; valaddr_reg:x3; val_offset:199953*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199953*0 + 3*603*FLEN/8, x4, x1, x2)

inst_66652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000003ffff; valaddr_reg:x3; val_offset:199956*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199956*0 + 3*604*FLEN/8, x4, x1, x2)

inst_66653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000007ffff; valaddr_reg:x3; val_offset:199959*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199959*0 + 3*605*FLEN/8, x4, x1, x2)

inst_66654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000000fffff; valaddr_reg:x3; val_offset:199962*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199962*0 + 3*606*FLEN/8, x4, x1, x2)

inst_66655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000001fffff; valaddr_reg:x3; val_offset:199965*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199965*0 + 3*607*FLEN/8, x4, x1, x2)

inst_66656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000003fffff; valaddr_reg:x3; val_offset:199968*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199968*0 + 3*608*FLEN/8, x4, x1, x2)

inst_66657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000007fffff; valaddr_reg:x3; val_offset:199971*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199971*0 + 3*609*FLEN/8, x4, x1, x2)

inst_66658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000000ffffff; valaddr_reg:x3; val_offset:199974*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199974*0 + 3*610*FLEN/8, x4, x1, x2)

inst_66659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000001ffffff; valaddr_reg:x3; val_offset:199977*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199977*0 + 3*611*FLEN/8, x4, x1, x2)

inst_66660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000003ffffff; valaddr_reg:x3; val_offset:199980*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199980*0 + 3*612*FLEN/8, x4, x1, x2)

inst_66661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000007ffffff; valaddr_reg:x3; val_offset:199983*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199983*0 + 3*613*FLEN/8, x4, x1, x2)

inst_66662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000000fffffff; valaddr_reg:x3; val_offset:199986*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199986*0 + 3*614*FLEN/8, x4, x1, x2)

inst_66663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000001fffffff; valaddr_reg:x3; val_offset:199989*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199989*0 + 3*615*FLEN/8, x4, x1, x2)

inst_66664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000003fffffff; valaddr_reg:x3; val_offset:199992*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199992*0 + 3*616*FLEN/8, x4, x1, x2)

inst_66665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000007fffffff; valaddr_reg:x3; val_offset:199995*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199995*0 + 3*617*FLEN/8, x4, x1, x2)

inst_66666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600000ffffffff; valaddr_reg:x3; val_offset:199998*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 199998*0 + 3*618*FLEN/8, x4, x1, x2)

inst_66667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600001ffffffff; valaddr_reg:x3; val_offset:200001*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200001*0 + 3*619*FLEN/8, x4, x1, x2)

inst_66668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600003ffffffff; valaddr_reg:x3; val_offset:200004*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200004*0 + 3*620*FLEN/8, x4, x1, x2)

inst_66669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600007ffffffff; valaddr_reg:x3; val_offset:200007*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200007*0 + 3*621*FLEN/8, x4, x1, x2)

inst_66670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160000fffffffff; valaddr_reg:x3; val_offset:200010*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200010*0 + 3*622*FLEN/8, x4, x1, x2)

inst_66671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160001fffffffff; valaddr_reg:x3; val_offset:200013*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200013*0 + 3*623*FLEN/8, x4, x1, x2)

inst_66672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160003fffffffff; valaddr_reg:x3; val_offset:200016*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200016*0 + 3*624*FLEN/8, x4, x1, x2)

inst_66673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160007fffffffff; valaddr_reg:x3; val_offset:200019*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200019*0 + 3*625*FLEN/8, x4, x1, x2)

inst_66674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16000ffffffffff; valaddr_reg:x3; val_offset:200022*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200022*0 + 3*626*FLEN/8, x4, x1, x2)

inst_66675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16001ffffffffff; valaddr_reg:x3; val_offset:200025*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200025*0 + 3*627*FLEN/8, x4, x1, x2)

inst_66676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16003ffffffffff; valaddr_reg:x3; val_offset:200028*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200028*0 + 3*628*FLEN/8, x4, x1, x2)

inst_66677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16007ffffffffff; valaddr_reg:x3; val_offset:200031*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200031*0 + 3*629*FLEN/8, x4, x1, x2)

inst_66678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1600fffffffffff; valaddr_reg:x3; val_offset:200034*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200034*0 + 3*630*FLEN/8, x4, x1, x2)

inst_66679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1601fffffffffff; valaddr_reg:x3; val_offset:200037*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200037*0 + 3*631*FLEN/8, x4, x1, x2)

inst_66680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1603fffffffffff; valaddr_reg:x3; val_offset:200040*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200040*0 + 3*632*FLEN/8, x4, x1, x2)

inst_66681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x1607fffffffffff; valaddr_reg:x3; val_offset:200043*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200043*0 + 3*633*FLEN/8, x4, x1, x2)

inst_66682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x160ffffffffffff; valaddr_reg:x3; val_offset:200046*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200046*0 + 3*634*FLEN/8, x4, x1, x2)

inst_66683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x161ffffffffffff; valaddr_reg:x3; val_offset:200049*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200049*0 + 3*635*FLEN/8, x4, x1, x2)

inst_66684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x163ffffffffffff; valaddr_reg:x3; val_offset:200052*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200052*0 + 3*636*FLEN/8, x4, x1, x2)

inst_66685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x167ffffffffffff; valaddr_reg:x3; val_offset:200055*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200055*0 + 3*637*FLEN/8, x4, x1, x2)

inst_66686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x168000000000000; valaddr_reg:x3; val_offset:200058*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200058*0 + 3*638*FLEN/8, x4, x1, x2)

inst_66687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16c000000000000; valaddr_reg:x3; val_offset:200061*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200061*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_66688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16e000000000000; valaddr_reg:x3; val_offset:200064*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200064*0 + 3*640*FLEN/8, x4, x1, x2)

inst_66689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16f000000000000; valaddr_reg:x3; val_offset:200067*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200067*0 + 3*641*FLEN/8, x4, x1, x2)

inst_66690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16f800000000000; valaddr_reg:x3; val_offset:200070*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200070*0 + 3*642*FLEN/8, x4, x1, x2)

inst_66691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fc00000000000; valaddr_reg:x3; val_offset:200073*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200073*0 + 3*643*FLEN/8, x4, x1, x2)

inst_66692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fe00000000000; valaddr_reg:x3; val_offset:200076*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200076*0 + 3*644*FLEN/8, x4, x1, x2)

inst_66693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ff00000000000; valaddr_reg:x3; val_offset:200079*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200079*0 + 3*645*FLEN/8, x4, x1, x2)

inst_66694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ff80000000000; valaddr_reg:x3; val_offset:200082*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200082*0 + 3*646*FLEN/8, x4, x1, x2)

inst_66695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffc0000000000; valaddr_reg:x3; val_offset:200085*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200085*0 + 3*647*FLEN/8, x4, x1, x2)

inst_66696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffe0000000000; valaddr_reg:x3; val_offset:200088*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200088*0 + 3*648*FLEN/8, x4, x1, x2)

inst_66697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fff0000000000; valaddr_reg:x3; val_offset:200091*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200091*0 + 3*649*FLEN/8, x4, x1, x2)

inst_66698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fff8000000000; valaddr_reg:x3; val_offset:200094*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200094*0 + 3*650*FLEN/8, x4, x1, x2)

inst_66699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffc000000000; valaddr_reg:x3; val_offset:200097*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200097*0 + 3*651*FLEN/8, x4, x1, x2)

inst_66700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffe000000000; valaddr_reg:x3; val_offset:200100*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200100*0 + 3*652*FLEN/8, x4, x1, x2)

inst_66701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffff000000000; valaddr_reg:x3; val_offset:200103*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200103*0 + 3*653*FLEN/8, x4, x1, x2)

inst_66702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffff800000000; valaddr_reg:x3; val_offset:200106*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200106*0 + 3*654*FLEN/8, x4, x1, x2)

inst_66703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffc00000000; valaddr_reg:x3; val_offset:200109*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200109*0 + 3*655*FLEN/8, x4, x1, x2)

inst_66704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffe00000000; valaddr_reg:x3; val_offset:200112*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200112*0 + 3*656*FLEN/8, x4, x1, x2)

inst_66705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffff00000000; valaddr_reg:x3; val_offset:200115*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200115*0 + 3*657*FLEN/8, x4, x1, x2)

inst_66706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffff80000000; valaddr_reg:x3; val_offset:200118*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200118*0 + 3*658*FLEN/8, x4, x1, x2)

inst_66707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffc0000000; valaddr_reg:x3; val_offset:200121*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200121*0 + 3*659*FLEN/8, x4, x1, x2)

inst_66708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffe0000000; valaddr_reg:x3; val_offset:200124*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200124*0 + 3*660*FLEN/8, x4, x1, x2)

inst_66709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffff0000000; valaddr_reg:x3; val_offset:200127*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200127*0 + 3*661*FLEN/8, x4, x1, x2)

inst_66710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffff8000000; valaddr_reg:x3; val_offset:200130*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200130*0 + 3*662*FLEN/8, x4, x1, x2)

inst_66711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffc000000; valaddr_reg:x3; val_offset:200133*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200133*0 + 3*663*FLEN/8, x4, x1, x2)

inst_66712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffe000000; valaddr_reg:x3; val_offset:200136*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200136*0 + 3*664*FLEN/8, x4, x1, x2)

inst_66713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffff000000; valaddr_reg:x3; val_offset:200139*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200139*0 + 3*665*FLEN/8, x4, x1, x2)

inst_66714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffff800000; valaddr_reg:x3; val_offset:200142*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200142*0 + 3*666*FLEN/8, x4, x1, x2)

inst_66715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffc00000; valaddr_reg:x3; val_offset:200145*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200145*0 + 3*667*FLEN/8, x4, x1, x2)

inst_66716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffe00000; valaddr_reg:x3; val_offset:200148*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200148*0 + 3*668*FLEN/8, x4, x1, x2)

inst_66717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffff00000; valaddr_reg:x3; val_offset:200151*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200151*0 + 3*669*FLEN/8, x4, x1, x2)

inst_66718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffff80000; valaddr_reg:x3; val_offset:200154*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200154*0 + 3*670*FLEN/8, x4, x1, x2)

inst_66719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffc0000; valaddr_reg:x3; val_offset:200157*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200157*0 + 3*671*FLEN/8, x4, x1, x2)

inst_66720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffe0000; valaddr_reg:x3; val_offset:200160*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200160*0 + 3*672*FLEN/8, x4, x1, x2)

inst_66721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffff0000; valaddr_reg:x3; val_offset:200163*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200163*0 + 3*673*FLEN/8, x4, x1, x2)

inst_66722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffff8000; valaddr_reg:x3; val_offset:200166*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200166*0 + 3*674*FLEN/8, x4, x1, x2)

inst_66723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffffc000; valaddr_reg:x3; val_offset:200169*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200169*0 + 3*675*FLEN/8, x4, x1, x2)

inst_66724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffffe000; valaddr_reg:x3; val_offset:200172*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200172*0 + 3*676*FLEN/8, x4, x1, x2)

inst_66725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffff000; valaddr_reg:x3; val_offset:200175*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200175*0 + 3*677*FLEN/8, x4, x1, x2)

inst_66726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffff800; valaddr_reg:x3; val_offset:200178*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200178*0 + 3*678*FLEN/8, x4, x1, x2)

inst_66727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffffc00; valaddr_reg:x3; val_offset:200181*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200181*0 + 3*679*FLEN/8, x4, x1, x2)

inst_66728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffffe00; valaddr_reg:x3; val_offset:200184*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200184*0 + 3*680*FLEN/8, x4, x1, x2)

inst_66729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffffff00; valaddr_reg:x3; val_offset:200187*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200187*0 + 3*681*FLEN/8, x4, x1, x2)

inst_66730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffffff80; valaddr_reg:x3; val_offset:200190*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200190*0 + 3*682*FLEN/8, x4, x1, x2)

inst_66731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffffffc0; valaddr_reg:x3; val_offset:200193*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200193*0 + 3*683*FLEN/8, x4, x1, x2)

inst_66732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffffffe0; valaddr_reg:x3; val_offset:200196*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200196*0 + 3*684*FLEN/8, x4, x1, x2)

inst_66733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffffff0; valaddr_reg:x3; val_offset:200199*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200199*0 + 3*685*FLEN/8, x4, x1, x2)

inst_66734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffffff8; valaddr_reg:x3; val_offset:200202*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200202*0 + 3*686*FLEN/8, x4, x1, x2)

inst_66735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffffffc; valaddr_reg:x3; val_offset:200205*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200205*0 + 3*687*FLEN/8, x4, x1, x2)

inst_66736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16ffffffffffffe; valaddr_reg:x3; val_offset:200208*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200208*0 + 3*688*FLEN/8, x4, x1, x2)

inst_66737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4621509645542 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x016 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4621509645542; op2val:0x0;
op3val:0x16fffffffffffff; valaddr_reg:x3; val_offset:200211*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200211*0 + 3*689*FLEN/8, x4, x1, x2)

inst_66738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:200214*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200214*0 + 3*690*FLEN/8, x4, x1, x2)

inst_66739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:200217*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200217*0 + 3*691*FLEN/8, x4, x1, x2)

inst_66740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:200220*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200220*0 + 3*692*FLEN/8, x4, x1, x2)

inst_66741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:200223*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200223*0 + 3*693*FLEN/8, x4, x1, x2)

inst_66742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:200226*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200226*0 + 3*694*FLEN/8, x4, x1, x2)

inst_66743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:200229*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200229*0 + 3*695*FLEN/8, x4, x1, x2)

inst_66744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:200232*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200232*0 + 3*696*FLEN/8, x4, x1, x2)

inst_66745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:200235*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200235*0 + 3*697*FLEN/8, x4, x1, x2)

inst_66746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:200238*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200238*0 + 3*698*FLEN/8, x4, x1, x2)

inst_66747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:200241*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200241*0 + 3*699*FLEN/8, x4, x1, x2)

inst_66748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:200244*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200244*0 + 3*700*FLEN/8, x4, x1, x2)

inst_66749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:200247*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200247*0 + 3*701*FLEN/8, x4, x1, x2)

inst_66750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:200250*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200250*0 + 3*702*FLEN/8, x4, x1, x2)

inst_66751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:200253*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200253*0 + 3*703*FLEN/8, x4, x1, x2)

inst_66752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:200256*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200256*0 + 3*704*FLEN/8, x4, x1, x2)

inst_66753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:200259*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200259*0 + 3*705*FLEN/8, x4, x1, x2)

inst_66754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:200262*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200262*0 + 3*706*FLEN/8, x4, x1, x2)

inst_66755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:200265*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200265*0 + 3*707*FLEN/8, x4, x1, x2)

inst_66756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:200268*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200268*0 + 3*708*FLEN/8, x4, x1, x2)

inst_66757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:200271*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200271*0 + 3*709*FLEN/8, x4, x1, x2)

inst_66758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:200274*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200274*0 + 3*710*FLEN/8, x4, x1, x2)

inst_66759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:200277*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200277*0 + 3*711*FLEN/8, x4, x1, x2)

inst_66760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000000000; valaddr_reg:x3; val_offset:200280*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200280*0 + 3*712*FLEN/8, x4, x1, x2)

inst_66761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000000001; valaddr_reg:x3; val_offset:200283*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200283*0 + 3*713*FLEN/8, x4, x1, x2)

inst_66762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000000003; valaddr_reg:x3; val_offset:200286*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200286*0 + 3*714*FLEN/8, x4, x1, x2)

inst_66763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000000007; valaddr_reg:x3; val_offset:200289*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200289*0 + 3*715*FLEN/8, x4, x1, x2)

inst_66764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000000000f; valaddr_reg:x3; val_offset:200292*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200292*0 + 3*716*FLEN/8, x4, x1, x2)

inst_66765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000000001f; valaddr_reg:x3; val_offset:200295*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200295*0 + 3*717*FLEN/8, x4, x1, x2)

inst_66766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000000003f; valaddr_reg:x3; val_offset:200298*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200298*0 + 3*718*FLEN/8, x4, x1, x2)

inst_66767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000000007f; valaddr_reg:x3; val_offset:200301*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200301*0 + 3*719*FLEN/8, x4, x1, x2)

inst_66768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000000000ff; valaddr_reg:x3; val_offset:200304*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200304*0 + 3*720*FLEN/8, x4, x1, x2)

inst_66769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000000001ff; valaddr_reg:x3; val_offset:200307*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200307*0 + 3*721*FLEN/8, x4, x1, x2)

inst_66770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000000003ff; valaddr_reg:x3; val_offset:200310*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200310*0 + 3*722*FLEN/8, x4, x1, x2)

inst_66771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000000007ff; valaddr_reg:x3; val_offset:200313*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200313*0 + 3*723*FLEN/8, x4, x1, x2)

inst_66772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000000fff; valaddr_reg:x3; val_offset:200316*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200316*0 + 3*724*FLEN/8, x4, x1, x2)

inst_66773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000001fff; valaddr_reg:x3; val_offset:200319*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200319*0 + 3*725*FLEN/8, x4, x1, x2)

inst_66774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000003fff; valaddr_reg:x3; val_offset:200322*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200322*0 + 3*726*FLEN/8, x4, x1, x2)

inst_66775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000007fff; valaddr_reg:x3; val_offset:200325*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200325*0 + 3*727*FLEN/8, x4, x1, x2)

inst_66776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000000ffff; valaddr_reg:x3; val_offset:200328*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200328*0 + 3*728*FLEN/8, x4, x1, x2)

inst_66777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000001ffff; valaddr_reg:x3; val_offset:200331*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200331*0 + 3*729*FLEN/8, x4, x1, x2)

inst_66778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000003ffff; valaddr_reg:x3; val_offset:200334*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200334*0 + 3*730*FLEN/8, x4, x1, x2)

inst_66779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000007ffff; valaddr_reg:x3; val_offset:200337*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200337*0 + 3*731*FLEN/8, x4, x1, x2)

inst_66780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000000fffff; valaddr_reg:x3; val_offset:200340*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200340*0 + 3*732*FLEN/8, x4, x1, x2)

inst_66781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000001fffff; valaddr_reg:x3; val_offset:200343*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200343*0 + 3*733*FLEN/8, x4, x1, x2)

inst_66782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000003fffff; valaddr_reg:x3; val_offset:200346*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200346*0 + 3*734*FLEN/8, x4, x1, x2)

inst_66783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000007fffff; valaddr_reg:x3; val_offset:200349*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200349*0 + 3*735*FLEN/8, x4, x1, x2)

inst_66784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000000ffffff; valaddr_reg:x3; val_offset:200352*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200352*0 + 3*736*FLEN/8, x4, x1, x2)

inst_66785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000001ffffff; valaddr_reg:x3; val_offset:200355*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200355*0 + 3*737*FLEN/8, x4, x1, x2)

inst_66786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000003ffffff; valaddr_reg:x3; val_offset:200358*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200358*0 + 3*738*FLEN/8, x4, x1, x2)

inst_66787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000007ffffff; valaddr_reg:x3; val_offset:200361*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200361*0 + 3*739*FLEN/8, x4, x1, x2)

inst_66788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000000fffffff; valaddr_reg:x3; val_offset:200364*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200364*0 + 3*740*FLEN/8, x4, x1, x2)

inst_66789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000001fffffff; valaddr_reg:x3; val_offset:200367*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200367*0 + 3*741*FLEN/8, x4, x1, x2)

inst_66790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000003fffffff; valaddr_reg:x3; val_offset:200370*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200370*0 + 3*742*FLEN/8, x4, x1, x2)

inst_66791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000007fffffff; valaddr_reg:x3; val_offset:200373*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200373*0 + 3*743*FLEN/8, x4, x1, x2)

inst_66792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00000ffffffff; valaddr_reg:x3; val_offset:200376*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200376*0 + 3*744*FLEN/8, x4, x1, x2)

inst_66793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00001ffffffff; valaddr_reg:x3; val_offset:200379*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200379*0 + 3*745*FLEN/8, x4, x1, x2)

inst_66794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00003ffffffff; valaddr_reg:x3; val_offset:200382*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200382*0 + 3*746*FLEN/8, x4, x1, x2)

inst_66795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00007ffffffff; valaddr_reg:x3; val_offset:200385*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200385*0 + 3*747*FLEN/8, x4, x1, x2)

inst_66796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0000fffffffff; valaddr_reg:x3; val_offset:200388*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200388*0 + 3*748*FLEN/8, x4, x1, x2)

inst_66797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0001fffffffff; valaddr_reg:x3; val_offset:200391*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200391*0 + 3*749*FLEN/8, x4, x1, x2)

inst_66798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0003fffffffff; valaddr_reg:x3; val_offset:200394*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200394*0 + 3*750*FLEN/8, x4, x1, x2)

inst_66799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0007fffffffff; valaddr_reg:x3; val_offset:200397*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200397*0 + 3*751*FLEN/8, x4, x1, x2)

inst_66800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f000ffffffffff; valaddr_reg:x3; val_offset:200400*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200400*0 + 3*752*FLEN/8, x4, x1, x2)

inst_66801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f001ffffffffff; valaddr_reg:x3; val_offset:200403*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200403*0 + 3*753*FLEN/8, x4, x1, x2)

inst_66802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f003ffffffffff; valaddr_reg:x3; val_offset:200406*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200406*0 + 3*754*FLEN/8, x4, x1, x2)

inst_66803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f007ffffffffff; valaddr_reg:x3; val_offset:200409*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200409*0 + 3*755*FLEN/8, x4, x1, x2)

inst_66804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f00fffffffffff; valaddr_reg:x3; val_offset:200412*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200412*0 + 3*756*FLEN/8, x4, x1, x2)

inst_66805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f01fffffffffff; valaddr_reg:x3; val_offset:200415*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200415*0 + 3*757*FLEN/8, x4, x1, x2)

inst_66806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f03fffffffffff; valaddr_reg:x3; val_offset:200418*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200418*0 + 3*758*FLEN/8, x4, x1, x2)

inst_66807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f07fffffffffff; valaddr_reg:x3; val_offset:200421*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200421*0 + 3*759*FLEN/8, x4, x1, x2)

inst_66808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f0ffffffffffff; valaddr_reg:x3; val_offset:200424*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200424*0 + 3*760*FLEN/8, x4, x1, x2)

inst_66809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f1ffffffffffff; valaddr_reg:x3; val_offset:200427*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200427*0 + 3*761*FLEN/8, x4, x1, x2)

inst_66810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f3ffffffffffff; valaddr_reg:x3; val_offset:200430*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200430*0 + 3*762*FLEN/8, x4, x1, x2)

inst_66811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f7ffffffffffff; valaddr_reg:x3; val_offset:200433*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200433*0 + 3*763*FLEN/8, x4, x1, x2)

inst_66812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2f8000000000000; valaddr_reg:x3; val_offset:200436*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200436*0 + 3*764*FLEN/8, x4, x1, x2)

inst_66813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fc000000000000; valaddr_reg:x3; val_offset:200439*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200439*0 + 3*765*FLEN/8, x4, x1, x2)

inst_66814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fe000000000000; valaddr_reg:x3; val_offset:200442*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200442*0 + 3*766*FLEN/8, x4, x1, x2)

inst_66815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ff000000000000; valaddr_reg:x3; val_offset:200445*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200445*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166650778398752767,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166668370584797183,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166703554956886015,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166773923701063679,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166914661189419007,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167196136166129663,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167759086119550975,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393599,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393600,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170010885933236224,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170573835886657536,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170855310863368192,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170996048351723520,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171066417095901184,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171101601467990016,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171119193654034432,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171127989747056640,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171132387793567744,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171134586816823296,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171135686328451072,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136236084264960,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136510962171904,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136648401125376,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136717120602112,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136751480340480,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136768660209664,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136777250144256,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136781545111552,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136783692595200,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136784766337024,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785303207936,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785571643392,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785705861120,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785772969984,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785806524416,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785823301632,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785831690240,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785835884544,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785837981696,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839030272,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839554560,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839816704,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839947776,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840013312,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840046080,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840062464,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840070656,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840074752,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840076800,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840077824,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078336,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078592,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078720,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078784,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078816,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078832,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078840,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078844,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078846,64,FLEN)
NAN_BOXED(6891672537264577867,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078847,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374336,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374337,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374339,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374343,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374351,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374367,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374399,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374463,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374591,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671374847,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671375359,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671376383,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671378431,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671382527,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671390719,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671407103,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671439871,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671505407,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671636479,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258671898623,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258672422911,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258673471487,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258675568639,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258679762943,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258688151551,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258704928767,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258738483199,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258805592063,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297258939809791,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297259208245247,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297259745116159,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297260818857983,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297262966341631,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297267261308927,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297275851243519,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297293031112703,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297327390851071,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297396110327807,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297533549281279,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125297808427188223,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125298358183002111,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125299457694629887,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125301656717885439,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125306054764396543,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125314850857418751,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125332443043463167,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125367627415551999,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125437996159729663,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125578733648084991,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4125860208624795647,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4126423158578216959,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4127549058485059583,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4127549058485059584,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4128674958391902208,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129237908345323520,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129519383322034176,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129660120810389504,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129730489554567168,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129765673926656000,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129783266112700416,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129792062205722624,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129796460252233728,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129798659275489280,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129799758787117056,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800308542930944,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800583420837888,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800720859791360,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800789579268096,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800823939006464,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800841118875648,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800849708810240,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800854003777536,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800856151261184,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800857225003008,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800857761873920,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858030309376,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858164527104,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858231635968,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858265190400,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858281967616,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858290356224,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858294550528,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858296647680,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858297696256,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298220544,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298482688,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298613760,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298679296,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298712064,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298728448,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298736640,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298740736,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298742784,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298743808,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744320,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744576,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744704,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744768,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744800,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744816,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744824,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744828,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744830,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4129800858298744831,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891685317866222931,64,FLEN)
NAN_BOXED(2321990032039962519,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894528,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894529,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894531,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894535,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894543,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894559,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894591,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894655,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719894783,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719895039,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719895551,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719896575,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719898623,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719902719,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719910911,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719927295,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684719960063,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684720025599,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684720156671,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684720418815,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684720943103,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684721991679,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684724088831,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684728283135,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684736671743,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684753448959,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684787003391,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684854112255,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273684988329983,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273685256765439,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273685793636351,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273686867378175,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273689014861823,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273693309829119,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273701899763711,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273719079632895,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273753439371263,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273822158847999,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479273959597801471,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479274234475708415,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479274784231522303,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479275883743150079,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479278082766405631,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479282480812916735,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479291276905938943,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479308869091983359,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479344053464072191,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479414422208249855,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479555159696605183,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13479836634673315839,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13480399584626737151,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13481525484533579775,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13481525484533579776,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13482651384440422400,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483214334393843712,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483495809370554368,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483636546858909696,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483706915603087360,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483742099975176192,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483759692161220608,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483768488254242816,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483772886300753920,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483775085324009472,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483776184835637248,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483776734591451136,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777009469358080,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777146908311552,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777215627788288,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777249987526656,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777267167395840,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777275757330432,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777280052297728,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777282199781376,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777283273523200,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777283810394112,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284078829568,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284213047296,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284280156160,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284313710592,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284330487808,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284338876416,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284343070720,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284345167872,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284346216448,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284346740736,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347002880,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347133952,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347199488,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347232256,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347248640,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347256832,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347260928,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347262976,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347264000,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347264512,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347264768,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347264896,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347264960,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347264992,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347265008,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347265016,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347265020,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347265022,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13483777284347265023,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891726843369105323,64,FLEN)
NAN_BOXED(11513785065792044356,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780416,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780417,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780419,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780423,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780431,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780447,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780479,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780543,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780671,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780927,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174781439,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174782463,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174784511,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174788607,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174796799,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174813183,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174845951,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174911487,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175042559,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175304703,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175828991,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592176877567,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592178974719,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592183169023,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592191557631,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592208334847,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592241889279,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592308998143,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592443215871,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592711651327,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575593248522239,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575594322264063,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575596469747711,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575600764715007,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575609354649599,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575626534518783,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575660894257151,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575729613733887,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575867052687359,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576141930594303,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576691686408191,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94577791198035967,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94579990221291519,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94584388267802623,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94593184360824831,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94610776546869247,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94645960918958079,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94716329663135743,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94857067151491071,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95138542128201727,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95701492081623039,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465663,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465664,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(97953291895308288,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98516241848729600,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98797716825440256,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98938454313795584,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99008823057973248,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99044007430062080,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99061599616106496,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99070395709128704,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99074793755639808,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99076992778895360,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078092290523136,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078642046337024,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078916924243968,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079054363197440,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079123082674176,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079157442412544,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079174622281728,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079183212216320,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079187507183616,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079189654667264,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079190728409088,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191265280000,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191533715456,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191667933184,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191735042048,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191768596480,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191785373696,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191793762304,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191797956608,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191800053760,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801102336,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801626624,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801888768,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802019840,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802085376,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802118144,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802134528,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802142720,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802146816,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802148864,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802149888,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150400,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150656,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150784,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150848,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150880,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150896,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150904,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150908,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150910,64,FLEN)
NAN_BOXED(6891728881212517641,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150911,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485376,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485377,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485379,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485383,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485391,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485407,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485439,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485503,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485631,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485887,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448486399,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448487423,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448489471,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448493567,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448501759,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448518143,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448550911,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448616447,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448747519,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449009663,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449533951,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588450582527,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588452679679,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588456873983,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588465262591,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588482039807,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588515594239,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588582703103,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588716920831,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588985356287,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611589522227199,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611590595969023,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611592743452671,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611597038419967,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611605628354559,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611622808223743,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611657167962111,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611725887438847,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611863326392319,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612138204299263,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612687960113151,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139613787471740927,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139615986494996479,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139620384541507583,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139629180634529791,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139646772820574207,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139681957192663039,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139752325936840703,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139893063425196031,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140174538401906687,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327999,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170623,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170624,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(142989288169013248,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143552238122434560,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143833713099145216,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143974450587500544,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144044819331678208,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144080003703767040,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144097595889811456,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144106391982833664,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144110790029344768,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144112989052600320,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114088564228096,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114638320041984,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114913197948928,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115050636902400,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115119356379136,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115153716117504,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115170895986688,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115179485921280,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115183780888576,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115185928372224,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187002114048,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187538984960,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187807420416,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187941638144,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188008747008,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188042301440,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188059078656,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188067467264,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188071661568,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188073758720,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188074807296,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075331584,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075593728,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075724800,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075790336,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075823104,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075839488,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075847680,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075851776,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075853824,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075854848,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855360,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855616,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855744,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855808,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855840,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855856,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855864,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855868,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855870,64,FLEN)
NAN_BOXED(6891732161053946152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855871,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150912,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150913,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150915,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150919,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150927,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150943,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150975,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151039,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151167,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151423,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802151935,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802152959,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802155007,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802159103,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802167295,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802183679,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802216447,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802281983,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802413055,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802675199,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191803199487,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191804248063,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191806345215,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191810539519,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191818928127,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191835705343,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191869259775,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191936368639,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192070586367,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192339021823,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079192875892735,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079193949634559,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079196097118207,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079200392085503,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079208982020095,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079226161889279,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079260521627647,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079329241104383,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079466680057855,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079741557964799,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99080291313778687,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99081390825406463,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99083589848662015,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99087987895173119,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99096783988195327,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99114376174239743,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99149560546328575,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99219929290506239,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99360666778861567,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99642141755572223,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(100205091708993535,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836159,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(101330991615836160,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(102456891522678784,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103019841476100096,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103301316452810752,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103442053941166080,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103512422685343744,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103547607057432576,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103565199243476992,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103573995336499200,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103578393383010304,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103580592406265856,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103581691917893632,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582241673707520,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582516551614464,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582653990567936,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582722710044672,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582757069783040,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582774249652224,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582782839586816,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582787134554112,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582789282037760,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790355779584,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582790892650496,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791161085952,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791295303680,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791362412544,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791395966976,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791412744192,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791421132800,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791425327104,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791427424256,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428472832,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791428997120,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429259264,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429390336,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429455872,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429488640,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429505024,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429513216,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429517312,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429519360,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520384,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429520896,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521152,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521280,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521344,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521376,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521392,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521400,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521404,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521406,64,FLEN)
NAN_BOXED(6891741172275107138,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(103582791429521407,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413312,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413313,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413315,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413319,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413327,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413343,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413375,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413439,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413567,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413823,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486414335,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486415359,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486417407,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486421503,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486429695,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486446079,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486478847,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486544383,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486675455,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486937599,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182487461887,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182488510463,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182490607615,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182494801919,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182503190527,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182519967743,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182553522175,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182620631039,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182754848767,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183023284223,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183560155135,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669184633896959,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669186781380607,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669191076347903,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669199666282495,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669216846151679,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669251205890047,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669319925366783,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669457364320255,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669732242227199,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211670281998041087,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211671381509668863,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211673580532924415,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211677978579435519,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211686774672457727,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211704366858502143,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211739551230590975,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211809919974768639,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211950657463123967,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212232132439834623,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212795082393255935,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098559,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098560,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215046882206941184,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215609832160362496,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215891307137073152,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
