
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_92160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffe0000; valaddr_reg:x3; val_offset:276480*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276480*0 + 3*0*FLEN/8, x4, x1, x2)

inst_92161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffff0000; valaddr_reg:x3; val_offset:276483*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276483*0 + 3*1*FLEN/8, x4, x1, x2)

inst_92162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffff8000; valaddr_reg:x3; val_offset:276486*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276486*0 + 3*2*FLEN/8, x4, x1, x2)

inst_92163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffffc000; valaddr_reg:x3; val_offset:276489*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276489*0 + 3*3*FLEN/8, x4, x1, x2)

inst_92164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffffe000; valaddr_reg:x3; val_offset:276492*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276492*0 + 3*4*FLEN/8, x4, x1, x2)

inst_92165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffff000; valaddr_reg:x3; val_offset:276495*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276495*0 + 3*5*FLEN/8, x4, x1, x2)

inst_92166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffff800; valaddr_reg:x3; val_offset:276498*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276498*0 + 3*6*FLEN/8, x4, x1, x2)

inst_92167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffffc00; valaddr_reg:x3; val_offset:276501*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276501*0 + 3*7*FLEN/8, x4, x1, x2)

inst_92168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffffe00; valaddr_reg:x3; val_offset:276504*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276504*0 + 3*8*FLEN/8, x4, x1, x2)

inst_92169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffffff00; valaddr_reg:x3; val_offset:276507*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276507*0 + 3*9*FLEN/8, x4, x1, x2)

inst_92170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffffff80; valaddr_reg:x3; val_offset:276510*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276510*0 + 3*10*FLEN/8, x4, x1, x2)

inst_92171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffffffc0; valaddr_reg:x3; val_offset:276513*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276513*0 + 3*11*FLEN/8, x4, x1, x2)

inst_92172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffffffe0; valaddr_reg:x3; val_offset:276516*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276516*0 + 3*12*FLEN/8, x4, x1, x2)

inst_92173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffffff0; valaddr_reg:x3; val_offset:276519*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276519*0 + 3*13*FLEN/8, x4, x1, x2)

inst_92174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffffff8; valaddr_reg:x3; val_offset:276522*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276522*0 + 3*14*FLEN/8, x4, x1, x2)

inst_92175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffffffc; valaddr_reg:x3; val_offset:276525*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276525*0 + 3*15*FLEN/8, x4, x1, x2)

inst_92176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30ffffffffffffe; valaddr_reg:x3; val_offset:276528*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276528*0 + 3*16*FLEN/8, x4, x1, x2)

inst_92177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd32024b4091b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad32024b4091b2; op2val:0x0;
op3val:0x30fffffffffffff; valaddr_reg:x3; val_offset:276531*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276531*0 + 3*17*FLEN/8, x4, x1, x2)

inst_92178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:276534*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276534*0 + 3*18*FLEN/8, x4, x1, x2)

inst_92179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:276537*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276537*0 + 3*19*FLEN/8, x4, x1, x2)

inst_92180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:276540*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276540*0 + 3*20*FLEN/8, x4, x1, x2)

inst_92181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:276543*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276543*0 + 3*21*FLEN/8, x4, x1, x2)

inst_92182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:276546*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276546*0 + 3*22*FLEN/8, x4, x1, x2)

inst_92183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:276549*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276549*0 + 3*23*FLEN/8, x4, x1, x2)

inst_92184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:276552*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276552*0 + 3*24*FLEN/8, x4, x1, x2)

inst_92185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:276555*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276555*0 + 3*25*FLEN/8, x4, x1, x2)

inst_92186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:276558*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276558*0 + 3*26*FLEN/8, x4, x1, x2)

inst_92187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:276561*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276561*0 + 3*27*FLEN/8, x4, x1, x2)

inst_92188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:276564*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276564*0 + 3*28*FLEN/8, x4, x1, x2)

inst_92189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:276567*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276567*0 + 3*29*FLEN/8, x4, x1, x2)

inst_92190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:276570*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276570*0 + 3*30*FLEN/8, x4, x1, x2)

inst_92191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:276573*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276573*0 + 3*31*FLEN/8, x4, x1, x2)

inst_92192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:276576*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276576*0 + 3*32*FLEN/8, x4, x1, x2)

inst_92193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:276579*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276579*0 + 3*33*FLEN/8, x4, x1, x2)

inst_92194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:276582*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276582*0 + 3*34*FLEN/8, x4, x1, x2)

inst_92195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:276585*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276585*0 + 3*35*FLEN/8, x4, x1, x2)

inst_92196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:276588*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276588*0 + 3*36*FLEN/8, x4, x1, x2)

inst_92197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:276591*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276591*0 + 3*37*FLEN/8, x4, x1, x2)

inst_92198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:276594*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276594*0 + 3*38*FLEN/8, x4, x1, x2)

inst_92199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:276597*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276597*0 + 3*39*FLEN/8, x4, x1, x2)

inst_92200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000000000; valaddr_reg:x3; val_offset:276600*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276600*0 + 3*40*FLEN/8, x4, x1, x2)

inst_92201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000000001; valaddr_reg:x3; val_offset:276603*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276603*0 + 3*41*FLEN/8, x4, x1, x2)

inst_92202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000000003; valaddr_reg:x3; val_offset:276606*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276606*0 + 3*42*FLEN/8, x4, x1, x2)

inst_92203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000000007; valaddr_reg:x3; val_offset:276609*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276609*0 + 3*43*FLEN/8, x4, x1, x2)

inst_92204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000000000f; valaddr_reg:x3; val_offset:276612*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276612*0 + 3*44*FLEN/8, x4, x1, x2)

inst_92205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000000001f; valaddr_reg:x3; val_offset:276615*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276615*0 + 3*45*FLEN/8, x4, x1, x2)

inst_92206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000000003f; valaddr_reg:x3; val_offset:276618*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276618*0 + 3*46*FLEN/8, x4, x1, x2)

inst_92207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000000007f; valaddr_reg:x3; val_offset:276621*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276621*0 + 3*47*FLEN/8, x4, x1, x2)

inst_92208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000000000ff; valaddr_reg:x3; val_offset:276624*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276624*0 + 3*48*FLEN/8, x4, x1, x2)

inst_92209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000000001ff; valaddr_reg:x3; val_offset:276627*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276627*0 + 3*49*FLEN/8, x4, x1, x2)

inst_92210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000000003ff; valaddr_reg:x3; val_offset:276630*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276630*0 + 3*50*FLEN/8, x4, x1, x2)

inst_92211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000000007ff; valaddr_reg:x3; val_offset:276633*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276633*0 + 3*51*FLEN/8, x4, x1, x2)

inst_92212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000000fff; valaddr_reg:x3; val_offset:276636*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276636*0 + 3*52*FLEN/8, x4, x1, x2)

inst_92213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000001fff; valaddr_reg:x3; val_offset:276639*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276639*0 + 3*53*FLEN/8, x4, x1, x2)

inst_92214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000003fff; valaddr_reg:x3; val_offset:276642*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276642*0 + 3*54*FLEN/8, x4, x1, x2)

inst_92215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000007fff; valaddr_reg:x3; val_offset:276645*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276645*0 + 3*55*FLEN/8, x4, x1, x2)

inst_92216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000000ffff; valaddr_reg:x3; val_offset:276648*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276648*0 + 3*56*FLEN/8, x4, x1, x2)

inst_92217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000001ffff; valaddr_reg:x3; val_offset:276651*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276651*0 + 3*57*FLEN/8, x4, x1, x2)

inst_92218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000003ffff; valaddr_reg:x3; val_offset:276654*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276654*0 + 3*58*FLEN/8, x4, x1, x2)

inst_92219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000007ffff; valaddr_reg:x3; val_offset:276657*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276657*0 + 3*59*FLEN/8, x4, x1, x2)

inst_92220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000000fffff; valaddr_reg:x3; val_offset:276660*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276660*0 + 3*60*FLEN/8, x4, x1, x2)

inst_92221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000001fffff; valaddr_reg:x3; val_offset:276663*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276663*0 + 3*61*FLEN/8, x4, x1, x2)

inst_92222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000003fffff; valaddr_reg:x3; val_offset:276666*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276666*0 + 3*62*FLEN/8, x4, x1, x2)

inst_92223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000007fffff; valaddr_reg:x3; val_offset:276669*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276669*0 + 3*63*FLEN/8, x4, x1, x2)

inst_92224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000000ffffff; valaddr_reg:x3; val_offset:276672*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276672*0 + 3*64*FLEN/8, x4, x1, x2)

inst_92225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000001ffffff; valaddr_reg:x3; val_offset:276675*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276675*0 + 3*65*FLEN/8, x4, x1, x2)

inst_92226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:276678*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276678*0 + 3*66*FLEN/8, x4, x1, x2)

inst_92227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:276681*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276681*0 + 3*67*FLEN/8, x4, x1, x2)

inst_92228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:276684*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276684*0 + 3*68*FLEN/8, x4, x1, x2)

inst_92229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:276687*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276687*0 + 3*69*FLEN/8, x4, x1, x2)

inst_92230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:276690*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276690*0 + 3*70*FLEN/8, x4, x1, x2)

inst_92231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:276693*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276693*0 + 3*71*FLEN/8, x4, x1, x2)

inst_92232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:276696*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276696*0 + 3*72*FLEN/8, x4, x1, x2)

inst_92233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:276699*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276699*0 + 3*73*FLEN/8, x4, x1, x2)

inst_92234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:276702*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276702*0 + 3*74*FLEN/8, x4, x1, x2)

inst_92235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:276705*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276705*0 + 3*75*FLEN/8, x4, x1, x2)

inst_92236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:276708*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276708*0 + 3*76*FLEN/8, x4, x1, x2)

inst_92237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:276711*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276711*0 + 3*77*FLEN/8, x4, x1, x2)

inst_92238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:276714*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276714*0 + 3*78*FLEN/8, x4, x1, x2)

inst_92239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:276717*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276717*0 + 3*79*FLEN/8, x4, x1, x2)

inst_92240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:276720*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276720*0 + 3*80*FLEN/8, x4, x1, x2)

inst_92241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:276723*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276723*0 + 3*81*FLEN/8, x4, x1, x2)

inst_92242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:276726*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276726*0 + 3*82*FLEN/8, x4, x1, x2)

inst_92243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:276729*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276729*0 + 3*83*FLEN/8, x4, x1, x2)

inst_92244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:276732*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276732*0 + 3*84*FLEN/8, x4, x1, x2)

inst_92245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:276735*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276735*0 + 3*85*FLEN/8, x4, x1, x2)

inst_92246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:276738*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276738*0 + 3*86*FLEN/8, x4, x1, x2)

inst_92247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:276741*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276741*0 + 3*87*FLEN/8, x4, x1, x2)

inst_92248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:276744*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276744*0 + 3*88*FLEN/8, x4, x1, x2)

inst_92249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:276747*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276747*0 + 3*89*FLEN/8, x4, x1, x2)

inst_92250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:276750*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276750*0 + 3*90*FLEN/8, x4, x1, x2)

inst_92251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:276753*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276753*0 + 3*91*FLEN/8, x4, x1, x2)

inst_92252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:276756*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276756*0 + 3*92*FLEN/8, x4, x1, x2)

inst_92253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:276759*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276759*0 + 3*93*FLEN/8, x4, x1, x2)

inst_92254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:276762*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276762*0 + 3*94*FLEN/8, x4, x1, x2)

inst_92255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:276765*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276765*0 + 3*95*FLEN/8, x4, x1, x2)

inst_92256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:276768*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276768*0 + 3*96*FLEN/8, x4, x1, x2)

inst_92257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:276771*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276771*0 + 3*97*FLEN/8, x4, x1, x2)

inst_92258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:276774*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276774*0 + 3*98*FLEN/8, x4, x1, x2)

inst_92259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:276777*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276777*0 + 3*99*FLEN/8, x4, x1, x2)

inst_92260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:276780*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276780*0 + 3*100*FLEN/8, x4, x1, x2)

inst_92261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:276783*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276783*0 + 3*101*FLEN/8, x4, x1, x2)

inst_92262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:276786*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276786*0 + 3*102*FLEN/8, x4, x1, x2)

inst_92263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:276789*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276789*0 + 3*103*FLEN/8, x4, x1, x2)

inst_92264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:276792*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276792*0 + 3*104*FLEN/8, x4, x1, x2)

inst_92265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:276795*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276795*0 + 3*105*FLEN/8, x4, x1, x2)

inst_92266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:276798*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276798*0 + 3*106*FLEN/8, x4, x1, x2)

inst_92267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:276801*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276801*0 + 3*107*FLEN/8, x4, x1, x2)

inst_92268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:276804*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276804*0 + 3*108*FLEN/8, x4, x1, x2)

inst_92269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:276807*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276807*0 + 3*109*FLEN/8, x4, x1, x2)

inst_92270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:276810*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276810*0 + 3*110*FLEN/8, x4, x1, x2)

inst_92271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:276813*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276813*0 + 3*111*FLEN/8, x4, x1, x2)

inst_92272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:276816*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276816*0 + 3*112*FLEN/8, x4, x1, x2)

inst_92273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:276819*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276819*0 + 3*113*FLEN/8, x4, x1, x2)

inst_92274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:276822*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276822*0 + 3*114*FLEN/8, x4, x1, x2)

inst_92275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:276825*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276825*0 + 3*115*FLEN/8, x4, x1, x2)

inst_92276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:276828*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276828*0 + 3*116*FLEN/8, x4, x1, x2)

inst_92277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:276831*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276831*0 + 3*117*FLEN/8, x4, x1, x2)

inst_92278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:276834*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276834*0 + 3*118*FLEN/8, x4, x1, x2)

inst_92279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:276837*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276837*0 + 3*119*FLEN/8, x4, x1, x2)

inst_92280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:276840*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276840*0 + 3*120*FLEN/8, x4, x1, x2)

inst_92281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:276843*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276843*0 + 3*121*FLEN/8, x4, x1, x2)

inst_92282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:276846*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276846*0 + 3*122*FLEN/8, x4, x1, x2)

inst_92283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:276849*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276849*0 + 3*123*FLEN/8, x4, x1, x2)

inst_92284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:276852*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276852*0 + 3*124*FLEN/8, x4, x1, x2)

inst_92285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:276855*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276855*0 + 3*125*FLEN/8, x4, x1, x2)

inst_92286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:276858*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276858*0 + 3*126*FLEN/8, x4, x1, x2)

inst_92287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:276861*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276861*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_92288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:276864*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276864*0 + 3*128*FLEN/8, x4, x1, x2)

inst_92289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:276867*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276867*0 + 3*129*FLEN/8, x4, x1, x2)

inst_92290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:276870*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276870*0 + 3*130*FLEN/8, x4, x1, x2)

inst_92291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:276873*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276873*0 + 3*131*FLEN/8, x4, x1, x2)

inst_92292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:276876*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276876*0 + 3*132*FLEN/8, x4, x1, x2)

inst_92293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:276879*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276879*0 + 3*133*FLEN/8, x4, x1, x2)

inst_92294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:276882*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276882*0 + 3*134*FLEN/8, x4, x1, x2)

inst_92295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:276885*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276885*0 + 3*135*FLEN/8, x4, x1, x2)

inst_92296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:276888*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276888*0 + 3*136*FLEN/8, x4, x1, x2)

inst_92297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:276891*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276891*0 + 3*137*FLEN/8, x4, x1, x2)

inst_92298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:276894*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276894*0 + 3*138*FLEN/8, x4, x1, x2)

inst_92299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:276897*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276897*0 + 3*139*FLEN/8, x4, x1, x2)

inst_92300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:276900*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276900*0 + 3*140*FLEN/8, x4, x1, x2)

inst_92301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:276903*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276903*0 + 3*141*FLEN/8, x4, x1, x2)

inst_92302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:276906*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276906*0 + 3*142*FLEN/8, x4, x1, x2)

inst_92303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3482790eeee8 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3482790eeee8; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:276909*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276909*0 + 3*143*FLEN/8, x4, x1, x2)

inst_92304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:276912*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276912*0 + 3*144*FLEN/8, x4, x1, x2)

inst_92305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:276915*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276915*0 + 3*145*FLEN/8, x4, x1, x2)

inst_92306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:276918*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276918*0 + 3*146*FLEN/8, x4, x1, x2)

inst_92307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:276921*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276921*0 + 3*147*FLEN/8, x4, x1, x2)

inst_92308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:276924*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276924*0 + 3*148*FLEN/8, x4, x1, x2)

inst_92309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:276927*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276927*0 + 3*149*FLEN/8, x4, x1, x2)

inst_92310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:276930*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276930*0 + 3*150*FLEN/8, x4, x1, x2)

inst_92311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:276933*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276933*0 + 3*151*FLEN/8, x4, x1, x2)

inst_92312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:276936*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276936*0 + 3*152*FLEN/8, x4, x1, x2)

inst_92313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:276939*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276939*0 + 3*153*FLEN/8, x4, x1, x2)

inst_92314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:276942*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276942*0 + 3*154*FLEN/8, x4, x1, x2)

inst_92315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:276945*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276945*0 + 3*155*FLEN/8, x4, x1, x2)

inst_92316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:276948*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276948*0 + 3*156*FLEN/8, x4, x1, x2)

inst_92317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:276951*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276951*0 + 3*157*FLEN/8, x4, x1, x2)

inst_92318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:276954*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276954*0 + 3*158*FLEN/8, x4, x1, x2)

inst_92319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:276957*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276957*0 + 3*159*FLEN/8, x4, x1, x2)

inst_92320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:276960*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276960*0 + 3*160*FLEN/8, x4, x1, x2)

inst_92321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:276963*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276963*0 + 3*161*FLEN/8, x4, x1, x2)

inst_92322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:276966*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276966*0 + 3*162*FLEN/8, x4, x1, x2)

inst_92323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:276969*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276969*0 + 3*163*FLEN/8, x4, x1, x2)

inst_92324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:276972*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276972*0 + 3*164*FLEN/8, x4, x1, x2)

inst_92325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:276975*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276975*0 + 3*165*FLEN/8, x4, x1, x2)

inst_92326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000000000; valaddr_reg:x3; val_offset:276978*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276978*0 + 3*166*FLEN/8, x4, x1, x2)

inst_92327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000000001; valaddr_reg:x3; val_offset:276981*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276981*0 + 3*167*FLEN/8, x4, x1, x2)

inst_92328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000000003; valaddr_reg:x3; val_offset:276984*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276984*0 + 3*168*FLEN/8, x4, x1, x2)

inst_92329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000000007; valaddr_reg:x3; val_offset:276987*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276987*0 + 3*169*FLEN/8, x4, x1, x2)

inst_92330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000000000f; valaddr_reg:x3; val_offset:276990*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276990*0 + 3*170*FLEN/8, x4, x1, x2)

inst_92331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000000001f; valaddr_reg:x3; val_offset:276993*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276993*0 + 3*171*FLEN/8, x4, x1, x2)

inst_92332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000000003f; valaddr_reg:x3; val_offset:276996*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276996*0 + 3*172*FLEN/8, x4, x1, x2)

inst_92333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000000007f; valaddr_reg:x3; val_offset:276999*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276999*0 + 3*173*FLEN/8, x4, x1, x2)

inst_92334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000000000ff; valaddr_reg:x3; val_offset:277002*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277002*0 + 3*174*FLEN/8, x4, x1, x2)

inst_92335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000000001ff; valaddr_reg:x3; val_offset:277005*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277005*0 + 3*175*FLEN/8, x4, x1, x2)

inst_92336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000000003ff; valaddr_reg:x3; val_offset:277008*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277008*0 + 3*176*FLEN/8, x4, x1, x2)

inst_92337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000000007ff; valaddr_reg:x3; val_offset:277011*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277011*0 + 3*177*FLEN/8, x4, x1, x2)

inst_92338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000000fff; valaddr_reg:x3; val_offset:277014*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277014*0 + 3*178*FLEN/8, x4, x1, x2)

inst_92339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000001fff; valaddr_reg:x3; val_offset:277017*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277017*0 + 3*179*FLEN/8, x4, x1, x2)

inst_92340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000003fff; valaddr_reg:x3; val_offset:277020*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277020*0 + 3*180*FLEN/8, x4, x1, x2)

inst_92341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000007fff; valaddr_reg:x3; val_offset:277023*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277023*0 + 3*181*FLEN/8, x4, x1, x2)

inst_92342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000000ffff; valaddr_reg:x3; val_offset:277026*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277026*0 + 3*182*FLEN/8, x4, x1, x2)

inst_92343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000001ffff; valaddr_reg:x3; val_offset:277029*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277029*0 + 3*183*FLEN/8, x4, x1, x2)

inst_92344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000003ffff; valaddr_reg:x3; val_offset:277032*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277032*0 + 3*184*FLEN/8, x4, x1, x2)

inst_92345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000007ffff; valaddr_reg:x3; val_offset:277035*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277035*0 + 3*185*FLEN/8, x4, x1, x2)

inst_92346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000000fffff; valaddr_reg:x3; val_offset:277038*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277038*0 + 3*186*FLEN/8, x4, x1, x2)

inst_92347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000001fffff; valaddr_reg:x3; val_offset:277041*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277041*0 + 3*187*FLEN/8, x4, x1, x2)

inst_92348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000003fffff; valaddr_reg:x3; val_offset:277044*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277044*0 + 3*188*FLEN/8, x4, x1, x2)

inst_92349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000007fffff; valaddr_reg:x3; val_offset:277047*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277047*0 + 3*189*FLEN/8, x4, x1, x2)

inst_92350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000000ffffff; valaddr_reg:x3; val_offset:277050*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277050*0 + 3*190*FLEN/8, x4, x1, x2)

inst_92351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000001ffffff; valaddr_reg:x3; val_offset:277053*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277053*0 + 3*191*FLEN/8, x4, x1, x2)

inst_92352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000003ffffff; valaddr_reg:x3; val_offset:277056*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277056*0 + 3*192*FLEN/8, x4, x1, x2)

inst_92353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000007ffffff; valaddr_reg:x3; val_offset:277059*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277059*0 + 3*193*FLEN/8, x4, x1, x2)

inst_92354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000000fffffff; valaddr_reg:x3; val_offset:277062*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277062*0 + 3*194*FLEN/8, x4, x1, x2)

inst_92355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000001fffffff; valaddr_reg:x3; val_offset:277065*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277065*0 + 3*195*FLEN/8, x4, x1, x2)

inst_92356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000003fffffff; valaddr_reg:x3; val_offset:277068*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277068*0 + 3*196*FLEN/8, x4, x1, x2)

inst_92357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000007fffffff; valaddr_reg:x3; val_offset:277071*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277071*0 + 3*197*FLEN/8, x4, x1, x2)

inst_92358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00000ffffffff; valaddr_reg:x3; val_offset:277074*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277074*0 + 3*198*FLEN/8, x4, x1, x2)

inst_92359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00001ffffffff; valaddr_reg:x3; val_offset:277077*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277077*0 + 3*199*FLEN/8, x4, x1, x2)

inst_92360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00003ffffffff; valaddr_reg:x3; val_offset:277080*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277080*0 + 3*200*FLEN/8, x4, x1, x2)

inst_92361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00007ffffffff; valaddr_reg:x3; val_offset:277083*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277083*0 + 3*201*FLEN/8, x4, x1, x2)

inst_92362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0000fffffffff; valaddr_reg:x3; val_offset:277086*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277086*0 + 3*202*FLEN/8, x4, x1, x2)

inst_92363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0001fffffffff; valaddr_reg:x3; val_offset:277089*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277089*0 + 3*203*FLEN/8, x4, x1, x2)

inst_92364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0003fffffffff; valaddr_reg:x3; val_offset:277092*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277092*0 + 3*204*FLEN/8, x4, x1, x2)

inst_92365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0007fffffffff; valaddr_reg:x3; val_offset:277095*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277095*0 + 3*205*FLEN/8, x4, x1, x2)

inst_92366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f000ffffffffff; valaddr_reg:x3; val_offset:277098*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277098*0 + 3*206*FLEN/8, x4, x1, x2)

inst_92367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f001ffffffffff; valaddr_reg:x3; val_offset:277101*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277101*0 + 3*207*FLEN/8, x4, x1, x2)

inst_92368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f003ffffffffff; valaddr_reg:x3; val_offset:277104*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277104*0 + 3*208*FLEN/8, x4, x1, x2)

inst_92369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f007ffffffffff; valaddr_reg:x3; val_offset:277107*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277107*0 + 3*209*FLEN/8, x4, x1, x2)

inst_92370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f00fffffffffff; valaddr_reg:x3; val_offset:277110*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277110*0 + 3*210*FLEN/8, x4, x1, x2)

inst_92371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f01fffffffffff; valaddr_reg:x3; val_offset:277113*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277113*0 + 3*211*FLEN/8, x4, x1, x2)

inst_92372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f03fffffffffff; valaddr_reg:x3; val_offset:277116*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277116*0 + 3*212*FLEN/8, x4, x1, x2)

inst_92373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f07fffffffffff; valaddr_reg:x3; val_offset:277119*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277119*0 + 3*213*FLEN/8, x4, x1, x2)

inst_92374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f0ffffffffffff; valaddr_reg:x3; val_offset:277122*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277122*0 + 3*214*FLEN/8, x4, x1, x2)

inst_92375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f1ffffffffffff; valaddr_reg:x3; val_offset:277125*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277125*0 + 3*215*FLEN/8, x4, x1, x2)

inst_92376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f3ffffffffffff; valaddr_reg:x3; val_offset:277128*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277128*0 + 3*216*FLEN/8, x4, x1, x2)

inst_92377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f7ffffffffffff; valaddr_reg:x3; val_offset:277131*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277131*0 + 3*217*FLEN/8, x4, x1, x2)

inst_92378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82f8000000000000; valaddr_reg:x3; val_offset:277134*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277134*0 + 3*218*FLEN/8, x4, x1, x2)

inst_92379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fc000000000000; valaddr_reg:x3; val_offset:277137*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277137*0 + 3*219*FLEN/8, x4, x1, x2)

inst_92380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fe000000000000; valaddr_reg:x3; val_offset:277140*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277140*0 + 3*220*FLEN/8, x4, x1, x2)

inst_92381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ff000000000000; valaddr_reg:x3; val_offset:277143*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277143*0 + 3*221*FLEN/8, x4, x1, x2)

inst_92382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ff800000000000; valaddr_reg:x3; val_offset:277146*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277146*0 + 3*222*FLEN/8, x4, x1, x2)

inst_92383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffc00000000000; valaddr_reg:x3; val_offset:277149*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277149*0 + 3*223*FLEN/8, x4, x1, x2)

inst_92384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffe00000000000; valaddr_reg:x3; val_offset:277152*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277152*0 + 3*224*FLEN/8, x4, x1, x2)

inst_92385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fff00000000000; valaddr_reg:x3; val_offset:277155*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277155*0 + 3*225*FLEN/8, x4, x1, x2)

inst_92386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fff80000000000; valaddr_reg:x3; val_offset:277158*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277158*0 + 3*226*FLEN/8, x4, x1, x2)

inst_92387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffc0000000000; valaddr_reg:x3; val_offset:277161*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277161*0 + 3*227*FLEN/8, x4, x1, x2)

inst_92388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffe0000000000; valaddr_reg:x3; val_offset:277164*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277164*0 + 3*228*FLEN/8, x4, x1, x2)

inst_92389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffff0000000000; valaddr_reg:x3; val_offset:277167*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277167*0 + 3*229*FLEN/8, x4, x1, x2)

inst_92390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffff8000000000; valaddr_reg:x3; val_offset:277170*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277170*0 + 3*230*FLEN/8, x4, x1, x2)

inst_92391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffc000000000; valaddr_reg:x3; val_offset:277173*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277173*0 + 3*231*FLEN/8, x4, x1, x2)

inst_92392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffe000000000; valaddr_reg:x3; val_offset:277176*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277176*0 + 3*232*FLEN/8, x4, x1, x2)

inst_92393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffff000000000; valaddr_reg:x3; val_offset:277179*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277179*0 + 3*233*FLEN/8, x4, x1, x2)

inst_92394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffff800000000; valaddr_reg:x3; val_offset:277182*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277182*0 + 3*234*FLEN/8, x4, x1, x2)

inst_92395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffc00000000; valaddr_reg:x3; val_offset:277185*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277185*0 + 3*235*FLEN/8, x4, x1, x2)

inst_92396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffe00000000; valaddr_reg:x3; val_offset:277188*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277188*0 + 3*236*FLEN/8, x4, x1, x2)

inst_92397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffff00000000; valaddr_reg:x3; val_offset:277191*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277191*0 + 3*237*FLEN/8, x4, x1, x2)

inst_92398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffff80000000; valaddr_reg:x3; val_offset:277194*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277194*0 + 3*238*FLEN/8, x4, x1, x2)

inst_92399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffc0000000; valaddr_reg:x3; val_offset:277197*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277197*0 + 3*239*FLEN/8, x4, x1, x2)

inst_92400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffe0000000; valaddr_reg:x3; val_offset:277200*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277200*0 + 3*240*FLEN/8, x4, x1, x2)

inst_92401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffff0000000; valaddr_reg:x3; val_offset:277203*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277203*0 + 3*241*FLEN/8, x4, x1, x2)

inst_92402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffff8000000; valaddr_reg:x3; val_offset:277206*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277206*0 + 3*242*FLEN/8, x4, x1, x2)

inst_92403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffc000000; valaddr_reg:x3; val_offset:277209*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277209*0 + 3*243*FLEN/8, x4, x1, x2)

inst_92404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffe000000; valaddr_reg:x3; val_offset:277212*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277212*0 + 3*244*FLEN/8, x4, x1, x2)

inst_92405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffff000000; valaddr_reg:x3; val_offset:277215*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277215*0 + 3*245*FLEN/8, x4, x1, x2)

inst_92406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffff800000; valaddr_reg:x3; val_offset:277218*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277218*0 + 3*246*FLEN/8, x4, x1, x2)

inst_92407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffc00000; valaddr_reg:x3; val_offset:277221*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277221*0 + 3*247*FLEN/8, x4, x1, x2)

inst_92408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffe00000; valaddr_reg:x3; val_offset:277224*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277224*0 + 3*248*FLEN/8, x4, x1, x2)

inst_92409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffff00000; valaddr_reg:x3; val_offset:277227*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277227*0 + 3*249*FLEN/8, x4, x1, x2)

inst_92410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffff80000; valaddr_reg:x3; val_offset:277230*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277230*0 + 3*250*FLEN/8, x4, x1, x2)

inst_92411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffc0000; valaddr_reg:x3; val_offset:277233*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277233*0 + 3*251*FLEN/8, x4, x1, x2)

inst_92412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffe0000; valaddr_reg:x3; val_offset:277236*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277236*0 + 3*252*FLEN/8, x4, x1, x2)

inst_92413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffff0000; valaddr_reg:x3; val_offset:277239*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277239*0 + 3*253*FLEN/8, x4, x1, x2)

inst_92414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffff8000; valaddr_reg:x3; val_offset:277242*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277242*0 + 3*254*FLEN/8, x4, x1, x2)

inst_92415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffffc000; valaddr_reg:x3; val_offset:277245*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277245*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_92416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffffe000; valaddr_reg:x3; val_offset:277248*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277248*0 + 3*256*FLEN/8, x4, x1, x2)

inst_92417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffff000; valaddr_reg:x3; val_offset:277251*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277251*0 + 3*257*FLEN/8, x4, x1, x2)

inst_92418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffff800; valaddr_reg:x3; val_offset:277254*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277254*0 + 3*258*FLEN/8, x4, x1, x2)

inst_92419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffffc00; valaddr_reg:x3; val_offset:277257*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277257*0 + 3*259*FLEN/8, x4, x1, x2)

inst_92420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffffe00; valaddr_reg:x3; val_offset:277260*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277260*0 + 3*260*FLEN/8, x4, x1, x2)

inst_92421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffffff00; valaddr_reg:x3; val_offset:277263*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277263*0 + 3*261*FLEN/8, x4, x1, x2)

inst_92422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffffff80; valaddr_reg:x3; val_offset:277266*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277266*0 + 3*262*FLEN/8, x4, x1, x2)

inst_92423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffffffc0; valaddr_reg:x3; val_offset:277269*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277269*0 + 3*263*FLEN/8, x4, x1, x2)

inst_92424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffffffe0; valaddr_reg:x3; val_offset:277272*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277272*0 + 3*264*FLEN/8, x4, x1, x2)

inst_92425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffffff0; valaddr_reg:x3; val_offset:277275*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277275*0 + 3*265*FLEN/8, x4, x1, x2)

inst_92426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffffff8; valaddr_reg:x3; val_offset:277278*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277278*0 + 3*266*FLEN/8, x4, x1, x2)

inst_92427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffffffc; valaddr_reg:x3; val_offset:277281*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277281*0 + 3*267*FLEN/8, x4, x1, x2)

inst_92428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82fffffffffffffe; valaddr_reg:x3; val_offset:277284*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277284*0 + 3*268*FLEN/8, x4, x1, x2)

inst_92429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd365a0d74e7c5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad365a0d74e7c5; op2val:0x8000;
op3val:0x82ffffffffffffff; valaddr_reg:x3; val_offset:277287*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277287*0 + 3*269*FLEN/8, x4, x1, x2)

inst_92430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:277290*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277290*0 + 3*270*FLEN/8, x4, x1, x2)

inst_92431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:277293*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277293*0 + 3*271*FLEN/8, x4, x1, x2)

inst_92432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:277296*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277296*0 + 3*272*FLEN/8, x4, x1, x2)

inst_92433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:277299*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277299*0 + 3*273*FLEN/8, x4, x1, x2)

inst_92434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:277302*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277302*0 + 3*274*FLEN/8, x4, x1, x2)

inst_92435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:277305*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277305*0 + 3*275*FLEN/8, x4, x1, x2)

inst_92436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:277308*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277308*0 + 3*276*FLEN/8, x4, x1, x2)

inst_92437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:277311*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277311*0 + 3*277*FLEN/8, x4, x1, x2)

inst_92438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:277314*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277314*0 + 3*278*FLEN/8, x4, x1, x2)

inst_92439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:277317*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277317*0 + 3*279*FLEN/8, x4, x1, x2)

inst_92440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:277320*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277320*0 + 3*280*FLEN/8, x4, x1, x2)

inst_92441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:277323*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277323*0 + 3*281*FLEN/8, x4, x1, x2)

inst_92442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:277326*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277326*0 + 3*282*FLEN/8, x4, x1, x2)

inst_92443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:277329*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277329*0 + 3*283*FLEN/8, x4, x1, x2)

inst_92444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:277332*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277332*0 + 3*284*FLEN/8, x4, x1, x2)

inst_92445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:277335*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277335*0 + 3*285*FLEN/8, x4, x1, x2)

inst_92446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:277338*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277338*0 + 3*286*FLEN/8, x4, x1, x2)

inst_92447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:277341*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277341*0 + 3*287*FLEN/8, x4, x1, x2)

inst_92448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:277344*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277344*0 + 3*288*FLEN/8, x4, x1, x2)

inst_92449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:277347*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277347*0 + 3*289*FLEN/8, x4, x1, x2)

inst_92450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:277350*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277350*0 + 3*290*FLEN/8, x4, x1, x2)

inst_92451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:277353*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277353*0 + 3*291*FLEN/8, x4, x1, x2)

inst_92452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000000000; valaddr_reg:x3; val_offset:277356*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277356*0 + 3*292*FLEN/8, x4, x1, x2)

inst_92453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000000001; valaddr_reg:x3; val_offset:277359*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277359*0 + 3*293*FLEN/8, x4, x1, x2)

inst_92454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000000003; valaddr_reg:x3; val_offset:277362*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277362*0 + 3*294*FLEN/8, x4, x1, x2)

inst_92455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000000007; valaddr_reg:x3; val_offset:277365*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277365*0 + 3*295*FLEN/8, x4, x1, x2)

inst_92456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000000000f; valaddr_reg:x3; val_offset:277368*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277368*0 + 3*296*FLEN/8, x4, x1, x2)

inst_92457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000000001f; valaddr_reg:x3; val_offset:277371*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277371*0 + 3*297*FLEN/8, x4, x1, x2)

inst_92458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000000003f; valaddr_reg:x3; val_offset:277374*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277374*0 + 3*298*FLEN/8, x4, x1, x2)

inst_92459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000000007f; valaddr_reg:x3; val_offset:277377*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277377*0 + 3*299*FLEN/8, x4, x1, x2)

inst_92460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000000000ff; valaddr_reg:x3; val_offset:277380*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277380*0 + 3*300*FLEN/8, x4, x1, x2)

inst_92461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000000001ff; valaddr_reg:x3; val_offset:277383*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277383*0 + 3*301*FLEN/8, x4, x1, x2)

inst_92462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000000003ff; valaddr_reg:x3; val_offset:277386*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277386*0 + 3*302*FLEN/8, x4, x1, x2)

inst_92463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000000007ff; valaddr_reg:x3; val_offset:277389*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277389*0 + 3*303*FLEN/8, x4, x1, x2)

inst_92464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000000fff; valaddr_reg:x3; val_offset:277392*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277392*0 + 3*304*FLEN/8, x4, x1, x2)

inst_92465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000001fff; valaddr_reg:x3; val_offset:277395*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277395*0 + 3*305*FLEN/8, x4, x1, x2)

inst_92466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000003fff; valaddr_reg:x3; val_offset:277398*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277398*0 + 3*306*FLEN/8, x4, x1, x2)

inst_92467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000007fff; valaddr_reg:x3; val_offset:277401*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277401*0 + 3*307*FLEN/8, x4, x1, x2)

inst_92468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000000ffff; valaddr_reg:x3; val_offset:277404*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277404*0 + 3*308*FLEN/8, x4, x1, x2)

inst_92469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000001ffff; valaddr_reg:x3; val_offset:277407*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277407*0 + 3*309*FLEN/8, x4, x1, x2)

inst_92470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000003ffff; valaddr_reg:x3; val_offset:277410*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277410*0 + 3*310*FLEN/8, x4, x1, x2)

inst_92471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000007ffff; valaddr_reg:x3; val_offset:277413*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277413*0 + 3*311*FLEN/8, x4, x1, x2)

inst_92472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000000fffff; valaddr_reg:x3; val_offset:277416*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277416*0 + 3*312*FLEN/8, x4, x1, x2)

inst_92473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000001fffff; valaddr_reg:x3; val_offset:277419*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277419*0 + 3*313*FLEN/8, x4, x1, x2)

inst_92474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000003fffff; valaddr_reg:x3; val_offset:277422*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277422*0 + 3*314*FLEN/8, x4, x1, x2)

inst_92475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000007fffff; valaddr_reg:x3; val_offset:277425*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277425*0 + 3*315*FLEN/8, x4, x1, x2)

inst_92476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000000ffffff; valaddr_reg:x3; val_offset:277428*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277428*0 + 3*316*FLEN/8, x4, x1, x2)

inst_92477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000001ffffff; valaddr_reg:x3; val_offset:277431*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277431*0 + 3*317*FLEN/8, x4, x1, x2)

inst_92478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000003ffffff; valaddr_reg:x3; val_offset:277434*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277434*0 + 3*318*FLEN/8, x4, x1, x2)

inst_92479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000007ffffff; valaddr_reg:x3; val_offset:277437*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277437*0 + 3*319*FLEN/8, x4, x1, x2)

inst_92480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000000fffffff; valaddr_reg:x3; val_offset:277440*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277440*0 + 3*320*FLEN/8, x4, x1, x2)

inst_92481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000001fffffff; valaddr_reg:x3; val_offset:277443*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277443*0 + 3*321*FLEN/8, x4, x1, x2)

inst_92482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000003fffffff; valaddr_reg:x3; val_offset:277446*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277446*0 + 3*322*FLEN/8, x4, x1, x2)

inst_92483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000007fffffff; valaddr_reg:x3; val_offset:277449*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277449*0 + 3*323*FLEN/8, x4, x1, x2)

inst_92484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400000ffffffff; valaddr_reg:x3; val_offset:277452*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277452*0 + 3*324*FLEN/8, x4, x1, x2)

inst_92485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400001ffffffff; valaddr_reg:x3; val_offset:277455*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277455*0 + 3*325*FLEN/8, x4, x1, x2)

inst_92486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400003ffffffff; valaddr_reg:x3; val_offset:277458*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277458*0 + 3*326*FLEN/8, x4, x1, x2)

inst_92487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400007ffffffff; valaddr_reg:x3; val_offset:277461*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277461*0 + 3*327*FLEN/8, x4, x1, x2)

inst_92488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040000fffffffff; valaddr_reg:x3; val_offset:277464*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277464*0 + 3*328*FLEN/8, x4, x1, x2)

inst_92489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040001fffffffff; valaddr_reg:x3; val_offset:277467*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277467*0 + 3*329*FLEN/8, x4, x1, x2)

inst_92490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040003fffffffff; valaddr_reg:x3; val_offset:277470*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277470*0 + 3*330*FLEN/8, x4, x1, x2)

inst_92491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040007fffffffff; valaddr_reg:x3; val_offset:277473*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277473*0 + 3*331*FLEN/8, x4, x1, x2)

inst_92492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804000ffffffffff; valaddr_reg:x3; val_offset:277476*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277476*0 + 3*332*FLEN/8, x4, x1, x2)

inst_92493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804001ffffffffff; valaddr_reg:x3; val_offset:277479*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277479*0 + 3*333*FLEN/8, x4, x1, x2)

inst_92494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804003ffffffffff; valaddr_reg:x3; val_offset:277482*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277482*0 + 3*334*FLEN/8, x4, x1, x2)

inst_92495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804007ffffffffff; valaddr_reg:x3; val_offset:277485*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277485*0 + 3*335*FLEN/8, x4, x1, x2)

inst_92496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80400fffffffffff; valaddr_reg:x3; val_offset:277488*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277488*0 + 3*336*FLEN/8, x4, x1, x2)

inst_92497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80401fffffffffff; valaddr_reg:x3; val_offset:277491*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277491*0 + 3*337*FLEN/8, x4, x1, x2)

inst_92498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80403fffffffffff; valaddr_reg:x3; val_offset:277494*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277494*0 + 3*338*FLEN/8, x4, x1, x2)

inst_92499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x80407fffffffffff; valaddr_reg:x3; val_offset:277497*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277497*0 + 3*339*FLEN/8, x4, x1, x2)

inst_92500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8040ffffffffffff; valaddr_reg:x3; val_offset:277500*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277500*0 + 3*340*FLEN/8, x4, x1, x2)

inst_92501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8041ffffffffffff; valaddr_reg:x3; val_offset:277503*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277503*0 + 3*341*FLEN/8, x4, x1, x2)

inst_92502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8043ffffffffffff; valaddr_reg:x3; val_offset:277506*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277506*0 + 3*342*FLEN/8, x4, x1, x2)

inst_92503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8047ffffffffffff; valaddr_reg:x3; val_offset:277509*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277509*0 + 3*343*FLEN/8, x4, x1, x2)

inst_92504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x8048000000000000; valaddr_reg:x3; val_offset:277512*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277512*0 + 3*344*FLEN/8, x4, x1, x2)

inst_92505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804c000000000000; valaddr_reg:x3; val_offset:277515*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277515*0 + 3*345*FLEN/8, x4, x1, x2)

inst_92506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804e000000000000; valaddr_reg:x3; val_offset:277518*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277518*0 + 3*346*FLEN/8, x4, x1, x2)

inst_92507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804f000000000000; valaddr_reg:x3; val_offset:277521*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277521*0 + 3*347*FLEN/8, x4, x1, x2)

inst_92508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804f800000000000; valaddr_reg:x3; val_offset:277524*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277524*0 + 3*348*FLEN/8, x4, x1, x2)

inst_92509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fc00000000000; valaddr_reg:x3; val_offset:277527*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277527*0 + 3*349*FLEN/8, x4, x1, x2)

inst_92510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fe00000000000; valaddr_reg:x3; val_offset:277530*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277530*0 + 3*350*FLEN/8, x4, x1, x2)

inst_92511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ff00000000000; valaddr_reg:x3; val_offset:277533*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277533*0 + 3*351*FLEN/8, x4, x1, x2)

inst_92512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ff80000000000; valaddr_reg:x3; val_offset:277536*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277536*0 + 3*352*FLEN/8, x4, x1, x2)

inst_92513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffc0000000000; valaddr_reg:x3; val_offset:277539*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277539*0 + 3*353*FLEN/8, x4, x1, x2)

inst_92514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffe0000000000; valaddr_reg:x3; val_offset:277542*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277542*0 + 3*354*FLEN/8, x4, x1, x2)

inst_92515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fff0000000000; valaddr_reg:x3; val_offset:277545*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277545*0 + 3*355*FLEN/8, x4, x1, x2)

inst_92516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fff8000000000; valaddr_reg:x3; val_offset:277548*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277548*0 + 3*356*FLEN/8, x4, x1, x2)

inst_92517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffc000000000; valaddr_reg:x3; val_offset:277551*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277551*0 + 3*357*FLEN/8, x4, x1, x2)

inst_92518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffe000000000; valaddr_reg:x3; val_offset:277554*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277554*0 + 3*358*FLEN/8, x4, x1, x2)

inst_92519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffff000000000; valaddr_reg:x3; val_offset:277557*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277557*0 + 3*359*FLEN/8, x4, x1, x2)

inst_92520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffff800000000; valaddr_reg:x3; val_offset:277560*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277560*0 + 3*360*FLEN/8, x4, x1, x2)

inst_92521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffc00000000; valaddr_reg:x3; val_offset:277563*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277563*0 + 3*361*FLEN/8, x4, x1, x2)

inst_92522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffe00000000; valaddr_reg:x3; val_offset:277566*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277566*0 + 3*362*FLEN/8, x4, x1, x2)

inst_92523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffff00000000; valaddr_reg:x3; val_offset:277569*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277569*0 + 3*363*FLEN/8, x4, x1, x2)

inst_92524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffff80000000; valaddr_reg:x3; val_offset:277572*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277572*0 + 3*364*FLEN/8, x4, x1, x2)

inst_92525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffc0000000; valaddr_reg:x3; val_offset:277575*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277575*0 + 3*365*FLEN/8, x4, x1, x2)

inst_92526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffe0000000; valaddr_reg:x3; val_offset:277578*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277578*0 + 3*366*FLEN/8, x4, x1, x2)

inst_92527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffff0000000; valaddr_reg:x3; val_offset:277581*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277581*0 + 3*367*FLEN/8, x4, x1, x2)

inst_92528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffff8000000; valaddr_reg:x3; val_offset:277584*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277584*0 + 3*368*FLEN/8, x4, x1, x2)

inst_92529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffc000000; valaddr_reg:x3; val_offset:277587*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277587*0 + 3*369*FLEN/8, x4, x1, x2)

inst_92530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffe000000; valaddr_reg:x3; val_offset:277590*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277590*0 + 3*370*FLEN/8, x4, x1, x2)

inst_92531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffff000000; valaddr_reg:x3; val_offset:277593*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277593*0 + 3*371*FLEN/8, x4, x1, x2)

inst_92532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffff800000; valaddr_reg:x3; val_offset:277596*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277596*0 + 3*372*FLEN/8, x4, x1, x2)

inst_92533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffc00000; valaddr_reg:x3; val_offset:277599*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277599*0 + 3*373*FLEN/8, x4, x1, x2)

inst_92534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffe00000; valaddr_reg:x3; val_offset:277602*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277602*0 + 3*374*FLEN/8, x4, x1, x2)

inst_92535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffff00000; valaddr_reg:x3; val_offset:277605*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277605*0 + 3*375*FLEN/8, x4, x1, x2)

inst_92536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffff80000; valaddr_reg:x3; val_offset:277608*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277608*0 + 3*376*FLEN/8, x4, x1, x2)

inst_92537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffc0000; valaddr_reg:x3; val_offset:277611*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277611*0 + 3*377*FLEN/8, x4, x1, x2)

inst_92538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffe0000; valaddr_reg:x3; val_offset:277614*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277614*0 + 3*378*FLEN/8, x4, x1, x2)

inst_92539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffff0000; valaddr_reg:x3; val_offset:277617*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277617*0 + 3*379*FLEN/8, x4, x1, x2)

inst_92540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffff8000; valaddr_reg:x3; val_offset:277620*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277620*0 + 3*380*FLEN/8, x4, x1, x2)

inst_92541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffffc000; valaddr_reg:x3; val_offset:277623*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277623*0 + 3*381*FLEN/8, x4, x1, x2)

inst_92542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffffe000; valaddr_reg:x3; val_offset:277626*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277626*0 + 3*382*FLEN/8, x4, x1, x2)

inst_92543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffff000; valaddr_reg:x3; val_offset:277629*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277629*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_92544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffff800; valaddr_reg:x3; val_offset:277632*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277632*0 + 3*384*FLEN/8, x4, x1, x2)

inst_92545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffffc00; valaddr_reg:x3; val_offset:277635*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277635*0 + 3*385*FLEN/8, x4, x1, x2)

inst_92546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffffe00; valaddr_reg:x3; val_offset:277638*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277638*0 + 3*386*FLEN/8, x4, x1, x2)

inst_92547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffffff00; valaddr_reg:x3; val_offset:277641*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277641*0 + 3*387*FLEN/8, x4, x1, x2)

inst_92548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffffff80; valaddr_reg:x3; val_offset:277644*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277644*0 + 3*388*FLEN/8, x4, x1, x2)

inst_92549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffffffc0; valaddr_reg:x3; val_offset:277647*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277647*0 + 3*389*FLEN/8, x4, x1, x2)

inst_92550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffffffe0; valaddr_reg:x3; val_offset:277650*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277650*0 + 3*390*FLEN/8, x4, x1, x2)

inst_92551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffffff0; valaddr_reg:x3; val_offset:277653*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277653*0 + 3*391*FLEN/8, x4, x1, x2)

inst_92552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffffff8; valaddr_reg:x3; val_offset:277656*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277656*0 + 3*392*FLEN/8, x4, x1, x2)

inst_92553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffffffc; valaddr_reg:x3; val_offset:277659*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277659*0 + 3*393*FLEN/8, x4, x1, x2)

inst_92554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804ffffffffffffe; valaddr_reg:x3; val_offset:277662*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277662*0 + 3*394*FLEN/8, x4, x1, x2)

inst_92555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd387bdfbb52c6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad387bdfbb52c6; op2val:0x8000;
op3val:0x804fffffffffffff; valaddr_reg:x3; val_offset:277665*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277665*0 + 3*395*FLEN/8, x4, x1, x2)

inst_92556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000000000; valaddr_reg:x3; val_offset:277668*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277668*0 + 3*396*FLEN/8, x4, x1, x2)

inst_92557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000000001; valaddr_reg:x3; val_offset:277671*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277671*0 + 3*397*FLEN/8, x4, x1, x2)

inst_92558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000000003; valaddr_reg:x3; val_offset:277674*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277674*0 + 3*398*FLEN/8, x4, x1, x2)

inst_92559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000000007; valaddr_reg:x3; val_offset:277677*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277677*0 + 3*399*FLEN/8, x4, x1, x2)

inst_92560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000000000f; valaddr_reg:x3; val_offset:277680*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277680*0 + 3*400*FLEN/8, x4, x1, x2)

inst_92561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000000001f; valaddr_reg:x3; val_offset:277683*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277683*0 + 3*401*FLEN/8, x4, x1, x2)

inst_92562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000000003f; valaddr_reg:x3; val_offset:277686*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277686*0 + 3*402*FLEN/8, x4, x1, x2)

inst_92563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000000007f; valaddr_reg:x3; val_offset:277689*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277689*0 + 3*403*FLEN/8, x4, x1, x2)

inst_92564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000000000ff; valaddr_reg:x3; val_offset:277692*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277692*0 + 3*404*FLEN/8, x4, x1, x2)

inst_92565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000000001ff; valaddr_reg:x3; val_offset:277695*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277695*0 + 3*405*FLEN/8, x4, x1, x2)

inst_92566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000000003ff; valaddr_reg:x3; val_offset:277698*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277698*0 + 3*406*FLEN/8, x4, x1, x2)

inst_92567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000000007ff; valaddr_reg:x3; val_offset:277701*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277701*0 + 3*407*FLEN/8, x4, x1, x2)

inst_92568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000000fff; valaddr_reg:x3; val_offset:277704*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277704*0 + 3*408*FLEN/8, x4, x1, x2)

inst_92569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000001fff; valaddr_reg:x3; val_offset:277707*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277707*0 + 3*409*FLEN/8, x4, x1, x2)

inst_92570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000003fff; valaddr_reg:x3; val_offset:277710*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277710*0 + 3*410*FLEN/8, x4, x1, x2)

inst_92571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000007fff; valaddr_reg:x3; val_offset:277713*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277713*0 + 3*411*FLEN/8, x4, x1, x2)

inst_92572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000000ffff; valaddr_reg:x3; val_offset:277716*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277716*0 + 3*412*FLEN/8, x4, x1, x2)

inst_92573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000001ffff; valaddr_reg:x3; val_offset:277719*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277719*0 + 3*413*FLEN/8, x4, x1, x2)

inst_92574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000003ffff; valaddr_reg:x3; val_offset:277722*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277722*0 + 3*414*FLEN/8, x4, x1, x2)

inst_92575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000007ffff; valaddr_reg:x3; val_offset:277725*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277725*0 + 3*415*FLEN/8, x4, x1, x2)

inst_92576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000000fffff; valaddr_reg:x3; val_offset:277728*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277728*0 + 3*416*FLEN/8, x4, x1, x2)

inst_92577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000001fffff; valaddr_reg:x3; val_offset:277731*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277731*0 + 3*417*FLEN/8, x4, x1, x2)

inst_92578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000003fffff; valaddr_reg:x3; val_offset:277734*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277734*0 + 3*418*FLEN/8, x4, x1, x2)

inst_92579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000007fffff; valaddr_reg:x3; val_offset:277737*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277737*0 + 3*419*FLEN/8, x4, x1, x2)

inst_92580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000000ffffff; valaddr_reg:x3; val_offset:277740*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277740*0 + 3*420*FLEN/8, x4, x1, x2)

inst_92581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000001ffffff; valaddr_reg:x3; val_offset:277743*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277743*0 + 3*421*FLEN/8, x4, x1, x2)

inst_92582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000003ffffff; valaddr_reg:x3; val_offset:277746*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277746*0 + 3*422*FLEN/8, x4, x1, x2)

inst_92583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000007ffffff; valaddr_reg:x3; val_offset:277749*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277749*0 + 3*423*FLEN/8, x4, x1, x2)

inst_92584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000000fffffff; valaddr_reg:x3; val_offset:277752*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277752*0 + 3*424*FLEN/8, x4, x1, x2)

inst_92585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000001fffffff; valaddr_reg:x3; val_offset:277755*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277755*0 + 3*425*FLEN/8, x4, x1, x2)

inst_92586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000003fffffff; valaddr_reg:x3; val_offset:277758*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277758*0 + 3*426*FLEN/8, x4, x1, x2)

inst_92587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000007fffffff; valaddr_reg:x3; val_offset:277761*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277761*0 + 3*427*FLEN/8, x4, x1, x2)

inst_92588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00000ffffffff; valaddr_reg:x3; val_offset:277764*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277764*0 + 3*428*FLEN/8, x4, x1, x2)

inst_92589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00001ffffffff; valaddr_reg:x3; val_offset:277767*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277767*0 + 3*429*FLEN/8, x4, x1, x2)

inst_92590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00003ffffffff; valaddr_reg:x3; val_offset:277770*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277770*0 + 3*430*FLEN/8, x4, x1, x2)

inst_92591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00007ffffffff; valaddr_reg:x3; val_offset:277773*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277773*0 + 3*431*FLEN/8, x4, x1, x2)

inst_92592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0000fffffffff; valaddr_reg:x3; val_offset:277776*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277776*0 + 3*432*FLEN/8, x4, x1, x2)

inst_92593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0001fffffffff; valaddr_reg:x3; val_offset:277779*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277779*0 + 3*433*FLEN/8, x4, x1, x2)

inst_92594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0003fffffffff; valaddr_reg:x3; val_offset:277782*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277782*0 + 3*434*FLEN/8, x4, x1, x2)

inst_92595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0007fffffffff; valaddr_reg:x3; val_offset:277785*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277785*0 + 3*435*FLEN/8, x4, x1, x2)

inst_92596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a000ffffffffff; valaddr_reg:x3; val_offset:277788*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277788*0 + 3*436*FLEN/8, x4, x1, x2)

inst_92597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a001ffffffffff; valaddr_reg:x3; val_offset:277791*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277791*0 + 3*437*FLEN/8, x4, x1, x2)

inst_92598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a003ffffffffff; valaddr_reg:x3; val_offset:277794*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277794*0 + 3*438*FLEN/8, x4, x1, x2)

inst_92599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a007ffffffffff; valaddr_reg:x3; val_offset:277797*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277797*0 + 3*439*FLEN/8, x4, x1, x2)

inst_92600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a00fffffffffff; valaddr_reg:x3; val_offset:277800*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277800*0 + 3*440*FLEN/8, x4, x1, x2)

inst_92601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a01fffffffffff; valaddr_reg:x3; val_offset:277803*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277803*0 + 3*441*FLEN/8, x4, x1, x2)

inst_92602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a03fffffffffff; valaddr_reg:x3; val_offset:277806*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277806*0 + 3*442*FLEN/8, x4, x1, x2)

inst_92603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a07fffffffffff; valaddr_reg:x3; val_offset:277809*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277809*0 + 3*443*FLEN/8, x4, x1, x2)

inst_92604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a0ffffffffffff; valaddr_reg:x3; val_offset:277812*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277812*0 + 3*444*FLEN/8, x4, x1, x2)

inst_92605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a1ffffffffffff; valaddr_reg:x3; val_offset:277815*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277815*0 + 3*445*FLEN/8, x4, x1, x2)

inst_92606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a3ffffffffffff; valaddr_reg:x3; val_offset:277818*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277818*0 + 3*446*FLEN/8, x4, x1, x2)

inst_92607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a7ffffffffffff; valaddr_reg:x3; val_offset:277821*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277821*0 + 3*447*FLEN/8, x4, x1, x2)

inst_92608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8a8000000000000; valaddr_reg:x3; val_offset:277824*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277824*0 + 3*448*FLEN/8, x4, x1, x2)

inst_92609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8ac000000000000; valaddr_reg:x3; val_offset:277827*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277827*0 + 3*449*FLEN/8, x4, x1, x2)

inst_92610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8ae000000000000; valaddr_reg:x3; val_offset:277830*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277830*0 + 3*450*FLEN/8, x4, x1, x2)

inst_92611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8af000000000000; valaddr_reg:x3; val_offset:277833*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277833*0 + 3*451*FLEN/8, x4, x1, x2)

inst_92612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8af800000000000; valaddr_reg:x3; val_offset:277836*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277836*0 + 3*452*FLEN/8, x4, x1, x2)

inst_92613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afc00000000000; valaddr_reg:x3; val_offset:277839*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277839*0 + 3*453*FLEN/8, x4, x1, x2)

inst_92614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afe00000000000; valaddr_reg:x3; val_offset:277842*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277842*0 + 3*454*FLEN/8, x4, x1, x2)

inst_92615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8aff00000000000; valaddr_reg:x3; val_offset:277845*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277845*0 + 3*455*FLEN/8, x4, x1, x2)

inst_92616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8aff80000000000; valaddr_reg:x3; val_offset:277848*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277848*0 + 3*456*FLEN/8, x4, x1, x2)

inst_92617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affc0000000000; valaddr_reg:x3; val_offset:277851*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277851*0 + 3*457*FLEN/8, x4, x1, x2)

inst_92618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affe0000000000; valaddr_reg:x3; val_offset:277854*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277854*0 + 3*458*FLEN/8, x4, x1, x2)

inst_92619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afff0000000000; valaddr_reg:x3; val_offset:277857*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277857*0 + 3*459*FLEN/8, x4, x1, x2)

inst_92620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afff8000000000; valaddr_reg:x3; val_offset:277860*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277860*0 + 3*460*FLEN/8, x4, x1, x2)

inst_92621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffc000000000; valaddr_reg:x3; val_offset:277863*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277863*0 + 3*461*FLEN/8, x4, x1, x2)

inst_92622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffe000000000; valaddr_reg:x3; val_offset:277866*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277866*0 + 3*462*FLEN/8, x4, x1, x2)

inst_92623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affff000000000; valaddr_reg:x3; val_offset:277869*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277869*0 + 3*463*FLEN/8, x4, x1, x2)

inst_92624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affff800000000; valaddr_reg:x3; val_offset:277872*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277872*0 + 3*464*FLEN/8, x4, x1, x2)

inst_92625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffc00000000; valaddr_reg:x3; val_offset:277875*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277875*0 + 3*465*FLEN/8, x4, x1, x2)

inst_92626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffe00000000; valaddr_reg:x3; val_offset:277878*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277878*0 + 3*466*FLEN/8, x4, x1, x2)

inst_92627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffff00000000; valaddr_reg:x3; val_offset:277881*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277881*0 + 3*467*FLEN/8, x4, x1, x2)

inst_92628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffff80000000; valaddr_reg:x3; val_offset:277884*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277884*0 + 3*468*FLEN/8, x4, x1, x2)

inst_92629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffc0000000; valaddr_reg:x3; val_offset:277887*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277887*0 + 3*469*FLEN/8, x4, x1, x2)

inst_92630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffe0000000; valaddr_reg:x3; val_offset:277890*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277890*0 + 3*470*FLEN/8, x4, x1, x2)

inst_92631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffff0000000; valaddr_reg:x3; val_offset:277893*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277893*0 + 3*471*FLEN/8, x4, x1, x2)

inst_92632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffff8000000; valaddr_reg:x3; val_offset:277896*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277896*0 + 3*472*FLEN/8, x4, x1, x2)

inst_92633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffc000000; valaddr_reg:x3; val_offset:277899*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277899*0 + 3*473*FLEN/8, x4, x1, x2)

inst_92634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffe000000; valaddr_reg:x3; val_offset:277902*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277902*0 + 3*474*FLEN/8, x4, x1, x2)

inst_92635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffff000000; valaddr_reg:x3; val_offset:277905*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277905*0 + 3*475*FLEN/8, x4, x1, x2)

inst_92636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffff800000; valaddr_reg:x3; val_offset:277908*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277908*0 + 3*476*FLEN/8, x4, x1, x2)

inst_92637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffc00000; valaddr_reg:x3; val_offset:277911*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277911*0 + 3*477*FLEN/8, x4, x1, x2)

inst_92638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffe00000; valaddr_reg:x3; val_offset:277914*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277914*0 + 3*478*FLEN/8, x4, x1, x2)

inst_92639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffff00000; valaddr_reg:x3; val_offset:277917*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277917*0 + 3*479*FLEN/8, x4, x1, x2)

inst_92640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffff80000; valaddr_reg:x3; val_offset:277920*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277920*0 + 3*480*FLEN/8, x4, x1, x2)

inst_92641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffc0000; valaddr_reg:x3; val_offset:277923*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277923*0 + 3*481*FLEN/8, x4, x1, x2)

inst_92642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffe0000; valaddr_reg:x3; val_offset:277926*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277926*0 + 3*482*FLEN/8, x4, x1, x2)

inst_92643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffff0000; valaddr_reg:x3; val_offset:277929*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277929*0 + 3*483*FLEN/8, x4, x1, x2)

inst_92644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffff8000; valaddr_reg:x3; val_offset:277932*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277932*0 + 3*484*FLEN/8, x4, x1, x2)

inst_92645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffffc000; valaddr_reg:x3; val_offset:277935*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277935*0 + 3*485*FLEN/8, x4, x1, x2)

inst_92646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffffe000; valaddr_reg:x3; val_offset:277938*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277938*0 + 3*486*FLEN/8, x4, x1, x2)

inst_92647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffff000; valaddr_reg:x3; val_offset:277941*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277941*0 + 3*487*FLEN/8, x4, x1, x2)

inst_92648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffff800; valaddr_reg:x3; val_offset:277944*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277944*0 + 3*488*FLEN/8, x4, x1, x2)

inst_92649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffffc00; valaddr_reg:x3; val_offset:277947*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277947*0 + 3*489*FLEN/8, x4, x1, x2)

inst_92650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffffe00; valaddr_reg:x3; val_offset:277950*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277950*0 + 3*490*FLEN/8, x4, x1, x2)

inst_92651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffffff00; valaddr_reg:x3; val_offset:277953*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277953*0 + 3*491*FLEN/8, x4, x1, x2)

inst_92652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffffff80; valaddr_reg:x3; val_offset:277956*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277956*0 + 3*492*FLEN/8, x4, x1, x2)

inst_92653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffffffc0; valaddr_reg:x3; val_offset:277959*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277959*0 + 3*493*FLEN/8, x4, x1, x2)

inst_92654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffffffe0; valaddr_reg:x3; val_offset:277962*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277962*0 + 3*494*FLEN/8, x4, x1, x2)

inst_92655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffffff0; valaddr_reg:x3; val_offset:277965*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277965*0 + 3*495*FLEN/8, x4, x1, x2)

inst_92656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffffff8; valaddr_reg:x3; val_offset:277968*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277968*0 + 3*496*FLEN/8, x4, x1, x2)

inst_92657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffffffc; valaddr_reg:x3; val_offset:277971*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277971*0 + 3*497*FLEN/8, x4, x1, x2)

inst_92658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8affffffffffffe; valaddr_reg:x3; val_offset:277974*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277974*0 + 3*498*FLEN/8, x4, x1, x2)

inst_92659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x38a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xb8afffffffffffff; valaddr_reg:x3; val_offset:277977*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277977*0 + 3*499*FLEN/8, x4, x1, x2)

inst_92660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:277980*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277980*0 + 3*500*FLEN/8, x4, x1, x2)

inst_92661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:277983*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277983*0 + 3*501*FLEN/8, x4, x1, x2)

inst_92662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:277986*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277986*0 + 3*502*FLEN/8, x4, x1, x2)

inst_92663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:277989*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277989*0 + 3*503*FLEN/8, x4, x1, x2)

inst_92664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:277992*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277992*0 + 3*504*FLEN/8, x4, x1, x2)

inst_92665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:277995*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277995*0 + 3*505*FLEN/8, x4, x1, x2)

inst_92666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:277998*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 277998*0 + 3*506*FLEN/8, x4, x1, x2)

inst_92667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:278001*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278001*0 + 3*507*FLEN/8, x4, x1, x2)

inst_92668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:278004*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278004*0 + 3*508*FLEN/8, x4, x1, x2)

inst_92669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:278007*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278007*0 + 3*509*FLEN/8, x4, x1, x2)

inst_92670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:278010*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278010*0 + 3*510*FLEN/8, x4, x1, x2)

inst_92671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:278013*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278013*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_92672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:278016*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278016*0 + 3*512*FLEN/8, x4, x1, x2)

inst_92673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:278019*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278019*0 + 3*513*FLEN/8, x4, x1, x2)

inst_92674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:278022*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278022*0 + 3*514*FLEN/8, x4, x1, x2)

inst_92675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:278025*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278025*0 + 3*515*FLEN/8, x4, x1, x2)

inst_92676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:278028*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278028*0 + 3*516*FLEN/8, x4, x1, x2)

inst_92677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:278031*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278031*0 + 3*517*FLEN/8, x4, x1, x2)

inst_92678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:278034*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278034*0 + 3*518*FLEN/8, x4, x1, x2)

inst_92679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:278037*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278037*0 + 3*519*FLEN/8, x4, x1, x2)

inst_92680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:278040*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278040*0 + 3*520*FLEN/8, x4, x1, x2)

inst_92681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3a81e544f745 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x18462268a529b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3a81e544f745; op2val:0x9fc18462268a529b;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:278043*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278043*0 + 3*521*FLEN/8, x4, x1, x2)

inst_92682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:278046*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278046*0 + 3*522*FLEN/8, x4, x1, x2)

inst_92683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:278049*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278049*0 + 3*523*FLEN/8, x4, x1, x2)

inst_92684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:278052*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278052*0 + 3*524*FLEN/8, x4, x1, x2)

inst_92685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:278055*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278055*0 + 3*525*FLEN/8, x4, x1, x2)

inst_92686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:278058*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278058*0 + 3*526*FLEN/8, x4, x1, x2)

inst_92687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:278061*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278061*0 + 3*527*FLEN/8, x4, x1, x2)

inst_92688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:278064*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278064*0 + 3*528*FLEN/8, x4, x1, x2)

inst_92689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:278067*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278067*0 + 3*529*FLEN/8, x4, x1, x2)

inst_92690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:278070*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278070*0 + 3*530*FLEN/8, x4, x1, x2)

inst_92691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:278073*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278073*0 + 3*531*FLEN/8, x4, x1, x2)

inst_92692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:278076*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278076*0 + 3*532*FLEN/8, x4, x1, x2)

inst_92693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:278079*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278079*0 + 3*533*FLEN/8, x4, x1, x2)

inst_92694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:278082*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278082*0 + 3*534*FLEN/8, x4, x1, x2)

inst_92695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:278085*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278085*0 + 3*535*FLEN/8, x4, x1, x2)

inst_92696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:278088*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278088*0 + 3*536*FLEN/8, x4, x1, x2)

inst_92697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:278091*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278091*0 + 3*537*FLEN/8, x4, x1, x2)

inst_92698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:278094*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278094*0 + 3*538*FLEN/8, x4, x1, x2)

inst_92699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:278097*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278097*0 + 3*539*FLEN/8, x4, x1, x2)

inst_92700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:278100*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278100*0 + 3*540*FLEN/8, x4, x1, x2)

inst_92701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:278103*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278103*0 + 3*541*FLEN/8, x4, x1, x2)

inst_92702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:278106*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278106*0 + 3*542*FLEN/8, x4, x1, x2)

inst_92703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:278109*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278109*0 + 3*543*FLEN/8, x4, x1, x2)

inst_92704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000000000; valaddr_reg:x3; val_offset:278112*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278112*0 + 3*544*FLEN/8, x4, x1, x2)

inst_92705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000000001; valaddr_reg:x3; val_offset:278115*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278115*0 + 3*545*FLEN/8, x4, x1, x2)

inst_92706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000000003; valaddr_reg:x3; val_offset:278118*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278118*0 + 3*546*FLEN/8, x4, x1, x2)

inst_92707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000000007; valaddr_reg:x3; val_offset:278121*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278121*0 + 3*547*FLEN/8, x4, x1, x2)

inst_92708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000000000f; valaddr_reg:x3; val_offset:278124*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278124*0 + 3*548*FLEN/8, x4, x1, x2)

inst_92709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000000001f; valaddr_reg:x3; val_offset:278127*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278127*0 + 3*549*FLEN/8, x4, x1, x2)

inst_92710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000000003f; valaddr_reg:x3; val_offset:278130*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278130*0 + 3*550*FLEN/8, x4, x1, x2)

inst_92711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000000007f; valaddr_reg:x3; val_offset:278133*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278133*0 + 3*551*FLEN/8, x4, x1, x2)

inst_92712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000000000ff; valaddr_reg:x3; val_offset:278136*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278136*0 + 3*552*FLEN/8, x4, x1, x2)

inst_92713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000000001ff; valaddr_reg:x3; val_offset:278139*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278139*0 + 3*553*FLEN/8, x4, x1, x2)

inst_92714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000000003ff; valaddr_reg:x3; val_offset:278142*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278142*0 + 3*554*FLEN/8, x4, x1, x2)

inst_92715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000000007ff; valaddr_reg:x3; val_offset:278145*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278145*0 + 3*555*FLEN/8, x4, x1, x2)

inst_92716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000000fff; valaddr_reg:x3; val_offset:278148*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278148*0 + 3*556*FLEN/8, x4, x1, x2)

inst_92717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000001fff; valaddr_reg:x3; val_offset:278151*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278151*0 + 3*557*FLEN/8, x4, x1, x2)

inst_92718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000003fff; valaddr_reg:x3; val_offset:278154*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278154*0 + 3*558*FLEN/8, x4, x1, x2)

inst_92719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000007fff; valaddr_reg:x3; val_offset:278157*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278157*0 + 3*559*FLEN/8, x4, x1, x2)

inst_92720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000000ffff; valaddr_reg:x3; val_offset:278160*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278160*0 + 3*560*FLEN/8, x4, x1, x2)

inst_92721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000001ffff; valaddr_reg:x3; val_offset:278163*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278163*0 + 3*561*FLEN/8, x4, x1, x2)

inst_92722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000003ffff; valaddr_reg:x3; val_offset:278166*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278166*0 + 3*562*FLEN/8, x4, x1, x2)

inst_92723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000007ffff; valaddr_reg:x3; val_offset:278169*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278169*0 + 3*563*FLEN/8, x4, x1, x2)

inst_92724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000000fffff; valaddr_reg:x3; val_offset:278172*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278172*0 + 3*564*FLEN/8, x4, x1, x2)

inst_92725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000001fffff; valaddr_reg:x3; val_offset:278175*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278175*0 + 3*565*FLEN/8, x4, x1, x2)

inst_92726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000003fffff; valaddr_reg:x3; val_offset:278178*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278178*0 + 3*566*FLEN/8, x4, x1, x2)

inst_92727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000007fffff; valaddr_reg:x3; val_offset:278181*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278181*0 + 3*567*FLEN/8, x4, x1, x2)

inst_92728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000000ffffff; valaddr_reg:x3; val_offset:278184*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278184*0 + 3*568*FLEN/8, x4, x1, x2)

inst_92729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000001ffffff; valaddr_reg:x3; val_offset:278187*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278187*0 + 3*569*FLEN/8, x4, x1, x2)

inst_92730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000003ffffff; valaddr_reg:x3; val_offset:278190*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278190*0 + 3*570*FLEN/8, x4, x1, x2)

inst_92731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000007ffffff; valaddr_reg:x3; val_offset:278193*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278193*0 + 3*571*FLEN/8, x4, x1, x2)

inst_92732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000000fffffff; valaddr_reg:x3; val_offset:278196*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278196*0 + 3*572*FLEN/8, x4, x1, x2)

inst_92733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000001fffffff; valaddr_reg:x3; val_offset:278199*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278199*0 + 3*573*FLEN/8, x4, x1, x2)

inst_92734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000003fffffff; valaddr_reg:x3; val_offset:278202*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278202*0 + 3*574*FLEN/8, x4, x1, x2)

inst_92735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000007fffffff; valaddr_reg:x3; val_offset:278205*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278205*0 + 3*575*FLEN/8, x4, x1, x2)

inst_92736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00000ffffffff; valaddr_reg:x3; val_offset:278208*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278208*0 + 3*576*FLEN/8, x4, x1, x2)

inst_92737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00001ffffffff; valaddr_reg:x3; val_offset:278211*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278211*0 + 3*577*FLEN/8, x4, x1, x2)

inst_92738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00003ffffffff; valaddr_reg:x3; val_offset:278214*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278214*0 + 3*578*FLEN/8, x4, x1, x2)

inst_92739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00007ffffffff; valaddr_reg:x3; val_offset:278217*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278217*0 + 3*579*FLEN/8, x4, x1, x2)

inst_92740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0000fffffffff; valaddr_reg:x3; val_offset:278220*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278220*0 + 3*580*FLEN/8, x4, x1, x2)

inst_92741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0001fffffffff; valaddr_reg:x3; val_offset:278223*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278223*0 + 3*581*FLEN/8, x4, x1, x2)

inst_92742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0003fffffffff; valaddr_reg:x3; val_offset:278226*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278226*0 + 3*582*FLEN/8, x4, x1, x2)

inst_92743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0007fffffffff; valaddr_reg:x3; val_offset:278229*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278229*0 + 3*583*FLEN/8, x4, x1, x2)

inst_92744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e000ffffffffff; valaddr_reg:x3; val_offset:278232*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278232*0 + 3*584*FLEN/8, x4, x1, x2)

inst_92745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e001ffffffffff; valaddr_reg:x3; val_offset:278235*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278235*0 + 3*585*FLEN/8, x4, x1, x2)

inst_92746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e003ffffffffff; valaddr_reg:x3; val_offset:278238*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278238*0 + 3*586*FLEN/8, x4, x1, x2)

inst_92747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e007ffffffffff; valaddr_reg:x3; val_offset:278241*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278241*0 + 3*587*FLEN/8, x4, x1, x2)

inst_92748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e00fffffffffff; valaddr_reg:x3; val_offset:278244*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278244*0 + 3*588*FLEN/8, x4, x1, x2)

inst_92749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e01fffffffffff; valaddr_reg:x3; val_offset:278247*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278247*0 + 3*589*FLEN/8, x4, x1, x2)

inst_92750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e03fffffffffff; valaddr_reg:x3; val_offset:278250*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278250*0 + 3*590*FLEN/8, x4, x1, x2)

inst_92751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e07fffffffffff; valaddr_reg:x3; val_offset:278253*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278253*0 + 3*591*FLEN/8, x4, x1, x2)

inst_92752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e0ffffffffffff; valaddr_reg:x3; val_offset:278256*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278256*0 + 3*592*FLEN/8, x4, x1, x2)

inst_92753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e1ffffffffffff; valaddr_reg:x3; val_offset:278259*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278259*0 + 3*593*FLEN/8, x4, x1, x2)

inst_92754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e3ffffffffffff; valaddr_reg:x3; val_offset:278262*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278262*0 + 3*594*FLEN/8, x4, x1, x2)

inst_92755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e7ffffffffffff; valaddr_reg:x3; val_offset:278265*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278265*0 + 3*595*FLEN/8, x4, x1, x2)

inst_92756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83e8000000000000; valaddr_reg:x3; val_offset:278268*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278268*0 + 3*596*FLEN/8, x4, x1, x2)

inst_92757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83ec000000000000; valaddr_reg:x3; val_offset:278271*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278271*0 + 3*597*FLEN/8, x4, x1, x2)

inst_92758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83ee000000000000; valaddr_reg:x3; val_offset:278274*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278274*0 + 3*598*FLEN/8, x4, x1, x2)

inst_92759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83ef000000000000; valaddr_reg:x3; val_offset:278277*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278277*0 + 3*599*FLEN/8, x4, x1, x2)

inst_92760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83ef800000000000; valaddr_reg:x3; val_offset:278280*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278280*0 + 3*600*FLEN/8, x4, x1, x2)

inst_92761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efc00000000000; valaddr_reg:x3; val_offset:278283*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278283*0 + 3*601*FLEN/8, x4, x1, x2)

inst_92762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efe00000000000; valaddr_reg:x3; val_offset:278286*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278286*0 + 3*602*FLEN/8, x4, x1, x2)

inst_92763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83eff00000000000; valaddr_reg:x3; val_offset:278289*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278289*0 + 3*603*FLEN/8, x4, x1, x2)

inst_92764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83eff80000000000; valaddr_reg:x3; val_offset:278292*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278292*0 + 3*604*FLEN/8, x4, x1, x2)

inst_92765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effc0000000000; valaddr_reg:x3; val_offset:278295*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278295*0 + 3*605*FLEN/8, x4, x1, x2)

inst_92766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effe0000000000; valaddr_reg:x3; val_offset:278298*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278298*0 + 3*606*FLEN/8, x4, x1, x2)

inst_92767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efff0000000000; valaddr_reg:x3; val_offset:278301*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278301*0 + 3*607*FLEN/8, x4, x1, x2)

inst_92768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efff8000000000; valaddr_reg:x3; val_offset:278304*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278304*0 + 3*608*FLEN/8, x4, x1, x2)

inst_92769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffc000000000; valaddr_reg:x3; val_offset:278307*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278307*0 + 3*609*FLEN/8, x4, x1, x2)

inst_92770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffe000000000; valaddr_reg:x3; val_offset:278310*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278310*0 + 3*610*FLEN/8, x4, x1, x2)

inst_92771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effff000000000; valaddr_reg:x3; val_offset:278313*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278313*0 + 3*611*FLEN/8, x4, x1, x2)

inst_92772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effff800000000; valaddr_reg:x3; val_offset:278316*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278316*0 + 3*612*FLEN/8, x4, x1, x2)

inst_92773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffc00000000; valaddr_reg:x3; val_offset:278319*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278319*0 + 3*613*FLEN/8, x4, x1, x2)

inst_92774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffe00000000; valaddr_reg:x3; val_offset:278322*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278322*0 + 3*614*FLEN/8, x4, x1, x2)

inst_92775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffff00000000; valaddr_reg:x3; val_offset:278325*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278325*0 + 3*615*FLEN/8, x4, x1, x2)

inst_92776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffff80000000; valaddr_reg:x3; val_offset:278328*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278328*0 + 3*616*FLEN/8, x4, x1, x2)

inst_92777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffc0000000; valaddr_reg:x3; val_offset:278331*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278331*0 + 3*617*FLEN/8, x4, x1, x2)

inst_92778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffe0000000; valaddr_reg:x3; val_offset:278334*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278334*0 + 3*618*FLEN/8, x4, x1, x2)

inst_92779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffff0000000; valaddr_reg:x3; val_offset:278337*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278337*0 + 3*619*FLEN/8, x4, x1, x2)

inst_92780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffff8000000; valaddr_reg:x3; val_offset:278340*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278340*0 + 3*620*FLEN/8, x4, x1, x2)

inst_92781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffc000000; valaddr_reg:x3; val_offset:278343*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278343*0 + 3*621*FLEN/8, x4, x1, x2)

inst_92782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffe000000; valaddr_reg:x3; val_offset:278346*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278346*0 + 3*622*FLEN/8, x4, x1, x2)

inst_92783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffff000000; valaddr_reg:x3; val_offset:278349*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278349*0 + 3*623*FLEN/8, x4, x1, x2)

inst_92784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffff800000; valaddr_reg:x3; val_offset:278352*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278352*0 + 3*624*FLEN/8, x4, x1, x2)

inst_92785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffc00000; valaddr_reg:x3; val_offset:278355*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278355*0 + 3*625*FLEN/8, x4, x1, x2)

inst_92786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffe00000; valaddr_reg:x3; val_offset:278358*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278358*0 + 3*626*FLEN/8, x4, x1, x2)

inst_92787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffff00000; valaddr_reg:x3; val_offset:278361*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278361*0 + 3*627*FLEN/8, x4, x1, x2)

inst_92788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffff80000; valaddr_reg:x3; val_offset:278364*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278364*0 + 3*628*FLEN/8, x4, x1, x2)

inst_92789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffc0000; valaddr_reg:x3; val_offset:278367*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278367*0 + 3*629*FLEN/8, x4, x1, x2)

inst_92790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffe0000; valaddr_reg:x3; val_offset:278370*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278370*0 + 3*630*FLEN/8, x4, x1, x2)

inst_92791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffff0000; valaddr_reg:x3; val_offset:278373*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278373*0 + 3*631*FLEN/8, x4, x1, x2)

inst_92792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffff8000; valaddr_reg:x3; val_offset:278376*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278376*0 + 3*632*FLEN/8, x4, x1, x2)

inst_92793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffffc000; valaddr_reg:x3; val_offset:278379*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278379*0 + 3*633*FLEN/8, x4, x1, x2)

inst_92794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffffe000; valaddr_reg:x3; val_offset:278382*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278382*0 + 3*634*FLEN/8, x4, x1, x2)

inst_92795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffff000; valaddr_reg:x3; val_offset:278385*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278385*0 + 3*635*FLEN/8, x4, x1, x2)

inst_92796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffff800; valaddr_reg:x3; val_offset:278388*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278388*0 + 3*636*FLEN/8, x4, x1, x2)

inst_92797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffffc00; valaddr_reg:x3; val_offset:278391*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278391*0 + 3*637*FLEN/8, x4, x1, x2)

inst_92798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffffe00; valaddr_reg:x3; val_offset:278394*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278394*0 + 3*638*FLEN/8, x4, x1, x2)

inst_92799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffffff00; valaddr_reg:x3; val_offset:278397*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278397*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_92800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffffff80; valaddr_reg:x3; val_offset:278400*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278400*0 + 3*640*FLEN/8, x4, x1, x2)

inst_92801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffffffc0; valaddr_reg:x3; val_offset:278403*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278403*0 + 3*641*FLEN/8, x4, x1, x2)

inst_92802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffffffe0; valaddr_reg:x3; val_offset:278406*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278406*0 + 3*642*FLEN/8, x4, x1, x2)

inst_92803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffffff0; valaddr_reg:x3; val_offset:278409*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278409*0 + 3*643*FLEN/8, x4, x1, x2)

inst_92804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffffff8; valaddr_reg:x3; val_offset:278412*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278412*0 + 3*644*FLEN/8, x4, x1, x2)

inst_92805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffffffc; valaddr_reg:x3; val_offset:278415*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278415*0 + 3*645*FLEN/8, x4, x1, x2)

inst_92806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83effffffffffffe; valaddr_reg:x3; val_offset:278418*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278418*0 + 3*646*FLEN/8, x4, x1, x2)

inst_92807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd3cddac1f300f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad3cddac1f300f; op2val:0x8000;
op3val:0x83efffffffffffff; valaddr_reg:x3; val_offset:278421*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278421*0 + 3*647*FLEN/8, x4, x1, x2)

inst_92808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:278424*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278424*0 + 3*648*FLEN/8, x4, x1, x2)

inst_92809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:278427*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278427*0 + 3*649*FLEN/8, x4, x1, x2)

inst_92810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:278430*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278430*0 + 3*650*FLEN/8, x4, x1, x2)

inst_92811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:278433*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278433*0 + 3*651*FLEN/8, x4, x1, x2)

inst_92812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:278436*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278436*0 + 3*652*FLEN/8, x4, x1, x2)

inst_92813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:278439*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278439*0 + 3*653*FLEN/8, x4, x1, x2)

inst_92814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:278442*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278442*0 + 3*654*FLEN/8, x4, x1, x2)

inst_92815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:278445*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278445*0 + 3*655*FLEN/8, x4, x1, x2)

inst_92816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:278448*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278448*0 + 3*656*FLEN/8, x4, x1, x2)

inst_92817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:278451*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278451*0 + 3*657*FLEN/8, x4, x1, x2)

inst_92818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:278454*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278454*0 + 3*658*FLEN/8, x4, x1, x2)

inst_92819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:278457*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278457*0 + 3*659*FLEN/8, x4, x1, x2)

inst_92820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:278460*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278460*0 + 3*660*FLEN/8, x4, x1, x2)

inst_92821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:278463*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278463*0 + 3*661*FLEN/8, x4, x1, x2)

inst_92822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:278466*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278466*0 + 3*662*FLEN/8, x4, x1, x2)

inst_92823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:278469*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278469*0 + 3*663*FLEN/8, x4, x1, x2)

inst_92824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:278472*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278472*0 + 3*664*FLEN/8, x4, x1, x2)

inst_92825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:278475*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278475*0 + 3*665*FLEN/8, x4, x1, x2)

inst_92826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:278478*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278478*0 + 3*666*FLEN/8, x4, x1, x2)

inst_92827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:278481*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278481*0 + 3*667*FLEN/8, x4, x1, x2)

inst_92828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:278484*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278484*0 + 3*668*FLEN/8, x4, x1, x2)

inst_92829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:278487*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278487*0 + 3*669*FLEN/8, x4, x1, x2)

inst_92830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000000000; valaddr_reg:x3; val_offset:278490*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278490*0 + 3*670*FLEN/8, x4, x1, x2)

inst_92831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000000001; valaddr_reg:x3; val_offset:278493*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278493*0 + 3*671*FLEN/8, x4, x1, x2)

inst_92832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000000003; valaddr_reg:x3; val_offset:278496*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278496*0 + 3*672*FLEN/8, x4, x1, x2)

inst_92833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000000007; valaddr_reg:x3; val_offset:278499*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278499*0 + 3*673*FLEN/8, x4, x1, x2)

inst_92834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000000000f; valaddr_reg:x3; val_offset:278502*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278502*0 + 3*674*FLEN/8, x4, x1, x2)

inst_92835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000000001f; valaddr_reg:x3; val_offset:278505*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278505*0 + 3*675*FLEN/8, x4, x1, x2)

inst_92836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000000003f; valaddr_reg:x3; val_offset:278508*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278508*0 + 3*676*FLEN/8, x4, x1, x2)

inst_92837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000000007f; valaddr_reg:x3; val_offset:278511*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278511*0 + 3*677*FLEN/8, x4, x1, x2)

inst_92838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000000000ff; valaddr_reg:x3; val_offset:278514*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278514*0 + 3*678*FLEN/8, x4, x1, x2)

inst_92839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000000001ff; valaddr_reg:x3; val_offset:278517*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278517*0 + 3*679*FLEN/8, x4, x1, x2)

inst_92840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000000003ff; valaddr_reg:x3; val_offset:278520*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278520*0 + 3*680*FLEN/8, x4, x1, x2)

inst_92841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000000007ff; valaddr_reg:x3; val_offset:278523*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278523*0 + 3*681*FLEN/8, x4, x1, x2)

inst_92842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000000fff; valaddr_reg:x3; val_offset:278526*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278526*0 + 3*682*FLEN/8, x4, x1, x2)

inst_92843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000001fff; valaddr_reg:x3; val_offset:278529*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278529*0 + 3*683*FLEN/8, x4, x1, x2)

inst_92844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000003fff; valaddr_reg:x3; val_offset:278532*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278532*0 + 3*684*FLEN/8, x4, x1, x2)

inst_92845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000007fff; valaddr_reg:x3; val_offset:278535*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278535*0 + 3*685*FLEN/8, x4, x1, x2)

inst_92846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000000ffff; valaddr_reg:x3; val_offset:278538*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278538*0 + 3*686*FLEN/8, x4, x1, x2)

inst_92847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000001ffff; valaddr_reg:x3; val_offset:278541*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278541*0 + 3*687*FLEN/8, x4, x1, x2)

inst_92848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000003ffff; valaddr_reg:x3; val_offset:278544*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278544*0 + 3*688*FLEN/8, x4, x1, x2)

inst_92849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000007ffff; valaddr_reg:x3; val_offset:278547*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278547*0 + 3*689*FLEN/8, x4, x1, x2)

inst_92850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000000fffff; valaddr_reg:x3; val_offset:278550*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278550*0 + 3*690*FLEN/8, x4, x1, x2)

inst_92851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000001fffff; valaddr_reg:x3; val_offset:278553*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278553*0 + 3*691*FLEN/8, x4, x1, x2)

inst_92852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000003fffff; valaddr_reg:x3; val_offset:278556*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278556*0 + 3*692*FLEN/8, x4, x1, x2)

inst_92853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000007fffff; valaddr_reg:x3; val_offset:278559*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278559*0 + 3*693*FLEN/8, x4, x1, x2)

inst_92854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000000ffffff; valaddr_reg:x3; val_offset:278562*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278562*0 + 3*694*FLEN/8, x4, x1, x2)

inst_92855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000001ffffff; valaddr_reg:x3; val_offset:278565*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278565*0 + 3*695*FLEN/8, x4, x1, x2)

inst_92856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000003ffffff; valaddr_reg:x3; val_offset:278568*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278568*0 + 3*696*FLEN/8, x4, x1, x2)

inst_92857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000007ffffff; valaddr_reg:x3; val_offset:278571*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278571*0 + 3*697*FLEN/8, x4, x1, x2)

inst_92858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000000fffffff; valaddr_reg:x3; val_offset:278574*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278574*0 + 3*698*FLEN/8, x4, x1, x2)

inst_92859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000001fffffff; valaddr_reg:x3; val_offset:278577*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278577*0 + 3*699*FLEN/8, x4, x1, x2)

inst_92860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000003fffffff; valaddr_reg:x3; val_offset:278580*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278580*0 + 3*700*FLEN/8, x4, x1, x2)

inst_92861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000007fffffff; valaddr_reg:x3; val_offset:278583*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278583*0 + 3*701*FLEN/8, x4, x1, x2)

inst_92862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900000ffffffff; valaddr_reg:x3; val_offset:278586*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278586*0 + 3*702*FLEN/8, x4, x1, x2)

inst_92863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900001ffffffff; valaddr_reg:x3; val_offset:278589*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278589*0 + 3*703*FLEN/8, x4, x1, x2)

inst_92864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900003ffffffff; valaddr_reg:x3; val_offset:278592*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278592*0 + 3*704*FLEN/8, x4, x1, x2)

inst_92865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900007ffffffff; valaddr_reg:x3; val_offset:278595*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278595*0 + 3*705*FLEN/8, x4, x1, x2)

inst_92866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290000fffffffff; valaddr_reg:x3; val_offset:278598*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278598*0 + 3*706*FLEN/8, x4, x1, x2)

inst_92867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290001fffffffff; valaddr_reg:x3; val_offset:278601*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278601*0 + 3*707*FLEN/8, x4, x1, x2)

inst_92868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290003fffffffff; valaddr_reg:x3; val_offset:278604*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278604*0 + 3*708*FLEN/8, x4, x1, x2)

inst_92869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290007fffffffff; valaddr_reg:x3; val_offset:278607*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278607*0 + 3*709*FLEN/8, x4, x1, x2)

inst_92870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829000ffffffffff; valaddr_reg:x3; val_offset:278610*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278610*0 + 3*710*FLEN/8, x4, x1, x2)

inst_92871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829001ffffffffff; valaddr_reg:x3; val_offset:278613*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278613*0 + 3*711*FLEN/8, x4, x1, x2)

inst_92872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829003ffffffffff; valaddr_reg:x3; val_offset:278616*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278616*0 + 3*712*FLEN/8, x4, x1, x2)

inst_92873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829007ffffffffff; valaddr_reg:x3; val_offset:278619*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278619*0 + 3*713*FLEN/8, x4, x1, x2)

inst_92874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82900fffffffffff; valaddr_reg:x3; val_offset:278622*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278622*0 + 3*714*FLEN/8, x4, x1, x2)

inst_92875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82901fffffffffff; valaddr_reg:x3; val_offset:278625*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278625*0 + 3*715*FLEN/8, x4, x1, x2)

inst_92876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82903fffffffffff; valaddr_reg:x3; val_offset:278628*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278628*0 + 3*716*FLEN/8, x4, x1, x2)

inst_92877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x82907fffffffffff; valaddr_reg:x3; val_offset:278631*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278631*0 + 3*717*FLEN/8, x4, x1, x2)

inst_92878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8290ffffffffffff; valaddr_reg:x3; val_offset:278634*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278634*0 + 3*718*FLEN/8, x4, x1, x2)

inst_92879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8291ffffffffffff; valaddr_reg:x3; val_offset:278637*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278637*0 + 3*719*FLEN/8, x4, x1, x2)

inst_92880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8293ffffffffffff; valaddr_reg:x3; val_offset:278640*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278640*0 + 3*720*FLEN/8, x4, x1, x2)

inst_92881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8297ffffffffffff; valaddr_reg:x3; val_offset:278643*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278643*0 + 3*721*FLEN/8, x4, x1, x2)

inst_92882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x8298000000000000; valaddr_reg:x3; val_offset:278646*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278646*0 + 3*722*FLEN/8, x4, x1, x2)

inst_92883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829c000000000000; valaddr_reg:x3; val_offset:278649*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278649*0 + 3*723*FLEN/8, x4, x1, x2)

inst_92884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829e000000000000; valaddr_reg:x3; val_offset:278652*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278652*0 + 3*724*FLEN/8, x4, x1, x2)

inst_92885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829f000000000000; valaddr_reg:x3; val_offset:278655*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278655*0 + 3*725*FLEN/8, x4, x1, x2)

inst_92886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829f800000000000; valaddr_reg:x3; val_offset:278658*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278658*0 + 3*726*FLEN/8, x4, x1, x2)

inst_92887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fc00000000000; valaddr_reg:x3; val_offset:278661*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278661*0 + 3*727*FLEN/8, x4, x1, x2)

inst_92888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fe00000000000; valaddr_reg:x3; val_offset:278664*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278664*0 + 3*728*FLEN/8, x4, x1, x2)

inst_92889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ff00000000000; valaddr_reg:x3; val_offset:278667*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278667*0 + 3*729*FLEN/8, x4, x1, x2)

inst_92890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ff80000000000; valaddr_reg:x3; val_offset:278670*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278670*0 + 3*730*FLEN/8, x4, x1, x2)

inst_92891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffc0000000000; valaddr_reg:x3; val_offset:278673*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278673*0 + 3*731*FLEN/8, x4, x1, x2)

inst_92892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffe0000000000; valaddr_reg:x3; val_offset:278676*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278676*0 + 3*732*FLEN/8, x4, x1, x2)

inst_92893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fff0000000000; valaddr_reg:x3; val_offset:278679*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278679*0 + 3*733*FLEN/8, x4, x1, x2)

inst_92894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fff8000000000; valaddr_reg:x3; val_offset:278682*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278682*0 + 3*734*FLEN/8, x4, x1, x2)

inst_92895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffc000000000; valaddr_reg:x3; val_offset:278685*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278685*0 + 3*735*FLEN/8, x4, x1, x2)

inst_92896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffe000000000; valaddr_reg:x3; val_offset:278688*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278688*0 + 3*736*FLEN/8, x4, x1, x2)

inst_92897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffff000000000; valaddr_reg:x3; val_offset:278691*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278691*0 + 3*737*FLEN/8, x4, x1, x2)

inst_92898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffff800000000; valaddr_reg:x3; val_offset:278694*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278694*0 + 3*738*FLEN/8, x4, x1, x2)

inst_92899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffc00000000; valaddr_reg:x3; val_offset:278697*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278697*0 + 3*739*FLEN/8, x4, x1, x2)

inst_92900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffe00000000; valaddr_reg:x3; val_offset:278700*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278700*0 + 3*740*FLEN/8, x4, x1, x2)

inst_92901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffff00000000; valaddr_reg:x3; val_offset:278703*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278703*0 + 3*741*FLEN/8, x4, x1, x2)

inst_92902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffff80000000; valaddr_reg:x3; val_offset:278706*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278706*0 + 3*742*FLEN/8, x4, x1, x2)

inst_92903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffc0000000; valaddr_reg:x3; val_offset:278709*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278709*0 + 3*743*FLEN/8, x4, x1, x2)

inst_92904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffe0000000; valaddr_reg:x3; val_offset:278712*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278712*0 + 3*744*FLEN/8, x4, x1, x2)

inst_92905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffff0000000; valaddr_reg:x3; val_offset:278715*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278715*0 + 3*745*FLEN/8, x4, x1, x2)

inst_92906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffff8000000; valaddr_reg:x3; val_offset:278718*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278718*0 + 3*746*FLEN/8, x4, x1, x2)

inst_92907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffc000000; valaddr_reg:x3; val_offset:278721*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278721*0 + 3*747*FLEN/8, x4, x1, x2)

inst_92908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffe000000; valaddr_reg:x3; val_offset:278724*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278724*0 + 3*748*FLEN/8, x4, x1, x2)

inst_92909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffff000000; valaddr_reg:x3; val_offset:278727*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278727*0 + 3*749*FLEN/8, x4, x1, x2)

inst_92910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffff800000; valaddr_reg:x3; val_offset:278730*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278730*0 + 3*750*FLEN/8, x4, x1, x2)

inst_92911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffc00000; valaddr_reg:x3; val_offset:278733*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278733*0 + 3*751*FLEN/8, x4, x1, x2)

inst_92912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffe00000; valaddr_reg:x3; val_offset:278736*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278736*0 + 3*752*FLEN/8, x4, x1, x2)

inst_92913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffff00000; valaddr_reg:x3; val_offset:278739*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278739*0 + 3*753*FLEN/8, x4, x1, x2)

inst_92914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffff80000; valaddr_reg:x3; val_offset:278742*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278742*0 + 3*754*FLEN/8, x4, x1, x2)

inst_92915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffc0000; valaddr_reg:x3; val_offset:278745*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278745*0 + 3*755*FLEN/8, x4, x1, x2)

inst_92916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffe0000; valaddr_reg:x3; val_offset:278748*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278748*0 + 3*756*FLEN/8, x4, x1, x2)

inst_92917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffff0000; valaddr_reg:x3; val_offset:278751*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278751*0 + 3*757*FLEN/8, x4, x1, x2)

inst_92918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffff8000; valaddr_reg:x3; val_offset:278754*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278754*0 + 3*758*FLEN/8, x4, x1, x2)

inst_92919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffffc000; valaddr_reg:x3; val_offset:278757*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278757*0 + 3*759*FLEN/8, x4, x1, x2)

inst_92920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffffe000; valaddr_reg:x3; val_offset:278760*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278760*0 + 3*760*FLEN/8, x4, x1, x2)

inst_92921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffff000; valaddr_reg:x3; val_offset:278763*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278763*0 + 3*761*FLEN/8, x4, x1, x2)

inst_92922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffff800; valaddr_reg:x3; val_offset:278766*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278766*0 + 3*762*FLEN/8, x4, x1, x2)

inst_92923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffffc00; valaddr_reg:x3; val_offset:278769*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278769*0 + 3*763*FLEN/8, x4, x1, x2)

inst_92924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffffe00; valaddr_reg:x3; val_offset:278772*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278772*0 + 3*764*FLEN/8, x4, x1, x2)

inst_92925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffffff00; valaddr_reg:x3; val_offset:278775*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278775*0 + 3*765*FLEN/8, x4, x1, x2)

inst_92926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffffff80; valaddr_reg:x3; val_offset:278778*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278778*0 + 3*766*FLEN/8, x4, x1, x2)

inst_92927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffffffc0; valaddr_reg:x3; val_offset:278781*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278781*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741023232,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741088768,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741121536,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741137920,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741146112,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741150208,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741152256,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153280,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741153792,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154048,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154176,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154240,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154272,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154288,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154296,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154300,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154302,64,FLEN)
NAN_BOXED(6894221590007943602,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154303,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445952,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445953,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445955,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445959,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445967,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445983,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446015,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446079,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446207,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446463,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446975,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528447999,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528450047,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528454143,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528462335,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528478719,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528511487,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528577023,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528708095,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528970239,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195529494527,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195530543103,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195532640255,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195536834559,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195545223167,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195562000383,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6894224339555512040,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189120,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189121,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189123,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189127,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189135,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189151,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189183,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189247,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189375,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189631,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341190143,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341191167,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341193215,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341197311,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341205503,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341221887,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341254655,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341320191,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341451263,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341713407,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219342237695,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219343286271,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219345383423,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219349577727,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219357966335,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219374743551,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219408297983,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219475406847,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219609624575,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219878060031,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041220414930943,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041221488672767,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041223636156415,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041227931123711,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041236521058303,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041253700927487,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041288060665855,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041356780142591,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041494219096063,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041769097003007,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435042318852816895,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435043418364444671,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435045617387700223,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435050015434211327,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435058811527233535,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435076403713277951,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435111588085366783,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435181956829544447,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435322694317899775,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435604169294610431,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9436167119248031743,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874367,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874368,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438418919061716992,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438981869015138304,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439263343991848960,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439404081480204288,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439474450224381952,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439509634596470784,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439527226782515200,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439536022875537408,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439540420922048512,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439542619945304064,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439543719456931840,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544269212745728,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544544090652672,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544681529606144,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544750249082880,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544784608821248,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544801788690432,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544810378625024,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544814673592320,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544816821075968,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544817894817792,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818431688704,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818700124160,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818834341888,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818901450752,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818935005184,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818951782400,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818960171008,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818964365312,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818966462464,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818967511040,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968035328,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968297472,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968428544,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968494080,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968526848,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968543232,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968551424,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968555520,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968557568,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968558592,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559104,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559360,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559488,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559552,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559584,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559600,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559608,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559612,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559614,64,FLEN)
NAN_BOXED(6894226364974819269,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559615,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257792,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257793,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257795,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257799,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257807,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257823,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257855,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257919,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258047,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258303,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258815,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364259839,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364261887,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364265983,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364274175,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364290559,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364323327,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364388863,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364519935,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364782079,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435365306367,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435366354943,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435368452095,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435372646399,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435381035007,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435397812223,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435431366655,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435498475519,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435632693247,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435901128703,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386436437999615,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386437511741439,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386439659225087,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386443954192383,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386452544126975,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386469723996159,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386504083734527,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386572803211263,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386710242164735,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386985120071679,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241387534875885567,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241388634387513343,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241390833410768895,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241395231457279999,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241404027550302207,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241421619736346623,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241456804108435455,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241527172852613119,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241667910340968447,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241949385317679103,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9242512335271100415,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9243638235177943039,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9243638235177943040,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9244764135084785664,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245327085038206976,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245608560014917632,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245749297503272960,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245819666247450624,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245854850619539456,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245872442805583872,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245881238898606080,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245885636945117184,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245887835968372736,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245888935480000512,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889485235814400,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889760113721344,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889897552674816,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245889966272151552,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890000631889920,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890017811759104,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890026401693696,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890030696660992,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890032844144640,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890033917886464,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034454757376,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034723192832,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034857410560,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034924519424,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034958073856,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034974851072,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034983239680,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034987433984,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034989531136,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034990579712,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991104000,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991366144,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991497216,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991562752,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991595520,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991611904,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991620096,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991624192,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991626240,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627264,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627776,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628032,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628160,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628224,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628256,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628272,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628280,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628284,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628286,64,FLEN)
NAN_BOXED(6894228709259825862,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628287,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445184,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445185,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445187,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445191,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445199,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445215,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445247,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445311,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445439,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252445695,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252446207,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252447231,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252449279,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252453375,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252461567,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252477951,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252510719,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252576255,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252707327,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299252969471,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299253493759,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299254542335,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299256639487,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299260833791,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299269222399,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299285999615,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299319554047,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299386662911,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299520880639,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633299789316095,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633300326187007,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633301399928831,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633303547412479,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633307842379775,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633316432314367,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633333612183551,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633367971921919,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633436691398655,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633574130352127,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303633849008259071,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303634398764072959,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303635498275700735,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303637697298956287,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303642095345467391,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303650891438489599,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303668483624534015,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303703667996622847,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303774036740800511,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13303914774229155839,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13304196249205866495,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13304759199159287807,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13305885099066130431,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13305885099066130432,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13307010998972973056,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13307573948926394368,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13307855423903105024,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13307996161391460352,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308066530135638016,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308101714507726848,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308119306693771264,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308128102786793472,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308132500833304576,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308134699856560128,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308135799368187904,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136349124001792,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136624001908736,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136761440862208,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136830160338944,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136864520077312,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136881699946496,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136890289881088,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136894584848384,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136896732332032,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136897806073856,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898342944768,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898611380224,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898745597952,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898812706816,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898846261248,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898863038464,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898871427072,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898875621376,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898877718528,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898878767104,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879291392,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879553536,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879684608,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879750144,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879782912,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879799296,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879807488,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879811584,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879813632,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879814656,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815168,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815424,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815552,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815616,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815648,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815664,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815672,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815676,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815678,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13308136898879815679,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894230934145791813,64,FLEN)
NAN_BOXED(11511627679623959195,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746560,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746561,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746563,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746567,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746575,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746591,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746623,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746687,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746815,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747071,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747583,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751748607,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751750655,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751754751,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751762943,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751779327,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751812095,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751877631,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752008703,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752270847,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752795135,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213753843711,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213755940863,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213760135167,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213768523775,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213785300991,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213818855423,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213885964287,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214020182015,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214288617471,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214825488383,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595215899230207,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595218046713855,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595222341681151,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595230931615743,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595248111484927,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595282471223295,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595351190700031,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595488629653503,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595763507560447,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502596313263374335,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502597412775002111,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502599611798257663,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502604009844768767,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502612805937790975,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502630398123835391,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502665582495924223,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502735951240101887,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502876688728457215,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503158163705167871,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503721113658589183,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431807,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431808,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9505972913472274432,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506535863425695744,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506817338402406400,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506958075890761728,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507028444634939392,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507063629007028224,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507081221193072640,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507090017286094848,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507094415332605952,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507096614355861504,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507097713867489280,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098263623303168,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098538501210112,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098675940163584,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098744659640320,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098779019378688,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098796199247872,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098804789182464,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098809084149760,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098811231633408,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812305375232,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812842246144,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813110681600,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813244899328,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813312008192,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813345562624,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813362339840,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813370728448,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813374922752,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813377019904,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378068480,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378592768,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378854912,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378985984,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379051520,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379084288,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379100672,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379108864,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379112960,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379115008,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116032,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116544,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116800,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116928,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116992,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117024,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117040,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117048,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117052,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117054,64,FLEN)
NAN_BOXED(6894233527347261455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117055,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966144,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966145,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966147,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966151,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966159,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966175,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966207,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966271,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966399,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966655,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576967167,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576968191,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576970239,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576974335,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576982527,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576998911,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577031679,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577097215,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577228287,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577490431,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621578014719,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621579063295,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621581160447,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621585354751,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621593743359,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621610520575,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621644075007,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621711183871,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621845401599,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622113837055,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622650707967,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019623724449791,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019625871933439,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019630166900735,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019638756835327,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019655936704511,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019690296442879,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019759015919615,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019896454873087,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020171332780031,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020721088593919,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408021820600221695,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408024019623477247,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408028417669988351,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408037213763010559,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408054805949054975,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408089990321143807,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408160359065321471,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408301096553676799,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408582571530387455,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9409145521483808767,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651391,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651392,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411397321297494016,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411960271250915328,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412241746227625984,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412382483715981312,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412452852460158976,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412488036832247808,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412505629018292224,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412514425111314432,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412518823157825536,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412521022181081088,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522121692708864,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522671448522752,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522946326429696,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523083765383168,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523152484859904,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523186844598272,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523204024467456,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523212614402048,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523216909369344,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523219056852992,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220130594816,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220667465728,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220935901184,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221070118912,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221137227776,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221170782208,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221187559424,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221195948032,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221200142336,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221202239488,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203288064,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203812352,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204074496,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204205568,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204271104,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204303872,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204320256,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204328448,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204332544,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204334592,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204335616,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336128,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336384,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336512,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336576,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
