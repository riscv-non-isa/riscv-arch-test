
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_52224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:156672*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156672*0 + 3*0*FLEN/8, x4, x1, x2)

inst_52225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:156675*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156675*0 + 3*1*FLEN/8, x4, x1, x2)

inst_52226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:156678*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156678*0 + 3*2*FLEN/8, x4, x1, x2)

inst_52227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:156681*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156681*0 + 3*3*FLEN/8, x4, x1, x2)

inst_52228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:156684*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156684*0 + 3*4*FLEN/8, x4, x1, x2)

inst_52229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:156687*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156687*0 + 3*5*FLEN/8, x4, x1, x2)

inst_52230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:156690*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156690*0 + 3*6*FLEN/8, x4, x1, x2)

inst_52231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:156693*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156693*0 + 3*7*FLEN/8, x4, x1, x2)

inst_52232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:156696*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156696*0 + 3*8*FLEN/8, x4, x1, x2)

inst_52233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:156699*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156699*0 + 3*9*FLEN/8, x4, x1, x2)

inst_52234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:156702*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156702*0 + 3*10*FLEN/8, x4, x1, x2)

inst_52235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:156705*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156705*0 + 3*11*FLEN/8, x4, x1, x2)

inst_52236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:156708*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156708*0 + 3*12*FLEN/8, x4, x1, x2)

inst_52237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:156711*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156711*0 + 3*13*FLEN/8, x4, x1, x2)

inst_52238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:156714*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156714*0 + 3*14*FLEN/8, x4, x1, x2)

inst_52239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:156717*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156717*0 + 3*15*FLEN/8, x4, x1, x2)

inst_52240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:156720*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156720*0 + 3*16*FLEN/8, x4, x1, x2)

inst_52241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:156723*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156723*0 + 3*17*FLEN/8, x4, x1, x2)

inst_52242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:156726*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156726*0 + 3*18*FLEN/8, x4, x1, x2)

inst_52243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:156729*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156729*0 + 3*19*FLEN/8, x4, x1, x2)

inst_52244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:156732*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156732*0 + 3*20*FLEN/8, x4, x1, x2)

inst_52245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:156735*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156735*0 + 3*21*FLEN/8, x4, x1, x2)

inst_52246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:156738*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156738*0 + 3*22*FLEN/8, x4, x1, x2)

inst_52247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:156741*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156741*0 + 3*23*FLEN/8, x4, x1, x2)

inst_52248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:156744*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156744*0 + 3*24*FLEN/8, x4, x1, x2)

inst_52249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:156747*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156747*0 + 3*25*FLEN/8, x4, x1, x2)

inst_52250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:156750*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156750*0 + 3*26*FLEN/8, x4, x1, x2)

inst_52251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:156753*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156753*0 + 3*27*FLEN/8, x4, x1, x2)

inst_52252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:156756*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156756*0 + 3*28*FLEN/8, x4, x1, x2)

inst_52253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:156759*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156759*0 + 3*29*FLEN/8, x4, x1, x2)

inst_52254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:156762*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156762*0 + 3*30*FLEN/8, x4, x1, x2)

inst_52255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:156765*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156765*0 + 3*31*FLEN/8, x4, x1, x2)

inst_52256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:156768*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156768*0 + 3*32*FLEN/8, x4, x1, x2)

inst_52257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:156771*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156771*0 + 3*33*FLEN/8, x4, x1, x2)

inst_52258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:156774*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156774*0 + 3*34*FLEN/8, x4, x1, x2)

inst_52259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:156777*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156777*0 + 3*35*FLEN/8, x4, x1, x2)

inst_52260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:156780*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156780*0 + 3*36*FLEN/8, x4, x1, x2)

inst_52261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:156783*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156783*0 + 3*37*FLEN/8, x4, x1, x2)

inst_52262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:156786*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156786*0 + 3*38*FLEN/8, x4, x1, x2)

inst_52263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:156789*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156789*0 + 3*39*FLEN/8, x4, x1, x2)

inst_52264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:156792*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156792*0 + 3*40*FLEN/8, x4, x1, x2)

inst_52265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:156795*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156795*0 + 3*41*FLEN/8, x4, x1, x2)

inst_52266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:156798*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156798*0 + 3*42*FLEN/8, x4, x1, x2)

inst_52267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:156801*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156801*0 + 3*43*FLEN/8, x4, x1, x2)

inst_52268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:156804*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156804*0 + 3*44*FLEN/8, x4, x1, x2)

inst_52269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:156807*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156807*0 + 3*45*FLEN/8, x4, x1, x2)

inst_52270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:156810*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156810*0 + 3*46*FLEN/8, x4, x1, x2)

inst_52271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x03f383f51f4df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa03f383f51f4df; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:156813*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156813*0 + 3*47*FLEN/8, x4, x1, x2)

inst_52272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:156816*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156816*0 + 3*48*FLEN/8, x4, x1, x2)

inst_52273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:156819*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156819*0 + 3*49*FLEN/8, x4, x1, x2)

inst_52274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:156822*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156822*0 + 3*50*FLEN/8, x4, x1, x2)

inst_52275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:156825*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156825*0 + 3*51*FLEN/8, x4, x1, x2)

inst_52276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:156828*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156828*0 + 3*52*FLEN/8, x4, x1, x2)

inst_52277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:156831*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156831*0 + 3*53*FLEN/8, x4, x1, x2)

inst_52278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:156834*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156834*0 + 3*54*FLEN/8, x4, x1, x2)

inst_52279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:156837*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156837*0 + 3*55*FLEN/8, x4, x1, x2)

inst_52280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:156840*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156840*0 + 3*56*FLEN/8, x4, x1, x2)

inst_52281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:156843*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156843*0 + 3*57*FLEN/8, x4, x1, x2)

inst_52282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:156846*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156846*0 + 3*58*FLEN/8, x4, x1, x2)

inst_52283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:156849*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156849*0 + 3*59*FLEN/8, x4, x1, x2)

inst_52284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:156852*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156852*0 + 3*60*FLEN/8, x4, x1, x2)

inst_52285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:156855*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156855*0 + 3*61*FLEN/8, x4, x1, x2)

inst_52286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:156858*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156858*0 + 3*62*FLEN/8, x4, x1, x2)

inst_52287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:156861*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156861*0 + 3*63*FLEN/8, x4, x1, x2)

inst_52288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:156864*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156864*0 + 3*64*FLEN/8, x4, x1, x2)

inst_52289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:156867*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156867*0 + 3*65*FLEN/8, x4, x1, x2)

inst_52290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:156870*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156870*0 + 3*66*FLEN/8, x4, x1, x2)

inst_52291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:156873*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156873*0 + 3*67*FLEN/8, x4, x1, x2)

inst_52292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:156876*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156876*0 + 3*68*FLEN/8, x4, x1, x2)

inst_52293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:156879*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156879*0 + 3*69*FLEN/8, x4, x1, x2)

inst_52294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000000000; valaddr_reg:x3; val_offset:156882*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156882*0 + 3*70*FLEN/8, x4, x1, x2)

inst_52295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000000001; valaddr_reg:x3; val_offset:156885*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156885*0 + 3*71*FLEN/8, x4, x1, x2)

inst_52296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000000003; valaddr_reg:x3; val_offset:156888*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156888*0 + 3*72*FLEN/8, x4, x1, x2)

inst_52297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000000007; valaddr_reg:x3; val_offset:156891*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156891*0 + 3*73*FLEN/8, x4, x1, x2)

inst_52298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000000000f; valaddr_reg:x3; val_offset:156894*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156894*0 + 3*74*FLEN/8, x4, x1, x2)

inst_52299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000000001f; valaddr_reg:x3; val_offset:156897*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156897*0 + 3*75*FLEN/8, x4, x1, x2)

inst_52300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000000003f; valaddr_reg:x3; val_offset:156900*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156900*0 + 3*76*FLEN/8, x4, x1, x2)

inst_52301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000000007f; valaddr_reg:x3; val_offset:156903*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156903*0 + 3*77*FLEN/8, x4, x1, x2)

inst_52302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000000000ff; valaddr_reg:x3; val_offset:156906*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156906*0 + 3*78*FLEN/8, x4, x1, x2)

inst_52303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000000001ff; valaddr_reg:x3; val_offset:156909*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156909*0 + 3*79*FLEN/8, x4, x1, x2)

inst_52304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000000003ff; valaddr_reg:x3; val_offset:156912*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156912*0 + 3*80*FLEN/8, x4, x1, x2)

inst_52305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000000007ff; valaddr_reg:x3; val_offset:156915*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156915*0 + 3*81*FLEN/8, x4, x1, x2)

inst_52306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000000fff; valaddr_reg:x3; val_offset:156918*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156918*0 + 3*82*FLEN/8, x4, x1, x2)

inst_52307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000001fff; valaddr_reg:x3; val_offset:156921*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156921*0 + 3*83*FLEN/8, x4, x1, x2)

inst_52308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000003fff; valaddr_reg:x3; val_offset:156924*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156924*0 + 3*84*FLEN/8, x4, x1, x2)

inst_52309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000007fff; valaddr_reg:x3; val_offset:156927*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156927*0 + 3*85*FLEN/8, x4, x1, x2)

inst_52310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000000ffff; valaddr_reg:x3; val_offset:156930*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156930*0 + 3*86*FLEN/8, x4, x1, x2)

inst_52311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000001ffff; valaddr_reg:x3; val_offset:156933*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156933*0 + 3*87*FLEN/8, x4, x1, x2)

inst_52312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000003ffff; valaddr_reg:x3; val_offset:156936*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156936*0 + 3*88*FLEN/8, x4, x1, x2)

inst_52313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000007ffff; valaddr_reg:x3; val_offset:156939*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156939*0 + 3*89*FLEN/8, x4, x1, x2)

inst_52314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000000fffff; valaddr_reg:x3; val_offset:156942*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156942*0 + 3*90*FLEN/8, x4, x1, x2)

inst_52315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000001fffff; valaddr_reg:x3; val_offset:156945*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156945*0 + 3*91*FLEN/8, x4, x1, x2)

inst_52316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000003fffff; valaddr_reg:x3; val_offset:156948*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156948*0 + 3*92*FLEN/8, x4, x1, x2)

inst_52317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000007fffff; valaddr_reg:x3; val_offset:156951*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156951*0 + 3*93*FLEN/8, x4, x1, x2)

inst_52318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000000ffffff; valaddr_reg:x3; val_offset:156954*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156954*0 + 3*94*FLEN/8, x4, x1, x2)

inst_52319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000001ffffff; valaddr_reg:x3; val_offset:156957*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156957*0 + 3*95*FLEN/8, x4, x1, x2)

inst_52320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000003ffffff; valaddr_reg:x3; val_offset:156960*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156960*0 + 3*96*FLEN/8, x4, x1, x2)

inst_52321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000007ffffff; valaddr_reg:x3; val_offset:156963*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156963*0 + 3*97*FLEN/8, x4, x1, x2)

inst_52322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000000fffffff; valaddr_reg:x3; val_offset:156966*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156966*0 + 3*98*FLEN/8, x4, x1, x2)

inst_52323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000001fffffff; valaddr_reg:x3; val_offset:156969*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156969*0 + 3*99*FLEN/8, x4, x1, x2)

inst_52324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000003fffffff; valaddr_reg:x3; val_offset:156972*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156972*0 + 3*100*FLEN/8, x4, x1, x2)

inst_52325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000007fffffff; valaddr_reg:x3; val_offset:156975*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156975*0 + 3*101*FLEN/8, x4, x1, x2)

inst_52326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400000ffffffff; valaddr_reg:x3; val_offset:156978*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156978*0 + 3*102*FLEN/8, x4, x1, x2)

inst_52327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400001ffffffff; valaddr_reg:x3; val_offset:156981*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156981*0 + 3*103*FLEN/8, x4, x1, x2)

inst_52328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400003ffffffff; valaddr_reg:x3; val_offset:156984*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156984*0 + 3*104*FLEN/8, x4, x1, x2)

inst_52329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400007ffffffff; valaddr_reg:x3; val_offset:156987*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156987*0 + 3*105*FLEN/8, x4, x1, x2)

inst_52330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140000fffffffff; valaddr_reg:x3; val_offset:156990*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156990*0 + 3*106*FLEN/8, x4, x1, x2)

inst_52331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140001fffffffff; valaddr_reg:x3; val_offset:156993*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156993*0 + 3*107*FLEN/8, x4, x1, x2)

inst_52332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140003fffffffff; valaddr_reg:x3; val_offset:156996*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156996*0 + 3*108*FLEN/8, x4, x1, x2)

inst_52333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140007fffffffff; valaddr_reg:x3; val_offset:156999*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156999*0 + 3*109*FLEN/8, x4, x1, x2)

inst_52334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14000ffffffffff; valaddr_reg:x3; val_offset:157002*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157002*0 + 3*110*FLEN/8, x4, x1, x2)

inst_52335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14001ffffffffff; valaddr_reg:x3; val_offset:157005*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157005*0 + 3*111*FLEN/8, x4, x1, x2)

inst_52336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14003ffffffffff; valaddr_reg:x3; val_offset:157008*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157008*0 + 3*112*FLEN/8, x4, x1, x2)

inst_52337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14007ffffffffff; valaddr_reg:x3; val_offset:157011*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157011*0 + 3*113*FLEN/8, x4, x1, x2)

inst_52338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1400fffffffffff; valaddr_reg:x3; val_offset:157014*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157014*0 + 3*114*FLEN/8, x4, x1, x2)

inst_52339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1401fffffffffff; valaddr_reg:x3; val_offset:157017*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157017*0 + 3*115*FLEN/8, x4, x1, x2)

inst_52340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1403fffffffffff; valaddr_reg:x3; val_offset:157020*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157020*0 + 3*116*FLEN/8, x4, x1, x2)

inst_52341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x1407fffffffffff; valaddr_reg:x3; val_offset:157023*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157023*0 + 3*117*FLEN/8, x4, x1, x2)

inst_52342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x140ffffffffffff; valaddr_reg:x3; val_offset:157026*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157026*0 + 3*118*FLEN/8, x4, x1, x2)

inst_52343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x141ffffffffffff; valaddr_reg:x3; val_offset:157029*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157029*0 + 3*119*FLEN/8, x4, x1, x2)

inst_52344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x143ffffffffffff; valaddr_reg:x3; val_offset:157032*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157032*0 + 3*120*FLEN/8, x4, x1, x2)

inst_52345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x147ffffffffffff; valaddr_reg:x3; val_offset:157035*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157035*0 + 3*121*FLEN/8, x4, x1, x2)

inst_52346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x148000000000000; valaddr_reg:x3; val_offset:157038*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157038*0 + 3*122*FLEN/8, x4, x1, x2)

inst_52347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14c000000000000; valaddr_reg:x3; val_offset:157041*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157041*0 + 3*123*FLEN/8, x4, x1, x2)

inst_52348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14e000000000000; valaddr_reg:x3; val_offset:157044*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157044*0 + 3*124*FLEN/8, x4, x1, x2)

inst_52349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14f000000000000; valaddr_reg:x3; val_offset:157047*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157047*0 + 3*125*FLEN/8, x4, x1, x2)

inst_52350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14f800000000000; valaddr_reg:x3; val_offset:157050*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157050*0 + 3*126*FLEN/8, x4, x1, x2)

inst_52351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fc00000000000; valaddr_reg:x3; val_offset:157053*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157053*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_52352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fe00000000000; valaddr_reg:x3; val_offset:157056*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157056*0 + 3*128*FLEN/8, x4, x1, x2)

inst_52353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ff00000000000; valaddr_reg:x3; val_offset:157059*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157059*0 + 3*129*FLEN/8, x4, x1, x2)

inst_52354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ff80000000000; valaddr_reg:x3; val_offset:157062*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157062*0 + 3*130*FLEN/8, x4, x1, x2)

inst_52355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffc0000000000; valaddr_reg:x3; val_offset:157065*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157065*0 + 3*131*FLEN/8, x4, x1, x2)

inst_52356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffe0000000000; valaddr_reg:x3; val_offset:157068*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157068*0 + 3*132*FLEN/8, x4, x1, x2)

inst_52357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fff0000000000; valaddr_reg:x3; val_offset:157071*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157071*0 + 3*133*FLEN/8, x4, x1, x2)

inst_52358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fff8000000000; valaddr_reg:x3; val_offset:157074*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157074*0 + 3*134*FLEN/8, x4, x1, x2)

inst_52359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffc000000000; valaddr_reg:x3; val_offset:157077*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157077*0 + 3*135*FLEN/8, x4, x1, x2)

inst_52360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffe000000000; valaddr_reg:x3; val_offset:157080*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157080*0 + 3*136*FLEN/8, x4, x1, x2)

inst_52361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffff000000000; valaddr_reg:x3; val_offset:157083*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157083*0 + 3*137*FLEN/8, x4, x1, x2)

inst_52362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffff800000000; valaddr_reg:x3; val_offset:157086*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157086*0 + 3*138*FLEN/8, x4, x1, x2)

inst_52363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffc00000000; valaddr_reg:x3; val_offset:157089*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157089*0 + 3*139*FLEN/8, x4, x1, x2)

inst_52364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffe00000000; valaddr_reg:x3; val_offset:157092*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157092*0 + 3*140*FLEN/8, x4, x1, x2)

inst_52365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffff00000000; valaddr_reg:x3; val_offset:157095*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157095*0 + 3*141*FLEN/8, x4, x1, x2)

inst_52366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffff80000000; valaddr_reg:x3; val_offset:157098*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157098*0 + 3*142*FLEN/8, x4, x1, x2)

inst_52367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffc0000000; valaddr_reg:x3; val_offset:157101*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157101*0 + 3*143*FLEN/8, x4, x1, x2)

inst_52368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffe0000000; valaddr_reg:x3; val_offset:157104*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157104*0 + 3*144*FLEN/8, x4, x1, x2)

inst_52369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffff0000000; valaddr_reg:x3; val_offset:157107*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157107*0 + 3*145*FLEN/8, x4, x1, x2)

inst_52370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffff8000000; valaddr_reg:x3; val_offset:157110*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157110*0 + 3*146*FLEN/8, x4, x1, x2)

inst_52371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffc000000; valaddr_reg:x3; val_offset:157113*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157113*0 + 3*147*FLEN/8, x4, x1, x2)

inst_52372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffe000000; valaddr_reg:x3; val_offset:157116*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157116*0 + 3*148*FLEN/8, x4, x1, x2)

inst_52373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffff000000; valaddr_reg:x3; val_offset:157119*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157119*0 + 3*149*FLEN/8, x4, x1, x2)

inst_52374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffff800000; valaddr_reg:x3; val_offset:157122*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157122*0 + 3*150*FLEN/8, x4, x1, x2)

inst_52375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffc00000; valaddr_reg:x3; val_offset:157125*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157125*0 + 3*151*FLEN/8, x4, x1, x2)

inst_52376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffe00000; valaddr_reg:x3; val_offset:157128*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157128*0 + 3*152*FLEN/8, x4, x1, x2)

inst_52377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffff00000; valaddr_reg:x3; val_offset:157131*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157131*0 + 3*153*FLEN/8, x4, x1, x2)

inst_52378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffff80000; valaddr_reg:x3; val_offset:157134*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157134*0 + 3*154*FLEN/8, x4, x1, x2)

inst_52379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffc0000; valaddr_reg:x3; val_offset:157137*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157137*0 + 3*155*FLEN/8, x4, x1, x2)

inst_52380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffe0000; valaddr_reg:x3; val_offset:157140*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157140*0 + 3*156*FLEN/8, x4, x1, x2)

inst_52381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffff0000; valaddr_reg:x3; val_offset:157143*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157143*0 + 3*157*FLEN/8, x4, x1, x2)

inst_52382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffff8000; valaddr_reg:x3; val_offset:157146*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157146*0 + 3*158*FLEN/8, x4, x1, x2)

inst_52383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffffc000; valaddr_reg:x3; val_offset:157149*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157149*0 + 3*159*FLEN/8, x4, x1, x2)

inst_52384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffffe000; valaddr_reg:x3; val_offset:157152*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157152*0 + 3*160*FLEN/8, x4, x1, x2)

inst_52385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffff000; valaddr_reg:x3; val_offset:157155*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157155*0 + 3*161*FLEN/8, x4, x1, x2)

inst_52386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffff800; valaddr_reg:x3; val_offset:157158*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157158*0 + 3*162*FLEN/8, x4, x1, x2)

inst_52387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffffc00; valaddr_reg:x3; val_offset:157161*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157161*0 + 3*163*FLEN/8, x4, x1, x2)

inst_52388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffffe00; valaddr_reg:x3; val_offset:157164*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157164*0 + 3*164*FLEN/8, x4, x1, x2)

inst_52389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffffff00; valaddr_reg:x3; val_offset:157167*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157167*0 + 3*165*FLEN/8, x4, x1, x2)

inst_52390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffffff80; valaddr_reg:x3; val_offset:157170*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157170*0 + 3*166*FLEN/8, x4, x1, x2)

inst_52391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffffffc0; valaddr_reg:x3; val_offset:157173*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157173*0 + 3*167*FLEN/8, x4, x1, x2)

inst_52392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffffffe0; valaddr_reg:x3; val_offset:157176*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157176*0 + 3*168*FLEN/8, x4, x1, x2)

inst_52393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffffff0; valaddr_reg:x3; val_offset:157179*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157179*0 + 3*169*FLEN/8, x4, x1, x2)

inst_52394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffffff8; valaddr_reg:x3; val_offset:157182*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157182*0 + 3*170*FLEN/8, x4, x1, x2)

inst_52395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffffffc; valaddr_reg:x3; val_offset:157185*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157185*0 + 3*171*FLEN/8, x4, x1, x2)

inst_52396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14ffffffffffffe; valaddr_reg:x3; val_offset:157188*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157188*0 + 3*172*FLEN/8, x4, x1, x2)

inst_52397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05498242e7a34 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05498242e7a34; op2val:0x0;
op3val:0x14fffffffffffff; valaddr_reg:x3; val_offset:157191*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157191*0 + 3*173*FLEN/8, x4, x1, x2)

inst_52398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:157194*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157194*0 + 3*174*FLEN/8, x4, x1, x2)

inst_52399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:157197*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157197*0 + 3*175*FLEN/8, x4, x1, x2)

inst_52400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:157200*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157200*0 + 3*176*FLEN/8, x4, x1, x2)

inst_52401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:157203*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157203*0 + 3*177*FLEN/8, x4, x1, x2)

inst_52402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:157206*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157206*0 + 3*178*FLEN/8, x4, x1, x2)

inst_52403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:157209*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157209*0 + 3*179*FLEN/8, x4, x1, x2)

inst_52404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:157212*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157212*0 + 3*180*FLEN/8, x4, x1, x2)

inst_52405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:157215*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157215*0 + 3*181*FLEN/8, x4, x1, x2)

inst_52406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:157218*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157218*0 + 3*182*FLEN/8, x4, x1, x2)

inst_52407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:157221*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157221*0 + 3*183*FLEN/8, x4, x1, x2)

inst_52408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:157224*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157224*0 + 3*184*FLEN/8, x4, x1, x2)

inst_52409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:157227*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157227*0 + 3*185*FLEN/8, x4, x1, x2)

inst_52410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:157230*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157230*0 + 3*186*FLEN/8, x4, x1, x2)

inst_52411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:157233*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157233*0 + 3*187*FLEN/8, x4, x1, x2)

inst_52412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:157236*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157236*0 + 3*188*FLEN/8, x4, x1, x2)

inst_52413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:157239*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157239*0 + 3*189*FLEN/8, x4, x1, x2)

inst_52414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:157242*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157242*0 + 3*190*FLEN/8, x4, x1, x2)

inst_52415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:157245*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157245*0 + 3*191*FLEN/8, x4, x1, x2)

inst_52416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:157248*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157248*0 + 3*192*FLEN/8, x4, x1, x2)

inst_52417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:157251*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157251*0 + 3*193*FLEN/8, x4, x1, x2)

inst_52418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:157254*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157254*0 + 3*194*FLEN/8, x4, x1, x2)

inst_52419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:157257*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157257*0 + 3*195*FLEN/8, x4, x1, x2)

inst_52420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000000000; valaddr_reg:x3; val_offset:157260*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157260*0 + 3*196*FLEN/8, x4, x1, x2)

inst_52421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000000001; valaddr_reg:x3; val_offset:157263*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157263*0 + 3*197*FLEN/8, x4, x1, x2)

inst_52422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000000003; valaddr_reg:x3; val_offset:157266*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157266*0 + 3*198*FLEN/8, x4, x1, x2)

inst_52423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000000007; valaddr_reg:x3; val_offset:157269*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157269*0 + 3*199*FLEN/8, x4, x1, x2)

inst_52424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000000000f; valaddr_reg:x3; val_offset:157272*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157272*0 + 3*200*FLEN/8, x4, x1, x2)

inst_52425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000000001f; valaddr_reg:x3; val_offset:157275*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157275*0 + 3*201*FLEN/8, x4, x1, x2)

inst_52426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000000003f; valaddr_reg:x3; val_offset:157278*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157278*0 + 3*202*FLEN/8, x4, x1, x2)

inst_52427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000000007f; valaddr_reg:x3; val_offset:157281*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157281*0 + 3*203*FLEN/8, x4, x1, x2)

inst_52428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000000000ff; valaddr_reg:x3; val_offset:157284*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157284*0 + 3*204*FLEN/8, x4, x1, x2)

inst_52429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000000001ff; valaddr_reg:x3; val_offset:157287*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157287*0 + 3*205*FLEN/8, x4, x1, x2)

inst_52430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000000003ff; valaddr_reg:x3; val_offset:157290*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157290*0 + 3*206*FLEN/8, x4, x1, x2)

inst_52431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000000007ff; valaddr_reg:x3; val_offset:157293*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157293*0 + 3*207*FLEN/8, x4, x1, x2)

inst_52432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000000fff; valaddr_reg:x3; val_offset:157296*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157296*0 + 3*208*FLEN/8, x4, x1, x2)

inst_52433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000001fff; valaddr_reg:x3; val_offset:157299*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157299*0 + 3*209*FLEN/8, x4, x1, x2)

inst_52434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000003fff; valaddr_reg:x3; val_offset:157302*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157302*0 + 3*210*FLEN/8, x4, x1, x2)

inst_52435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000007fff; valaddr_reg:x3; val_offset:157305*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157305*0 + 3*211*FLEN/8, x4, x1, x2)

inst_52436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000000ffff; valaddr_reg:x3; val_offset:157308*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157308*0 + 3*212*FLEN/8, x4, x1, x2)

inst_52437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000001ffff; valaddr_reg:x3; val_offset:157311*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157311*0 + 3*213*FLEN/8, x4, x1, x2)

inst_52438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000003ffff; valaddr_reg:x3; val_offset:157314*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157314*0 + 3*214*FLEN/8, x4, x1, x2)

inst_52439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000007ffff; valaddr_reg:x3; val_offset:157317*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157317*0 + 3*215*FLEN/8, x4, x1, x2)

inst_52440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000000fffff; valaddr_reg:x3; val_offset:157320*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157320*0 + 3*216*FLEN/8, x4, x1, x2)

inst_52441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000001fffff; valaddr_reg:x3; val_offset:157323*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157323*0 + 3*217*FLEN/8, x4, x1, x2)

inst_52442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000003fffff; valaddr_reg:x3; val_offset:157326*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157326*0 + 3*218*FLEN/8, x4, x1, x2)

inst_52443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000007fffff; valaddr_reg:x3; val_offset:157329*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157329*0 + 3*219*FLEN/8, x4, x1, x2)

inst_52444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000000ffffff; valaddr_reg:x3; val_offset:157332*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157332*0 + 3*220*FLEN/8, x4, x1, x2)

inst_52445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000001ffffff; valaddr_reg:x3; val_offset:157335*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157335*0 + 3*221*FLEN/8, x4, x1, x2)

inst_52446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000003ffffff; valaddr_reg:x3; val_offset:157338*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157338*0 + 3*222*FLEN/8, x4, x1, x2)

inst_52447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000007ffffff; valaddr_reg:x3; val_offset:157341*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157341*0 + 3*223*FLEN/8, x4, x1, x2)

inst_52448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000000fffffff; valaddr_reg:x3; val_offset:157344*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157344*0 + 3*224*FLEN/8, x4, x1, x2)

inst_52449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000001fffffff; valaddr_reg:x3; val_offset:157347*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157347*0 + 3*225*FLEN/8, x4, x1, x2)

inst_52450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000003fffffff; valaddr_reg:x3; val_offset:157350*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157350*0 + 3*226*FLEN/8, x4, x1, x2)

inst_52451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000007fffffff; valaddr_reg:x3; val_offset:157353*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157353*0 + 3*227*FLEN/8, x4, x1, x2)

inst_52452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00000ffffffff; valaddr_reg:x3; val_offset:157356*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157356*0 + 3*228*FLEN/8, x4, x1, x2)

inst_52453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00001ffffffff; valaddr_reg:x3; val_offset:157359*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157359*0 + 3*229*FLEN/8, x4, x1, x2)

inst_52454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00003ffffffff; valaddr_reg:x3; val_offset:157362*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157362*0 + 3*230*FLEN/8, x4, x1, x2)

inst_52455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00007ffffffff; valaddr_reg:x3; val_offset:157365*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157365*0 + 3*231*FLEN/8, x4, x1, x2)

inst_52456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0000fffffffff; valaddr_reg:x3; val_offset:157368*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157368*0 + 3*232*FLEN/8, x4, x1, x2)

inst_52457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0001fffffffff; valaddr_reg:x3; val_offset:157371*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157371*0 + 3*233*FLEN/8, x4, x1, x2)

inst_52458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0003fffffffff; valaddr_reg:x3; val_offset:157374*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157374*0 + 3*234*FLEN/8, x4, x1, x2)

inst_52459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0007fffffffff; valaddr_reg:x3; val_offset:157377*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157377*0 + 3*235*FLEN/8, x4, x1, x2)

inst_52460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c000ffffffffff; valaddr_reg:x3; val_offset:157380*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157380*0 + 3*236*FLEN/8, x4, x1, x2)

inst_52461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c001ffffffffff; valaddr_reg:x3; val_offset:157383*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157383*0 + 3*237*FLEN/8, x4, x1, x2)

inst_52462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c003ffffffffff; valaddr_reg:x3; val_offset:157386*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157386*0 + 3*238*FLEN/8, x4, x1, x2)

inst_52463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c007ffffffffff; valaddr_reg:x3; val_offset:157389*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157389*0 + 3*239*FLEN/8, x4, x1, x2)

inst_52464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c00fffffffffff; valaddr_reg:x3; val_offset:157392*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157392*0 + 3*240*FLEN/8, x4, x1, x2)

inst_52465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c01fffffffffff; valaddr_reg:x3; val_offset:157395*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157395*0 + 3*241*FLEN/8, x4, x1, x2)

inst_52466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c03fffffffffff; valaddr_reg:x3; val_offset:157398*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157398*0 + 3*242*FLEN/8, x4, x1, x2)

inst_52467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c07fffffffffff; valaddr_reg:x3; val_offset:157401*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157401*0 + 3*243*FLEN/8, x4, x1, x2)

inst_52468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c0ffffffffffff; valaddr_reg:x3; val_offset:157404*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157404*0 + 3*244*FLEN/8, x4, x1, x2)

inst_52469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c1ffffffffffff; valaddr_reg:x3; val_offset:157407*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157407*0 + 3*245*FLEN/8, x4, x1, x2)

inst_52470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c3ffffffffffff; valaddr_reg:x3; val_offset:157410*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157410*0 + 3*246*FLEN/8, x4, x1, x2)

inst_52471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c7ffffffffffff; valaddr_reg:x3; val_offset:157413*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157413*0 + 3*247*FLEN/8, x4, x1, x2)

inst_52472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82c8000000000000; valaddr_reg:x3; val_offset:157416*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157416*0 + 3*248*FLEN/8, x4, x1, x2)

inst_52473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cc000000000000; valaddr_reg:x3; val_offset:157419*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157419*0 + 3*249*FLEN/8, x4, x1, x2)

inst_52474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82ce000000000000; valaddr_reg:x3; val_offset:157422*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157422*0 + 3*250*FLEN/8, x4, x1, x2)

inst_52475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cf000000000000; valaddr_reg:x3; val_offset:157425*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157425*0 + 3*251*FLEN/8, x4, x1, x2)

inst_52476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cf800000000000; valaddr_reg:x3; val_offset:157428*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157428*0 + 3*252*FLEN/8, x4, x1, x2)

inst_52477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfc00000000000; valaddr_reg:x3; val_offset:157431*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157431*0 + 3*253*FLEN/8, x4, x1, x2)

inst_52478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfe00000000000; valaddr_reg:x3; val_offset:157434*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157434*0 + 3*254*FLEN/8, x4, x1, x2)

inst_52479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cff00000000000; valaddr_reg:x3; val_offset:157437*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157437*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_52480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cff80000000000; valaddr_reg:x3; val_offset:157440*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157440*0 + 3*256*FLEN/8, x4, x1, x2)

inst_52481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffc0000000000; valaddr_reg:x3; val_offset:157443*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157443*0 + 3*257*FLEN/8, x4, x1, x2)

inst_52482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffe0000000000; valaddr_reg:x3; val_offset:157446*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157446*0 + 3*258*FLEN/8, x4, x1, x2)

inst_52483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfff0000000000; valaddr_reg:x3; val_offset:157449*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157449*0 + 3*259*FLEN/8, x4, x1, x2)

inst_52484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfff8000000000; valaddr_reg:x3; val_offset:157452*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157452*0 + 3*260*FLEN/8, x4, x1, x2)

inst_52485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffc000000000; valaddr_reg:x3; val_offset:157455*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157455*0 + 3*261*FLEN/8, x4, x1, x2)

inst_52486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffe000000000; valaddr_reg:x3; val_offset:157458*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157458*0 + 3*262*FLEN/8, x4, x1, x2)

inst_52487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffff000000000; valaddr_reg:x3; val_offset:157461*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157461*0 + 3*263*FLEN/8, x4, x1, x2)

inst_52488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffff800000000; valaddr_reg:x3; val_offset:157464*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157464*0 + 3*264*FLEN/8, x4, x1, x2)

inst_52489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffc00000000; valaddr_reg:x3; val_offset:157467*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157467*0 + 3*265*FLEN/8, x4, x1, x2)

inst_52490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffe00000000; valaddr_reg:x3; val_offset:157470*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157470*0 + 3*266*FLEN/8, x4, x1, x2)

inst_52491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffff00000000; valaddr_reg:x3; val_offset:157473*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157473*0 + 3*267*FLEN/8, x4, x1, x2)

inst_52492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffff80000000; valaddr_reg:x3; val_offset:157476*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157476*0 + 3*268*FLEN/8, x4, x1, x2)

inst_52493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffc0000000; valaddr_reg:x3; val_offset:157479*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157479*0 + 3*269*FLEN/8, x4, x1, x2)

inst_52494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffe0000000; valaddr_reg:x3; val_offset:157482*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157482*0 + 3*270*FLEN/8, x4, x1, x2)

inst_52495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffff0000000; valaddr_reg:x3; val_offset:157485*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157485*0 + 3*271*FLEN/8, x4, x1, x2)

inst_52496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffff8000000; valaddr_reg:x3; val_offset:157488*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157488*0 + 3*272*FLEN/8, x4, x1, x2)

inst_52497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffc000000; valaddr_reg:x3; val_offset:157491*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157491*0 + 3*273*FLEN/8, x4, x1, x2)

inst_52498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffe000000; valaddr_reg:x3; val_offset:157494*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157494*0 + 3*274*FLEN/8, x4, x1, x2)

inst_52499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffff000000; valaddr_reg:x3; val_offset:157497*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157497*0 + 3*275*FLEN/8, x4, x1, x2)

inst_52500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffff800000; valaddr_reg:x3; val_offset:157500*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157500*0 + 3*276*FLEN/8, x4, x1, x2)

inst_52501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffc00000; valaddr_reg:x3; val_offset:157503*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157503*0 + 3*277*FLEN/8, x4, x1, x2)

inst_52502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffe00000; valaddr_reg:x3; val_offset:157506*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157506*0 + 3*278*FLEN/8, x4, x1, x2)

inst_52503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffff00000; valaddr_reg:x3; val_offset:157509*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157509*0 + 3*279*FLEN/8, x4, x1, x2)

inst_52504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffff80000; valaddr_reg:x3; val_offset:157512*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157512*0 + 3*280*FLEN/8, x4, x1, x2)

inst_52505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffc0000; valaddr_reg:x3; val_offset:157515*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157515*0 + 3*281*FLEN/8, x4, x1, x2)

inst_52506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffe0000; valaddr_reg:x3; val_offset:157518*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157518*0 + 3*282*FLEN/8, x4, x1, x2)

inst_52507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffff0000; valaddr_reg:x3; val_offset:157521*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157521*0 + 3*283*FLEN/8, x4, x1, x2)

inst_52508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffff8000; valaddr_reg:x3; val_offset:157524*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157524*0 + 3*284*FLEN/8, x4, x1, x2)

inst_52509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffffc000; valaddr_reg:x3; val_offset:157527*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157527*0 + 3*285*FLEN/8, x4, x1, x2)

inst_52510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffffe000; valaddr_reg:x3; val_offset:157530*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157530*0 + 3*286*FLEN/8, x4, x1, x2)

inst_52511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffff000; valaddr_reg:x3; val_offset:157533*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157533*0 + 3*287*FLEN/8, x4, x1, x2)

inst_52512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffff800; valaddr_reg:x3; val_offset:157536*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157536*0 + 3*288*FLEN/8, x4, x1, x2)

inst_52513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffffc00; valaddr_reg:x3; val_offset:157539*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157539*0 + 3*289*FLEN/8, x4, x1, x2)

inst_52514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffffe00; valaddr_reg:x3; val_offset:157542*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157542*0 + 3*290*FLEN/8, x4, x1, x2)

inst_52515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffffff00; valaddr_reg:x3; val_offset:157545*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157545*0 + 3*291*FLEN/8, x4, x1, x2)

inst_52516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffffff80; valaddr_reg:x3; val_offset:157548*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157548*0 + 3*292*FLEN/8, x4, x1, x2)

inst_52517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffffffc0; valaddr_reg:x3; val_offset:157551*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157551*0 + 3*293*FLEN/8, x4, x1, x2)

inst_52518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffffffe0; valaddr_reg:x3; val_offset:157554*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157554*0 + 3*294*FLEN/8, x4, x1, x2)

inst_52519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffffff0; valaddr_reg:x3; val_offset:157557*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157557*0 + 3*295*FLEN/8, x4, x1, x2)

inst_52520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffffff8; valaddr_reg:x3; val_offset:157560*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157560*0 + 3*296*FLEN/8, x4, x1, x2)

inst_52521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffffffc; valaddr_reg:x3; val_offset:157563*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157563*0 + 3*297*FLEN/8, x4, x1, x2)

inst_52522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cffffffffffffe; valaddr_reg:x3; val_offset:157566*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157566*0 + 3*298*FLEN/8, x4, x1, x2)

inst_52523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x059c938cba700 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa059c938cba700; op2val:0x8000;
op3val:0x82cfffffffffffff; valaddr_reg:x3; val_offset:157569*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157569*0 + 3*299*FLEN/8, x4, x1, x2)

inst_52524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:157572*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157572*0 + 3*300*FLEN/8, x4, x1, x2)

inst_52525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:157575*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157575*0 + 3*301*FLEN/8, x4, x1, x2)

inst_52526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:157578*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157578*0 + 3*302*FLEN/8, x4, x1, x2)

inst_52527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:157581*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157581*0 + 3*303*FLEN/8, x4, x1, x2)

inst_52528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:157584*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157584*0 + 3*304*FLEN/8, x4, x1, x2)

inst_52529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:157587*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157587*0 + 3*305*FLEN/8, x4, x1, x2)

inst_52530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:157590*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157590*0 + 3*306*FLEN/8, x4, x1, x2)

inst_52531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:157593*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157593*0 + 3*307*FLEN/8, x4, x1, x2)

inst_52532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:157596*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157596*0 + 3*308*FLEN/8, x4, x1, x2)

inst_52533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:157599*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157599*0 + 3*309*FLEN/8, x4, x1, x2)

inst_52534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:157602*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157602*0 + 3*310*FLEN/8, x4, x1, x2)

inst_52535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:157605*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157605*0 + 3*311*FLEN/8, x4, x1, x2)

inst_52536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:157608*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157608*0 + 3*312*FLEN/8, x4, x1, x2)

inst_52537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:157611*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157611*0 + 3*313*FLEN/8, x4, x1, x2)

inst_52538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:157614*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157614*0 + 3*314*FLEN/8, x4, x1, x2)

inst_52539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:157617*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157617*0 + 3*315*FLEN/8, x4, x1, x2)

inst_52540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:157620*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157620*0 + 3*316*FLEN/8, x4, x1, x2)

inst_52541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:157623*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157623*0 + 3*317*FLEN/8, x4, x1, x2)

inst_52542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:157626*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157626*0 + 3*318*FLEN/8, x4, x1, x2)

inst_52543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:157629*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157629*0 + 3*319*FLEN/8, x4, x1, x2)

inst_52544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:157632*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157632*0 + 3*320*FLEN/8, x4, x1, x2)

inst_52545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:157635*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157635*0 + 3*321*FLEN/8, x4, x1, x2)

inst_52546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000000000; valaddr_reg:x3; val_offset:157638*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157638*0 + 3*322*FLEN/8, x4, x1, x2)

inst_52547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:157641*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157641*0 + 3*323*FLEN/8, x4, x1, x2)

inst_52548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:157644*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157644*0 + 3*324*FLEN/8, x4, x1, x2)

inst_52549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:157647*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157647*0 + 3*325*FLEN/8, x4, x1, x2)

inst_52550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:157650*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157650*0 + 3*326*FLEN/8, x4, x1, x2)

inst_52551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:157653*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157653*0 + 3*327*FLEN/8, x4, x1, x2)

inst_52552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:157656*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157656*0 + 3*328*FLEN/8, x4, x1, x2)

inst_52553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000000007f; valaddr_reg:x3; val_offset:157659*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157659*0 + 3*329*FLEN/8, x4, x1, x2)

inst_52554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000000000ff; valaddr_reg:x3; val_offset:157662*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157662*0 + 3*330*FLEN/8, x4, x1, x2)

inst_52555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000000001ff; valaddr_reg:x3; val_offset:157665*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157665*0 + 3*331*FLEN/8, x4, x1, x2)

inst_52556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000000003ff; valaddr_reg:x3; val_offset:157668*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157668*0 + 3*332*FLEN/8, x4, x1, x2)

inst_52557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000000007ff; valaddr_reg:x3; val_offset:157671*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157671*0 + 3*333*FLEN/8, x4, x1, x2)

inst_52558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000000fff; valaddr_reg:x3; val_offset:157674*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157674*0 + 3*334*FLEN/8, x4, x1, x2)

inst_52559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000001fff; valaddr_reg:x3; val_offset:157677*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157677*0 + 3*335*FLEN/8, x4, x1, x2)

inst_52560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000003fff; valaddr_reg:x3; val_offset:157680*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157680*0 + 3*336*FLEN/8, x4, x1, x2)

inst_52561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000007fff; valaddr_reg:x3; val_offset:157683*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157683*0 + 3*337*FLEN/8, x4, x1, x2)

inst_52562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000000ffff; valaddr_reg:x3; val_offset:157686*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157686*0 + 3*338*FLEN/8, x4, x1, x2)

inst_52563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000001ffff; valaddr_reg:x3; val_offset:157689*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157689*0 + 3*339*FLEN/8, x4, x1, x2)

inst_52564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000003ffff; valaddr_reg:x3; val_offset:157692*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157692*0 + 3*340*FLEN/8, x4, x1, x2)

inst_52565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000007ffff; valaddr_reg:x3; val_offset:157695*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157695*0 + 3*341*FLEN/8, x4, x1, x2)

inst_52566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000000fffff; valaddr_reg:x3; val_offset:157698*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157698*0 + 3*342*FLEN/8, x4, x1, x2)

inst_52567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000001fffff; valaddr_reg:x3; val_offset:157701*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157701*0 + 3*343*FLEN/8, x4, x1, x2)

inst_52568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000003fffff; valaddr_reg:x3; val_offset:157704*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157704*0 + 3*344*FLEN/8, x4, x1, x2)

inst_52569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000007fffff; valaddr_reg:x3; val_offset:157707*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157707*0 + 3*345*FLEN/8, x4, x1, x2)

inst_52570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000000ffffff; valaddr_reg:x3; val_offset:157710*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157710*0 + 3*346*FLEN/8, x4, x1, x2)

inst_52571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000001ffffff; valaddr_reg:x3; val_offset:157713*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157713*0 + 3*347*FLEN/8, x4, x1, x2)

inst_52572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000003ffffff; valaddr_reg:x3; val_offset:157716*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157716*0 + 3*348*FLEN/8, x4, x1, x2)

inst_52573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000007ffffff; valaddr_reg:x3; val_offset:157719*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157719*0 + 3*349*FLEN/8, x4, x1, x2)

inst_52574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000000fffffff; valaddr_reg:x3; val_offset:157722*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157722*0 + 3*350*FLEN/8, x4, x1, x2)

inst_52575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000001fffffff; valaddr_reg:x3; val_offset:157725*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157725*0 + 3*351*FLEN/8, x4, x1, x2)

inst_52576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000003fffffff; valaddr_reg:x3; val_offset:157728*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157728*0 + 3*352*FLEN/8, x4, x1, x2)

inst_52577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000007fffffff; valaddr_reg:x3; val_offset:157731*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157731*0 + 3*353*FLEN/8, x4, x1, x2)

inst_52578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100000ffffffff; valaddr_reg:x3; val_offset:157734*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157734*0 + 3*354*FLEN/8, x4, x1, x2)

inst_52579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100001ffffffff; valaddr_reg:x3; val_offset:157737*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157737*0 + 3*355*FLEN/8, x4, x1, x2)

inst_52580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100003ffffffff; valaddr_reg:x3; val_offset:157740*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157740*0 + 3*356*FLEN/8, x4, x1, x2)

inst_52581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100007ffffffff; valaddr_reg:x3; val_offset:157743*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157743*0 + 3*357*FLEN/8, x4, x1, x2)

inst_52582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10000fffffffff; valaddr_reg:x3; val_offset:157746*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157746*0 + 3*358*FLEN/8, x4, x1, x2)

inst_52583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10001fffffffff; valaddr_reg:x3; val_offset:157749*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157749*0 + 3*359*FLEN/8, x4, x1, x2)

inst_52584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10003fffffffff; valaddr_reg:x3; val_offset:157752*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157752*0 + 3*360*FLEN/8, x4, x1, x2)

inst_52585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10007fffffffff; valaddr_reg:x3; val_offset:157755*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157755*0 + 3*361*FLEN/8, x4, x1, x2)

inst_52586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1000ffffffffff; valaddr_reg:x3; val_offset:157758*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157758*0 + 3*362*FLEN/8, x4, x1, x2)

inst_52587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1001ffffffffff; valaddr_reg:x3; val_offset:157761*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157761*0 + 3*363*FLEN/8, x4, x1, x2)

inst_52588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1003ffffffffff; valaddr_reg:x3; val_offset:157764*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157764*0 + 3*364*FLEN/8, x4, x1, x2)

inst_52589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1007ffffffffff; valaddr_reg:x3; val_offset:157767*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157767*0 + 3*365*FLEN/8, x4, x1, x2)

inst_52590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x100fffffffffff; valaddr_reg:x3; val_offset:157770*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157770*0 + 3*366*FLEN/8, x4, x1, x2)

inst_52591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x101fffffffffff; valaddr_reg:x3; val_offset:157773*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157773*0 + 3*367*FLEN/8, x4, x1, x2)

inst_52592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x103fffffffffff; valaddr_reg:x3; val_offset:157776*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157776*0 + 3*368*FLEN/8, x4, x1, x2)

inst_52593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x107fffffffffff; valaddr_reg:x3; val_offset:157779*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157779*0 + 3*369*FLEN/8, x4, x1, x2)

inst_52594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x10ffffffffffff; valaddr_reg:x3; val_offset:157782*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157782*0 + 3*370*FLEN/8, x4, x1, x2)

inst_52595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x11ffffffffffff; valaddr_reg:x3; val_offset:157785*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157785*0 + 3*371*FLEN/8, x4, x1, x2)

inst_52596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x13ffffffffffff; valaddr_reg:x3; val_offset:157788*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157788*0 + 3*372*FLEN/8, x4, x1, x2)

inst_52597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x17ffffffffffff; valaddr_reg:x3; val_offset:157791*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157791*0 + 3*373*FLEN/8, x4, x1, x2)

inst_52598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x18000000000000; valaddr_reg:x3; val_offset:157794*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157794*0 + 3*374*FLEN/8, x4, x1, x2)

inst_52599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1c000000000000; valaddr_reg:x3; val_offset:157797*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157797*0 + 3*375*FLEN/8, x4, x1, x2)

inst_52600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1e000000000000; valaddr_reg:x3; val_offset:157800*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157800*0 + 3*376*FLEN/8, x4, x1, x2)

inst_52601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1f000000000000; valaddr_reg:x3; val_offset:157803*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157803*0 + 3*377*FLEN/8, x4, x1, x2)

inst_52602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1f800000000000; valaddr_reg:x3; val_offset:157806*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157806*0 + 3*378*FLEN/8, x4, x1, x2)

inst_52603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fc00000000000; valaddr_reg:x3; val_offset:157809*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157809*0 + 3*379*FLEN/8, x4, x1, x2)

inst_52604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fe00000000000; valaddr_reg:x3; val_offset:157812*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157812*0 + 3*380*FLEN/8, x4, x1, x2)

inst_52605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ff00000000000; valaddr_reg:x3; val_offset:157815*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157815*0 + 3*381*FLEN/8, x4, x1, x2)

inst_52606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ff80000000000; valaddr_reg:x3; val_offset:157818*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157818*0 + 3*382*FLEN/8, x4, x1, x2)

inst_52607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffc0000000000; valaddr_reg:x3; val_offset:157821*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157821*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_52608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffe0000000000; valaddr_reg:x3; val_offset:157824*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157824*0 + 3*384*FLEN/8, x4, x1, x2)

inst_52609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fff0000000000; valaddr_reg:x3; val_offset:157827*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157827*0 + 3*385*FLEN/8, x4, x1, x2)

inst_52610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fff8000000000; valaddr_reg:x3; val_offset:157830*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157830*0 + 3*386*FLEN/8, x4, x1, x2)

inst_52611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffc000000000; valaddr_reg:x3; val_offset:157833*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157833*0 + 3*387*FLEN/8, x4, x1, x2)

inst_52612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffe000000000; valaddr_reg:x3; val_offset:157836*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157836*0 + 3*388*FLEN/8, x4, x1, x2)

inst_52613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffff000000000; valaddr_reg:x3; val_offset:157839*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157839*0 + 3*389*FLEN/8, x4, x1, x2)

inst_52614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffff800000000; valaddr_reg:x3; val_offset:157842*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157842*0 + 3*390*FLEN/8, x4, x1, x2)

inst_52615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffc00000000; valaddr_reg:x3; val_offset:157845*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157845*0 + 3*391*FLEN/8, x4, x1, x2)

inst_52616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffe00000000; valaddr_reg:x3; val_offset:157848*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157848*0 + 3*392*FLEN/8, x4, x1, x2)

inst_52617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffff00000000; valaddr_reg:x3; val_offset:157851*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157851*0 + 3*393*FLEN/8, x4, x1, x2)

inst_52618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffff80000000; valaddr_reg:x3; val_offset:157854*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157854*0 + 3*394*FLEN/8, x4, x1, x2)

inst_52619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffc0000000; valaddr_reg:x3; val_offset:157857*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157857*0 + 3*395*FLEN/8, x4, x1, x2)

inst_52620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffe0000000; valaddr_reg:x3; val_offset:157860*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157860*0 + 3*396*FLEN/8, x4, x1, x2)

inst_52621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffff0000000; valaddr_reg:x3; val_offset:157863*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157863*0 + 3*397*FLEN/8, x4, x1, x2)

inst_52622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffff8000000; valaddr_reg:x3; val_offset:157866*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157866*0 + 3*398*FLEN/8, x4, x1, x2)

inst_52623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffc000000; valaddr_reg:x3; val_offset:157869*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157869*0 + 3*399*FLEN/8, x4, x1, x2)

inst_52624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffe000000; valaddr_reg:x3; val_offset:157872*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157872*0 + 3*400*FLEN/8, x4, x1, x2)

inst_52625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffff000000; valaddr_reg:x3; val_offset:157875*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157875*0 + 3*401*FLEN/8, x4, x1, x2)

inst_52626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffff800000; valaddr_reg:x3; val_offset:157878*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157878*0 + 3*402*FLEN/8, x4, x1, x2)

inst_52627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffc00000; valaddr_reg:x3; val_offset:157881*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157881*0 + 3*403*FLEN/8, x4, x1, x2)

inst_52628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffe00000; valaddr_reg:x3; val_offset:157884*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157884*0 + 3*404*FLEN/8, x4, x1, x2)

inst_52629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffff00000; valaddr_reg:x3; val_offset:157887*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157887*0 + 3*405*FLEN/8, x4, x1, x2)

inst_52630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffff80000; valaddr_reg:x3; val_offset:157890*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157890*0 + 3*406*FLEN/8, x4, x1, x2)

inst_52631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffc0000; valaddr_reg:x3; val_offset:157893*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157893*0 + 3*407*FLEN/8, x4, x1, x2)

inst_52632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffe0000; valaddr_reg:x3; val_offset:157896*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157896*0 + 3*408*FLEN/8, x4, x1, x2)

inst_52633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffff0000; valaddr_reg:x3; val_offset:157899*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157899*0 + 3*409*FLEN/8, x4, x1, x2)

inst_52634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffff8000; valaddr_reg:x3; val_offset:157902*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157902*0 + 3*410*FLEN/8, x4, x1, x2)

inst_52635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffffc000; valaddr_reg:x3; val_offset:157905*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157905*0 + 3*411*FLEN/8, x4, x1, x2)

inst_52636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffffe000; valaddr_reg:x3; val_offset:157908*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157908*0 + 3*412*FLEN/8, x4, x1, x2)

inst_52637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffff000; valaddr_reg:x3; val_offset:157911*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157911*0 + 3*413*FLEN/8, x4, x1, x2)

inst_52638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffff800; valaddr_reg:x3; val_offset:157914*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157914*0 + 3*414*FLEN/8, x4, x1, x2)

inst_52639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffffc00; valaddr_reg:x3; val_offset:157917*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157917*0 + 3*415*FLEN/8, x4, x1, x2)

inst_52640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffffe00; valaddr_reg:x3; val_offset:157920*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157920*0 + 3*416*FLEN/8, x4, x1, x2)

inst_52641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffffff00; valaddr_reg:x3; val_offset:157923*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157923*0 + 3*417*FLEN/8, x4, x1, x2)

inst_52642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffffff80; valaddr_reg:x3; val_offset:157926*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157926*0 + 3*418*FLEN/8, x4, x1, x2)

inst_52643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:157929*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157929*0 + 3*419*FLEN/8, x4, x1, x2)

inst_52644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:157932*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157932*0 + 3*420*FLEN/8, x4, x1, x2)

inst_52645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:157935*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157935*0 + 3*421*FLEN/8, x4, x1, x2)

inst_52646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:157938*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157938*0 + 3*422*FLEN/8, x4, x1, x2)

inst_52647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:157941*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157941*0 + 3*423*FLEN/8, x4, x1, x2)

inst_52648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:157944*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157944*0 + 3*424*FLEN/8, x4, x1, x2)

inst_52649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05f49af10699a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05f49af10699a; op2val:0x0;
op3val:0x1fffffffffffff; valaddr_reg:x3; val_offset:157947*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157947*0 + 3*425*FLEN/8, x4, x1, x2)

inst_52650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:157950*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157950*0 + 3*426*FLEN/8, x4, x1, x2)

inst_52651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:157953*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157953*0 + 3*427*FLEN/8, x4, x1, x2)

inst_52652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:157956*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157956*0 + 3*428*FLEN/8, x4, x1, x2)

inst_52653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:157959*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157959*0 + 3*429*FLEN/8, x4, x1, x2)

inst_52654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:157962*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157962*0 + 3*430*FLEN/8, x4, x1, x2)

inst_52655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:157965*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157965*0 + 3*431*FLEN/8, x4, x1, x2)

inst_52656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:157968*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157968*0 + 3*432*FLEN/8, x4, x1, x2)

inst_52657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:157971*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157971*0 + 3*433*FLEN/8, x4, x1, x2)

inst_52658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:157974*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157974*0 + 3*434*FLEN/8, x4, x1, x2)

inst_52659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:157977*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157977*0 + 3*435*FLEN/8, x4, x1, x2)

inst_52660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:157980*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157980*0 + 3*436*FLEN/8, x4, x1, x2)

inst_52661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:157983*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157983*0 + 3*437*FLEN/8, x4, x1, x2)

inst_52662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:157986*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157986*0 + 3*438*FLEN/8, x4, x1, x2)

inst_52663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:157989*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157989*0 + 3*439*FLEN/8, x4, x1, x2)

inst_52664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:157992*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157992*0 + 3*440*FLEN/8, x4, x1, x2)

inst_52665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:157995*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157995*0 + 3*441*FLEN/8, x4, x1, x2)

inst_52666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:157998*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 157998*0 + 3*442*FLEN/8, x4, x1, x2)

inst_52667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:158001*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158001*0 + 3*443*FLEN/8, x4, x1, x2)

inst_52668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:158004*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158004*0 + 3*444*FLEN/8, x4, x1, x2)

inst_52669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:158007*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158007*0 + 3*445*FLEN/8, x4, x1, x2)

inst_52670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:158010*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158010*0 + 3*446*FLEN/8, x4, x1, x2)

inst_52671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:158013*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158013*0 + 3*447*FLEN/8, x4, x1, x2)

inst_52672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000000000; valaddr_reg:x3; val_offset:158016*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158016*0 + 3*448*FLEN/8, x4, x1, x2)

inst_52673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000000001; valaddr_reg:x3; val_offset:158019*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158019*0 + 3*449*FLEN/8, x4, x1, x2)

inst_52674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000000003; valaddr_reg:x3; val_offset:158022*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158022*0 + 3*450*FLEN/8, x4, x1, x2)

inst_52675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000000007; valaddr_reg:x3; val_offset:158025*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158025*0 + 3*451*FLEN/8, x4, x1, x2)

inst_52676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000000000f; valaddr_reg:x3; val_offset:158028*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158028*0 + 3*452*FLEN/8, x4, x1, x2)

inst_52677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000000001f; valaddr_reg:x3; val_offset:158031*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158031*0 + 3*453*FLEN/8, x4, x1, x2)

inst_52678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000000003f; valaddr_reg:x3; val_offset:158034*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158034*0 + 3*454*FLEN/8, x4, x1, x2)

inst_52679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000000007f; valaddr_reg:x3; val_offset:158037*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158037*0 + 3*455*FLEN/8, x4, x1, x2)

inst_52680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000000000ff; valaddr_reg:x3; val_offset:158040*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158040*0 + 3*456*FLEN/8, x4, x1, x2)

inst_52681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000000001ff; valaddr_reg:x3; val_offset:158043*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158043*0 + 3*457*FLEN/8, x4, x1, x2)

inst_52682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000000003ff; valaddr_reg:x3; val_offset:158046*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158046*0 + 3*458*FLEN/8, x4, x1, x2)

inst_52683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000000007ff; valaddr_reg:x3; val_offset:158049*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158049*0 + 3*459*FLEN/8, x4, x1, x2)

inst_52684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000000fff; valaddr_reg:x3; val_offset:158052*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158052*0 + 3*460*FLEN/8, x4, x1, x2)

inst_52685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000001fff; valaddr_reg:x3; val_offset:158055*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158055*0 + 3*461*FLEN/8, x4, x1, x2)

inst_52686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000003fff; valaddr_reg:x3; val_offset:158058*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158058*0 + 3*462*FLEN/8, x4, x1, x2)

inst_52687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000007fff; valaddr_reg:x3; val_offset:158061*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158061*0 + 3*463*FLEN/8, x4, x1, x2)

inst_52688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000000ffff; valaddr_reg:x3; val_offset:158064*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158064*0 + 3*464*FLEN/8, x4, x1, x2)

inst_52689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000001ffff; valaddr_reg:x3; val_offset:158067*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158067*0 + 3*465*FLEN/8, x4, x1, x2)

inst_52690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000003ffff; valaddr_reg:x3; val_offset:158070*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158070*0 + 3*466*FLEN/8, x4, x1, x2)

inst_52691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000007ffff; valaddr_reg:x3; val_offset:158073*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158073*0 + 3*467*FLEN/8, x4, x1, x2)

inst_52692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000000fffff; valaddr_reg:x3; val_offset:158076*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158076*0 + 3*468*FLEN/8, x4, x1, x2)

inst_52693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000001fffff; valaddr_reg:x3; val_offset:158079*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158079*0 + 3*469*FLEN/8, x4, x1, x2)

inst_52694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000003fffff; valaddr_reg:x3; val_offset:158082*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158082*0 + 3*470*FLEN/8, x4, x1, x2)

inst_52695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000007fffff; valaddr_reg:x3; val_offset:158085*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158085*0 + 3*471*FLEN/8, x4, x1, x2)

inst_52696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000000ffffff; valaddr_reg:x3; val_offset:158088*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158088*0 + 3*472*FLEN/8, x4, x1, x2)

inst_52697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000001ffffff; valaddr_reg:x3; val_offset:158091*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158091*0 + 3*473*FLEN/8, x4, x1, x2)

inst_52698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000003ffffff; valaddr_reg:x3; val_offset:158094*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158094*0 + 3*474*FLEN/8, x4, x1, x2)

inst_52699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000007ffffff; valaddr_reg:x3; val_offset:158097*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158097*0 + 3*475*FLEN/8, x4, x1, x2)

inst_52700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000000fffffff; valaddr_reg:x3; val_offset:158100*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158100*0 + 3*476*FLEN/8, x4, x1, x2)

inst_52701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000001fffffff; valaddr_reg:x3; val_offset:158103*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158103*0 + 3*477*FLEN/8, x4, x1, x2)

inst_52702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000003fffffff; valaddr_reg:x3; val_offset:158106*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158106*0 + 3*478*FLEN/8, x4, x1, x2)

inst_52703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000007fffffff; valaddr_reg:x3; val_offset:158109*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158109*0 + 3*479*FLEN/8, x4, x1, x2)

inst_52704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100000ffffffff; valaddr_reg:x3; val_offset:158112*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158112*0 + 3*480*FLEN/8, x4, x1, x2)

inst_52705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100001ffffffff; valaddr_reg:x3; val_offset:158115*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158115*0 + 3*481*FLEN/8, x4, x1, x2)

inst_52706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100003ffffffff; valaddr_reg:x3; val_offset:158118*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158118*0 + 3*482*FLEN/8, x4, x1, x2)

inst_52707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100007ffffffff; valaddr_reg:x3; val_offset:158121*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158121*0 + 3*483*FLEN/8, x4, x1, x2)

inst_52708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310000fffffffff; valaddr_reg:x3; val_offset:158124*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158124*0 + 3*484*FLEN/8, x4, x1, x2)

inst_52709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310001fffffffff; valaddr_reg:x3; val_offset:158127*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158127*0 + 3*485*FLEN/8, x4, x1, x2)

inst_52710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310003fffffffff; valaddr_reg:x3; val_offset:158130*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158130*0 + 3*486*FLEN/8, x4, x1, x2)

inst_52711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310007fffffffff; valaddr_reg:x3; val_offset:158133*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158133*0 + 3*487*FLEN/8, x4, x1, x2)

inst_52712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31000ffffffffff; valaddr_reg:x3; val_offset:158136*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158136*0 + 3*488*FLEN/8, x4, x1, x2)

inst_52713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31001ffffffffff; valaddr_reg:x3; val_offset:158139*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158139*0 + 3*489*FLEN/8, x4, x1, x2)

inst_52714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31003ffffffffff; valaddr_reg:x3; val_offset:158142*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158142*0 + 3*490*FLEN/8, x4, x1, x2)

inst_52715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31007ffffffffff; valaddr_reg:x3; val_offset:158145*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158145*0 + 3*491*FLEN/8, x4, x1, x2)

inst_52716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3100fffffffffff; valaddr_reg:x3; val_offset:158148*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158148*0 + 3*492*FLEN/8, x4, x1, x2)

inst_52717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3101fffffffffff; valaddr_reg:x3; val_offset:158151*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158151*0 + 3*493*FLEN/8, x4, x1, x2)

inst_52718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3103fffffffffff; valaddr_reg:x3; val_offset:158154*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158154*0 + 3*494*FLEN/8, x4, x1, x2)

inst_52719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x3107fffffffffff; valaddr_reg:x3; val_offset:158157*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158157*0 + 3*495*FLEN/8, x4, x1, x2)

inst_52720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x310ffffffffffff; valaddr_reg:x3; val_offset:158160*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158160*0 + 3*496*FLEN/8, x4, x1, x2)

inst_52721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x311ffffffffffff; valaddr_reg:x3; val_offset:158163*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158163*0 + 3*497*FLEN/8, x4, x1, x2)

inst_52722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x313ffffffffffff; valaddr_reg:x3; val_offset:158166*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158166*0 + 3*498*FLEN/8, x4, x1, x2)

inst_52723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x317ffffffffffff; valaddr_reg:x3; val_offset:158169*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158169*0 + 3*499*FLEN/8, x4, x1, x2)

inst_52724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x318000000000000; valaddr_reg:x3; val_offset:158172*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158172*0 + 3*500*FLEN/8, x4, x1, x2)

inst_52725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31c000000000000; valaddr_reg:x3; val_offset:158175*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158175*0 + 3*501*FLEN/8, x4, x1, x2)

inst_52726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31e000000000000; valaddr_reg:x3; val_offset:158178*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158178*0 + 3*502*FLEN/8, x4, x1, x2)

inst_52727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31f000000000000; valaddr_reg:x3; val_offset:158181*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158181*0 + 3*503*FLEN/8, x4, x1, x2)

inst_52728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31f800000000000; valaddr_reg:x3; val_offset:158184*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158184*0 + 3*504*FLEN/8, x4, x1, x2)

inst_52729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fc00000000000; valaddr_reg:x3; val_offset:158187*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158187*0 + 3*505*FLEN/8, x4, x1, x2)

inst_52730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fe00000000000; valaddr_reg:x3; val_offset:158190*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158190*0 + 3*506*FLEN/8, x4, x1, x2)

inst_52731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ff00000000000; valaddr_reg:x3; val_offset:158193*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158193*0 + 3*507*FLEN/8, x4, x1, x2)

inst_52732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ff80000000000; valaddr_reg:x3; val_offset:158196*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158196*0 + 3*508*FLEN/8, x4, x1, x2)

inst_52733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffc0000000000; valaddr_reg:x3; val_offset:158199*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158199*0 + 3*509*FLEN/8, x4, x1, x2)

inst_52734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffe0000000000; valaddr_reg:x3; val_offset:158202*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158202*0 + 3*510*FLEN/8, x4, x1, x2)

inst_52735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fff0000000000; valaddr_reg:x3; val_offset:158205*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158205*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_52736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fff8000000000; valaddr_reg:x3; val_offset:158208*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158208*0 + 3*512*FLEN/8, x4, x1, x2)

inst_52737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffc000000000; valaddr_reg:x3; val_offset:158211*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158211*0 + 3*513*FLEN/8, x4, x1, x2)

inst_52738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffe000000000; valaddr_reg:x3; val_offset:158214*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158214*0 + 3*514*FLEN/8, x4, x1, x2)

inst_52739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffff000000000; valaddr_reg:x3; val_offset:158217*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158217*0 + 3*515*FLEN/8, x4, x1, x2)

inst_52740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffff800000000; valaddr_reg:x3; val_offset:158220*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158220*0 + 3*516*FLEN/8, x4, x1, x2)

inst_52741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffc00000000; valaddr_reg:x3; val_offset:158223*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158223*0 + 3*517*FLEN/8, x4, x1, x2)

inst_52742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffe00000000; valaddr_reg:x3; val_offset:158226*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158226*0 + 3*518*FLEN/8, x4, x1, x2)

inst_52743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffff00000000; valaddr_reg:x3; val_offset:158229*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158229*0 + 3*519*FLEN/8, x4, x1, x2)

inst_52744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffff80000000; valaddr_reg:x3; val_offset:158232*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158232*0 + 3*520*FLEN/8, x4, x1, x2)

inst_52745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffc0000000; valaddr_reg:x3; val_offset:158235*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158235*0 + 3*521*FLEN/8, x4, x1, x2)

inst_52746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffe0000000; valaddr_reg:x3; val_offset:158238*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158238*0 + 3*522*FLEN/8, x4, x1, x2)

inst_52747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffff0000000; valaddr_reg:x3; val_offset:158241*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158241*0 + 3*523*FLEN/8, x4, x1, x2)

inst_52748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffff8000000; valaddr_reg:x3; val_offset:158244*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158244*0 + 3*524*FLEN/8, x4, x1, x2)

inst_52749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffc000000; valaddr_reg:x3; val_offset:158247*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158247*0 + 3*525*FLEN/8, x4, x1, x2)

inst_52750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffe000000; valaddr_reg:x3; val_offset:158250*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158250*0 + 3*526*FLEN/8, x4, x1, x2)

inst_52751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffff000000; valaddr_reg:x3; val_offset:158253*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158253*0 + 3*527*FLEN/8, x4, x1, x2)

inst_52752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffff800000; valaddr_reg:x3; val_offset:158256*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158256*0 + 3*528*FLEN/8, x4, x1, x2)

inst_52753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffc00000; valaddr_reg:x3; val_offset:158259*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158259*0 + 3*529*FLEN/8, x4, x1, x2)

inst_52754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffe00000; valaddr_reg:x3; val_offset:158262*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158262*0 + 3*530*FLEN/8, x4, x1, x2)

inst_52755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffff00000; valaddr_reg:x3; val_offset:158265*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158265*0 + 3*531*FLEN/8, x4, x1, x2)

inst_52756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffff80000; valaddr_reg:x3; val_offset:158268*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158268*0 + 3*532*FLEN/8, x4, x1, x2)

inst_52757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffc0000; valaddr_reg:x3; val_offset:158271*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158271*0 + 3*533*FLEN/8, x4, x1, x2)

inst_52758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffe0000; valaddr_reg:x3; val_offset:158274*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158274*0 + 3*534*FLEN/8, x4, x1, x2)

inst_52759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffff0000; valaddr_reg:x3; val_offset:158277*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158277*0 + 3*535*FLEN/8, x4, x1, x2)

inst_52760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffff8000; valaddr_reg:x3; val_offset:158280*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158280*0 + 3*536*FLEN/8, x4, x1, x2)

inst_52761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffffc000; valaddr_reg:x3; val_offset:158283*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158283*0 + 3*537*FLEN/8, x4, x1, x2)

inst_52762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffffe000; valaddr_reg:x3; val_offset:158286*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158286*0 + 3*538*FLEN/8, x4, x1, x2)

inst_52763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffff000; valaddr_reg:x3; val_offset:158289*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158289*0 + 3*539*FLEN/8, x4, x1, x2)

inst_52764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffff800; valaddr_reg:x3; val_offset:158292*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158292*0 + 3*540*FLEN/8, x4, x1, x2)

inst_52765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffffc00; valaddr_reg:x3; val_offset:158295*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158295*0 + 3*541*FLEN/8, x4, x1, x2)

inst_52766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffffe00; valaddr_reg:x3; val_offset:158298*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158298*0 + 3*542*FLEN/8, x4, x1, x2)

inst_52767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffffff00; valaddr_reg:x3; val_offset:158301*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158301*0 + 3*543*FLEN/8, x4, x1, x2)

inst_52768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffffff80; valaddr_reg:x3; val_offset:158304*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158304*0 + 3*544*FLEN/8, x4, x1, x2)

inst_52769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffffffc0; valaddr_reg:x3; val_offset:158307*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158307*0 + 3*545*FLEN/8, x4, x1, x2)

inst_52770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffffffe0; valaddr_reg:x3; val_offset:158310*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158310*0 + 3*546*FLEN/8, x4, x1, x2)

inst_52771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffffff0; valaddr_reg:x3; val_offset:158313*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158313*0 + 3*547*FLEN/8, x4, x1, x2)

inst_52772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffffff8; valaddr_reg:x3; val_offset:158316*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158316*0 + 3*548*FLEN/8, x4, x1, x2)

inst_52773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffffffc; valaddr_reg:x3; val_offset:158319*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158319*0 + 3*549*FLEN/8, x4, x1, x2)

inst_52774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31ffffffffffffe; valaddr_reg:x3; val_offset:158322*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158322*0 + 3*550*FLEN/8, x4, x1, x2)

inst_52775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0692e8de06d43 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0692e8de06d43; op2val:0x0;
op3val:0x31fffffffffffff; valaddr_reg:x3; val_offset:158325*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158325*0 + 3*551*FLEN/8, x4, x1, x2)

inst_52776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:158328*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158328*0 + 3*552*FLEN/8, x4, x1, x2)

inst_52777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:158331*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158331*0 + 3*553*FLEN/8, x4, x1, x2)

inst_52778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:158334*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158334*0 + 3*554*FLEN/8, x4, x1, x2)

inst_52779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:158337*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158337*0 + 3*555*FLEN/8, x4, x1, x2)

inst_52780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:158340*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158340*0 + 3*556*FLEN/8, x4, x1, x2)

inst_52781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:158343*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158343*0 + 3*557*FLEN/8, x4, x1, x2)

inst_52782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:158346*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158346*0 + 3*558*FLEN/8, x4, x1, x2)

inst_52783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:158349*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158349*0 + 3*559*FLEN/8, x4, x1, x2)

inst_52784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:158352*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158352*0 + 3*560*FLEN/8, x4, x1, x2)

inst_52785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:158355*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158355*0 + 3*561*FLEN/8, x4, x1, x2)

inst_52786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:158358*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158358*0 + 3*562*FLEN/8, x4, x1, x2)

inst_52787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:158361*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158361*0 + 3*563*FLEN/8, x4, x1, x2)

inst_52788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:158364*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158364*0 + 3*564*FLEN/8, x4, x1, x2)

inst_52789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:158367*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158367*0 + 3*565*FLEN/8, x4, x1, x2)

inst_52790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:158370*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158370*0 + 3*566*FLEN/8, x4, x1, x2)

inst_52791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:158373*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158373*0 + 3*567*FLEN/8, x4, x1, x2)

inst_52792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:158376*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158376*0 + 3*568*FLEN/8, x4, x1, x2)

inst_52793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:158379*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158379*0 + 3*569*FLEN/8, x4, x1, x2)

inst_52794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:158382*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158382*0 + 3*570*FLEN/8, x4, x1, x2)

inst_52795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:158385*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158385*0 + 3*571*FLEN/8, x4, x1, x2)

inst_52796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:158388*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158388*0 + 3*572*FLEN/8, x4, x1, x2)

inst_52797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:158391*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158391*0 + 3*573*FLEN/8, x4, x1, x2)

inst_52798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000000000; valaddr_reg:x3; val_offset:158394*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158394*0 + 3*574*FLEN/8, x4, x1, x2)

inst_52799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000000001; valaddr_reg:x3; val_offset:158397*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158397*0 + 3*575*FLEN/8, x4, x1, x2)

inst_52800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000000003; valaddr_reg:x3; val_offset:158400*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158400*0 + 3*576*FLEN/8, x4, x1, x2)

inst_52801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000000007; valaddr_reg:x3; val_offset:158403*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158403*0 + 3*577*FLEN/8, x4, x1, x2)

inst_52802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000000000f; valaddr_reg:x3; val_offset:158406*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158406*0 + 3*578*FLEN/8, x4, x1, x2)

inst_52803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000000001f; valaddr_reg:x3; val_offset:158409*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158409*0 + 3*579*FLEN/8, x4, x1, x2)

inst_52804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000000003f; valaddr_reg:x3; val_offset:158412*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158412*0 + 3*580*FLEN/8, x4, x1, x2)

inst_52805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000000007f; valaddr_reg:x3; val_offset:158415*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158415*0 + 3*581*FLEN/8, x4, x1, x2)

inst_52806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000000000ff; valaddr_reg:x3; val_offset:158418*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158418*0 + 3*582*FLEN/8, x4, x1, x2)

inst_52807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000000001ff; valaddr_reg:x3; val_offset:158421*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158421*0 + 3*583*FLEN/8, x4, x1, x2)

inst_52808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000000003ff; valaddr_reg:x3; val_offset:158424*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158424*0 + 3*584*FLEN/8, x4, x1, x2)

inst_52809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000000007ff; valaddr_reg:x3; val_offset:158427*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158427*0 + 3*585*FLEN/8, x4, x1, x2)

inst_52810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000000fff; valaddr_reg:x3; val_offset:158430*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158430*0 + 3*586*FLEN/8, x4, x1, x2)

inst_52811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000001fff; valaddr_reg:x3; val_offset:158433*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158433*0 + 3*587*FLEN/8, x4, x1, x2)

inst_52812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000003fff; valaddr_reg:x3; val_offset:158436*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158436*0 + 3*588*FLEN/8, x4, x1, x2)

inst_52813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000007fff; valaddr_reg:x3; val_offset:158439*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158439*0 + 3*589*FLEN/8, x4, x1, x2)

inst_52814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000000ffff; valaddr_reg:x3; val_offset:158442*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158442*0 + 3*590*FLEN/8, x4, x1, x2)

inst_52815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000001ffff; valaddr_reg:x3; val_offset:158445*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158445*0 + 3*591*FLEN/8, x4, x1, x2)

inst_52816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000003ffff; valaddr_reg:x3; val_offset:158448*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158448*0 + 3*592*FLEN/8, x4, x1, x2)

inst_52817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000007ffff; valaddr_reg:x3; val_offset:158451*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158451*0 + 3*593*FLEN/8, x4, x1, x2)

inst_52818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000000fffff; valaddr_reg:x3; val_offset:158454*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158454*0 + 3*594*FLEN/8, x4, x1, x2)

inst_52819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000001fffff; valaddr_reg:x3; val_offset:158457*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158457*0 + 3*595*FLEN/8, x4, x1, x2)

inst_52820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000003fffff; valaddr_reg:x3; val_offset:158460*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158460*0 + 3*596*FLEN/8, x4, x1, x2)

inst_52821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000007fffff; valaddr_reg:x3; val_offset:158463*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158463*0 + 3*597*FLEN/8, x4, x1, x2)

inst_52822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000000ffffff; valaddr_reg:x3; val_offset:158466*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158466*0 + 3*598*FLEN/8, x4, x1, x2)

inst_52823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000001ffffff; valaddr_reg:x3; val_offset:158469*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158469*0 + 3*599*FLEN/8, x4, x1, x2)

inst_52824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000003ffffff; valaddr_reg:x3; val_offset:158472*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158472*0 + 3*600*FLEN/8, x4, x1, x2)

inst_52825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000007ffffff; valaddr_reg:x3; val_offset:158475*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158475*0 + 3*601*FLEN/8, x4, x1, x2)

inst_52826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000000fffffff; valaddr_reg:x3; val_offset:158478*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158478*0 + 3*602*FLEN/8, x4, x1, x2)

inst_52827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000001fffffff; valaddr_reg:x3; val_offset:158481*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158481*0 + 3*603*FLEN/8, x4, x1, x2)

inst_52828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000003fffffff; valaddr_reg:x3; val_offset:158484*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158484*0 + 3*604*FLEN/8, x4, x1, x2)

inst_52829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000007fffffff; valaddr_reg:x3; val_offset:158487*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158487*0 + 3*605*FLEN/8, x4, x1, x2)

inst_52830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00000ffffffff; valaddr_reg:x3; val_offset:158490*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158490*0 + 3*606*FLEN/8, x4, x1, x2)

inst_52831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00001ffffffff; valaddr_reg:x3; val_offset:158493*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158493*0 + 3*607*FLEN/8, x4, x1, x2)

inst_52832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00003ffffffff; valaddr_reg:x3; val_offset:158496*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158496*0 + 3*608*FLEN/8, x4, x1, x2)

inst_52833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00007ffffffff; valaddr_reg:x3; val_offset:158499*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158499*0 + 3*609*FLEN/8, x4, x1, x2)

inst_52834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0000fffffffff; valaddr_reg:x3; val_offset:158502*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158502*0 + 3*610*FLEN/8, x4, x1, x2)

inst_52835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0001fffffffff; valaddr_reg:x3; val_offset:158505*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158505*0 + 3*611*FLEN/8, x4, x1, x2)

inst_52836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0003fffffffff; valaddr_reg:x3; val_offset:158508*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158508*0 + 3*612*FLEN/8, x4, x1, x2)

inst_52837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0007fffffffff; valaddr_reg:x3; val_offset:158511*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158511*0 + 3*613*FLEN/8, x4, x1, x2)

inst_52838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e000ffffffffff; valaddr_reg:x3; val_offset:158514*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158514*0 + 3*614*FLEN/8, x4, x1, x2)

inst_52839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e001ffffffffff; valaddr_reg:x3; val_offset:158517*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158517*0 + 3*615*FLEN/8, x4, x1, x2)

inst_52840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e003ffffffffff; valaddr_reg:x3; val_offset:158520*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158520*0 + 3*616*FLEN/8, x4, x1, x2)

inst_52841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e007ffffffffff; valaddr_reg:x3; val_offset:158523*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158523*0 + 3*617*FLEN/8, x4, x1, x2)

inst_52842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e00fffffffffff; valaddr_reg:x3; val_offset:158526*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158526*0 + 3*618*FLEN/8, x4, x1, x2)

inst_52843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e01fffffffffff; valaddr_reg:x3; val_offset:158529*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158529*0 + 3*619*FLEN/8, x4, x1, x2)

inst_52844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e03fffffffffff; valaddr_reg:x3; val_offset:158532*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158532*0 + 3*620*FLEN/8, x4, x1, x2)

inst_52845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e07fffffffffff; valaddr_reg:x3; val_offset:158535*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158535*0 + 3*621*FLEN/8, x4, x1, x2)

inst_52846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e0ffffffffffff; valaddr_reg:x3; val_offset:158538*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158538*0 + 3*622*FLEN/8, x4, x1, x2)

inst_52847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e1ffffffffffff; valaddr_reg:x3; val_offset:158541*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158541*0 + 3*623*FLEN/8, x4, x1, x2)

inst_52848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e3ffffffffffff; valaddr_reg:x3; val_offset:158544*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158544*0 + 3*624*FLEN/8, x4, x1, x2)

inst_52849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e7ffffffffffff; valaddr_reg:x3; val_offset:158547*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158547*0 + 3*625*FLEN/8, x4, x1, x2)

inst_52850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80e8000000000000; valaddr_reg:x3; val_offset:158550*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158550*0 + 3*626*FLEN/8, x4, x1, x2)

inst_52851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80ec000000000000; valaddr_reg:x3; val_offset:158553*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158553*0 + 3*627*FLEN/8, x4, x1, x2)

inst_52852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80ee000000000000; valaddr_reg:x3; val_offset:158556*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158556*0 + 3*628*FLEN/8, x4, x1, x2)

inst_52853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80ef000000000000; valaddr_reg:x3; val_offset:158559*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158559*0 + 3*629*FLEN/8, x4, x1, x2)

inst_52854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80ef800000000000; valaddr_reg:x3; val_offset:158562*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158562*0 + 3*630*FLEN/8, x4, x1, x2)

inst_52855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efc00000000000; valaddr_reg:x3; val_offset:158565*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158565*0 + 3*631*FLEN/8, x4, x1, x2)

inst_52856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efe00000000000; valaddr_reg:x3; val_offset:158568*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158568*0 + 3*632*FLEN/8, x4, x1, x2)

inst_52857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80eff00000000000; valaddr_reg:x3; val_offset:158571*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158571*0 + 3*633*FLEN/8, x4, x1, x2)

inst_52858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80eff80000000000; valaddr_reg:x3; val_offset:158574*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158574*0 + 3*634*FLEN/8, x4, x1, x2)

inst_52859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effc0000000000; valaddr_reg:x3; val_offset:158577*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158577*0 + 3*635*FLEN/8, x4, x1, x2)

inst_52860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effe0000000000; valaddr_reg:x3; val_offset:158580*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158580*0 + 3*636*FLEN/8, x4, x1, x2)

inst_52861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efff0000000000; valaddr_reg:x3; val_offset:158583*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158583*0 + 3*637*FLEN/8, x4, x1, x2)

inst_52862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efff8000000000; valaddr_reg:x3; val_offset:158586*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158586*0 + 3*638*FLEN/8, x4, x1, x2)

inst_52863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffc000000000; valaddr_reg:x3; val_offset:158589*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158589*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_52864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffe000000000; valaddr_reg:x3; val_offset:158592*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158592*0 + 3*640*FLEN/8, x4, x1, x2)

inst_52865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effff000000000; valaddr_reg:x3; val_offset:158595*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158595*0 + 3*641*FLEN/8, x4, x1, x2)

inst_52866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effff800000000; valaddr_reg:x3; val_offset:158598*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158598*0 + 3*642*FLEN/8, x4, x1, x2)

inst_52867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffc00000000; valaddr_reg:x3; val_offset:158601*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158601*0 + 3*643*FLEN/8, x4, x1, x2)

inst_52868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffe00000000; valaddr_reg:x3; val_offset:158604*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158604*0 + 3*644*FLEN/8, x4, x1, x2)

inst_52869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffff00000000; valaddr_reg:x3; val_offset:158607*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158607*0 + 3*645*FLEN/8, x4, x1, x2)

inst_52870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffff80000000; valaddr_reg:x3; val_offset:158610*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158610*0 + 3*646*FLEN/8, x4, x1, x2)

inst_52871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffc0000000; valaddr_reg:x3; val_offset:158613*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158613*0 + 3*647*FLEN/8, x4, x1, x2)

inst_52872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffe0000000; valaddr_reg:x3; val_offset:158616*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158616*0 + 3*648*FLEN/8, x4, x1, x2)

inst_52873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffff0000000; valaddr_reg:x3; val_offset:158619*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158619*0 + 3*649*FLEN/8, x4, x1, x2)

inst_52874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffff8000000; valaddr_reg:x3; val_offset:158622*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158622*0 + 3*650*FLEN/8, x4, x1, x2)

inst_52875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffc000000; valaddr_reg:x3; val_offset:158625*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158625*0 + 3*651*FLEN/8, x4, x1, x2)

inst_52876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffe000000; valaddr_reg:x3; val_offset:158628*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158628*0 + 3*652*FLEN/8, x4, x1, x2)

inst_52877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffff000000; valaddr_reg:x3; val_offset:158631*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158631*0 + 3*653*FLEN/8, x4, x1, x2)

inst_52878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffff800000; valaddr_reg:x3; val_offset:158634*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158634*0 + 3*654*FLEN/8, x4, x1, x2)

inst_52879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffc00000; valaddr_reg:x3; val_offset:158637*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158637*0 + 3*655*FLEN/8, x4, x1, x2)

inst_52880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffe00000; valaddr_reg:x3; val_offset:158640*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158640*0 + 3*656*FLEN/8, x4, x1, x2)

inst_52881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffff00000; valaddr_reg:x3; val_offset:158643*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158643*0 + 3*657*FLEN/8, x4, x1, x2)

inst_52882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffff80000; valaddr_reg:x3; val_offset:158646*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158646*0 + 3*658*FLEN/8, x4, x1, x2)

inst_52883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffc0000; valaddr_reg:x3; val_offset:158649*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158649*0 + 3*659*FLEN/8, x4, x1, x2)

inst_52884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffe0000; valaddr_reg:x3; val_offset:158652*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158652*0 + 3*660*FLEN/8, x4, x1, x2)

inst_52885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffff0000; valaddr_reg:x3; val_offset:158655*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158655*0 + 3*661*FLEN/8, x4, x1, x2)

inst_52886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffff8000; valaddr_reg:x3; val_offset:158658*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158658*0 + 3*662*FLEN/8, x4, x1, x2)

inst_52887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffffc000; valaddr_reg:x3; val_offset:158661*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158661*0 + 3*663*FLEN/8, x4, x1, x2)

inst_52888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffffe000; valaddr_reg:x3; val_offset:158664*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158664*0 + 3*664*FLEN/8, x4, x1, x2)

inst_52889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffff000; valaddr_reg:x3; val_offset:158667*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158667*0 + 3*665*FLEN/8, x4, x1, x2)

inst_52890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffff800; valaddr_reg:x3; val_offset:158670*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158670*0 + 3*666*FLEN/8, x4, x1, x2)

inst_52891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffffc00; valaddr_reg:x3; val_offset:158673*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158673*0 + 3*667*FLEN/8, x4, x1, x2)

inst_52892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffffe00; valaddr_reg:x3; val_offset:158676*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158676*0 + 3*668*FLEN/8, x4, x1, x2)

inst_52893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffffff00; valaddr_reg:x3; val_offset:158679*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158679*0 + 3*669*FLEN/8, x4, x1, x2)

inst_52894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffffff80; valaddr_reg:x3; val_offset:158682*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158682*0 + 3*670*FLEN/8, x4, x1, x2)

inst_52895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffffffc0; valaddr_reg:x3; val_offset:158685*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158685*0 + 3*671*FLEN/8, x4, x1, x2)

inst_52896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffffffe0; valaddr_reg:x3; val_offset:158688*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158688*0 + 3*672*FLEN/8, x4, x1, x2)

inst_52897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffffff0; valaddr_reg:x3; val_offset:158691*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158691*0 + 3*673*FLEN/8, x4, x1, x2)

inst_52898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffffff8; valaddr_reg:x3; val_offset:158694*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158694*0 + 3*674*FLEN/8, x4, x1, x2)

inst_52899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffffffc; valaddr_reg:x3; val_offset:158697*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158697*0 + 3*675*FLEN/8, x4, x1, x2)

inst_52900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80effffffffffffe; valaddr_reg:x3; val_offset:158700*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158700*0 + 3*676*FLEN/8, x4, x1, x2)

inst_52901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x070d1456013e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa070d1456013e3; op2val:0x8000;
op3val:0x80efffffffffffff; valaddr_reg:x3; val_offset:158703*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158703*0 + 3*677*FLEN/8, x4, x1, x2)

inst_52902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:158706*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158706*0 + 3*678*FLEN/8, x4, x1, x2)

inst_52903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:158709*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158709*0 + 3*679*FLEN/8, x4, x1, x2)

inst_52904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:158712*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158712*0 + 3*680*FLEN/8, x4, x1, x2)

inst_52905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:158715*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158715*0 + 3*681*FLEN/8, x4, x1, x2)

inst_52906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:158718*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158718*0 + 3*682*FLEN/8, x4, x1, x2)

inst_52907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:158721*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158721*0 + 3*683*FLEN/8, x4, x1, x2)

inst_52908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:158724*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158724*0 + 3*684*FLEN/8, x4, x1, x2)

inst_52909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:158727*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158727*0 + 3*685*FLEN/8, x4, x1, x2)

inst_52910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:158730*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158730*0 + 3*686*FLEN/8, x4, x1, x2)

inst_52911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:158733*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158733*0 + 3*687*FLEN/8, x4, x1, x2)

inst_52912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:158736*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158736*0 + 3*688*FLEN/8, x4, x1, x2)

inst_52913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:158739*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158739*0 + 3*689*FLEN/8, x4, x1, x2)

inst_52914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:158742*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158742*0 + 3*690*FLEN/8, x4, x1, x2)

inst_52915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:158745*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158745*0 + 3*691*FLEN/8, x4, x1, x2)

inst_52916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:158748*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158748*0 + 3*692*FLEN/8, x4, x1, x2)

inst_52917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:158751*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158751*0 + 3*693*FLEN/8, x4, x1, x2)

inst_52918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:158754*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158754*0 + 3*694*FLEN/8, x4, x1, x2)

inst_52919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:158757*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158757*0 + 3*695*FLEN/8, x4, x1, x2)

inst_52920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:158760*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158760*0 + 3*696*FLEN/8, x4, x1, x2)

inst_52921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:158763*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158763*0 + 3*697*FLEN/8, x4, x1, x2)

inst_52922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:158766*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158766*0 + 3*698*FLEN/8, x4, x1, x2)

inst_52923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:158769*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158769*0 + 3*699*FLEN/8, x4, x1, x2)

inst_52924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000000000; valaddr_reg:x3; val_offset:158772*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158772*0 + 3*700*FLEN/8, x4, x1, x2)

inst_52925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000000001; valaddr_reg:x3; val_offset:158775*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158775*0 + 3*701*FLEN/8, x4, x1, x2)

inst_52926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000000003; valaddr_reg:x3; val_offset:158778*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158778*0 + 3*702*FLEN/8, x4, x1, x2)

inst_52927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000000007; valaddr_reg:x3; val_offset:158781*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158781*0 + 3*703*FLEN/8, x4, x1, x2)

inst_52928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000000000f; valaddr_reg:x3; val_offset:158784*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158784*0 + 3*704*FLEN/8, x4, x1, x2)

inst_52929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000000001f; valaddr_reg:x3; val_offset:158787*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158787*0 + 3*705*FLEN/8, x4, x1, x2)

inst_52930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000000003f; valaddr_reg:x3; val_offset:158790*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158790*0 + 3*706*FLEN/8, x4, x1, x2)

inst_52931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000000007f; valaddr_reg:x3; val_offset:158793*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158793*0 + 3*707*FLEN/8, x4, x1, x2)

inst_52932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000000000ff; valaddr_reg:x3; val_offset:158796*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158796*0 + 3*708*FLEN/8, x4, x1, x2)

inst_52933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000000001ff; valaddr_reg:x3; val_offset:158799*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158799*0 + 3*709*FLEN/8, x4, x1, x2)

inst_52934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000000003ff; valaddr_reg:x3; val_offset:158802*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158802*0 + 3*710*FLEN/8, x4, x1, x2)

inst_52935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000000007ff; valaddr_reg:x3; val_offset:158805*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158805*0 + 3*711*FLEN/8, x4, x1, x2)

inst_52936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000000fff; valaddr_reg:x3; val_offset:158808*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158808*0 + 3*712*FLEN/8, x4, x1, x2)

inst_52937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000001fff; valaddr_reg:x3; val_offset:158811*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158811*0 + 3*713*FLEN/8, x4, x1, x2)

inst_52938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000003fff; valaddr_reg:x3; val_offset:158814*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158814*0 + 3*714*FLEN/8, x4, x1, x2)

inst_52939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000007fff; valaddr_reg:x3; val_offset:158817*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158817*0 + 3*715*FLEN/8, x4, x1, x2)

inst_52940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000000ffff; valaddr_reg:x3; val_offset:158820*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158820*0 + 3*716*FLEN/8, x4, x1, x2)

inst_52941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000001ffff; valaddr_reg:x3; val_offset:158823*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158823*0 + 3*717*FLEN/8, x4, x1, x2)

inst_52942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000003ffff; valaddr_reg:x3; val_offset:158826*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158826*0 + 3*718*FLEN/8, x4, x1, x2)

inst_52943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000007ffff; valaddr_reg:x3; val_offset:158829*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158829*0 + 3*719*FLEN/8, x4, x1, x2)

inst_52944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000000fffff; valaddr_reg:x3; val_offset:158832*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158832*0 + 3*720*FLEN/8, x4, x1, x2)

inst_52945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000001fffff; valaddr_reg:x3; val_offset:158835*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158835*0 + 3*721*FLEN/8, x4, x1, x2)

inst_52946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000003fffff; valaddr_reg:x3; val_offset:158838*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158838*0 + 3*722*FLEN/8, x4, x1, x2)

inst_52947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000007fffff; valaddr_reg:x3; val_offset:158841*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158841*0 + 3*723*FLEN/8, x4, x1, x2)

inst_52948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000000ffffff; valaddr_reg:x3; val_offset:158844*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158844*0 + 3*724*FLEN/8, x4, x1, x2)

inst_52949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000001ffffff; valaddr_reg:x3; val_offset:158847*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158847*0 + 3*725*FLEN/8, x4, x1, x2)

inst_52950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000003ffffff; valaddr_reg:x3; val_offset:158850*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158850*0 + 3*726*FLEN/8, x4, x1, x2)

inst_52951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000007ffffff; valaddr_reg:x3; val_offset:158853*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158853*0 + 3*727*FLEN/8, x4, x1, x2)

inst_52952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000000fffffff; valaddr_reg:x3; val_offset:158856*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158856*0 + 3*728*FLEN/8, x4, x1, x2)

inst_52953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000001fffffff; valaddr_reg:x3; val_offset:158859*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158859*0 + 3*729*FLEN/8, x4, x1, x2)

inst_52954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000003fffffff; valaddr_reg:x3; val_offset:158862*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158862*0 + 3*730*FLEN/8, x4, x1, x2)

inst_52955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000007fffffff; valaddr_reg:x3; val_offset:158865*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158865*0 + 3*731*FLEN/8, x4, x1, x2)

inst_52956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00000ffffffff; valaddr_reg:x3; val_offset:158868*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158868*0 + 3*732*FLEN/8, x4, x1, x2)

inst_52957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00001ffffffff; valaddr_reg:x3; val_offset:158871*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158871*0 + 3*733*FLEN/8, x4, x1, x2)

inst_52958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00003ffffffff; valaddr_reg:x3; val_offset:158874*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158874*0 + 3*734*FLEN/8, x4, x1, x2)

inst_52959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00007ffffffff; valaddr_reg:x3; val_offset:158877*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158877*0 + 3*735*FLEN/8, x4, x1, x2)

inst_52960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0000fffffffff; valaddr_reg:x3; val_offset:158880*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158880*0 + 3*736*FLEN/8, x4, x1, x2)

inst_52961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0001fffffffff; valaddr_reg:x3; val_offset:158883*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158883*0 + 3*737*FLEN/8, x4, x1, x2)

inst_52962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0003fffffffff; valaddr_reg:x3; val_offset:158886*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158886*0 + 3*738*FLEN/8, x4, x1, x2)

inst_52963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0007fffffffff; valaddr_reg:x3; val_offset:158889*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158889*0 + 3*739*FLEN/8, x4, x1, x2)

inst_52964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd000ffffffffff; valaddr_reg:x3; val_offset:158892*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158892*0 + 3*740*FLEN/8, x4, x1, x2)

inst_52965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd001ffffffffff; valaddr_reg:x3; val_offset:158895*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158895*0 + 3*741*FLEN/8, x4, x1, x2)

inst_52966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd003ffffffffff; valaddr_reg:x3; val_offset:158898*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158898*0 + 3*742*FLEN/8, x4, x1, x2)

inst_52967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd007ffffffffff; valaddr_reg:x3; val_offset:158901*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158901*0 + 3*743*FLEN/8, x4, x1, x2)

inst_52968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd00fffffffffff; valaddr_reg:x3; val_offset:158904*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158904*0 + 3*744*FLEN/8, x4, x1, x2)

inst_52969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd01fffffffffff; valaddr_reg:x3; val_offset:158907*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158907*0 + 3*745*FLEN/8, x4, x1, x2)

inst_52970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd03fffffffffff; valaddr_reg:x3; val_offset:158910*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158910*0 + 3*746*FLEN/8, x4, x1, x2)

inst_52971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd07fffffffffff; valaddr_reg:x3; val_offset:158913*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158913*0 + 3*747*FLEN/8, x4, x1, x2)

inst_52972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd0ffffffffffff; valaddr_reg:x3; val_offset:158916*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158916*0 + 3*748*FLEN/8, x4, x1, x2)

inst_52973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd1ffffffffffff; valaddr_reg:x3; val_offset:158919*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158919*0 + 3*749*FLEN/8, x4, x1, x2)

inst_52974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd3ffffffffffff; valaddr_reg:x3; val_offset:158922*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158922*0 + 3*750*FLEN/8, x4, x1, x2)

inst_52975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd7ffffffffffff; valaddr_reg:x3; val_offset:158925*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158925*0 + 3*751*FLEN/8, x4, x1, x2)

inst_52976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xd8000000000000; valaddr_reg:x3; val_offset:158928*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158928*0 + 3*752*FLEN/8, x4, x1, x2)

inst_52977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdc000000000000; valaddr_reg:x3; val_offset:158931*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158931*0 + 3*753*FLEN/8, x4, x1, x2)

inst_52978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xde000000000000; valaddr_reg:x3; val_offset:158934*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158934*0 + 3*754*FLEN/8, x4, x1, x2)

inst_52979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdf000000000000; valaddr_reg:x3; val_offset:158937*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158937*0 + 3*755*FLEN/8, x4, x1, x2)

inst_52980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdf800000000000; valaddr_reg:x3; val_offset:158940*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158940*0 + 3*756*FLEN/8, x4, x1, x2)

inst_52981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdfc00000000000; valaddr_reg:x3; val_offset:158943*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158943*0 + 3*757*FLEN/8, x4, x1, x2)

inst_52982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdfe00000000000; valaddr_reg:x3; val_offset:158946*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158946*0 + 3*758*FLEN/8, x4, x1, x2)

inst_52983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdff00000000000; valaddr_reg:x3; val_offset:158949*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158949*0 + 3*759*FLEN/8, x4, x1, x2)

inst_52984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdff80000000000; valaddr_reg:x3; val_offset:158952*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158952*0 + 3*760*FLEN/8, x4, x1, x2)

inst_52985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdffc0000000000; valaddr_reg:x3; val_offset:158955*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158955*0 + 3*761*FLEN/8, x4, x1, x2)

inst_52986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdffe0000000000; valaddr_reg:x3; val_offset:158958*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158958*0 + 3*762*FLEN/8, x4, x1, x2)

inst_52987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdfff0000000000; valaddr_reg:x3; val_offset:158961*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158961*0 + 3*763*FLEN/8, x4, x1, x2)

inst_52988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdfff8000000000; valaddr_reg:x3; val_offset:158964*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158964*0 + 3*764*FLEN/8, x4, x1, x2)

inst_52989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdfffc000000000; valaddr_reg:x3; val_offset:158967*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158967*0 + 3*765*FLEN/8, x4, x1, x2)

inst_52990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdfffe000000000; valaddr_reg:x3; val_offset:158970*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158970*0 + 3*766*FLEN/8, x4, x1, x2)

inst_52991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07249e248f138 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07249e248f138; op2val:0x0;
op3val:0xdffff000000000; valaddr_reg:x3; val_offset:158973*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158973*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6890576940689913055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409920,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409921,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409923,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409927,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409935,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409951,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409983,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410047,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410175,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410431,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410943,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547411967,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547414015,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547418111,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547426303,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547442687,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547475455,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547540991,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547672063,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547934207,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992548458495,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992549507071,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992551604223,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992555798527,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992564187135,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992580964351,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992614518783,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992681627647,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992815845375,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993084280831,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993621151743,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071994694893567,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071996842377215,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072001137344511,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072009727279103,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072026907148287,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072061266886655,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072129986363391,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072267425316863,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072542303223807,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90073092059037695,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90074191570665471,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90076390593921023,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90080788640432127,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90089584733454335,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90107176919498751,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90142361291587583,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90212730035765247,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90353467524120575,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90634942500831231,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(91197892454252543,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095167,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095168,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(93449692267937792,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94012642221359104,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94294117198069760,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94434854686425088,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94505223430602752,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94540407802691584,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94557999988736000,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94566796081758208,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94571194128269312,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94573393151524864,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94574492663152640,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575042418966528,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575317296873472,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575454735826944,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575523455303680,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575557815042048,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575574994911232,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575583584845824,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575587879813120,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575590027296768,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591101038592,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591637909504,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591906344960,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592040562688,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592107671552,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592141225984,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592158003200,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592166391808,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592170586112,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592172683264,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592173731840,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174256128,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174518272,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174649344,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174714880,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174747648,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174764032,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174772224,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174776320,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174778368,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779392,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779904,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780160,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780288,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780352,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780384,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780400,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780408,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780412,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780414,64,FLEN)
NAN_BOXED(6890600442295646772,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780415,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077632,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077633,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077635,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077639,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077647,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077663,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077695,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077759,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077887,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459078143,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459078655,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459079679,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459081727,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459085823,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459094015,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459110399,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459143167,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459208703,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459339775,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459601919,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420460126207,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420461174783,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420463271935,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420467466239,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420475854847,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420492632063,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420526186495,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420593295359,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420727513087,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420995948543,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530421532819455,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530422606561279,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530424754044927,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530429049012223,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530437638946815,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530454818815999,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530489178554367,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530557898031103,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530695336984575,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530970214891519,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421531519970705407,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421532619482333183,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421534818505588735,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421539216552099839,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421548012645122047,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421565604831166463,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421600789203255295,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421671157947432959,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421811895435788287,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9422093370412498943,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9422656320365920255,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9423782220272762879,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9423782220272762880,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9424908120179605504,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425471070133026816,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425752545109737472,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425893282598092800,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425963651342270464,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9425998835714359296,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426016427900403712,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426025223993425920,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426029622039937024,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426031821063192576,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426032920574820352,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033470330634240,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033745208541184,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033882647494656,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033951366971392,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426033985726709760,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034002906578944,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034011496513536,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034015791480832,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034017938964480,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019012706304,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019549577216,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019818012672,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034019952230400,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020019339264,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020052893696,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020069670912,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020078059520,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020082253824,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020084350976,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020085399552,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020085923840,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086185984,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086317056,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086382592,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086415360,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086431744,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086439936,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086444032,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086446080,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447104,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447616,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086447872,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448000,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448064,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448096,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448112,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448120,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448124,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448126,64,FLEN)
NAN_BOXED(6890606150653028096,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9426034020086448127,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370496,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370623,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370751,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371007,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371519,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627372543,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627374591,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627378687,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627386879,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627403263,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627436031,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627501567,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627632639,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627894783,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599628419071,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599629467647,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599631564799,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599635759103,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599644147711,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599660924927,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599694479359,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599761588223,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599895805951,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600164241407,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600701112319,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503601774854143,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503603922337791,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503608217305087,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503616807239679,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503633987108863,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503668346847231,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503737066323967,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503874505277439,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504149383184383,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504699138998271,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4505798650626047,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4507997673881599,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4512395720392703,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4521191813414911,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4538783999459327,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4573968371548159,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4644337115725823,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4785074604081151,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5066549580791807,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5629499534213119,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055743,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055744,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7881299347898368,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8444249301319680,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8725724278030336,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8866461766385664,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8936830510563328,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8972014882652160,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8989607068696576,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8998403161718784,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9002801208229888,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9005000231485440,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006099743113216,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006649498927104,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006924376834048,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007061815787520,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007130535264256,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007164895002624,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007182074871808,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007190664806400,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007194959773696,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007197107257344,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198180999168,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198717870080,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198986305536,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199120523264,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199187632128,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199221186560,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199237963776,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199246352384,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199250546688,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199252643840,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199253692416,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254216704,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254478848,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254609920,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254675456,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254708224,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254724608,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254732800,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254736896,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254738944,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254739968,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740480,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740736,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740864,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890612199951198618,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740991,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154304,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154305,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154307,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154311,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154319,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154335,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154367,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154431,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154559,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154815,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741155327,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741156351,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741158399,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741162495,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741170687,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741187071,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741219839,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741285375,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741416447,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741678591,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381742202879,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381743251455,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381745348607,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381749542911,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381757931519,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381774708735,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381808263167,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381875372031,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382009589759,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382278025215,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382814896127,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676383888637951,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676386036121599,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676390331088895,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676398921023487,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676416100892671,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676450460631039,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676519180107775,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676656619061247,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676931496968191,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220677481252782079,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220678580764409855,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220680779787665407,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220685177834176511,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220693973927198719,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220711566113243135,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220746750485331967,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220817119229509631,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220957856717864959,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221239331694575615,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221802281647996927,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839551,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839552,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224054081461682176,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224617031415103488,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224898506391814144,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225039243880169472,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225109612624347136,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225144796996435968,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225162389182480384,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225171185275502592,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225175583322013696,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225177782345269248,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225178881856897024,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179431612710912,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179706490617856,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179843929571328,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179912649048064,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179947008786432,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179964188655616,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179972778590208,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179977073557504,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179979221041152,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980294782976,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980831653888,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981100089344,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981234307072,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981301415936,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981334970368,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981351747584,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981360136192,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981364330496,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981366427648,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981367476224,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368000512,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368262656,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368393728,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368459264,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368492032,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368508416,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368516608,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368520704,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368522752,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368523776,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524288,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524544,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524672,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524736,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524768,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524784,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524792,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524796,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524798,64,FLEN)
NAN_BOXED(6890623078546566467,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524799,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962752,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962753,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962755,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962759,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962767,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962783,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962815,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962879,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963007,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963263,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637963775,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637964799,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637966847,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637970943,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637979135,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637995519,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638028287,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638093823,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638224895,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431638487039,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431639011327,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431640059903,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431642157055,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431646351359,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431654739967,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431671517183,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431705071615,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431772180479,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431906398207,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432174833663,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422432711704575,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422433785446399,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422435932930047,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422440227897343,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422448817831935,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422465997701119,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422500357439487,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422569076916223,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422706515869695,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422981393776639,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286423531149590527,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286424630661218303,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286426829684473855,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286431227730984959,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286440023824007167,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286457616010051583,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286492800382140415,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286563169126318079,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286703906614673407,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286985381591384063,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9287548331544805375,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451647999,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9288674231451648000,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9289800131358490624,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290363081311911936,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290644556288622592,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290785293776977920,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290855662521155584,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290890846893244416,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290908439079288832,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290917235172311040,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290921633218822144,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290923832242077696,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290924931753705472,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925481509519360,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925756387426304,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925893826379776,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925962545856512,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290925996905594880,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926014085464064,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926022675398656,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926026970365952,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926029117849600,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030191591424,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030728462336,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926030996897792,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031131115520,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031198224384,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031231778816,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031248556032,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031256944640,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031261138944,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031263236096,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264284672,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031264808960,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265071104,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265202176,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265267712,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265300480,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265316864,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265325056,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265329152,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265331200,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332224,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332736,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265332992,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333120,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333184,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333216,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333232,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333240,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333244,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333246,64,FLEN)
NAN_BOXED(6890631473991259107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333247,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816448,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816449,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816451,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816455,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816463,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816479,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816511,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816575,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816703,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816959,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155817471,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155818495,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155820543,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155824639,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155832831,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155849215,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155881983,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155947519,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156078591,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156340735,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795156865023,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795157913599,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795160010751,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795164205055,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795172593663,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795189370879,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795222925311,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795290034175,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795424251903,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795692687359,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546796229558271,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546797303300095,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546799450783743,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546803745751039,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546812335685631,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546829515554815,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546863875293183,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546932594769919,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547070033723391,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547344911630335,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58547894667444223,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58548994179071999,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58551193202327551,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58555591248838655,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58564387341860863,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58581979527905279,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58617163899994111,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58687532644171775,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58828270132527103,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(59109745109237759,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(59672695062659071,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(60798594969501695,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(60798594969501696,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(61924494876344320,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62487444829765632,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62768919806476288,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62909657294831616,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(62980026039009280,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63015210411098112,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63032802597142528,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63041598690164736,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63045996736675840,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63048195759931392,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63049295271559168,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63049845027373056,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050119905280000,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050257344233472,64,FLEN)
NAN_BOXED(6890633091531469112,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050326063710208,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
