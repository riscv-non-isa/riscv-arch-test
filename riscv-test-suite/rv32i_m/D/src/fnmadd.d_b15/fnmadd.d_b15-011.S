
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_7680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000003ffff; valaddr_reg:x3; val_offset:23040*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23040*0 + 3*0*FLEN/8, x4, x1, x2)

inst_7681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000007ffff; valaddr_reg:x3; val_offset:23043*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23043*0 + 3*1*FLEN/8, x4, x1, x2)

inst_7682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000000fffff; valaddr_reg:x3; val_offset:23046*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23046*0 + 3*2*FLEN/8, x4, x1, x2)

inst_7683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000001fffff; valaddr_reg:x3; val_offset:23049*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23049*0 + 3*3*FLEN/8, x4, x1, x2)

inst_7684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000003fffff; valaddr_reg:x3; val_offset:23052*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23052*0 + 3*4*FLEN/8, x4, x1, x2)

inst_7685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000007fffff; valaddr_reg:x3; val_offset:23055*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23055*0 + 3*5*FLEN/8, x4, x1, x2)

inst_7686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000000ffffff; valaddr_reg:x3; val_offset:23058*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23058*0 + 3*6*FLEN/8, x4, x1, x2)

inst_7687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000001ffffff; valaddr_reg:x3; val_offset:23061*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23061*0 + 3*7*FLEN/8, x4, x1, x2)

inst_7688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000003ffffff; valaddr_reg:x3; val_offset:23064*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23064*0 + 3*8*FLEN/8, x4, x1, x2)

inst_7689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000007ffffff; valaddr_reg:x3; val_offset:23067*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23067*0 + 3*9*FLEN/8, x4, x1, x2)

inst_7690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000000fffffff; valaddr_reg:x3; val_offset:23070*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23070*0 + 3*10*FLEN/8, x4, x1, x2)

inst_7691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000001fffffff; valaddr_reg:x3; val_offset:23073*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23073*0 + 3*11*FLEN/8, x4, x1, x2)

inst_7692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000003fffffff; valaddr_reg:x3; val_offset:23076*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23076*0 + 3*12*FLEN/8, x4, x1, x2)

inst_7693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000007fffffff; valaddr_reg:x3; val_offset:23079*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23079*0 + 3*13*FLEN/8, x4, x1, x2)

inst_7694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900000ffffffff; valaddr_reg:x3; val_offset:23082*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23082*0 + 3*14*FLEN/8, x4, x1, x2)

inst_7695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900001ffffffff; valaddr_reg:x3; val_offset:23085*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23085*0 + 3*15*FLEN/8, x4, x1, x2)

inst_7696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900003ffffffff; valaddr_reg:x3; val_offset:23088*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23088*0 + 3*16*FLEN/8, x4, x1, x2)

inst_7697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900007ffffffff; valaddr_reg:x3; val_offset:23091*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23091*0 + 3*17*FLEN/8, x4, x1, x2)

inst_7698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90000fffffffff; valaddr_reg:x3; val_offset:23094*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23094*0 + 3*18*FLEN/8, x4, x1, x2)

inst_7699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90001fffffffff; valaddr_reg:x3; val_offset:23097*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23097*0 + 3*19*FLEN/8, x4, x1, x2)

inst_7700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90003fffffffff; valaddr_reg:x3; val_offset:23100*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23100*0 + 3*20*FLEN/8, x4, x1, x2)

inst_7701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90007fffffffff; valaddr_reg:x3; val_offset:23103*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23103*0 + 3*21*FLEN/8, x4, x1, x2)

inst_7702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9000ffffffffff; valaddr_reg:x3; val_offset:23106*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23106*0 + 3*22*FLEN/8, x4, x1, x2)

inst_7703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9001ffffffffff; valaddr_reg:x3; val_offset:23109*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23109*0 + 3*23*FLEN/8, x4, x1, x2)

inst_7704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9003ffffffffff; valaddr_reg:x3; val_offset:23112*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23112*0 + 3*24*FLEN/8, x4, x1, x2)

inst_7705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9007ffffffffff; valaddr_reg:x3; val_offset:23115*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23115*0 + 3*25*FLEN/8, x4, x1, x2)

inst_7706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb900fffffffffff; valaddr_reg:x3; val_offset:23118*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23118*0 + 3*26*FLEN/8, x4, x1, x2)

inst_7707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb901fffffffffff; valaddr_reg:x3; val_offset:23121*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23121*0 + 3*27*FLEN/8, x4, x1, x2)

inst_7708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb903fffffffffff; valaddr_reg:x3; val_offset:23124*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23124*0 + 3*28*FLEN/8, x4, x1, x2)

inst_7709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb907fffffffffff; valaddr_reg:x3; val_offset:23127*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23127*0 + 3*29*FLEN/8, x4, x1, x2)

inst_7710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb90ffffffffffff; valaddr_reg:x3; val_offset:23130*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23130*0 + 3*30*FLEN/8, x4, x1, x2)

inst_7711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb91ffffffffffff; valaddr_reg:x3; val_offset:23133*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23133*0 + 3*31*FLEN/8, x4, x1, x2)

inst_7712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb93ffffffffffff; valaddr_reg:x3; val_offset:23136*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23136*0 + 3*32*FLEN/8, x4, x1, x2)

inst_7713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb97ffffffffffff; valaddr_reg:x3; val_offset:23139*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23139*0 + 3*33*FLEN/8, x4, x1, x2)

inst_7714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb98000000000000; valaddr_reg:x3; val_offset:23142*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23142*0 + 3*34*FLEN/8, x4, x1, x2)

inst_7715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9c000000000000; valaddr_reg:x3; val_offset:23145*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23145*0 + 3*35*FLEN/8, x4, x1, x2)

inst_7716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9e000000000000; valaddr_reg:x3; val_offset:23148*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23148*0 + 3*36*FLEN/8, x4, x1, x2)

inst_7717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9f000000000000; valaddr_reg:x3; val_offset:23151*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23151*0 + 3*37*FLEN/8, x4, x1, x2)

inst_7718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9f800000000000; valaddr_reg:x3; val_offset:23154*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23154*0 + 3*38*FLEN/8, x4, x1, x2)

inst_7719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fc00000000000; valaddr_reg:x3; val_offset:23157*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23157*0 + 3*39*FLEN/8, x4, x1, x2)

inst_7720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fe00000000000; valaddr_reg:x3; val_offset:23160*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23160*0 + 3*40*FLEN/8, x4, x1, x2)

inst_7721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ff00000000000; valaddr_reg:x3; val_offset:23163*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23163*0 + 3*41*FLEN/8, x4, x1, x2)

inst_7722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ff80000000000; valaddr_reg:x3; val_offset:23166*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23166*0 + 3*42*FLEN/8, x4, x1, x2)

inst_7723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffc0000000000; valaddr_reg:x3; val_offset:23169*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23169*0 + 3*43*FLEN/8, x4, x1, x2)

inst_7724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffe0000000000; valaddr_reg:x3; val_offset:23172*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23172*0 + 3*44*FLEN/8, x4, x1, x2)

inst_7725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fff0000000000; valaddr_reg:x3; val_offset:23175*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23175*0 + 3*45*FLEN/8, x4, x1, x2)

inst_7726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fff8000000000; valaddr_reg:x3; val_offset:23178*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23178*0 + 3*46*FLEN/8, x4, x1, x2)

inst_7727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffc000000000; valaddr_reg:x3; val_offset:23181*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23181*0 + 3*47*FLEN/8, x4, x1, x2)

inst_7728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffe000000000; valaddr_reg:x3; val_offset:23184*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23184*0 + 3*48*FLEN/8, x4, x1, x2)

inst_7729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffff000000000; valaddr_reg:x3; val_offset:23187*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23187*0 + 3*49*FLEN/8, x4, x1, x2)

inst_7730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffff800000000; valaddr_reg:x3; val_offset:23190*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23190*0 + 3*50*FLEN/8, x4, x1, x2)

inst_7731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffc00000000; valaddr_reg:x3; val_offset:23193*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23193*0 + 3*51*FLEN/8, x4, x1, x2)

inst_7732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffe00000000; valaddr_reg:x3; val_offset:23196*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23196*0 + 3*52*FLEN/8, x4, x1, x2)

inst_7733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffff00000000; valaddr_reg:x3; val_offset:23199*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23199*0 + 3*53*FLEN/8, x4, x1, x2)

inst_7734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffff80000000; valaddr_reg:x3; val_offset:23202*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23202*0 + 3*54*FLEN/8, x4, x1, x2)

inst_7735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffc0000000; valaddr_reg:x3; val_offset:23205*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23205*0 + 3*55*FLEN/8, x4, x1, x2)

inst_7736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffe0000000; valaddr_reg:x3; val_offset:23208*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23208*0 + 3*56*FLEN/8, x4, x1, x2)

inst_7737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffff0000000; valaddr_reg:x3; val_offset:23211*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23211*0 + 3*57*FLEN/8, x4, x1, x2)

inst_7738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffff8000000; valaddr_reg:x3; val_offset:23214*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23214*0 + 3*58*FLEN/8, x4, x1, x2)

inst_7739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffc000000; valaddr_reg:x3; val_offset:23217*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23217*0 + 3*59*FLEN/8, x4, x1, x2)

inst_7740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffe000000; valaddr_reg:x3; val_offset:23220*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23220*0 + 3*60*FLEN/8, x4, x1, x2)

inst_7741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffff000000; valaddr_reg:x3; val_offset:23223*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23223*0 + 3*61*FLEN/8, x4, x1, x2)

inst_7742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffff800000; valaddr_reg:x3; val_offset:23226*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23226*0 + 3*62*FLEN/8, x4, x1, x2)

inst_7743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffc00000; valaddr_reg:x3; val_offset:23229*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23229*0 + 3*63*FLEN/8, x4, x1, x2)

inst_7744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffe00000; valaddr_reg:x3; val_offset:23232*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23232*0 + 3*64*FLEN/8, x4, x1, x2)

inst_7745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffff00000; valaddr_reg:x3; val_offset:23235*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23235*0 + 3*65*FLEN/8, x4, x1, x2)

inst_7746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffff80000; valaddr_reg:x3; val_offset:23238*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23238*0 + 3*66*FLEN/8, x4, x1, x2)

inst_7747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffc0000; valaddr_reg:x3; val_offset:23241*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23241*0 + 3*67*FLEN/8, x4, x1, x2)

inst_7748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffe0000; valaddr_reg:x3; val_offset:23244*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23244*0 + 3*68*FLEN/8, x4, x1, x2)

inst_7749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffff0000; valaddr_reg:x3; val_offset:23247*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23247*0 + 3*69*FLEN/8, x4, x1, x2)

inst_7750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffff8000; valaddr_reg:x3; val_offset:23250*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23250*0 + 3*70*FLEN/8, x4, x1, x2)

inst_7751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffffc000; valaddr_reg:x3; val_offset:23253*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23253*0 + 3*71*FLEN/8, x4, x1, x2)

inst_7752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffffe000; valaddr_reg:x3; val_offset:23256*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23256*0 + 3*72*FLEN/8, x4, x1, x2)

inst_7753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffff000; valaddr_reg:x3; val_offset:23259*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23259*0 + 3*73*FLEN/8, x4, x1, x2)

inst_7754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffff800; valaddr_reg:x3; val_offset:23262*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23262*0 + 3*74*FLEN/8, x4, x1, x2)

inst_7755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffffc00; valaddr_reg:x3; val_offset:23265*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23265*0 + 3*75*FLEN/8, x4, x1, x2)

inst_7756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffffe00; valaddr_reg:x3; val_offset:23268*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23268*0 + 3*76*FLEN/8, x4, x1, x2)

inst_7757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffffff00; valaddr_reg:x3; val_offset:23271*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23271*0 + 3*77*FLEN/8, x4, x1, x2)

inst_7758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffffff80; valaddr_reg:x3; val_offset:23274*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23274*0 + 3*78*FLEN/8, x4, x1, x2)

inst_7759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffffffc0; valaddr_reg:x3; val_offset:23277*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23277*0 + 3*79*FLEN/8, x4, x1, x2)

inst_7760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffffffe0; valaddr_reg:x3; val_offset:23280*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23280*0 + 3*80*FLEN/8, x4, x1, x2)

inst_7761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffffff0; valaddr_reg:x3; val_offset:23283*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23283*0 + 3*81*FLEN/8, x4, x1, x2)

inst_7762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffffff8; valaddr_reg:x3; val_offset:23286*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23286*0 + 3*82*FLEN/8, x4, x1, x2)

inst_7763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffffffc; valaddr_reg:x3; val_offset:23289*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23289*0 + 3*83*FLEN/8, x4, x1, x2)

inst_7764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9ffffffffffffe; valaddr_reg:x3; val_offset:23292*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23292*0 + 3*84*FLEN/8, x4, x1, x2)

inst_7765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbb9fffffffffffff; valaddr_reg:x3; val_offset:23295*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23295*0 + 3*85*FLEN/8, x4, x1, x2)

inst_7766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:23298*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23298*0 + 3*86*FLEN/8, x4, x1, x2)

inst_7767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:23301*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23301*0 + 3*87*FLEN/8, x4, x1, x2)

inst_7768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:23304*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23304*0 + 3*88*FLEN/8, x4, x1, x2)

inst_7769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:23307*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23307*0 + 3*89*FLEN/8, x4, x1, x2)

inst_7770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:23310*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23310*0 + 3*90*FLEN/8, x4, x1, x2)

inst_7771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:23313*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23313*0 + 3*91*FLEN/8, x4, x1, x2)

inst_7772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:23316*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23316*0 + 3*92*FLEN/8, x4, x1, x2)

inst_7773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:23319*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23319*0 + 3*93*FLEN/8, x4, x1, x2)

inst_7774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:23322*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23322*0 + 3*94*FLEN/8, x4, x1, x2)

inst_7775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:23325*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23325*0 + 3*95*FLEN/8, x4, x1, x2)

inst_7776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:23328*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23328*0 + 3*96*FLEN/8, x4, x1, x2)

inst_7777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:23331*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23331*0 + 3*97*FLEN/8, x4, x1, x2)

inst_7778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:23334*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23334*0 + 3*98*FLEN/8, x4, x1, x2)

inst_7779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:23337*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23337*0 + 3*99*FLEN/8, x4, x1, x2)

inst_7780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:23340*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23340*0 + 3*100*FLEN/8, x4, x1, x2)

inst_7781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:23343*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23343*0 + 3*101*FLEN/8, x4, x1, x2)

inst_7782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:23346*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23346*0 + 3*102*FLEN/8, x4, x1, x2)

inst_7783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:23349*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23349*0 + 3*103*FLEN/8, x4, x1, x2)

inst_7784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:23352*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23352*0 + 3*104*FLEN/8, x4, x1, x2)

inst_7785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:23355*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23355*0 + 3*105*FLEN/8, x4, x1, x2)

inst_7786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:23358*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23358*0 + 3*106*FLEN/8, x4, x1, x2)

inst_7787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x3bd48904bf0a7 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x9f01fe8e93132 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f73bd48904bf0a7; op2val:0x9ff9f01fe8e93132;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:23361*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23361*0 + 3*107*FLEN/8, x4, x1, x2)

inst_7788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000000000; valaddr_reg:x3; val_offset:23364*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23364*0 + 3*108*FLEN/8, x4, x1, x2)

inst_7789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:23367*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23367*0 + 3*109*FLEN/8, x4, x1, x2)

inst_7790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:23370*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23370*0 + 3*110*FLEN/8, x4, x1, x2)

inst_7791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:23373*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23373*0 + 3*111*FLEN/8, x4, x1, x2)

inst_7792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:23376*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23376*0 + 3*112*FLEN/8, x4, x1, x2)

inst_7793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:23379*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23379*0 + 3*113*FLEN/8, x4, x1, x2)

inst_7794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:23382*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23382*0 + 3*114*FLEN/8, x4, x1, x2)

inst_7795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000000007f; valaddr_reg:x3; val_offset:23385*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23385*0 + 3*115*FLEN/8, x4, x1, x2)

inst_7796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000000000ff; valaddr_reg:x3; val_offset:23388*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23388*0 + 3*116*FLEN/8, x4, x1, x2)

inst_7797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000000001ff; valaddr_reg:x3; val_offset:23391*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23391*0 + 3*117*FLEN/8, x4, x1, x2)

inst_7798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000000003ff; valaddr_reg:x3; val_offset:23394*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23394*0 + 3*118*FLEN/8, x4, x1, x2)

inst_7799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000000007ff; valaddr_reg:x3; val_offset:23397*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23397*0 + 3*119*FLEN/8, x4, x1, x2)

inst_7800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000000fff; valaddr_reg:x3; val_offset:23400*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23400*0 + 3*120*FLEN/8, x4, x1, x2)

inst_7801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000001fff; valaddr_reg:x3; val_offset:23403*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23403*0 + 3*121*FLEN/8, x4, x1, x2)

inst_7802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000003fff; valaddr_reg:x3; val_offset:23406*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23406*0 + 3*122*FLEN/8, x4, x1, x2)

inst_7803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000007fff; valaddr_reg:x3; val_offset:23409*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23409*0 + 3*123*FLEN/8, x4, x1, x2)

inst_7804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000000ffff; valaddr_reg:x3; val_offset:23412*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23412*0 + 3*124*FLEN/8, x4, x1, x2)

inst_7805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000001ffff; valaddr_reg:x3; val_offset:23415*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23415*0 + 3*125*FLEN/8, x4, x1, x2)

inst_7806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000003ffff; valaddr_reg:x3; val_offset:23418*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23418*0 + 3*126*FLEN/8, x4, x1, x2)

inst_7807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000007ffff; valaddr_reg:x3; val_offset:23421*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23421*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_7808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000000fffff; valaddr_reg:x3; val_offset:23424*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23424*0 + 3*128*FLEN/8, x4, x1, x2)

inst_7809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000001fffff; valaddr_reg:x3; val_offset:23427*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23427*0 + 3*129*FLEN/8, x4, x1, x2)

inst_7810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000003fffff; valaddr_reg:x3; val_offset:23430*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23430*0 + 3*130*FLEN/8, x4, x1, x2)

inst_7811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000007fffff; valaddr_reg:x3; val_offset:23433*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23433*0 + 3*131*FLEN/8, x4, x1, x2)

inst_7812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000000ffffff; valaddr_reg:x3; val_offset:23436*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23436*0 + 3*132*FLEN/8, x4, x1, x2)

inst_7813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000001ffffff; valaddr_reg:x3; val_offset:23439*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23439*0 + 3*133*FLEN/8, x4, x1, x2)

inst_7814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000003ffffff; valaddr_reg:x3; val_offset:23442*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23442*0 + 3*134*FLEN/8, x4, x1, x2)

inst_7815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000007ffffff; valaddr_reg:x3; val_offset:23445*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23445*0 + 3*135*FLEN/8, x4, x1, x2)

inst_7816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000000fffffff; valaddr_reg:x3; val_offset:23448*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23448*0 + 3*136*FLEN/8, x4, x1, x2)

inst_7817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000001fffffff; valaddr_reg:x3; val_offset:23451*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23451*0 + 3*137*FLEN/8, x4, x1, x2)

inst_7818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000003fffffff; valaddr_reg:x3; val_offset:23454*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23454*0 + 3*138*FLEN/8, x4, x1, x2)

inst_7819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000007fffffff; valaddr_reg:x3; val_offset:23457*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23457*0 + 3*139*FLEN/8, x4, x1, x2)

inst_7820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100000ffffffff; valaddr_reg:x3; val_offset:23460*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23460*0 + 3*140*FLEN/8, x4, x1, x2)

inst_7821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100001ffffffff; valaddr_reg:x3; val_offset:23463*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23463*0 + 3*141*FLEN/8, x4, x1, x2)

inst_7822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100003ffffffff; valaddr_reg:x3; val_offset:23466*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23466*0 + 3*142*FLEN/8, x4, x1, x2)

inst_7823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100007ffffffff; valaddr_reg:x3; val_offset:23469*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23469*0 + 3*143*FLEN/8, x4, x1, x2)

inst_7824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10000fffffffff; valaddr_reg:x3; val_offset:23472*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23472*0 + 3*144*FLEN/8, x4, x1, x2)

inst_7825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10001fffffffff; valaddr_reg:x3; val_offset:23475*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23475*0 + 3*145*FLEN/8, x4, x1, x2)

inst_7826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10003fffffffff; valaddr_reg:x3; val_offset:23478*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23478*0 + 3*146*FLEN/8, x4, x1, x2)

inst_7827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10007fffffffff; valaddr_reg:x3; val_offset:23481*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23481*0 + 3*147*FLEN/8, x4, x1, x2)

inst_7828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1000ffffffffff; valaddr_reg:x3; val_offset:23484*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23484*0 + 3*148*FLEN/8, x4, x1, x2)

inst_7829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1001ffffffffff; valaddr_reg:x3; val_offset:23487*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23487*0 + 3*149*FLEN/8, x4, x1, x2)

inst_7830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1003ffffffffff; valaddr_reg:x3; val_offset:23490*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23490*0 + 3*150*FLEN/8, x4, x1, x2)

inst_7831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1007ffffffffff; valaddr_reg:x3; val_offset:23493*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23493*0 + 3*151*FLEN/8, x4, x1, x2)

inst_7832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x100fffffffffff; valaddr_reg:x3; val_offset:23496*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23496*0 + 3*152*FLEN/8, x4, x1, x2)

inst_7833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x101fffffffffff; valaddr_reg:x3; val_offset:23499*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23499*0 + 3*153*FLEN/8, x4, x1, x2)

inst_7834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x103fffffffffff; valaddr_reg:x3; val_offset:23502*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23502*0 + 3*154*FLEN/8, x4, x1, x2)

inst_7835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x107fffffffffff; valaddr_reg:x3; val_offset:23505*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23505*0 + 3*155*FLEN/8, x4, x1, x2)

inst_7836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x10ffffffffffff; valaddr_reg:x3; val_offset:23508*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23508*0 + 3*156*FLEN/8, x4, x1, x2)

inst_7837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x11ffffffffffff; valaddr_reg:x3; val_offset:23511*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23511*0 + 3*157*FLEN/8, x4, x1, x2)

inst_7838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:23514*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23514*0 + 3*158*FLEN/8, x4, x1, x2)

inst_7839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x13ffffffffffff; valaddr_reg:x3; val_offset:23517*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23517*0 + 3*159*FLEN/8, x4, x1, x2)

inst_7840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:23520*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23520*0 + 3*160*FLEN/8, x4, x1, x2)

inst_7841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:23523*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23523*0 + 3*161*FLEN/8, x4, x1, x2)

inst_7842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:23526*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23526*0 + 3*162*FLEN/8, x4, x1, x2)

inst_7843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:23529*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23529*0 + 3*163*FLEN/8, x4, x1, x2)

inst_7844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x17ffffffffffff; valaddr_reg:x3; val_offset:23532*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23532*0 + 3*164*FLEN/8, x4, x1, x2)

inst_7845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x18000000000000; valaddr_reg:x3; val_offset:23535*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23535*0 + 3*165*FLEN/8, x4, x1, x2)

inst_7846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:23538*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23538*0 + 3*166*FLEN/8, x4, x1, x2)

inst_7847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:23541*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23541*0 + 3*167*FLEN/8, x4, x1, x2)

inst_7848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:23544*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23544*0 + 3*168*FLEN/8, x4, x1, x2)

inst_7849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1c000000000000; valaddr_reg:x3; val_offset:23547*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23547*0 + 3*169*FLEN/8, x4, x1, x2)

inst_7850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:23550*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23550*0 + 3*170*FLEN/8, x4, x1, x2)

inst_7851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:23553*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23553*0 + 3*171*FLEN/8, x4, x1, x2)

inst_7852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1e000000000000; valaddr_reg:x3; val_offset:23556*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23556*0 + 3*172*FLEN/8, x4, x1, x2)

inst_7853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1f000000000000; valaddr_reg:x3; val_offset:23559*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23559*0 + 3*173*FLEN/8, x4, x1, x2)

inst_7854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1f800000000000; valaddr_reg:x3; val_offset:23562*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23562*0 + 3*174*FLEN/8, x4, x1, x2)

inst_7855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fc00000000000; valaddr_reg:x3; val_offset:23565*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23565*0 + 3*175*FLEN/8, x4, x1, x2)

inst_7856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fe00000000000; valaddr_reg:x3; val_offset:23568*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23568*0 + 3*176*FLEN/8, x4, x1, x2)

inst_7857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ff00000000000; valaddr_reg:x3; val_offset:23571*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23571*0 + 3*177*FLEN/8, x4, x1, x2)

inst_7858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ff80000000000; valaddr_reg:x3; val_offset:23574*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23574*0 + 3*178*FLEN/8, x4, x1, x2)

inst_7859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffc0000000000; valaddr_reg:x3; val_offset:23577*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23577*0 + 3*179*FLEN/8, x4, x1, x2)

inst_7860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffe0000000000; valaddr_reg:x3; val_offset:23580*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23580*0 + 3*180*FLEN/8, x4, x1, x2)

inst_7861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fff0000000000; valaddr_reg:x3; val_offset:23583*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23583*0 + 3*181*FLEN/8, x4, x1, x2)

inst_7862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fff8000000000; valaddr_reg:x3; val_offset:23586*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23586*0 + 3*182*FLEN/8, x4, x1, x2)

inst_7863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffc000000000; valaddr_reg:x3; val_offset:23589*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23589*0 + 3*183*FLEN/8, x4, x1, x2)

inst_7864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffe000000000; valaddr_reg:x3; val_offset:23592*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23592*0 + 3*184*FLEN/8, x4, x1, x2)

inst_7865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffff000000000; valaddr_reg:x3; val_offset:23595*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23595*0 + 3*185*FLEN/8, x4, x1, x2)

inst_7866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffff800000000; valaddr_reg:x3; val_offset:23598*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23598*0 + 3*186*FLEN/8, x4, x1, x2)

inst_7867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffc00000000; valaddr_reg:x3; val_offset:23601*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23601*0 + 3*187*FLEN/8, x4, x1, x2)

inst_7868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffe00000000; valaddr_reg:x3; val_offset:23604*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23604*0 + 3*188*FLEN/8, x4, x1, x2)

inst_7869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffff00000000; valaddr_reg:x3; val_offset:23607*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23607*0 + 3*189*FLEN/8, x4, x1, x2)

inst_7870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffff80000000; valaddr_reg:x3; val_offset:23610*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23610*0 + 3*190*FLEN/8, x4, x1, x2)

inst_7871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffc0000000; valaddr_reg:x3; val_offset:23613*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23613*0 + 3*191*FLEN/8, x4, x1, x2)

inst_7872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffe0000000; valaddr_reg:x3; val_offset:23616*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23616*0 + 3*192*FLEN/8, x4, x1, x2)

inst_7873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffff0000000; valaddr_reg:x3; val_offset:23619*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23619*0 + 3*193*FLEN/8, x4, x1, x2)

inst_7874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffff8000000; valaddr_reg:x3; val_offset:23622*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23622*0 + 3*194*FLEN/8, x4, x1, x2)

inst_7875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffc000000; valaddr_reg:x3; val_offset:23625*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23625*0 + 3*195*FLEN/8, x4, x1, x2)

inst_7876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffe000000; valaddr_reg:x3; val_offset:23628*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23628*0 + 3*196*FLEN/8, x4, x1, x2)

inst_7877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffff000000; valaddr_reg:x3; val_offset:23631*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23631*0 + 3*197*FLEN/8, x4, x1, x2)

inst_7878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffff800000; valaddr_reg:x3; val_offset:23634*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23634*0 + 3*198*FLEN/8, x4, x1, x2)

inst_7879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffc00000; valaddr_reg:x3; val_offset:23637*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23637*0 + 3*199*FLEN/8, x4, x1, x2)

inst_7880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffe00000; valaddr_reg:x3; val_offset:23640*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23640*0 + 3*200*FLEN/8, x4, x1, x2)

inst_7881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffff00000; valaddr_reg:x3; val_offset:23643*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23643*0 + 3*201*FLEN/8, x4, x1, x2)

inst_7882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffff80000; valaddr_reg:x3; val_offset:23646*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23646*0 + 3*202*FLEN/8, x4, x1, x2)

inst_7883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffc0000; valaddr_reg:x3; val_offset:23649*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23649*0 + 3*203*FLEN/8, x4, x1, x2)

inst_7884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffe0000; valaddr_reg:x3; val_offset:23652*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23652*0 + 3*204*FLEN/8, x4, x1, x2)

inst_7885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffff0000; valaddr_reg:x3; val_offset:23655*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23655*0 + 3*205*FLEN/8, x4, x1, x2)

inst_7886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffff8000; valaddr_reg:x3; val_offset:23658*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23658*0 + 3*206*FLEN/8, x4, x1, x2)

inst_7887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffffc000; valaddr_reg:x3; val_offset:23661*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23661*0 + 3*207*FLEN/8, x4, x1, x2)

inst_7888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffffe000; valaddr_reg:x3; val_offset:23664*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23664*0 + 3*208*FLEN/8, x4, x1, x2)

inst_7889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffff000; valaddr_reg:x3; val_offset:23667*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23667*0 + 3*209*FLEN/8, x4, x1, x2)

inst_7890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffff800; valaddr_reg:x3; val_offset:23670*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23670*0 + 3*210*FLEN/8, x4, x1, x2)

inst_7891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffffc00; valaddr_reg:x3; val_offset:23673*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23673*0 + 3*211*FLEN/8, x4, x1, x2)

inst_7892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffffe00; valaddr_reg:x3; val_offset:23676*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23676*0 + 3*212*FLEN/8, x4, x1, x2)

inst_7893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffffff00; valaddr_reg:x3; val_offset:23679*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23679*0 + 3*213*FLEN/8, x4, x1, x2)

inst_7894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffffff80; valaddr_reg:x3; val_offset:23682*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23682*0 + 3*214*FLEN/8, x4, x1, x2)

inst_7895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:23685*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23685*0 + 3*215*FLEN/8, x4, x1, x2)

inst_7896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:23688*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23688*0 + 3*216*FLEN/8, x4, x1, x2)

inst_7897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:23691*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23691*0 + 3*217*FLEN/8, x4, x1, x2)

inst_7898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:23694*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23694*0 + 3*218*FLEN/8, x4, x1, x2)

inst_7899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:23697*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23697*0 + 3*219*FLEN/8, x4, x1, x2)

inst_7900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:23700*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23700*0 + 3*220*FLEN/8, x4, x1, x2)

inst_7901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x45b522ecffd27 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f745b522ecffd27; op2val:0x0;
op3val:0x1fffffffffffff; valaddr_reg:x3; val_offset:23703*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23703*0 + 3*221*FLEN/8, x4, x1, x2)

inst_7902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000000000; valaddr_reg:x3; val_offset:23706*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23706*0 + 3*222*FLEN/8, x4, x1, x2)

inst_7903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000000001; valaddr_reg:x3; val_offset:23709*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23709*0 + 3*223*FLEN/8, x4, x1, x2)

inst_7904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000000003; valaddr_reg:x3; val_offset:23712*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23712*0 + 3*224*FLEN/8, x4, x1, x2)

inst_7905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000000007; valaddr_reg:x3; val_offset:23715*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23715*0 + 3*225*FLEN/8, x4, x1, x2)

inst_7906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000000000f; valaddr_reg:x3; val_offset:23718*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23718*0 + 3*226*FLEN/8, x4, x1, x2)

inst_7907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000000001f; valaddr_reg:x3; val_offset:23721*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23721*0 + 3*227*FLEN/8, x4, x1, x2)

inst_7908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000000003f; valaddr_reg:x3; val_offset:23724*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23724*0 + 3*228*FLEN/8, x4, x1, x2)

inst_7909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000000007f; valaddr_reg:x3; val_offset:23727*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23727*0 + 3*229*FLEN/8, x4, x1, x2)

inst_7910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000000000ff; valaddr_reg:x3; val_offset:23730*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23730*0 + 3*230*FLEN/8, x4, x1, x2)

inst_7911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000000001ff; valaddr_reg:x3; val_offset:23733*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23733*0 + 3*231*FLEN/8, x4, x1, x2)

inst_7912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000000003ff; valaddr_reg:x3; val_offset:23736*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23736*0 + 3*232*FLEN/8, x4, x1, x2)

inst_7913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000000007ff; valaddr_reg:x3; val_offset:23739*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23739*0 + 3*233*FLEN/8, x4, x1, x2)

inst_7914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000000fff; valaddr_reg:x3; val_offset:23742*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23742*0 + 3*234*FLEN/8, x4, x1, x2)

inst_7915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000001fff; valaddr_reg:x3; val_offset:23745*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23745*0 + 3*235*FLEN/8, x4, x1, x2)

inst_7916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000003fff; valaddr_reg:x3; val_offset:23748*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23748*0 + 3*236*FLEN/8, x4, x1, x2)

inst_7917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000007fff; valaddr_reg:x3; val_offset:23751*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23751*0 + 3*237*FLEN/8, x4, x1, x2)

inst_7918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000000ffff; valaddr_reg:x3; val_offset:23754*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23754*0 + 3*238*FLEN/8, x4, x1, x2)

inst_7919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000001ffff; valaddr_reg:x3; val_offset:23757*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23757*0 + 3*239*FLEN/8, x4, x1, x2)

inst_7920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000003ffff; valaddr_reg:x3; val_offset:23760*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23760*0 + 3*240*FLEN/8, x4, x1, x2)

inst_7921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000007ffff; valaddr_reg:x3; val_offset:23763*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23763*0 + 3*241*FLEN/8, x4, x1, x2)

inst_7922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000000fffff; valaddr_reg:x3; val_offset:23766*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23766*0 + 3*242*FLEN/8, x4, x1, x2)

inst_7923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000001fffff; valaddr_reg:x3; val_offset:23769*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23769*0 + 3*243*FLEN/8, x4, x1, x2)

inst_7924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000003fffff; valaddr_reg:x3; val_offset:23772*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23772*0 + 3*244*FLEN/8, x4, x1, x2)

inst_7925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000007fffff; valaddr_reg:x3; val_offset:23775*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23775*0 + 3*245*FLEN/8, x4, x1, x2)

inst_7926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000000ffffff; valaddr_reg:x3; val_offset:23778*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23778*0 + 3*246*FLEN/8, x4, x1, x2)

inst_7927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000001ffffff; valaddr_reg:x3; val_offset:23781*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23781*0 + 3*247*FLEN/8, x4, x1, x2)

inst_7928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000003ffffff; valaddr_reg:x3; val_offset:23784*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23784*0 + 3*248*FLEN/8, x4, x1, x2)

inst_7929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000007ffffff; valaddr_reg:x3; val_offset:23787*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23787*0 + 3*249*FLEN/8, x4, x1, x2)

inst_7930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000000fffffff; valaddr_reg:x3; val_offset:23790*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23790*0 + 3*250*FLEN/8, x4, x1, x2)

inst_7931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000001fffffff; valaddr_reg:x3; val_offset:23793*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23793*0 + 3*251*FLEN/8, x4, x1, x2)

inst_7932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000003fffffff; valaddr_reg:x3; val_offset:23796*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23796*0 + 3*252*FLEN/8, x4, x1, x2)

inst_7933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000007fffffff; valaddr_reg:x3; val_offset:23799*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23799*0 + 3*253*FLEN/8, x4, x1, x2)

inst_7934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800000ffffffff; valaddr_reg:x3; val_offset:23802*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23802*0 + 3*254*FLEN/8, x4, x1, x2)

inst_7935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800001ffffffff; valaddr_reg:x3; val_offset:23805*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23805*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_7936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800003ffffffff; valaddr_reg:x3; val_offset:23808*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23808*0 + 3*256*FLEN/8, x4, x1, x2)

inst_7937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800007ffffffff; valaddr_reg:x3; val_offset:23811*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23811*0 + 3*257*FLEN/8, x4, x1, x2)

inst_7938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980000fffffffff; valaddr_reg:x3; val_offset:23814*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23814*0 + 3*258*FLEN/8, x4, x1, x2)

inst_7939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980001fffffffff; valaddr_reg:x3; val_offset:23817*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23817*0 + 3*259*FLEN/8, x4, x1, x2)

inst_7940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980003fffffffff; valaddr_reg:x3; val_offset:23820*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23820*0 + 3*260*FLEN/8, x4, x1, x2)

inst_7941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980007fffffffff; valaddr_reg:x3; val_offset:23823*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23823*0 + 3*261*FLEN/8, x4, x1, x2)

inst_7942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98000ffffffffff; valaddr_reg:x3; val_offset:23826*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23826*0 + 3*262*FLEN/8, x4, x1, x2)

inst_7943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98001ffffffffff; valaddr_reg:x3; val_offset:23829*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23829*0 + 3*263*FLEN/8, x4, x1, x2)

inst_7944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98003ffffffffff; valaddr_reg:x3; val_offset:23832*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23832*0 + 3*264*FLEN/8, x4, x1, x2)

inst_7945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98007ffffffffff; valaddr_reg:x3; val_offset:23835*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23835*0 + 3*265*FLEN/8, x4, x1, x2)

inst_7946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9800fffffffffff; valaddr_reg:x3; val_offset:23838*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23838*0 + 3*266*FLEN/8, x4, x1, x2)

inst_7947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9801fffffffffff; valaddr_reg:x3; val_offset:23841*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23841*0 + 3*267*FLEN/8, x4, x1, x2)

inst_7948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9803fffffffffff; valaddr_reg:x3; val_offset:23844*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23844*0 + 3*268*FLEN/8, x4, x1, x2)

inst_7949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb9807fffffffffff; valaddr_reg:x3; val_offset:23847*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23847*0 + 3*269*FLEN/8, x4, x1, x2)

inst_7950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb980ffffffffffff; valaddr_reg:x3; val_offset:23850*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23850*0 + 3*270*FLEN/8, x4, x1, x2)

inst_7951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb981ffffffffffff; valaddr_reg:x3; val_offset:23853*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23853*0 + 3*271*FLEN/8, x4, x1, x2)

inst_7952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb983ffffffffffff; valaddr_reg:x3; val_offset:23856*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23856*0 + 3*272*FLEN/8, x4, x1, x2)

inst_7953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb987ffffffffffff; valaddr_reg:x3; val_offset:23859*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23859*0 + 3*273*FLEN/8, x4, x1, x2)

inst_7954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb988000000000000; valaddr_reg:x3; val_offset:23862*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23862*0 + 3*274*FLEN/8, x4, x1, x2)

inst_7955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98c000000000000; valaddr_reg:x3; val_offset:23865*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23865*0 + 3*275*FLEN/8, x4, x1, x2)

inst_7956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98e000000000000; valaddr_reg:x3; val_offset:23868*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23868*0 + 3*276*FLEN/8, x4, x1, x2)

inst_7957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98f000000000000; valaddr_reg:x3; val_offset:23871*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23871*0 + 3*277*FLEN/8, x4, x1, x2)

inst_7958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98f800000000000; valaddr_reg:x3; val_offset:23874*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23874*0 + 3*278*FLEN/8, x4, x1, x2)

inst_7959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fc00000000000; valaddr_reg:x3; val_offset:23877*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23877*0 + 3*279*FLEN/8, x4, x1, x2)

inst_7960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fe00000000000; valaddr_reg:x3; val_offset:23880*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23880*0 + 3*280*FLEN/8, x4, x1, x2)

inst_7961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ff00000000000; valaddr_reg:x3; val_offset:23883*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23883*0 + 3*281*FLEN/8, x4, x1, x2)

inst_7962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ff80000000000; valaddr_reg:x3; val_offset:23886*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23886*0 + 3*282*FLEN/8, x4, x1, x2)

inst_7963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffc0000000000; valaddr_reg:x3; val_offset:23889*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23889*0 + 3*283*FLEN/8, x4, x1, x2)

inst_7964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffe0000000000; valaddr_reg:x3; val_offset:23892*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23892*0 + 3*284*FLEN/8, x4, x1, x2)

inst_7965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fff0000000000; valaddr_reg:x3; val_offset:23895*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23895*0 + 3*285*FLEN/8, x4, x1, x2)

inst_7966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fff8000000000; valaddr_reg:x3; val_offset:23898*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23898*0 + 3*286*FLEN/8, x4, x1, x2)

inst_7967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffc000000000; valaddr_reg:x3; val_offset:23901*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23901*0 + 3*287*FLEN/8, x4, x1, x2)

inst_7968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffe000000000; valaddr_reg:x3; val_offset:23904*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23904*0 + 3*288*FLEN/8, x4, x1, x2)

inst_7969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffff000000000; valaddr_reg:x3; val_offset:23907*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23907*0 + 3*289*FLEN/8, x4, x1, x2)

inst_7970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffff800000000; valaddr_reg:x3; val_offset:23910*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23910*0 + 3*290*FLEN/8, x4, x1, x2)

inst_7971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffc00000000; valaddr_reg:x3; val_offset:23913*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23913*0 + 3*291*FLEN/8, x4, x1, x2)

inst_7972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffe00000000; valaddr_reg:x3; val_offset:23916*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23916*0 + 3*292*FLEN/8, x4, x1, x2)

inst_7973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffff00000000; valaddr_reg:x3; val_offset:23919*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23919*0 + 3*293*FLEN/8, x4, x1, x2)

inst_7974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffff80000000; valaddr_reg:x3; val_offset:23922*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23922*0 + 3*294*FLEN/8, x4, x1, x2)

inst_7975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffc0000000; valaddr_reg:x3; val_offset:23925*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23925*0 + 3*295*FLEN/8, x4, x1, x2)

inst_7976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffe0000000; valaddr_reg:x3; val_offset:23928*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23928*0 + 3*296*FLEN/8, x4, x1, x2)

inst_7977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffff0000000; valaddr_reg:x3; val_offset:23931*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23931*0 + 3*297*FLEN/8, x4, x1, x2)

inst_7978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffff8000000; valaddr_reg:x3; val_offset:23934*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23934*0 + 3*298*FLEN/8, x4, x1, x2)

inst_7979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffc000000; valaddr_reg:x3; val_offset:23937*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23937*0 + 3*299*FLEN/8, x4, x1, x2)

inst_7980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffe000000; valaddr_reg:x3; val_offset:23940*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23940*0 + 3*300*FLEN/8, x4, x1, x2)

inst_7981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffff000000; valaddr_reg:x3; val_offset:23943*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23943*0 + 3*301*FLEN/8, x4, x1, x2)

inst_7982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffff800000; valaddr_reg:x3; val_offset:23946*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23946*0 + 3*302*FLEN/8, x4, x1, x2)

inst_7983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffc00000; valaddr_reg:x3; val_offset:23949*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23949*0 + 3*303*FLEN/8, x4, x1, x2)

inst_7984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffe00000; valaddr_reg:x3; val_offset:23952*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23952*0 + 3*304*FLEN/8, x4, x1, x2)

inst_7985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffff00000; valaddr_reg:x3; val_offset:23955*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23955*0 + 3*305*FLEN/8, x4, x1, x2)

inst_7986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffff80000; valaddr_reg:x3; val_offset:23958*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23958*0 + 3*306*FLEN/8, x4, x1, x2)

inst_7987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffc0000; valaddr_reg:x3; val_offset:23961*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23961*0 + 3*307*FLEN/8, x4, x1, x2)

inst_7988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffe0000; valaddr_reg:x3; val_offset:23964*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23964*0 + 3*308*FLEN/8, x4, x1, x2)

inst_7989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffff0000; valaddr_reg:x3; val_offset:23967*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23967*0 + 3*309*FLEN/8, x4, x1, x2)

inst_7990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffff8000; valaddr_reg:x3; val_offset:23970*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23970*0 + 3*310*FLEN/8, x4, x1, x2)

inst_7991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffffc000; valaddr_reg:x3; val_offset:23973*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23973*0 + 3*311*FLEN/8, x4, x1, x2)

inst_7992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffffe000; valaddr_reg:x3; val_offset:23976*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23976*0 + 3*312*FLEN/8, x4, x1, x2)

inst_7993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffff000; valaddr_reg:x3; val_offset:23979*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23979*0 + 3*313*FLEN/8, x4, x1, x2)

inst_7994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffff800; valaddr_reg:x3; val_offset:23982*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23982*0 + 3*314*FLEN/8, x4, x1, x2)

inst_7995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffffc00; valaddr_reg:x3; val_offset:23985*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23985*0 + 3*315*FLEN/8, x4, x1, x2)

inst_7996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffffe00; valaddr_reg:x3; val_offset:23988*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23988*0 + 3*316*FLEN/8, x4, x1, x2)

inst_7997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffffff00; valaddr_reg:x3; val_offset:23991*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23991*0 + 3*317*FLEN/8, x4, x1, x2)

inst_7998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffffff80; valaddr_reg:x3; val_offset:23994*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23994*0 + 3*318*FLEN/8, x4, x1, x2)

inst_7999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffffffc0; valaddr_reg:x3; val_offset:23997*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 23997*0 + 3*319*FLEN/8, x4, x1, x2)

inst_8000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffffffe0; valaddr_reg:x3; val_offset:24000*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24000*0 + 3*320*FLEN/8, x4, x1, x2)

inst_8001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffffff0; valaddr_reg:x3; val_offset:24003*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24003*0 + 3*321*FLEN/8, x4, x1, x2)

inst_8002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffffff8; valaddr_reg:x3; val_offset:24006*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24006*0 + 3*322*FLEN/8, x4, x1, x2)

inst_8003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffffffc; valaddr_reg:x3; val_offset:24009*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24009*0 + 3*323*FLEN/8, x4, x1, x2)

inst_8004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98ffffffffffffe; valaddr_reg:x3; val_offset:24012*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24012*0 + 3*324*FLEN/8, x4, x1, x2)

inst_8005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x398 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xb98fffffffffffff; valaddr_reg:x3; val_offset:24015*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24015*0 + 3*325*FLEN/8, x4, x1, x2)

inst_8006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:24018*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24018*0 + 3*326*FLEN/8, x4, x1, x2)

inst_8007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:24021*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24021*0 + 3*327*FLEN/8, x4, x1, x2)

inst_8008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:24024*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24024*0 + 3*328*FLEN/8, x4, x1, x2)

inst_8009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:24027*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24027*0 + 3*329*FLEN/8, x4, x1, x2)

inst_8010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:24030*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24030*0 + 3*330*FLEN/8, x4, x1, x2)

inst_8011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:24033*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24033*0 + 3*331*FLEN/8, x4, x1, x2)

inst_8012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:24036*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24036*0 + 3*332*FLEN/8, x4, x1, x2)

inst_8013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:24039*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24039*0 + 3*333*FLEN/8, x4, x1, x2)

inst_8014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:24042*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24042*0 + 3*334*FLEN/8, x4, x1, x2)

inst_8015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:24045*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24045*0 + 3*335*FLEN/8, x4, x1, x2)

inst_8016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:24048*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24048*0 + 3*336*FLEN/8, x4, x1, x2)

inst_8017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:24051*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24051*0 + 3*337*FLEN/8, x4, x1, x2)

inst_8018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:24054*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24054*0 + 3*338*FLEN/8, x4, x1, x2)

inst_8019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:24057*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24057*0 + 3*339*FLEN/8, x4, x1, x2)

inst_8020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:24060*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24060*0 + 3*340*FLEN/8, x4, x1, x2)

inst_8021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:24063*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24063*0 + 3*341*FLEN/8, x4, x1, x2)

inst_8022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:24066*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24066*0 + 3*342*FLEN/8, x4, x1, x2)

inst_8023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:24069*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24069*0 + 3*343*FLEN/8, x4, x1, x2)

inst_8024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:24072*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24072*0 + 3*344*FLEN/8, x4, x1, x2)

inst_8025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:24075*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24075*0 + 3*345*FLEN/8, x4, x1, x2)

inst_8026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:24078*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24078*0 + 3*346*FLEN/8, x4, x1, x2)

inst_8027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4d4955a3d407f and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x894573cd728f8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74d4955a3d407f; op2val:0x9ff894573cd728f8;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:24081*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24081*0 + 3*347*FLEN/8, x4, x1, x2)

inst_8028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:24084*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24084*0 + 3*348*FLEN/8, x4, x1, x2)

inst_8029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:24087*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24087*0 + 3*349*FLEN/8, x4, x1, x2)

inst_8030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:24090*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24090*0 + 3*350*FLEN/8, x4, x1, x2)

inst_8031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:24093*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24093*0 + 3*351*FLEN/8, x4, x1, x2)

inst_8032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:24096*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24096*0 + 3*352*FLEN/8, x4, x1, x2)

inst_8033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:24099*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24099*0 + 3*353*FLEN/8, x4, x1, x2)

inst_8034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:24102*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24102*0 + 3*354*FLEN/8, x4, x1, x2)

inst_8035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:24105*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24105*0 + 3*355*FLEN/8, x4, x1, x2)

inst_8036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:24108*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24108*0 + 3*356*FLEN/8, x4, x1, x2)

inst_8037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:24111*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24111*0 + 3*357*FLEN/8, x4, x1, x2)

inst_8038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:24114*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24114*0 + 3*358*FLEN/8, x4, x1, x2)

inst_8039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:24117*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24117*0 + 3*359*FLEN/8, x4, x1, x2)

inst_8040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:24120*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24120*0 + 3*360*FLEN/8, x4, x1, x2)

inst_8041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:24123*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24123*0 + 3*361*FLEN/8, x4, x1, x2)

inst_8042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:24126*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24126*0 + 3*362*FLEN/8, x4, x1, x2)

inst_8043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:24129*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24129*0 + 3*363*FLEN/8, x4, x1, x2)

inst_8044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:24132*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24132*0 + 3*364*FLEN/8, x4, x1, x2)

inst_8045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:24135*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24135*0 + 3*365*FLEN/8, x4, x1, x2)

inst_8046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:24138*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24138*0 + 3*366*FLEN/8, x4, x1, x2)

inst_8047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:24141*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24141*0 + 3*367*FLEN/8, x4, x1, x2)

inst_8048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:24144*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24144*0 + 3*368*FLEN/8, x4, x1, x2)

inst_8049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:24147*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24147*0 + 3*369*FLEN/8, x4, x1, x2)

inst_8050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000000000; valaddr_reg:x3; val_offset:24150*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24150*0 + 3*370*FLEN/8, x4, x1, x2)

inst_8051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000000001; valaddr_reg:x3; val_offset:24153*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24153*0 + 3*371*FLEN/8, x4, x1, x2)

inst_8052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000000003; valaddr_reg:x3; val_offset:24156*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24156*0 + 3*372*FLEN/8, x4, x1, x2)

inst_8053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000000007; valaddr_reg:x3; val_offset:24159*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24159*0 + 3*373*FLEN/8, x4, x1, x2)

inst_8054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000000000f; valaddr_reg:x3; val_offset:24162*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24162*0 + 3*374*FLEN/8, x4, x1, x2)

inst_8055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000000001f; valaddr_reg:x3; val_offset:24165*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24165*0 + 3*375*FLEN/8, x4, x1, x2)

inst_8056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000000003f; valaddr_reg:x3; val_offset:24168*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24168*0 + 3*376*FLEN/8, x4, x1, x2)

inst_8057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000000007f; valaddr_reg:x3; val_offset:24171*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24171*0 + 3*377*FLEN/8, x4, x1, x2)

inst_8058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000000000ff; valaddr_reg:x3; val_offset:24174*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24174*0 + 3*378*FLEN/8, x4, x1, x2)

inst_8059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000000001ff; valaddr_reg:x3; val_offset:24177*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24177*0 + 3*379*FLEN/8, x4, x1, x2)

inst_8060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000000003ff; valaddr_reg:x3; val_offset:24180*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24180*0 + 3*380*FLEN/8, x4, x1, x2)

inst_8061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000000007ff; valaddr_reg:x3; val_offset:24183*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24183*0 + 3*381*FLEN/8, x4, x1, x2)

inst_8062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000000fff; valaddr_reg:x3; val_offset:24186*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24186*0 + 3*382*FLEN/8, x4, x1, x2)

inst_8063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000001fff; valaddr_reg:x3; val_offset:24189*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24189*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_8064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000003fff; valaddr_reg:x3; val_offset:24192*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24192*0 + 3*384*FLEN/8, x4, x1, x2)

inst_8065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000007fff; valaddr_reg:x3; val_offset:24195*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24195*0 + 3*385*FLEN/8, x4, x1, x2)

inst_8066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000000ffff; valaddr_reg:x3; val_offset:24198*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24198*0 + 3*386*FLEN/8, x4, x1, x2)

inst_8067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000001ffff; valaddr_reg:x3; val_offset:24201*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24201*0 + 3*387*FLEN/8, x4, x1, x2)

inst_8068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000003ffff; valaddr_reg:x3; val_offset:24204*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24204*0 + 3*388*FLEN/8, x4, x1, x2)

inst_8069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000007ffff; valaddr_reg:x3; val_offset:24207*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24207*0 + 3*389*FLEN/8, x4, x1, x2)

inst_8070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000000fffff; valaddr_reg:x3; val_offset:24210*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24210*0 + 3*390*FLEN/8, x4, x1, x2)

inst_8071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000001fffff; valaddr_reg:x3; val_offset:24213*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24213*0 + 3*391*FLEN/8, x4, x1, x2)

inst_8072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000003fffff; valaddr_reg:x3; val_offset:24216*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24216*0 + 3*392*FLEN/8, x4, x1, x2)

inst_8073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000007fffff; valaddr_reg:x3; val_offset:24219*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24219*0 + 3*393*FLEN/8, x4, x1, x2)

inst_8074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000000ffffff; valaddr_reg:x3; val_offset:24222*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24222*0 + 3*394*FLEN/8, x4, x1, x2)

inst_8075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000001ffffff; valaddr_reg:x3; val_offset:24225*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24225*0 + 3*395*FLEN/8, x4, x1, x2)

inst_8076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000003ffffff; valaddr_reg:x3; val_offset:24228*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24228*0 + 3*396*FLEN/8, x4, x1, x2)

inst_8077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000007ffffff; valaddr_reg:x3; val_offset:24231*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24231*0 + 3*397*FLEN/8, x4, x1, x2)

inst_8078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000000fffffff; valaddr_reg:x3; val_offset:24234*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24234*0 + 3*398*FLEN/8, x4, x1, x2)

inst_8079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000001fffffff; valaddr_reg:x3; val_offset:24237*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24237*0 + 3*399*FLEN/8, x4, x1, x2)

inst_8080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000003fffffff; valaddr_reg:x3; val_offset:24240*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24240*0 + 3*400*FLEN/8, x4, x1, x2)

inst_8081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000007fffffff; valaddr_reg:x3; val_offset:24243*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24243*0 + 3*401*FLEN/8, x4, x1, x2)

inst_8082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600000ffffffff; valaddr_reg:x3; val_offset:24246*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24246*0 + 3*402*FLEN/8, x4, x1, x2)

inst_8083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600001ffffffff; valaddr_reg:x3; val_offset:24249*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24249*0 + 3*403*FLEN/8, x4, x1, x2)

inst_8084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600003ffffffff; valaddr_reg:x3; val_offset:24252*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24252*0 + 3*404*FLEN/8, x4, x1, x2)

inst_8085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600007ffffffff; valaddr_reg:x3; val_offset:24255*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24255*0 + 3*405*FLEN/8, x4, x1, x2)

inst_8086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260000fffffffff; valaddr_reg:x3; val_offset:24258*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24258*0 + 3*406*FLEN/8, x4, x1, x2)

inst_8087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260001fffffffff; valaddr_reg:x3; val_offset:24261*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24261*0 + 3*407*FLEN/8, x4, x1, x2)

inst_8088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260003fffffffff; valaddr_reg:x3; val_offset:24264*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24264*0 + 3*408*FLEN/8, x4, x1, x2)

inst_8089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260007fffffffff; valaddr_reg:x3; val_offset:24267*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24267*0 + 3*409*FLEN/8, x4, x1, x2)

inst_8090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26000ffffffffff; valaddr_reg:x3; val_offset:24270*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24270*0 + 3*410*FLEN/8, x4, x1, x2)

inst_8091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26001ffffffffff; valaddr_reg:x3; val_offset:24273*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24273*0 + 3*411*FLEN/8, x4, x1, x2)

inst_8092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26003ffffffffff; valaddr_reg:x3; val_offset:24276*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24276*0 + 3*412*FLEN/8, x4, x1, x2)

inst_8093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26007ffffffffff; valaddr_reg:x3; val_offset:24279*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24279*0 + 3*413*FLEN/8, x4, x1, x2)

inst_8094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2600fffffffffff; valaddr_reg:x3; val_offset:24282*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24282*0 + 3*414*FLEN/8, x4, x1, x2)

inst_8095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2601fffffffffff; valaddr_reg:x3; val_offset:24285*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24285*0 + 3*415*FLEN/8, x4, x1, x2)

inst_8096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2603fffffffffff; valaddr_reg:x3; val_offset:24288*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24288*0 + 3*416*FLEN/8, x4, x1, x2)

inst_8097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x2607fffffffffff; valaddr_reg:x3; val_offset:24291*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24291*0 + 3*417*FLEN/8, x4, x1, x2)

inst_8098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x260ffffffffffff; valaddr_reg:x3; val_offset:24294*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24294*0 + 3*418*FLEN/8, x4, x1, x2)

inst_8099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x261ffffffffffff; valaddr_reg:x3; val_offset:24297*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24297*0 + 3*419*FLEN/8, x4, x1, x2)

inst_8100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x263ffffffffffff; valaddr_reg:x3; val_offset:24300*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24300*0 + 3*420*FLEN/8, x4, x1, x2)

inst_8101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x267ffffffffffff; valaddr_reg:x3; val_offset:24303*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24303*0 + 3*421*FLEN/8, x4, x1, x2)

inst_8102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x268000000000000; valaddr_reg:x3; val_offset:24306*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24306*0 + 3*422*FLEN/8, x4, x1, x2)

inst_8103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26c000000000000; valaddr_reg:x3; val_offset:24309*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24309*0 + 3*423*FLEN/8, x4, x1, x2)

inst_8104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26e000000000000; valaddr_reg:x3; val_offset:24312*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24312*0 + 3*424*FLEN/8, x4, x1, x2)

inst_8105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26f000000000000; valaddr_reg:x3; val_offset:24315*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24315*0 + 3*425*FLEN/8, x4, x1, x2)

inst_8106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26f800000000000; valaddr_reg:x3; val_offset:24318*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24318*0 + 3*426*FLEN/8, x4, x1, x2)

inst_8107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fc00000000000; valaddr_reg:x3; val_offset:24321*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24321*0 + 3*427*FLEN/8, x4, x1, x2)

inst_8108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fe00000000000; valaddr_reg:x3; val_offset:24324*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24324*0 + 3*428*FLEN/8, x4, x1, x2)

inst_8109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ff00000000000; valaddr_reg:x3; val_offset:24327*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24327*0 + 3*429*FLEN/8, x4, x1, x2)

inst_8110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ff80000000000; valaddr_reg:x3; val_offset:24330*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24330*0 + 3*430*FLEN/8, x4, x1, x2)

inst_8111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffc0000000000; valaddr_reg:x3; val_offset:24333*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24333*0 + 3*431*FLEN/8, x4, x1, x2)

inst_8112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffe0000000000; valaddr_reg:x3; val_offset:24336*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24336*0 + 3*432*FLEN/8, x4, x1, x2)

inst_8113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fff0000000000; valaddr_reg:x3; val_offset:24339*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24339*0 + 3*433*FLEN/8, x4, x1, x2)

inst_8114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fff8000000000; valaddr_reg:x3; val_offset:24342*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24342*0 + 3*434*FLEN/8, x4, x1, x2)

inst_8115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffc000000000; valaddr_reg:x3; val_offset:24345*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24345*0 + 3*435*FLEN/8, x4, x1, x2)

inst_8116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffe000000000; valaddr_reg:x3; val_offset:24348*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24348*0 + 3*436*FLEN/8, x4, x1, x2)

inst_8117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffff000000000; valaddr_reg:x3; val_offset:24351*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24351*0 + 3*437*FLEN/8, x4, x1, x2)

inst_8118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffff800000000; valaddr_reg:x3; val_offset:24354*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24354*0 + 3*438*FLEN/8, x4, x1, x2)

inst_8119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffc00000000; valaddr_reg:x3; val_offset:24357*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24357*0 + 3*439*FLEN/8, x4, x1, x2)

inst_8120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffe00000000; valaddr_reg:x3; val_offset:24360*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24360*0 + 3*440*FLEN/8, x4, x1, x2)

inst_8121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffff00000000; valaddr_reg:x3; val_offset:24363*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24363*0 + 3*441*FLEN/8, x4, x1, x2)

inst_8122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffff80000000; valaddr_reg:x3; val_offset:24366*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24366*0 + 3*442*FLEN/8, x4, x1, x2)

inst_8123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffc0000000; valaddr_reg:x3; val_offset:24369*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24369*0 + 3*443*FLEN/8, x4, x1, x2)

inst_8124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffe0000000; valaddr_reg:x3; val_offset:24372*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24372*0 + 3*444*FLEN/8, x4, x1, x2)

inst_8125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffff0000000; valaddr_reg:x3; val_offset:24375*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24375*0 + 3*445*FLEN/8, x4, x1, x2)

inst_8126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffff8000000; valaddr_reg:x3; val_offset:24378*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24378*0 + 3*446*FLEN/8, x4, x1, x2)

inst_8127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffc000000; valaddr_reg:x3; val_offset:24381*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24381*0 + 3*447*FLEN/8, x4, x1, x2)

inst_8128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffe000000; valaddr_reg:x3; val_offset:24384*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24384*0 + 3*448*FLEN/8, x4, x1, x2)

inst_8129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffff000000; valaddr_reg:x3; val_offset:24387*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24387*0 + 3*449*FLEN/8, x4, x1, x2)

inst_8130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffff800000; valaddr_reg:x3; val_offset:24390*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24390*0 + 3*450*FLEN/8, x4, x1, x2)

inst_8131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffc00000; valaddr_reg:x3; val_offset:24393*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24393*0 + 3*451*FLEN/8, x4, x1, x2)

inst_8132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffe00000; valaddr_reg:x3; val_offset:24396*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24396*0 + 3*452*FLEN/8, x4, x1, x2)

inst_8133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffff00000; valaddr_reg:x3; val_offset:24399*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24399*0 + 3*453*FLEN/8, x4, x1, x2)

inst_8134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffff80000; valaddr_reg:x3; val_offset:24402*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24402*0 + 3*454*FLEN/8, x4, x1, x2)

inst_8135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffc0000; valaddr_reg:x3; val_offset:24405*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24405*0 + 3*455*FLEN/8, x4, x1, x2)

inst_8136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffe0000; valaddr_reg:x3; val_offset:24408*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24408*0 + 3*456*FLEN/8, x4, x1, x2)

inst_8137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffff0000; valaddr_reg:x3; val_offset:24411*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24411*0 + 3*457*FLEN/8, x4, x1, x2)

inst_8138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffff8000; valaddr_reg:x3; val_offset:24414*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24414*0 + 3*458*FLEN/8, x4, x1, x2)

inst_8139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffffc000; valaddr_reg:x3; val_offset:24417*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24417*0 + 3*459*FLEN/8, x4, x1, x2)

inst_8140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffffe000; valaddr_reg:x3; val_offset:24420*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24420*0 + 3*460*FLEN/8, x4, x1, x2)

inst_8141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffff000; valaddr_reg:x3; val_offset:24423*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24423*0 + 3*461*FLEN/8, x4, x1, x2)

inst_8142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffff800; valaddr_reg:x3; val_offset:24426*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24426*0 + 3*462*FLEN/8, x4, x1, x2)

inst_8143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffffc00; valaddr_reg:x3; val_offset:24429*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24429*0 + 3*463*FLEN/8, x4, x1, x2)

inst_8144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffffe00; valaddr_reg:x3; val_offset:24432*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24432*0 + 3*464*FLEN/8, x4, x1, x2)

inst_8145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffffff00; valaddr_reg:x3; val_offset:24435*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24435*0 + 3*465*FLEN/8, x4, x1, x2)

inst_8146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffffff80; valaddr_reg:x3; val_offset:24438*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24438*0 + 3*466*FLEN/8, x4, x1, x2)

inst_8147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffffffc0; valaddr_reg:x3; val_offset:24441*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24441*0 + 3*467*FLEN/8, x4, x1, x2)

inst_8148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffffffe0; valaddr_reg:x3; val_offset:24444*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24444*0 + 3*468*FLEN/8, x4, x1, x2)

inst_8149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffffff0; valaddr_reg:x3; val_offset:24447*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24447*0 + 3*469*FLEN/8, x4, x1, x2)

inst_8150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffffff8; valaddr_reg:x3; val_offset:24450*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24450*0 + 3*470*FLEN/8, x4, x1, x2)

inst_8151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffffffc; valaddr_reg:x3; val_offset:24453*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24453*0 + 3*471*FLEN/8, x4, x1, x2)

inst_8152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26ffffffffffffe; valaddr_reg:x3; val_offset:24456*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24456*0 + 3*472*FLEN/8, x4, x1, x2)

inst_8153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x4fe7eae3debc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f74fe7eae3debc7; op2val:0x0;
op3val:0x26fffffffffffff; valaddr_reg:x3; val_offset:24459*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24459*0 + 3*473*FLEN/8, x4, x1, x2)

inst_8154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:24462*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24462*0 + 3*474*FLEN/8, x4, x1, x2)

inst_8155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:24465*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24465*0 + 3*475*FLEN/8, x4, x1, x2)

inst_8156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:24468*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24468*0 + 3*476*FLEN/8, x4, x1, x2)

inst_8157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:24471*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24471*0 + 3*477*FLEN/8, x4, x1, x2)

inst_8158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:24474*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24474*0 + 3*478*FLEN/8, x4, x1, x2)

inst_8159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:24477*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24477*0 + 3*479*FLEN/8, x4, x1, x2)

inst_8160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:24480*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24480*0 + 3*480*FLEN/8, x4, x1, x2)

inst_8161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:24483*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24483*0 + 3*481*FLEN/8, x4, x1, x2)

inst_8162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:24486*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24486*0 + 3*482*FLEN/8, x4, x1, x2)

inst_8163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:24489*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24489*0 + 3*483*FLEN/8, x4, x1, x2)

inst_8164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:24492*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24492*0 + 3*484*FLEN/8, x4, x1, x2)

inst_8165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:24495*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24495*0 + 3*485*FLEN/8, x4, x1, x2)

inst_8166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:24498*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24498*0 + 3*486*FLEN/8, x4, x1, x2)

inst_8167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:24501*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24501*0 + 3*487*FLEN/8, x4, x1, x2)

inst_8168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:24504*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24504*0 + 3*488*FLEN/8, x4, x1, x2)

inst_8169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:24507*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24507*0 + 3*489*FLEN/8, x4, x1, x2)

inst_8170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:24510*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24510*0 + 3*490*FLEN/8, x4, x1, x2)

inst_8171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:24513*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24513*0 + 3*491*FLEN/8, x4, x1, x2)

inst_8172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:24516*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24516*0 + 3*492*FLEN/8, x4, x1, x2)

inst_8173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:24519*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24519*0 + 3*493*FLEN/8, x4, x1, x2)

inst_8174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:24522*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24522*0 + 3*494*FLEN/8, x4, x1, x2)

inst_8175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:24525*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24525*0 + 3*495*FLEN/8, x4, x1, x2)

inst_8176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000000000; valaddr_reg:x3; val_offset:24528*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24528*0 + 3*496*FLEN/8, x4, x1, x2)

inst_8177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000000001; valaddr_reg:x3; val_offset:24531*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24531*0 + 3*497*FLEN/8, x4, x1, x2)

inst_8178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000000003; valaddr_reg:x3; val_offset:24534*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24534*0 + 3*498*FLEN/8, x4, x1, x2)

inst_8179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000000007; valaddr_reg:x3; val_offset:24537*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24537*0 + 3*499*FLEN/8, x4, x1, x2)

inst_8180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000000000f; valaddr_reg:x3; val_offset:24540*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24540*0 + 3*500*FLEN/8, x4, x1, x2)

inst_8181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000000001f; valaddr_reg:x3; val_offset:24543*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24543*0 + 3*501*FLEN/8, x4, x1, x2)

inst_8182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000000003f; valaddr_reg:x3; val_offset:24546*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24546*0 + 3*502*FLEN/8, x4, x1, x2)

inst_8183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000000007f; valaddr_reg:x3; val_offset:24549*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24549*0 + 3*503*FLEN/8, x4, x1, x2)

inst_8184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000000000ff; valaddr_reg:x3; val_offset:24552*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24552*0 + 3*504*FLEN/8, x4, x1, x2)

inst_8185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000000001ff; valaddr_reg:x3; val_offset:24555*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24555*0 + 3*505*FLEN/8, x4, x1, x2)

inst_8186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000000003ff; valaddr_reg:x3; val_offset:24558*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24558*0 + 3*506*FLEN/8, x4, x1, x2)

inst_8187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000000007ff; valaddr_reg:x3; val_offset:24561*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24561*0 + 3*507*FLEN/8, x4, x1, x2)

inst_8188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000000fff; valaddr_reg:x3; val_offset:24564*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24564*0 + 3*508*FLEN/8, x4, x1, x2)

inst_8189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000001fff; valaddr_reg:x3; val_offset:24567*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24567*0 + 3*509*FLEN/8, x4, x1, x2)

inst_8190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000003fff; valaddr_reg:x3; val_offset:24570*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24570*0 + 3*510*FLEN/8, x4, x1, x2)

inst_8191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000007fff; valaddr_reg:x3; val_offset:24573*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24573*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_8192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000000ffff; valaddr_reg:x3; val_offset:24576*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24576*0 + 3*512*FLEN/8, x4, x1, x2)

inst_8193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000001ffff; valaddr_reg:x3; val_offset:24579*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24579*0 + 3*513*FLEN/8, x4, x1, x2)

inst_8194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000003ffff; valaddr_reg:x3; val_offset:24582*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24582*0 + 3*514*FLEN/8, x4, x1, x2)

inst_8195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000007ffff; valaddr_reg:x3; val_offset:24585*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24585*0 + 3*515*FLEN/8, x4, x1, x2)

inst_8196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000000fffff; valaddr_reg:x3; val_offset:24588*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24588*0 + 3*516*FLEN/8, x4, x1, x2)

inst_8197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000001fffff; valaddr_reg:x3; val_offset:24591*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24591*0 + 3*517*FLEN/8, x4, x1, x2)

inst_8198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000003fffff; valaddr_reg:x3; val_offset:24594*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24594*0 + 3*518*FLEN/8, x4, x1, x2)

inst_8199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000007fffff; valaddr_reg:x3; val_offset:24597*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24597*0 + 3*519*FLEN/8, x4, x1, x2)

inst_8200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000000ffffff; valaddr_reg:x3; val_offset:24600*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24600*0 + 3*520*FLEN/8, x4, x1, x2)

inst_8201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000001ffffff; valaddr_reg:x3; val_offset:24603*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24603*0 + 3*521*FLEN/8, x4, x1, x2)

inst_8202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000003ffffff; valaddr_reg:x3; val_offset:24606*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24606*0 + 3*522*FLEN/8, x4, x1, x2)

inst_8203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000007ffffff; valaddr_reg:x3; val_offset:24609*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24609*0 + 3*523*FLEN/8, x4, x1, x2)

inst_8204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000000fffffff; valaddr_reg:x3; val_offset:24612*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24612*0 + 3*524*FLEN/8, x4, x1, x2)

inst_8205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000001fffffff; valaddr_reg:x3; val_offset:24615*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24615*0 + 3*525*FLEN/8, x4, x1, x2)

inst_8206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000003fffffff; valaddr_reg:x3; val_offset:24618*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24618*0 + 3*526*FLEN/8, x4, x1, x2)

inst_8207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000007fffffff; valaddr_reg:x3; val_offset:24621*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24621*0 + 3*527*FLEN/8, x4, x1, x2)

inst_8208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500000ffffffff; valaddr_reg:x3; val_offset:24624*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24624*0 + 3*528*FLEN/8, x4, x1, x2)

inst_8209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500001ffffffff; valaddr_reg:x3; val_offset:24627*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24627*0 + 3*529*FLEN/8, x4, x1, x2)

inst_8210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500003ffffffff; valaddr_reg:x3; val_offset:24630*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24630*0 + 3*530*FLEN/8, x4, x1, x2)

inst_8211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500007ffffffff; valaddr_reg:x3; val_offset:24633*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24633*0 + 3*531*FLEN/8, x4, x1, x2)

inst_8212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350000fffffffff; valaddr_reg:x3; val_offset:24636*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24636*0 + 3*532*FLEN/8, x4, x1, x2)

inst_8213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350001fffffffff; valaddr_reg:x3; val_offset:24639*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24639*0 + 3*533*FLEN/8, x4, x1, x2)

inst_8214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350003fffffffff; valaddr_reg:x3; val_offset:24642*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24642*0 + 3*534*FLEN/8, x4, x1, x2)

inst_8215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350007fffffffff; valaddr_reg:x3; val_offset:24645*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24645*0 + 3*535*FLEN/8, x4, x1, x2)

inst_8216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835000ffffffffff; valaddr_reg:x3; val_offset:24648*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24648*0 + 3*536*FLEN/8, x4, x1, x2)

inst_8217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835001ffffffffff; valaddr_reg:x3; val_offset:24651*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24651*0 + 3*537*FLEN/8, x4, x1, x2)

inst_8218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835003ffffffffff; valaddr_reg:x3; val_offset:24654*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24654*0 + 3*538*FLEN/8, x4, x1, x2)

inst_8219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835007ffffffffff; valaddr_reg:x3; val_offset:24657*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24657*0 + 3*539*FLEN/8, x4, x1, x2)

inst_8220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83500fffffffffff; valaddr_reg:x3; val_offset:24660*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24660*0 + 3*540*FLEN/8, x4, x1, x2)

inst_8221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83501fffffffffff; valaddr_reg:x3; val_offset:24663*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24663*0 + 3*541*FLEN/8, x4, x1, x2)

inst_8222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83503fffffffffff; valaddr_reg:x3; val_offset:24666*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24666*0 + 3*542*FLEN/8, x4, x1, x2)

inst_8223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x83507fffffffffff; valaddr_reg:x3; val_offset:24669*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24669*0 + 3*543*FLEN/8, x4, x1, x2)

inst_8224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8350ffffffffffff; valaddr_reg:x3; val_offset:24672*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24672*0 + 3*544*FLEN/8, x4, x1, x2)

inst_8225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8351ffffffffffff; valaddr_reg:x3; val_offset:24675*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24675*0 + 3*545*FLEN/8, x4, x1, x2)

inst_8226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8353ffffffffffff; valaddr_reg:x3; val_offset:24678*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24678*0 + 3*546*FLEN/8, x4, x1, x2)

inst_8227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8357ffffffffffff; valaddr_reg:x3; val_offset:24681*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24681*0 + 3*547*FLEN/8, x4, x1, x2)

inst_8228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x8358000000000000; valaddr_reg:x3; val_offset:24684*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24684*0 + 3*548*FLEN/8, x4, x1, x2)

inst_8229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835c000000000000; valaddr_reg:x3; val_offset:24687*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24687*0 + 3*549*FLEN/8, x4, x1, x2)

inst_8230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835e000000000000; valaddr_reg:x3; val_offset:24690*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24690*0 + 3*550*FLEN/8, x4, x1, x2)

inst_8231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835f000000000000; valaddr_reg:x3; val_offset:24693*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24693*0 + 3*551*FLEN/8, x4, x1, x2)

inst_8232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835f800000000000; valaddr_reg:x3; val_offset:24696*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24696*0 + 3*552*FLEN/8, x4, x1, x2)

inst_8233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fc00000000000; valaddr_reg:x3; val_offset:24699*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24699*0 + 3*553*FLEN/8, x4, x1, x2)

inst_8234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fe00000000000; valaddr_reg:x3; val_offset:24702*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24702*0 + 3*554*FLEN/8, x4, x1, x2)

inst_8235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ff00000000000; valaddr_reg:x3; val_offset:24705*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24705*0 + 3*555*FLEN/8, x4, x1, x2)

inst_8236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ff80000000000; valaddr_reg:x3; val_offset:24708*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24708*0 + 3*556*FLEN/8, x4, x1, x2)

inst_8237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffc0000000000; valaddr_reg:x3; val_offset:24711*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24711*0 + 3*557*FLEN/8, x4, x1, x2)

inst_8238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffe0000000000; valaddr_reg:x3; val_offset:24714*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24714*0 + 3*558*FLEN/8, x4, x1, x2)

inst_8239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fff0000000000; valaddr_reg:x3; val_offset:24717*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24717*0 + 3*559*FLEN/8, x4, x1, x2)

inst_8240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fff8000000000; valaddr_reg:x3; val_offset:24720*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24720*0 + 3*560*FLEN/8, x4, x1, x2)

inst_8241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffc000000000; valaddr_reg:x3; val_offset:24723*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24723*0 + 3*561*FLEN/8, x4, x1, x2)

inst_8242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffe000000000; valaddr_reg:x3; val_offset:24726*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24726*0 + 3*562*FLEN/8, x4, x1, x2)

inst_8243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffff000000000; valaddr_reg:x3; val_offset:24729*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24729*0 + 3*563*FLEN/8, x4, x1, x2)

inst_8244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffff800000000; valaddr_reg:x3; val_offset:24732*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24732*0 + 3*564*FLEN/8, x4, x1, x2)

inst_8245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffc00000000; valaddr_reg:x3; val_offset:24735*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24735*0 + 3*565*FLEN/8, x4, x1, x2)

inst_8246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffe00000000; valaddr_reg:x3; val_offset:24738*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24738*0 + 3*566*FLEN/8, x4, x1, x2)

inst_8247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffff00000000; valaddr_reg:x3; val_offset:24741*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24741*0 + 3*567*FLEN/8, x4, x1, x2)

inst_8248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffff80000000; valaddr_reg:x3; val_offset:24744*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24744*0 + 3*568*FLEN/8, x4, x1, x2)

inst_8249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffc0000000; valaddr_reg:x3; val_offset:24747*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24747*0 + 3*569*FLEN/8, x4, x1, x2)

inst_8250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffe0000000; valaddr_reg:x3; val_offset:24750*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24750*0 + 3*570*FLEN/8, x4, x1, x2)

inst_8251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffff0000000; valaddr_reg:x3; val_offset:24753*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24753*0 + 3*571*FLEN/8, x4, x1, x2)

inst_8252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffff8000000; valaddr_reg:x3; val_offset:24756*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24756*0 + 3*572*FLEN/8, x4, x1, x2)

inst_8253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffc000000; valaddr_reg:x3; val_offset:24759*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24759*0 + 3*573*FLEN/8, x4, x1, x2)

inst_8254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffe000000; valaddr_reg:x3; val_offset:24762*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24762*0 + 3*574*FLEN/8, x4, x1, x2)

inst_8255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffff000000; valaddr_reg:x3; val_offset:24765*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24765*0 + 3*575*FLEN/8, x4, x1, x2)

inst_8256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffff800000; valaddr_reg:x3; val_offset:24768*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24768*0 + 3*576*FLEN/8, x4, x1, x2)

inst_8257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffc00000; valaddr_reg:x3; val_offset:24771*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24771*0 + 3*577*FLEN/8, x4, x1, x2)

inst_8258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffe00000; valaddr_reg:x3; val_offset:24774*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24774*0 + 3*578*FLEN/8, x4, x1, x2)

inst_8259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffff00000; valaddr_reg:x3; val_offset:24777*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24777*0 + 3*579*FLEN/8, x4, x1, x2)

inst_8260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffff80000; valaddr_reg:x3; val_offset:24780*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24780*0 + 3*580*FLEN/8, x4, x1, x2)

inst_8261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffc0000; valaddr_reg:x3; val_offset:24783*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24783*0 + 3*581*FLEN/8, x4, x1, x2)

inst_8262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffe0000; valaddr_reg:x3; val_offset:24786*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24786*0 + 3*582*FLEN/8, x4, x1, x2)

inst_8263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffff0000; valaddr_reg:x3; val_offset:24789*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24789*0 + 3*583*FLEN/8, x4, x1, x2)

inst_8264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffff8000; valaddr_reg:x3; val_offset:24792*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24792*0 + 3*584*FLEN/8, x4, x1, x2)

inst_8265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffffc000; valaddr_reg:x3; val_offset:24795*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24795*0 + 3*585*FLEN/8, x4, x1, x2)

inst_8266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffffe000; valaddr_reg:x3; val_offset:24798*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24798*0 + 3*586*FLEN/8, x4, x1, x2)

inst_8267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffff000; valaddr_reg:x3; val_offset:24801*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24801*0 + 3*587*FLEN/8, x4, x1, x2)

inst_8268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffff800; valaddr_reg:x3; val_offset:24804*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24804*0 + 3*588*FLEN/8, x4, x1, x2)

inst_8269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffffc00; valaddr_reg:x3; val_offset:24807*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24807*0 + 3*589*FLEN/8, x4, x1, x2)

inst_8270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffffe00; valaddr_reg:x3; val_offset:24810*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24810*0 + 3*590*FLEN/8, x4, x1, x2)

inst_8271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffffff00; valaddr_reg:x3; val_offset:24813*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24813*0 + 3*591*FLEN/8, x4, x1, x2)

inst_8272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffffff80; valaddr_reg:x3; val_offset:24816*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24816*0 + 3*592*FLEN/8, x4, x1, x2)

inst_8273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffffffc0; valaddr_reg:x3; val_offset:24819*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24819*0 + 3*593*FLEN/8, x4, x1, x2)

inst_8274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffffffe0; valaddr_reg:x3; val_offset:24822*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24822*0 + 3*594*FLEN/8, x4, x1, x2)

inst_8275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffffff0; valaddr_reg:x3; val_offset:24825*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24825*0 + 3*595*FLEN/8, x4, x1, x2)

inst_8276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffffff8; valaddr_reg:x3; val_offset:24828*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24828*0 + 3*596*FLEN/8, x4, x1, x2)

inst_8277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffffffc; valaddr_reg:x3; val_offset:24831*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24831*0 + 3*597*FLEN/8, x4, x1, x2)

inst_8278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835ffffffffffffe; valaddr_reg:x3; val_offset:24834*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24834*0 + 3*598*FLEN/8, x4, x1, x2)

inst_8279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x54ed51bc74baf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f754ed51bc74baf; op2val:0x8000;
op3val:0x835fffffffffffff; valaddr_reg:x3; val_offset:24837*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24837*0 + 3*599*FLEN/8, x4, x1, x2)

inst_8280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:24840*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24840*0 + 3*600*FLEN/8, x4, x1, x2)

inst_8281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:24843*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24843*0 + 3*601*FLEN/8, x4, x1, x2)

inst_8282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:24846*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24846*0 + 3*602*FLEN/8, x4, x1, x2)

inst_8283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:24849*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24849*0 + 3*603*FLEN/8, x4, x1, x2)

inst_8284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:24852*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24852*0 + 3*604*FLEN/8, x4, x1, x2)

inst_8285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:24855*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24855*0 + 3*605*FLEN/8, x4, x1, x2)

inst_8286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:24858*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24858*0 + 3*606*FLEN/8, x4, x1, x2)

inst_8287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:24861*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24861*0 + 3*607*FLEN/8, x4, x1, x2)

inst_8288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:24864*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24864*0 + 3*608*FLEN/8, x4, x1, x2)

inst_8289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:24867*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24867*0 + 3*609*FLEN/8, x4, x1, x2)

inst_8290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:24870*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24870*0 + 3*610*FLEN/8, x4, x1, x2)

inst_8291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:24873*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24873*0 + 3*611*FLEN/8, x4, x1, x2)

inst_8292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:24876*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24876*0 + 3*612*FLEN/8, x4, x1, x2)

inst_8293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:24879*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24879*0 + 3*613*FLEN/8, x4, x1, x2)

inst_8294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:24882*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24882*0 + 3*614*FLEN/8, x4, x1, x2)

inst_8295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:24885*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24885*0 + 3*615*FLEN/8, x4, x1, x2)

inst_8296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:24888*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24888*0 + 3*616*FLEN/8, x4, x1, x2)

inst_8297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:24891*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24891*0 + 3*617*FLEN/8, x4, x1, x2)

inst_8298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:24894*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24894*0 + 3*618*FLEN/8, x4, x1, x2)

inst_8299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:24897*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24897*0 + 3*619*FLEN/8, x4, x1, x2)

inst_8300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:24900*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24900*0 + 3*620*FLEN/8, x4, x1, x2)

inst_8301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:24903*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24903*0 + 3*621*FLEN/8, x4, x1, x2)

inst_8302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000000000; valaddr_reg:x3; val_offset:24906*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24906*0 + 3*622*FLEN/8, x4, x1, x2)

inst_8303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000000001; valaddr_reg:x3; val_offset:24909*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24909*0 + 3*623*FLEN/8, x4, x1, x2)

inst_8304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000000003; valaddr_reg:x3; val_offset:24912*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24912*0 + 3*624*FLEN/8, x4, x1, x2)

inst_8305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000000007; valaddr_reg:x3; val_offset:24915*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24915*0 + 3*625*FLEN/8, x4, x1, x2)

inst_8306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000000000f; valaddr_reg:x3; val_offset:24918*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24918*0 + 3*626*FLEN/8, x4, x1, x2)

inst_8307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000000001f; valaddr_reg:x3; val_offset:24921*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24921*0 + 3*627*FLEN/8, x4, x1, x2)

inst_8308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000000003f; valaddr_reg:x3; val_offset:24924*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24924*0 + 3*628*FLEN/8, x4, x1, x2)

inst_8309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000000007f; valaddr_reg:x3; val_offset:24927*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24927*0 + 3*629*FLEN/8, x4, x1, x2)

inst_8310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000000000ff; valaddr_reg:x3; val_offset:24930*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24930*0 + 3*630*FLEN/8, x4, x1, x2)

inst_8311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000000001ff; valaddr_reg:x3; val_offset:24933*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24933*0 + 3*631*FLEN/8, x4, x1, x2)

inst_8312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000000003ff; valaddr_reg:x3; val_offset:24936*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24936*0 + 3*632*FLEN/8, x4, x1, x2)

inst_8313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000000007ff; valaddr_reg:x3; val_offset:24939*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24939*0 + 3*633*FLEN/8, x4, x1, x2)

inst_8314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000000fff; valaddr_reg:x3; val_offset:24942*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24942*0 + 3*634*FLEN/8, x4, x1, x2)

inst_8315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000001fff; valaddr_reg:x3; val_offset:24945*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24945*0 + 3*635*FLEN/8, x4, x1, x2)

inst_8316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000003fff; valaddr_reg:x3; val_offset:24948*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24948*0 + 3*636*FLEN/8, x4, x1, x2)

inst_8317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000007fff; valaddr_reg:x3; val_offset:24951*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24951*0 + 3*637*FLEN/8, x4, x1, x2)

inst_8318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000000ffff; valaddr_reg:x3; val_offset:24954*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24954*0 + 3*638*FLEN/8, x4, x1, x2)

inst_8319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000001ffff; valaddr_reg:x3; val_offset:24957*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24957*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_8320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000003ffff; valaddr_reg:x3; val_offset:24960*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24960*0 + 3*640*FLEN/8, x4, x1, x2)

inst_8321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000007ffff; valaddr_reg:x3; val_offset:24963*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24963*0 + 3*641*FLEN/8, x4, x1, x2)

inst_8322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000000fffff; valaddr_reg:x3; val_offset:24966*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24966*0 + 3*642*FLEN/8, x4, x1, x2)

inst_8323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000001fffff; valaddr_reg:x3; val_offset:24969*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24969*0 + 3*643*FLEN/8, x4, x1, x2)

inst_8324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000003fffff; valaddr_reg:x3; val_offset:24972*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24972*0 + 3*644*FLEN/8, x4, x1, x2)

inst_8325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000007fffff; valaddr_reg:x3; val_offset:24975*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24975*0 + 3*645*FLEN/8, x4, x1, x2)

inst_8326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000000ffffff; valaddr_reg:x3; val_offset:24978*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24978*0 + 3*646*FLEN/8, x4, x1, x2)

inst_8327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000001ffffff; valaddr_reg:x3; val_offset:24981*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24981*0 + 3*647*FLEN/8, x4, x1, x2)

inst_8328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000003ffffff; valaddr_reg:x3; val_offset:24984*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24984*0 + 3*648*FLEN/8, x4, x1, x2)

inst_8329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000007ffffff; valaddr_reg:x3; val_offset:24987*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24987*0 + 3*649*FLEN/8, x4, x1, x2)

inst_8330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000000fffffff; valaddr_reg:x3; val_offset:24990*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24990*0 + 3*650*FLEN/8, x4, x1, x2)

inst_8331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000001fffffff; valaddr_reg:x3; val_offset:24993*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24993*0 + 3*651*FLEN/8, x4, x1, x2)

inst_8332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000003fffffff; valaddr_reg:x3; val_offset:24996*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24996*0 + 3*652*FLEN/8, x4, x1, x2)

inst_8333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000007fffffff; valaddr_reg:x3; val_offset:24999*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 24999*0 + 3*653*FLEN/8, x4, x1, x2)

inst_8334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000000ffffffff; valaddr_reg:x3; val_offset:25002*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25002*0 + 3*654*FLEN/8, x4, x1, x2)

inst_8335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000001ffffffff; valaddr_reg:x3; val_offset:25005*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25005*0 + 3*655*FLEN/8, x4, x1, x2)

inst_8336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000003ffffffff; valaddr_reg:x3; val_offset:25008*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25008*0 + 3*656*FLEN/8, x4, x1, x2)

inst_8337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000007ffffffff; valaddr_reg:x3; val_offset:25011*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25011*0 + 3*657*FLEN/8, x4, x1, x2)

inst_8338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200000fffffffff; valaddr_reg:x3; val_offset:25014*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25014*0 + 3*658*FLEN/8, x4, x1, x2)

inst_8339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200001fffffffff; valaddr_reg:x3; val_offset:25017*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25017*0 + 3*659*FLEN/8, x4, x1, x2)

inst_8340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200003fffffffff; valaddr_reg:x3; val_offset:25020*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25020*0 + 3*660*FLEN/8, x4, x1, x2)

inst_8341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200007fffffffff; valaddr_reg:x3; val_offset:25023*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25023*0 + 3*661*FLEN/8, x4, x1, x2)

inst_8342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20000ffffffffff; valaddr_reg:x3; val_offset:25026*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25026*0 + 3*662*FLEN/8, x4, x1, x2)

inst_8343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20001ffffffffff; valaddr_reg:x3; val_offset:25029*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25029*0 + 3*663*FLEN/8, x4, x1, x2)

inst_8344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20003ffffffffff; valaddr_reg:x3; val_offset:25032*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25032*0 + 3*664*FLEN/8, x4, x1, x2)

inst_8345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20007ffffffffff; valaddr_reg:x3; val_offset:25035*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25035*0 + 3*665*FLEN/8, x4, x1, x2)

inst_8346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2000fffffffffff; valaddr_reg:x3; val_offset:25038*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25038*0 + 3*666*FLEN/8, x4, x1, x2)

inst_8347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2001fffffffffff; valaddr_reg:x3; val_offset:25041*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25041*0 + 3*667*FLEN/8, x4, x1, x2)

inst_8348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2003fffffffffff; valaddr_reg:x3; val_offset:25044*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25044*0 + 3*668*FLEN/8, x4, x1, x2)

inst_8349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x2007fffffffffff; valaddr_reg:x3; val_offset:25047*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25047*0 + 3*669*FLEN/8, x4, x1, x2)

inst_8350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x200ffffffffffff; valaddr_reg:x3; val_offset:25050*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25050*0 + 3*670*FLEN/8, x4, x1, x2)

inst_8351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x201ffffffffffff; valaddr_reg:x3; val_offset:25053*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25053*0 + 3*671*FLEN/8, x4, x1, x2)

inst_8352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x203ffffffffffff; valaddr_reg:x3; val_offset:25056*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25056*0 + 3*672*FLEN/8, x4, x1, x2)

inst_8353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x207ffffffffffff; valaddr_reg:x3; val_offset:25059*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25059*0 + 3*673*FLEN/8, x4, x1, x2)

inst_8354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x208000000000000; valaddr_reg:x3; val_offset:25062*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25062*0 + 3*674*FLEN/8, x4, x1, x2)

inst_8355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20c000000000000; valaddr_reg:x3; val_offset:25065*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25065*0 + 3*675*FLEN/8, x4, x1, x2)

inst_8356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20e000000000000; valaddr_reg:x3; val_offset:25068*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25068*0 + 3*676*FLEN/8, x4, x1, x2)

inst_8357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20f000000000000; valaddr_reg:x3; val_offset:25071*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25071*0 + 3*677*FLEN/8, x4, x1, x2)

inst_8358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20f800000000000; valaddr_reg:x3; val_offset:25074*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25074*0 + 3*678*FLEN/8, x4, x1, x2)

inst_8359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fc00000000000; valaddr_reg:x3; val_offset:25077*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25077*0 + 3*679*FLEN/8, x4, x1, x2)

inst_8360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fe00000000000; valaddr_reg:x3; val_offset:25080*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25080*0 + 3*680*FLEN/8, x4, x1, x2)

inst_8361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ff00000000000; valaddr_reg:x3; val_offset:25083*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25083*0 + 3*681*FLEN/8, x4, x1, x2)

inst_8362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ff80000000000; valaddr_reg:x3; val_offset:25086*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25086*0 + 3*682*FLEN/8, x4, x1, x2)

inst_8363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffc0000000000; valaddr_reg:x3; val_offset:25089*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25089*0 + 3*683*FLEN/8, x4, x1, x2)

inst_8364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffe0000000000; valaddr_reg:x3; val_offset:25092*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25092*0 + 3*684*FLEN/8, x4, x1, x2)

inst_8365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fff0000000000; valaddr_reg:x3; val_offset:25095*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25095*0 + 3*685*FLEN/8, x4, x1, x2)

inst_8366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fff8000000000; valaddr_reg:x3; val_offset:25098*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25098*0 + 3*686*FLEN/8, x4, x1, x2)

inst_8367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffc000000000; valaddr_reg:x3; val_offset:25101*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25101*0 + 3*687*FLEN/8, x4, x1, x2)

inst_8368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffe000000000; valaddr_reg:x3; val_offset:25104*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25104*0 + 3*688*FLEN/8, x4, x1, x2)

inst_8369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffff000000000; valaddr_reg:x3; val_offset:25107*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25107*0 + 3*689*FLEN/8, x4, x1, x2)

inst_8370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffff800000000; valaddr_reg:x3; val_offset:25110*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25110*0 + 3*690*FLEN/8, x4, x1, x2)

inst_8371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffc00000000; valaddr_reg:x3; val_offset:25113*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25113*0 + 3*691*FLEN/8, x4, x1, x2)

inst_8372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffe00000000; valaddr_reg:x3; val_offset:25116*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25116*0 + 3*692*FLEN/8, x4, x1, x2)

inst_8373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffff00000000; valaddr_reg:x3; val_offset:25119*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25119*0 + 3*693*FLEN/8, x4, x1, x2)

inst_8374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffff80000000; valaddr_reg:x3; val_offset:25122*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25122*0 + 3*694*FLEN/8, x4, x1, x2)

inst_8375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffc0000000; valaddr_reg:x3; val_offset:25125*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25125*0 + 3*695*FLEN/8, x4, x1, x2)

inst_8376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffe0000000; valaddr_reg:x3; val_offset:25128*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25128*0 + 3*696*FLEN/8, x4, x1, x2)

inst_8377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffff0000000; valaddr_reg:x3; val_offset:25131*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25131*0 + 3*697*FLEN/8, x4, x1, x2)

inst_8378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffff8000000; valaddr_reg:x3; val_offset:25134*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25134*0 + 3*698*FLEN/8, x4, x1, x2)

inst_8379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffc000000; valaddr_reg:x3; val_offset:25137*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25137*0 + 3*699*FLEN/8, x4, x1, x2)

inst_8380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffe000000; valaddr_reg:x3; val_offset:25140*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25140*0 + 3*700*FLEN/8, x4, x1, x2)

inst_8381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffff000000; valaddr_reg:x3; val_offset:25143*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25143*0 + 3*701*FLEN/8, x4, x1, x2)

inst_8382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffff800000; valaddr_reg:x3; val_offset:25146*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25146*0 + 3*702*FLEN/8, x4, x1, x2)

inst_8383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffc00000; valaddr_reg:x3; val_offset:25149*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25149*0 + 3*703*FLEN/8, x4, x1, x2)

inst_8384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffe00000; valaddr_reg:x3; val_offset:25152*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25152*0 + 3*704*FLEN/8, x4, x1, x2)

inst_8385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffff00000; valaddr_reg:x3; val_offset:25155*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25155*0 + 3*705*FLEN/8, x4, x1, x2)

inst_8386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffff80000; valaddr_reg:x3; val_offset:25158*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25158*0 + 3*706*FLEN/8, x4, x1, x2)

inst_8387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffc0000; valaddr_reg:x3; val_offset:25161*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25161*0 + 3*707*FLEN/8, x4, x1, x2)

inst_8388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffe0000; valaddr_reg:x3; val_offset:25164*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25164*0 + 3*708*FLEN/8, x4, x1, x2)

inst_8389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffff0000; valaddr_reg:x3; val_offset:25167*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25167*0 + 3*709*FLEN/8, x4, x1, x2)

inst_8390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffff8000; valaddr_reg:x3; val_offset:25170*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25170*0 + 3*710*FLEN/8, x4, x1, x2)

inst_8391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffffc000; valaddr_reg:x3; val_offset:25173*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25173*0 + 3*711*FLEN/8, x4, x1, x2)

inst_8392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffffe000; valaddr_reg:x3; val_offset:25176*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25176*0 + 3*712*FLEN/8, x4, x1, x2)

inst_8393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffff000; valaddr_reg:x3; val_offset:25179*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25179*0 + 3*713*FLEN/8, x4, x1, x2)

inst_8394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffff800; valaddr_reg:x3; val_offset:25182*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25182*0 + 3*714*FLEN/8, x4, x1, x2)

inst_8395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffffc00; valaddr_reg:x3; val_offset:25185*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25185*0 + 3*715*FLEN/8, x4, x1, x2)

inst_8396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffffe00; valaddr_reg:x3; val_offset:25188*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25188*0 + 3*716*FLEN/8, x4, x1, x2)

inst_8397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffffff00; valaddr_reg:x3; val_offset:25191*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25191*0 + 3*717*FLEN/8, x4, x1, x2)

inst_8398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffffff80; valaddr_reg:x3; val_offset:25194*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25194*0 + 3*718*FLEN/8, x4, x1, x2)

inst_8399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffffffc0; valaddr_reg:x3; val_offset:25197*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25197*0 + 3*719*FLEN/8, x4, x1, x2)

inst_8400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffffffe0; valaddr_reg:x3; val_offset:25200*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25200*0 + 3*720*FLEN/8, x4, x1, x2)

inst_8401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffffff0; valaddr_reg:x3; val_offset:25203*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25203*0 + 3*721*FLEN/8, x4, x1, x2)

inst_8402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffffff8; valaddr_reg:x3; val_offset:25206*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25206*0 + 3*722*FLEN/8, x4, x1, x2)

inst_8403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffffffc; valaddr_reg:x3; val_offset:25209*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25209*0 + 3*723*FLEN/8, x4, x1, x2)

inst_8404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20ffffffffffffe; valaddr_reg:x3; val_offset:25212*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25212*0 + 3*724*FLEN/8, x4, x1, x2)

inst_8405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x56eab7eb3b90f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f756eab7eb3b90f; op2val:0x0;
op3val:0x20fffffffffffff; valaddr_reg:x3; val_offset:25215*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25215*0 + 3*725*FLEN/8, x4, x1, x2)

inst_8406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:25218*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25218*0 + 3*726*FLEN/8, x4, x1, x2)

inst_8407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:25221*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25221*0 + 3*727*FLEN/8, x4, x1, x2)

inst_8408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:25224*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25224*0 + 3*728*FLEN/8, x4, x1, x2)

inst_8409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:25227*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25227*0 + 3*729*FLEN/8, x4, x1, x2)

inst_8410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:25230*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25230*0 + 3*730*FLEN/8, x4, x1, x2)

inst_8411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:25233*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25233*0 + 3*731*FLEN/8, x4, x1, x2)

inst_8412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:25236*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25236*0 + 3*732*FLEN/8, x4, x1, x2)

inst_8413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:25239*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25239*0 + 3*733*FLEN/8, x4, x1, x2)

inst_8414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:25242*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25242*0 + 3*734*FLEN/8, x4, x1, x2)

inst_8415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:25245*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25245*0 + 3*735*FLEN/8, x4, x1, x2)

inst_8416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:25248*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25248*0 + 3*736*FLEN/8, x4, x1, x2)

inst_8417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:25251*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25251*0 + 3*737*FLEN/8, x4, x1, x2)

inst_8418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:25254*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25254*0 + 3*738*FLEN/8, x4, x1, x2)

inst_8419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:25257*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25257*0 + 3*739*FLEN/8, x4, x1, x2)

inst_8420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:25260*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25260*0 + 3*740*FLEN/8, x4, x1, x2)

inst_8421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:25263*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25263*0 + 3*741*FLEN/8, x4, x1, x2)

inst_8422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:25266*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25266*0 + 3*742*FLEN/8, x4, x1, x2)

inst_8423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:25269*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25269*0 + 3*743*FLEN/8, x4, x1, x2)

inst_8424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:25272*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25272*0 + 3*744*FLEN/8, x4, x1, x2)

inst_8425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:25275*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25275*0 + 3*745*FLEN/8, x4, x1, x2)

inst_8426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:25278*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25278*0 + 3*746*FLEN/8, x4, x1, x2)

inst_8427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:25281*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25281*0 + 3*747*FLEN/8, x4, x1, x2)

inst_8428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000000000; valaddr_reg:x3; val_offset:25284*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25284*0 + 3*748*FLEN/8, x4, x1, x2)

inst_8429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000000001; valaddr_reg:x3; val_offset:25287*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25287*0 + 3*749*FLEN/8, x4, x1, x2)

inst_8430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000000003; valaddr_reg:x3; val_offset:25290*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25290*0 + 3*750*FLEN/8, x4, x1, x2)

inst_8431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000000007; valaddr_reg:x3; val_offset:25293*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25293*0 + 3*751*FLEN/8, x4, x1, x2)

inst_8432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000000000f; valaddr_reg:x3; val_offset:25296*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25296*0 + 3*752*FLEN/8, x4, x1, x2)

inst_8433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000000001f; valaddr_reg:x3; val_offset:25299*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25299*0 + 3*753*FLEN/8, x4, x1, x2)

inst_8434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000000003f; valaddr_reg:x3; val_offset:25302*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25302*0 + 3*754*FLEN/8, x4, x1, x2)

inst_8435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000000007f; valaddr_reg:x3; val_offset:25305*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25305*0 + 3*755*FLEN/8, x4, x1, x2)

inst_8436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa00000000000ff; valaddr_reg:x3; val_offset:25308*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25308*0 + 3*756*FLEN/8, x4, x1, x2)

inst_8437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa00000000001ff; valaddr_reg:x3; val_offset:25311*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25311*0 + 3*757*FLEN/8, x4, x1, x2)

inst_8438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa00000000003ff; valaddr_reg:x3; val_offset:25314*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25314*0 + 3*758*FLEN/8, x4, x1, x2)

inst_8439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa00000000007ff; valaddr_reg:x3; val_offset:25317*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25317*0 + 3*759*FLEN/8, x4, x1, x2)

inst_8440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000000fff; valaddr_reg:x3; val_offset:25320*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25320*0 + 3*760*FLEN/8, x4, x1, x2)

inst_8441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000001fff; valaddr_reg:x3; val_offset:25323*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25323*0 + 3*761*FLEN/8, x4, x1, x2)

inst_8442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000003fff; valaddr_reg:x3; val_offset:25326*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25326*0 + 3*762*FLEN/8, x4, x1, x2)

inst_8443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa0000000007fff; valaddr_reg:x3; val_offset:25329*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25329*0 + 3*763*FLEN/8, x4, x1, x2)

inst_8444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000000ffff; valaddr_reg:x3; val_offset:25332*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25332*0 + 3*764*FLEN/8, x4, x1, x2)

inst_8445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000001ffff; valaddr_reg:x3; val_offset:25335*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25335*0 + 3*765*FLEN/8, x4, x1, x2)

inst_8446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000003ffff; valaddr_reg:x3; val_offset:25338*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25338*0 + 3*766*FLEN/8, x4, x1, x2)

inst_8447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x5c0cddb669f4f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f75c0cddb669f4f; op2val:0x0;
op3val:0xa000000007ffff; valaddr_reg:x3; val_offset:25341*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 25341*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481739120639,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481739382783,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481739907071,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481740955647,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481743052799,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481747247103,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481755635711,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481772412927,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481805967359,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302481873076223,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302482007293951,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302482275729407,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302482812600319,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302483886342143,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302486033825791,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302490328793087,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302498918727679,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302516098596863,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302550458335231,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302619177811967,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515302756616765439,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515303031494672383,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515303581250486271,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515304680762114047,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515306879785369599,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515311277831880703,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515320073924902911,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515337666110947327,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515372850483036159,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515443219227213823,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515583956715569151,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13515865431692279807,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13516428381645701119,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13517554281552543743,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13517554281552543744,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13518680181459386368,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519243131412807680,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519524606389518336,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519665343877873664,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519735712622051328,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519770896994140160,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519788489180184576,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519797285273206784,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519801683319717888,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519803882342973440,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519804981854601216,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519805531610415104,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519805806488322048,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519805943927275520,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806012646752256,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806047006490624,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806064186359808,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806072776294400,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806077071261696,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806079218745344,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806080292487168,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806080829358080,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081097793536,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081232011264,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081299120128,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081332674560,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081349451776,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081357840384,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081362034688,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081364131840,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081365180416,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081365704704,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081365966848,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366097920,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366163456,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366196224,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366212608,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366220800,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366224896,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366226944,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366227968,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228480,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228736,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228864,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228928,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228960,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228976,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228984,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228988,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228990,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13519806081366228991,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6878049175281070247,64,FLEN)
NAN_BOXED(11527508741073744178,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370496,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370623,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370751,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371007,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371519,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627372543,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627374591,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627378687,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627386879,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627403263,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627436031,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627501567,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627632639,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627894783,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599628419071,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599629467647,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599631564799,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599635759103,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599644147711,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599660924927,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599694479359,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599761588223,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599895805951,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600164241407,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600701112319,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503601774854143,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503603922337791,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503608217305087,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503616807239679,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503633987108863,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503668346847231,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503737066323967,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503874505277439,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504149383184383,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504699138998271,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4505798650626047,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4507997673881599,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4512395720392703,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4521191813414911,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4538783999459327,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4573968371548159,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4644337115725823,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4785074604081151,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5066549580791807,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5629499534213119,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055743,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055744,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7881299347898368,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8444249301319680,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8725724278030336,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8866461766385664,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8936830510563328,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8972014882652160,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8989607068696576,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8998403161718784,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9002801208229888,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9005000231485440,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006099743113216,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006649498927104,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006924376834048,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007061815787520,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007130535264256,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007164895002624,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007182074871808,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007190664806400,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007194959773696,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007197107257344,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198180999168,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198717870080,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198986305536,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199120523264,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199187632128,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199221186560,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199237963776,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199246352384,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199250546688,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199252643840,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199253692416,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254216704,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254478848,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254609920,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254675456,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254708224,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254724608,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254732800,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254736896,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254738944,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254739968,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740480,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740736,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740864,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6878222939432418599,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740991,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632128,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632129,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632131,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632135,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632143,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632159,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632191,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632255,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632383,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035632639,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035633151,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035634175,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035636223,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035640319,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035648511,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035664895,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035697663,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035763199,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694035894271,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694036156415,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694036680703,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694037729279,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694039826431,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694044020735,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694052409343,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694069186559,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694102740991,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694169849855,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694304067583,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683694572503039,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683695109373951,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683696183115775,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683698330599423,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683702625566719,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683711215501311,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683728395370495,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683762755108863,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683831474585599,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366683968913539071,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366684243791446015,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366684793547259903,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366685893058887679,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366688092082143231,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366692490128654335,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366701286221676543,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366718878407720959,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366754062779809791,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366824431523987455,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13366965169012342783,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13367246643989053439,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13367809593942474751,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13368935493849317375,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13368935493849317376,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13370061393756160000,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13370624343709581312,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13370905818686291968,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371046556174647296,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371116924918824960,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371152109290913792,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371169701476958208,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371178497569980416,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371182895616491520,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371185094639747072,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371186194151374848,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371186743907188736,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187018785095680,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187156224049152,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187224943525888,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187259303264256,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187276483133440,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187285073068032,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187289368035328,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187291515518976,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187292589260800,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293126131712,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293394567168,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293528784896,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293595893760,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293629448192,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293646225408,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293654614016,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293658808320,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293660905472,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293661954048,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662478336,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662740480,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662871552,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662937088,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662969856,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662986240,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662994432,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293662998528,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663000576,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663001600,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002112,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002368,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002496,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002560,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002592,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002608,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002616,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002620,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002622,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13371187293663002623,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6878356268830769279,64,FLEN)
NAN_BOXED(11527126348658583800,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078848,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078849,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078851,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078855,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078863,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078879,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078911,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078975,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079103,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079359,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079871,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840080895,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840082943,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840087039,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840095231,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840111615,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840144383,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840209919,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840340991,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840603135,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785841127423,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785842175999,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785844273151,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785848467455,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785856856063,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785873633279,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785907187711,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785974296575,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786108514303,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786376949759,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786913820671,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136787987562495,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136790135046143,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136794430013439,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136803019948031,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136820199817215,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136854559555583,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136923279032319,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137060717985791,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137335595892735,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137885351706623,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171138984863334399,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171141183886589951,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171145581933101055,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171154378026123263,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171171970212167679,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171207154584256511,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171277523328434175,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171418260816789503,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171699735793500159,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(172262685746921471,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764095,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764096,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(174514485560606720,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175077435514028032,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175358910490738688,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175499647979094016,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175570016723271680,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175605201095360512,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175622793281404928,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175631589374427136,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175635987420938240,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175638186444193792,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639285955821568,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639835711635456,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640110589542400,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640248028495872,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640316747972608,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640351107710976,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640368287580160,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640376877514752,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640381172482048,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640383319965696,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384393707520,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384930578432,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385199013888,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385333231616,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385400340480,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385433894912,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385450672128,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385459060736,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385463255040,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385465352192,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466400768,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466925056,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467187200,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467318272,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467383808,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467416576,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467432960,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467441152,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467445248,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467447296,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448320,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448832,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449088,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449216,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449280,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449312,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449328,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449336,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449340,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449342,64,FLEN)
NAN_BOXED(6878402350944218055,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449343,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412096,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412097,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412099,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412103,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412111,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412127,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412159,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412223,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412351,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412607,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105413119,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105414143,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105416191,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105420287,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105428479,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105444863,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105477631,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105543167,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105674239,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105936383,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817106460671,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817107509247,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817109606399,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817113800703,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817122189311,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817138966527,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817172520959,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817239629823,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817373847551,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817642283007,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062818179153919,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062819252895743,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062821400379391,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062825695346687,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062834285281279,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062851465150463,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062885824888831,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062954544365567,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063091983319039,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063366861225983,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462063916617039871,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462065016128667647,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462067215151923199,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462071613198434303,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462080409291456511,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462098001477500927,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462133185849589759,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462203554593767423,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462344292082122751,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462625767058833407,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9463188717012254719,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097343,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9464314616919097344,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9465440516825939968,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466003466779361280,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466284941756071936,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466425679244427264,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466496047988604928,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466531232360693760,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466548824546738176,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466557620639760384,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466562018686271488,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466564217709527040,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565317221154816,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466565866976968704,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566141854875648,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566279293829120,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566348013305856,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566382373044224,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566399552913408,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566408142848000,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566412437815296,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566414585298944,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566415659040768,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416195911680,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416464347136,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416598564864,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416665673728,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416699228160,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416716005376,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416724393984,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416728588288,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416730685440,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416731734016,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732258304,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732520448,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732651520,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732717056,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732749824,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732766208,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732774400,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732778496,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732780544,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732781568,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782080,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782336,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782464,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782528,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782560,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782576,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782584,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782588,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782590,64,FLEN)
NAN_BOXED(6878490683079347119,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782591,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855872,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855873,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855875,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855879,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855887,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855903,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855935,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855999,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856127,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856383,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075856895,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075857919,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075859967,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075864063,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075872255,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075888639,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075921407,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075986943,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076118015,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076380159,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188076904447,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188077953023,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188080050175,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188084244479,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188092633087,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188109410303,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188142964735,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188210073599,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188344291327,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188612726783,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115189149597695,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115190223339519,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115192370823167,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115196665790463,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115205255725055,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115222435594239,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115256795332607,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115325514809343,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115462953762815,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115737831669759,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144116287587483647,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144117387099111423,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144119586122366975,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144123984168878079,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144132780261900287,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144150372447944703,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144185556820033535,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144255925564211199,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144396663052566527,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144678138029277183,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(145241087982698495,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541119,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(146366987889541120,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(147492887796383744,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148055837749805056,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148337312726515712,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148478050214871040,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148548418959048704,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148583603331137536,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148601195517181952,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148609991610204160,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148614389656715264,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148616588679970816,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148617688191598592,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618237947412480,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618512825319424,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618650264272896,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618718983749632,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618753343488000,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618770523357184,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618779113291776,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618783408259072,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618785555742720,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618786629484544,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787166355456,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787434790912,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787569008640,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787636117504,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787669671936,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787686449152,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787694837760,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787699032064,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787701129216,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702177792,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702702080,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787702964224,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703095296,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703160832,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703193600,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703209984,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703218176,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703222272,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703224320,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225344,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703225856,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226112,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226240,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226304,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226336,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226352,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226360,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226364,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226366,64,FLEN)
NAN_BOXED(6878525688722471183,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226367,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704960,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704961,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704963,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704967,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704975,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704991,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705023,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705087,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705215,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705471,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273705983,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273707007,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273709055,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273713151,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273721343,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273737727,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273770495,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273836031,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273967103,64,FLEN)
NAN_BOXED(6878615996260065103,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996274229247,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
