
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_67584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffffe000; valaddr_reg:x3; val_offset:202752*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202752*0 + 3*0*FLEN/8, x4, x1, x2)

inst_67585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffff000; valaddr_reg:x3; val_offset:202755*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202755*0 + 3*1*FLEN/8, x4, x1, x2)

inst_67586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffff800; valaddr_reg:x3; val_offset:202758*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202758*0 + 3*2*FLEN/8, x4, x1, x2)

inst_67587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffffc00; valaddr_reg:x3; val_offset:202761*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202761*0 + 3*3*FLEN/8, x4, x1, x2)

inst_67588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffffe00; valaddr_reg:x3; val_offset:202764*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202764*0 + 3*4*FLEN/8, x4, x1, x2)

inst_67589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffffff00; valaddr_reg:x3; val_offset:202767*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202767*0 + 3*5*FLEN/8, x4, x1, x2)

inst_67590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffffff80; valaddr_reg:x3; val_offset:202770*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202770*0 + 3*6*FLEN/8, x4, x1, x2)

inst_67591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffffffc0; valaddr_reg:x3; val_offset:202773*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202773*0 + 3*7*FLEN/8, x4, x1, x2)

inst_67592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffffffe0; valaddr_reg:x3; val_offset:202776*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202776*0 + 3*8*FLEN/8, x4, x1, x2)

inst_67593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffffff0; valaddr_reg:x3; val_offset:202779*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202779*0 + 3*9*FLEN/8, x4, x1, x2)

inst_67594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffffff8; valaddr_reg:x3; val_offset:202782*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202782*0 + 3*10*FLEN/8, x4, x1, x2)

inst_67595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffffffc; valaddr_reg:x3; val_offset:202785*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202785*0 + 3*11*FLEN/8, x4, x1, x2)

inst_67596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffffffe; valaddr_reg:x3; val_offset:202788*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202788*0 + 3*12*FLEN/8, x4, x1, x2)

inst_67597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffffffff; valaddr_reg:x3; val_offset:202791*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202791*0 + 3*13*FLEN/8, x4, x1, x2)

inst_67598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:202794*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202794*0 + 3*14*FLEN/8, x4, x1, x2)

inst_67599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:202797*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202797*0 + 3*15*FLEN/8, x4, x1, x2)

inst_67600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:202800*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202800*0 + 3*16*FLEN/8, x4, x1, x2)

inst_67601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:202803*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202803*0 + 3*17*FLEN/8, x4, x1, x2)

inst_67602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:202806*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202806*0 + 3*18*FLEN/8, x4, x1, x2)

inst_67603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:202809*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202809*0 + 3*19*FLEN/8, x4, x1, x2)

inst_67604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:202812*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202812*0 + 3*20*FLEN/8, x4, x1, x2)

inst_67605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:202815*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202815*0 + 3*21*FLEN/8, x4, x1, x2)

inst_67606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:202818*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202818*0 + 3*22*FLEN/8, x4, x1, x2)

inst_67607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:202821*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202821*0 + 3*23*FLEN/8, x4, x1, x2)

inst_67608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:202824*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202824*0 + 3*24*FLEN/8, x4, x1, x2)

inst_67609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:202827*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202827*0 + 3*25*FLEN/8, x4, x1, x2)

inst_67610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:202830*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202830*0 + 3*26*FLEN/8, x4, x1, x2)

inst_67611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:202833*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202833*0 + 3*27*FLEN/8, x4, x1, x2)

inst_67612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:202836*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202836*0 + 3*28*FLEN/8, x4, x1, x2)

inst_67613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:202839*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202839*0 + 3*29*FLEN/8, x4, x1, x2)

inst_67614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:202842*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202842*0 + 3*30*FLEN/8, x4, x1, x2)

inst_67615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:202845*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202845*0 + 3*31*FLEN/8, x4, x1, x2)

inst_67616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:202848*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202848*0 + 3*32*FLEN/8, x4, x1, x2)

inst_67617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:202851*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202851*0 + 3*33*FLEN/8, x4, x1, x2)

inst_67618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:202854*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202854*0 + 3*34*FLEN/8, x4, x1, x2)

inst_67619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:202857*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202857*0 + 3*35*FLEN/8, x4, x1, x2)

inst_67620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:202860*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202860*0 + 3*36*FLEN/8, x4, x1, x2)

inst_67621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:202863*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202863*0 + 3*37*FLEN/8, x4, x1, x2)

inst_67622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:202866*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202866*0 + 3*38*FLEN/8, x4, x1, x2)

inst_67623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:202869*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202869*0 + 3*39*FLEN/8, x4, x1, x2)

inst_67624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:202872*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202872*0 + 3*40*FLEN/8, x4, x1, x2)

inst_67625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:202875*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202875*0 + 3*41*FLEN/8, x4, x1, x2)

inst_67626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:202878*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202878*0 + 3*42*FLEN/8, x4, x1, x2)

inst_67627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:202881*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202881*0 + 3*43*FLEN/8, x4, x1, x2)

inst_67628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:202884*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202884*0 + 3*44*FLEN/8, x4, x1, x2)

inst_67629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:202887*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202887*0 + 3*45*FLEN/8, x4, x1, x2)

inst_67630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:202890*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202890*0 + 3*46*FLEN/8, x4, x1, x2)

inst_67631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:202893*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202893*0 + 3*47*FLEN/8, x4, x1, x2)

inst_67632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:202896*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202896*0 + 3*48*FLEN/8, x4, x1, x2)

inst_67633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:202899*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202899*0 + 3*49*FLEN/8, x4, x1, x2)

inst_67634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:202902*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202902*0 + 3*50*FLEN/8, x4, x1, x2)

inst_67635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:202905*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202905*0 + 3*51*FLEN/8, x4, x1, x2)

inst_67636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:202908*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202908*0 + 3*52*FLEN/8, x4, x1, x2)

inst_67637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:202911*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202911*0 + 3*53*FLEN/8, x4, x1, x2)

inst_67638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:202914*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202914*0 + 3*54*FLEN/8, x4, x1, x2)

inst_67639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:202917*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202917*0 + 3*55*FLEN/8, x4, x1, x2)

inst_67640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:202920*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202920*0 + 3*56*FLEN/8, x4, x1, x2)

inst_67641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:202923*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202923*0 + 3*57*FLEN/8, x4, x1, x2)

inst_67642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000000000; valaddr_reg:x3; val_offset:202926*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202926*0 + 3*58*FLEN/8, x4, x1, x2)

inst_67643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000000001; valaddr_reg:x3; val_offset:202929*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202929*0 + 3*59*FLEN/8, x4, x1, x2)

inst_67644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000000003; valaddr_reg:x3; val_offset:202932*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202932*0 + 3*60*FLEN/8, x4, x1, x2)

inst_67645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000000007; valaddr_reg:x3; val_offset:202935*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202935*0 + 3*61*FLEN/8, x4, x1, x2)

inst_67646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000000000f; valaddr_reg:x3; val_offset:202938*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202938*0 + 3*62*FLEN/8, x4, x1, x2)

inst_67647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000000001f; valaddr_reg:x3; val_offset:202941*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202941*0 + 3*63*FLEN/8, x4, x1, x2)

inst_67648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000000003f; valaddr_reg:x3; val_offset:202944*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202944*0 + 3*64*FLEN/8, x4, x1, x2)

inst_67649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000000007f; valaddr_reg:x3; val_offset:202947*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202947*0 + 3*65*FLEN/8, x4, x1, x2)

inst_67650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000000000ff; valaddr_reg:x3; val_offset:202950*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202950*0 + 3*66*FLEN/8, x4, x1, x2)

inst_67651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000000001ff; valaddr_reg:x3; val_offset:202953*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202953*0 + 3*67*FLEN/8, x4, x1, x2)

inst_67652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000000003ff; valaddr_reg:x3; val_offset:202956*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202956*0 + 3*68*FLEN/8, x4, x1, x2)

inst_67653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000000007ff; valaddr_reg:x3; val_offset:202959*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202959*0 + 3*69*FLEN/8, x4, x1, x2)

inst_67654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000000fff; valaddr_reg:x3; val_offset:202962*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202962*0 + 3*70*FLEN/8, x4, x1, x2)

inst_67655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000001fff; valaddr_reg:x3; val_offset:202965*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202965*0 + 3*71*FLEN/8, x4, x1, x2)

inst_67656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000003fff; valaddr_reg:x3; val_offset:202968*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202968*0 + 3*72*FLEN/8, x4, x1, x2)

inst_67657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000007fff; valaddr_reg:x3; val_offset:202971*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202971*0 + 3*73*FLEN/8, x4, x1, x2)

inst_67658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000000ffff; valaddr_reg:x3; val_offset:202974*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202974*0 + 3*74*FLEN/8, x4, x1, x2)

inst_67659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000001ffff; valaddr_reg:x3; val_offset:202977*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202977*0 + 3*75*FLEN/8, x4, x1, x2)

inst_67660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000003ffff; valaddr_reg:x3; val_offset:202980*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202980*0 + 3*76*FLEN/8, x4, x1, x2)

inst_67661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000007ffff; valaddr_reg:x3; val_offset:202983*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202983*0 + 3*77*FLEN/8, x4, x1, x2)

inst_67662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000000fffff; valaddr_reg:x3; val_offset:202986*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202986*0 + 3*78*FLEN/8, x4, x1, x2)

inst_67663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000001fffff; valaddr_reg:x3; val_offset:202989*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202989*0 + 3*79*FLEN/8, x4, x1, x2)

inst_67664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000003fffff; valaddr_reg:x3; val_offset:202992*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202992*0 + 3*80*FLEN/8, x4, x1, x2)

inst_67665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000007fffff; valaddr_reg:x3; val_offset:202995*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202995*0 + 3*81*FLEN/8, x4, x1, x2)

inst_67666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000000ffffff; valaddr_reg:x3; val_offset:202998*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202998*0 + 3*82*FLEN/8, x4, x1, x2)

inst_67667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000001ffffff; valaddr_reg:x3; val_offset:203001*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203001*0 + 3*83*FLEN/8, x4, x1, x2)

inst_67668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000003ffffff; valaddr_reg:x3; val_offset:203004*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203004*0 + 3*84*FLEN/8, x4, x1, x2)

inst_67669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000007ffffff; valaddr_reg:x3; val_offset:203007*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203007*0 + 3*85*FLEN/8, x4, x1, x2)

inst_67670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000000fffffff; valaddr_reg:x3; val_offset:203010*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203010*0 + 3*86*FLEN/8, x4, x1, x2)

inst_67671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000001fffffff; valaddr_reg:x3; val_offset:203013*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203013*0 + 3*87*FLEN/8, x4, x1, x2)

inst_67672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000003fffffff; valaddr_reg:x3; val_offset:203016*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203016*0 + 3*88*FLEN/8, x4, x1, x2)

inst_67673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000007fffffff; valaddr_reg:x3; val_offset:203019*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203019*0 + 3*89*FLEN/8, x4, x1, x2)

inst_67674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400000ffffffff; valaddr_reg:x3; val_offset:203022*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203022*0 + 3*90*FLEN/8, x4, x1, x2)

inst_67675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400001ffffffff; valaddr_reg:x3; val_offset:203025*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203025*0 + 3*91*FLEN/8, x4, x1, x2)

inst_67676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400003ffffffff; valaddr_reg:x3; val_offset:203028*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203028*0 + 3*92*FLEN/8, x4, x1, x2)

inst_67677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400007ffffffff; valaddr_reg:x3; val_offset:203031*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203031*0 + 3*93*FLEN/8, x4, x1, x2)

inst_67678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240000fffffffff; valaddr_reg:x3; val_offset:203034*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203034*0 + 3*94*FLEN/8, x4, x1, x2)

inst_67679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240001fffffffff; valaddr_reg:x3; val_offset:203037*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203037*0 + 3*95*FLEN/8, x4, x1, x2)

inst_67680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240003fffffffff; valaddr_reg:x3; val_offset:203040*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203040*0 + 3*96*FLEN/8, x4, x1, x2)

inst_67681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240007fffffffff; valaddr_reg:x3; val_offset:203043*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203043*0 + 3*97*FLEN/8, x4, x1, x2)

inst_67682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824000ffffffffff; valaddr_reg:x3; val_offset:203046*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203046*0 + 3*98*FLEN/8, x4, x1, x2)

inst_67683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824001ffffffffff; valaddr_reg:x3; val_offset:203049*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203049*0 + 3*99*FLEN/8, x4, x1, x2)

inst_67684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824003ffffffffff; valaddr_reg:x3; val_offset:203052*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203052*0 + 3*100*FLEN/8, x4, x1, x2)

inst_67685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824007ffffffffff; valaddr_reg:x3; val_offset:203055*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203055*0 + 3*101*FLEN/8, x4, x1, x2)

inst_67686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82400fffffffffff; valaddr_reg:x3; val_offset:203058*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203058*0 + 3*102*FLEN/8, x4, x1, x2)

inst_67687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82401fffffffffff; valaddr_reg:x3; val_offset:203061*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203061*0 + 3*103*FLEN/8, x4, x1, x2)

inst_67688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82403fffffffffff; valaddr_reg:x3; val_offset:203064*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203064*0 + 3*104*FLEN/8, x4, x1, x2)

inst_67689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x82407fffffffffff; valaddr_reg:x3; val_offset:203067*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203067*0 + 3*105*FLEN/8, x4, x1, x2)

inst_67690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8240ffffffffffff; valaddr_reg:x3; val_offset:203070*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203070*0 + 3*106*FLEN/8, x4, x1, x2)

inst_67691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8241ffffffffffff; valaddr_reg:x3; val_offset:203073*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203073*0 + 3*107*FLEN/8, x4, x1, x2)

inst_67692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8243ffffffffffff; valaddr_reg:x3; val_offset:203076*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203076*0 + 3*108*FLEN/8, x4, x1, x2)

inst_67693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8247ffffffffffff; valaddr_reg:x3; val_offset:203079*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203079*0 + 3*109*FLEN/8, x4, x1, x2)

inst_67694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x8248000000000000; valaddr_reg:x3; val_offset:203082*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203082*0 + 3*110*FLEN/8, x4, x1, x2)

inst_67695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824c000000000000; valaddr_reg:x3; val_offset:203085*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203085*0 + 3*111*FLEN/8, x4, x1, x2)

inst_67696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824e000000000000; valaddr_reg:x3; val_offset:203088*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203088*0 + 3*112*FLEN/8, x4, x1, x2)

inst_67697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824f000000000000; valaddr_reg:x3; val_offset:203091*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203091*0 + 3*113*FLEN/8, x4, x1, x2)

inst_67698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824f800000000000; valaddr_reg:x3; val_offset:203094*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203094*0 + 3*114*FLEN/8, x4, x1, x2)

inst_67699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fc00000000000; valaddr_reg:x3; val_offset:203097*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203097*0 + 3*115*FLEN/8, x4, x1, x2)

inst_67700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fe00000000000; valaddr_reg:x3; val_offset:203100*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203100*0 + 3*116*FLEN/8, x4, x1, x2)

inst_67701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ff00000000000; valaddr_reg:x3; val_offset:203103*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203103*0 + 3*117*FLEN/8, x4, x1, x2)

inst_67702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ff80000000000; valaddr_reg:x3; val_offset:203106*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203106*0 + 3*118*FLEN/8, x4, x1, x2)

inst_67703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffc0000000000; valaddr_reg:x3; val_offset:203109*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203109*0 + 3*119*FLEN/8, x4, x1, x2)

inst_67704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffe0000000000; valaddr_reg:x3; val_offset:203112*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203112*0 + 3*120*FLEN/8, x4, x1, x2)

inst_67705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fff0000000000; valaddr_reg:x3; val_offset:203115*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203115*0 + 3*121*FLEN/8, x4, x1, x2)

inst_67706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fff8000000000; valaddr_reg:x3; val_offset:203118*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203118*0 + 3*122*FLEN/8, x4, x1, x2)

inst_67707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffc000000000; valaddr_reg:x3; val_offset:203121*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203121*0 + 3*123*FLEN/8, x4, x1, x2)

inst_67708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffe000000000; valaddr_reg:x3; val_offset:203124*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203124*0 + 3*124*FLEN/8, x4, x1, x2)

inst_67709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffff000000000; valaddr_reg:x3; val_offset:203127*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203127*0 + 3*125*FLEN/8, x4, x1, x2)

inst_67710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffff800000000; valaddr_reg:x3; val_offset:203130*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203130*0 + 3*126*FLEN/8, x4, x1, x2)

inst_67711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffc00000000; valaddr_reg:x3; val_offset:203133*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203133*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_67712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffe00000000; valaddr_reg:x3; val_offset:203136*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203136*0 + 3*128*FLEN/8, x4, x1, x2)

inst_67713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffff00000000; valaddr_reg:x3; val_offset:203139*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203139*0 + 3*129*FLEN/8, x4, x1, x2)

inst_67714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffff80000000; valaddr_reg:x3; val_offset:203142*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203142*0 + 3*130*FLEN/8, x4, x1, x2)

inst_67715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffc0000000; valaddr_reg:x3; val_offset:203145*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203145*0 + 3*131*FLEN/8, x4, x1, x2)

inst_67716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffe0000000; valaddr_reg:x3; val_offset:203148*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203148*0 + 3*132*FLEN/8, x4, x1, x2)

inst_67717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffff0000000; valaddr_reg:x3; val_offset:203151*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203151*0 + 3*133*FLEN/8, x4, x1, x2)

inst_67718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffff8000000; valaddr_reg:x3; val_offset:203154*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203154*0 + 3*134*FLEN/8, x4, x1, x2)

inst_67719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffc000000; valaddr_reg:x3; val_offset:203157*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203157*0 + 3*135*FLEN/8, x4, x1, x2)

inst_67720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffe000000; valaddr_reg:x3; val_offset:203160*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203160*0 + 3*136*FLEN/8, x4, x1, x2)

inst_67721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffff000000; valaddr_reg:x3; val_offset:203163*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203163*0 + 3*137*FLEN/8, x4, x1, x2)

inst_67722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffff800000; valaddr_reg:x3; val_offset:203166*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203166*0 + 3*138*FLEN/8, x4, x1, x2)

inst_67723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffc00000; valaddr_reg:x3; val_offset:203169*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203169*0 + 3*139*FLEN/8, x4, x1, x2)

inst_67724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffe00000; valaddr_reg:x3; val_offset:203172*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203172*0 + 3*140*FLEN/8, x4, x1, x2)

inst_67725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffff00000; valaddr_reg:x3; val_offset:203175*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203175*0 + 3*141*FLEN/8, x4, x1, x2)

inst_67726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffff80000; valaddr_reg:x3; val_offset:203178*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203178*0 + 3*142*FLEN/8, x4, x1, x2)

inst_67727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffc0000; valaddr_reg:x3; val_offset:203181*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203181*0 + 3*143*FLEN/8, x4, x1, x2)

inst_67728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffe0000; valaddr_reg:x3; val_offset:203184*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203184*0 + 3*144*FLEN/8, x4, x1, x2)

inst_67729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffff0000; valaddr_reg:x3; val_offset:203187*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203187*0 + 3*145*FLEN/8, x4, x1, x2)

inst_67730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffff8000; valaddr_reg:x3; val_offset:203190*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203190*0 + 3*146*FLEN/8, x4, x1, x2)

inst_67731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffffc000; valaddr_reg:x3; val_offset:203193*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203193*0 + 3*147*FLEN/8, x4, x1, x2)

inst_67732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffffe000; valaddr_reg:x3; val_offset:203196*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203196*0 + 3*148*FLEN/8, x4, x1, x2)

inst_67733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffff000; valaddr_reg:x3; val_offset:203199*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203199*0 + 3*149*FLEN/8, x4, x1, x2)

inst_67734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffff800; valaddr_reg:x3; val_offset:203202*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203202*0 + 3*150*FLEN/8, x4, x1, x2)

inst_67735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffffc00; valaddr_reg:x3; val_offset:203205*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203205*0 + 3*151*FLEN/8, x4, x1, x2)

inst_67736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffffe00; valaddr_reg:x3; val_offset:203208*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203208*0 + 3*152*FLEN/8, x4, x1, x2)

inst_67737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffffff00; valaddr_reg:x3; val_offset:203211*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203211*0 + 3*153*FLEN/8, x4, x1, x2)

inst_67738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffffff80; valaddr_reg:x3; val_offset:203214*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203214*0 + 3*154*FLEN/8, x4, x1, x2)

inst_67739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffffffc0; valaddr_reg:x3; val_offset:203217*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203217*0 + 3*155*FLEN/8, x4, x1, x2)

inst_67740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffffffe0; valaddr_reg:x3; val_offset:203220*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203220*0 + 3*156*FLEN/8, x4, x1, x2)

inst_67741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffffff0; valaddr_reg:x3; val_offset:203223*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203223*0 + 3*157*FLEN/8, x4, x1, x2)

inst_67742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffffff8; valaddr_reg:x3; val_offset:203226*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203226*0 + 3*158*FLEN/8, x4, x1, x2)

inst_67743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffffffc; valaddr_reg:x3; val_offset:203229*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203229*0 + 3*159*FLEN/8, x4, x1, x2)

inst_67744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824ffffffffffffe; valaddr_reg:x3; val_offset:203232*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203232*0 + 3*160*FLEN/8, x4, x1, x2)

inst_67745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4b9b2bfabd6ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4b9b2bfabd6ff; op2val:0x8000;
op3val:0x824fffffffffffff; valaddr_reg:x3; val_offset:203235*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203235*0 + 3*161*FLEN/8, x4, x1, x2)

inst_67746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000000000; valaddr_reg:x3; val_offset:203238*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203238*0 + 3*162*FLEN/8, x4, x1, x2)

inst_67747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000000001; valaddr_reg:x3; val_offset:203241*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203241*0 + 3*163*FLEN/8, x4, x1, x2)

inst_67748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000000003; valaddr_reg:x3; val_offset:203244*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203244*0 + 3*164*FLEN/8, x4, x1, x2)

inst_67749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000000007; valaddr_reg:x3; val_offset:203247*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203247*0 + 3*165*FLEN/8, x4, x1, x2)

inst_67750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000000000f; valaddr_reg:x3; val_offset:203250*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203250*0 + 3*166*FLEN/8, x4, x1, x2)

inst_67751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000000001f; valaddr_reg:x3; val_offset:203253*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203253*0 + 3*167*FLEN/8, x4, x1, x2)

inst_67752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000000003f; valaddr_reg:x3; val_offset:203256*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203256*0 + 3*168*FLEN/8, x4, x1, x2)

inst_67753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000000007f; valaddr_reg:x3; val_offset:203259*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203259*0 + 3*169*FLEN/8, x4, x1, x2)

inst_67754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000000000ff; valaddr_reg:x3; val_offset:203262*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203262*0 + 3*170*FLEN/8, x4, x1, x2)

inst_67755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000000001ff; valaddr_reg:x3; val_offset:203265*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203265*0 + 3*171*FLEN/8, x4, x1, x2)

inst_67756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000000003ff; valaddr_reg:x3; val_offset:203268*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203268*0 + 3*172*FLEN/8, x4, x1, x2)

inst_67757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000000007ff; valaddr_reg:x3; val_offset:203271*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203271*0 + 3*173*FLEN/8, x4, x1, x2)

inst_67758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000000fff; valaddr_reg:x3; val_offset:203274*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203274*0 + 3*174*FLEN/8, x4, x1, x2)

inst_67759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000001fff; valaddr_reg:x3; val_offset:203277*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203277*0 + 3*175*FLEN/8, x4, x1, x2)

inst_67760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000003fff; valaddr_reg:x3; val_offset:203280*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203280*0 + 3*176*FLEN/8, x4, x1, x2)

inst_67761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000007fff; valaddr_reg:x3; val_offset:203283*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203283*0 + 3*177*FLEN/8, x4, x1, x2)

inst_67762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000000ffff; valaddr_reg:x3; val_offset:203286*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203286*0 + 3*178*FLEN/8, x4, x1, x2)

inst_67763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000001ffff; valaddr_reg:x3; val_offset:203289*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203289*0 + 3*179*FLEN/8, x4, x1, x2)

inst_67764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000003ffff; valaddr_reg:x3; val_offset:203292*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203292*0 + 3*180*FLEN/8, x4, x1, x2)

inst_67765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000007ffff; valaddr_reg:x3; val_offset:203295*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203295*0 + 3*181*FLEN/8, x4, x1, x2)

inst_67766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000000fffff; valaddr_reg:x3; val_offset:203298*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203298*0 + 3*182*FLEN/8, x4, x1, x2)

inst_67767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000001fffff; valaddr_reg:x3; val_offset:203301*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203301*0 + 3*183*FLEN/8, x4, x1, x2)

inst_67768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000003fffff; valaddr_reg:x3; val_offset:203304*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203304*0 + 3*184*FLEN/8, x4, x1, x2)

inst_67769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000007fffff; valaddr_reg:x3; val_offset:203307*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203307*0 + 3*185*FLEN/8, x4, x1, x2)

inst_67770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000000ffffff; valaddr_reg:x3; val_offset:203310*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203310*0 + 3*186*FLEN/8, x4, x1, x2)

inst_67771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000001ffffff; valaddr_reg:x3; val_offset:203313*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203313*0 + 3*187*FLEN/8, x4, x1, x2)

inst_67772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000003ffffff; valaddr_reg:x3; val_offset:203316*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203316*0 + 3*188*FLEN/8, x4, x1, x2)

inst_67773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000007ffffff; valaddr_reg:x3; val_offset:203319*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203319*0 + 3*189*FLEN/8, x4, x1, x2)

inst_67774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000000fffffff; valaddr_reg:x3; val_offset:203322*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203322*0 + 3*190*FLEN/8, x4, x1, x2)

inst_67775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000001fffffff; valaddr_reg:x3; val_offset:203325*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203325*0 + 3*191*FLEN/8, x4, x1, x2)

inst_67776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000003fffffff; valaddr_reg:x3; val_offset:203328*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203328*0 + 3*192*FLEN/8, x4, x1, x2)

inst_67777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000007fffffff; valaddr_reg:x3; val_offset:203331*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203331*0 + 3*193*FLEN/8, x4, x1, x2)

inst_67778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700000ffffffff; valaddr_reg:x3; val_offset:203334*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203334*0 + 3*194*FLEN/8, x4, x1, x2)

inst_67779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700001ffffffff; valaddr_reg:x3; val_offset:203337*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203337*0 + 3*195*FLEN/8, x4, x1, x2)

inst_67780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700003ffffffff; valaddr_reg:x3; val_offset:203340*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203340*0 + 3*196*FLEN/8, x4, x1, x2)

inst_67781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700007ffffffff; valaddr_reg:x3; val_offset:203343*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203343*0 + 3*197*FLEN/8, x4, x1, x2)

inst_67782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170000fffffffff; valaddr_reg:x3; val_offset:203346*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203346*0 + 3*198*FLEN/8, x4, x1, x2)

inst_67783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170001fffffffff; valaddr_reg:x3; val_offset:203349*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203349*0 + 3*199*FLEN/8, x4, x1, x2)

inst_67784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170003fffffffff; valaddr_reg:x3; val_offset:203352*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203352*0 + 3*200*FLEN/8, x4, x1, x2)

inst_67785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170007fffffffff; valaddr_reg:x3; val_offset:203355*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203355*0 + 3*201*FLEN/8, x4, x1, x2)

inst_67786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117000ffffffffff; valaddr_reg:x3; val_offset:203358*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203358*0 + 3*202*FLEN/8, x4, x1, x2)

inst_67787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117001ffffffffff; valaddr_reg:x3; val_offset:203361*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203361*0 + 3*203*FLEN/8, x4, x1, x2)

inst_67788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117003ffffffffff; valaddr_reg:x3; val_offset:203364*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203364*0 + 3*204*FLEN/8, x4, x1, x2)

inst_67789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117007ffffffffff; valaddr_reg:x3; val_offset:203367*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203367*0 + 3*205*FLEN/8, x4, x1, x2)

inst_67790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11700fffffffffff; valaddr_reg:x3; val_offset:203370*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203370*0 + 3*206*FLEN/8, x4, x1, x2)

inst_67791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11701fffffffffff; valaddr_reg:x3; val_offset:203373*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203373*0 + 3*207*FLEN/8, x4, x1, x2)

inst_67792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11703fffffffffff; valaddr_reg:x3; val_offset:203376*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203376*0 + 3*208*FLEN/8, x4, x1, x2)

inst_67793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x11707fffffffffff; valaddr_reg:x3; val_offset:203379*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203379*0 + 3*209*FLEN/8, x4, x1, x2)

inst_67794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1170ffffffffffff; valaddr_reg:x3; val_offset:203382*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203382*0 + 3*210*FLEN/8, x4, x1, x2)

inst_67795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1171ffffffffffff; valaddr_reg:x3; val_offset:203385*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203385*0 + 3*211*FLEN/8, x4, x1, x2)

inst_67796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1173ffffffffffff; valaddr_reg:x3; val_offset:203388*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203388*0 + 3*212*FLEN/8, x4, x1, x2)

inst_67797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1177ffffffffffff; valaddr_reg:x3; val_offset:203391*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203391*0 + 3*213*FLEN/8, x4, x1, x2)

inst_67798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x1178000000000000; valaddr_reg:x3; val_offset:203394*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203394*0 + 3*214*FLEN/8, x4, x1, x2)

inst_67799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117c000000000000; valaddr_reg:x3; val_offset:203397*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203397*0 + 3*215*FLEN/8, x4, x1, x2)

inst_67800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117e000000000000; valaddr_reg:x3; val_offset:203400*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203400*0 + 3*216*FLEN/8, x4, x1, x2)

inst_67801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117f000000000000; valaddr_reg:x3; val_offset:203403*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203403*0 + 3*217*FLEN/8, x4, x1, x2)

inst_67802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117f800000000000; valaddr_reg:x3; val_offset:203406*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203406*0 + 3*218*FLEN/8, x4, x1, x2)

inst_67803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fc00000000000; valaddr_reg:x3; val_offset:203409*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203409*0 + 3*219*FLEN/8, x4, x1, x2)

inst_67804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fe00000000000; valaddr_reg:x3; val_offset:203412*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203412*0 + 3*220*FLEN/8, x4, x1, x2)

inst_67805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ff00000000000; valaddr_reg:x3; val_offset:203415*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203415*0 + 3*221*FLEN/8, x4, x1, x2)

inst_67806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ff80000000000; valaddr_reg:x3; val_offset:203418*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203418*0 + 3*222*FLEN/8, x4, x1, x2)

inst_67807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffc0000000000; valaddr_reg:x3; val_offset:203421*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203421*0 + 3*223*FLEN/8, x4, x1, x2)

inst_67808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffe0000000000; valaddr_reg:x3; val_offset:203424*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203424*0 + 3*224*FLEN/8, x4, x1, x2)

inst_67809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fff0000000000; valaddr_reg:x3; val_offset:203427*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203427*0 + 3*225*FLEN/8, x4, x1, x2)

inst_67810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fff8000000000; valaddr_reg:x3; val_offset:203430*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203430*0 + 3*226*FLEN/8, x4, x1, x2)

inst_67811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffc000000000; valaddr_reg:x3; val_offset:203433*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203433*0 + 3*227*FLEN/8, x4, x1, x2)

inst_67812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffe000000000; valaddr_reg:x3; val_offset:203436*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203436*0 + 3*228*FLEN/8, x4, x1, x2)

inst_67813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffff000000000; valaddr_reg:x3; val_offset:203439*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203439*0 + 3*229*FLEN/8, x4, x1, x2)

inst_67814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffff800000000; valaddr_reg:x3; val_offset:203442*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203442*0 + 3*230*FLEN/8, x4, x1, x2)

inst_67815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffc00000000; valaddr_reg:x3; val_offset:203445*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203445*0 + 3*231*FLEN/8, x4, x1, x2)

inst_67816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffe00000000; valaddr_reg:x3; val_offset:203448*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203448*0 + 3*232*FLEN/8, x4, x1, x2)

inst_67817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffff00000000; valaddr_reg:x3; val_offset:203451*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203451*0 + 3*233*FLEN/8, x4, x1, x2)

inst_67818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffff80000000; valaddr_reg:x3; val_offset:203454*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203454*0 + 3*234*FLEN/8, x4, x1, x2)

inst_67819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffc0000000; valaddr_reg:x3; val_offset:203457*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203457*0 + 3*235*FLEN/8, x4, x1, x2)

inst_67820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffe0000000; valaddr_reg:x3; val_offset:203460*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203460*0 + 3*236*FLEN/8, x4, x1, x2)

inst_67821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffff0000000; valaddr_reg:x3; val_offset:203463*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203463*0 + 3*237*FLEN/8, x4, x1, x2)

inst_67822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffff8000000; valaddr_reg:x3; val_offset:203466*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203466*0 + 3*238*FLEN/8, x4, x1, x2)

inst_67823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffc000000; valaddr_reg:x3; val_offset:203469*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203469*0 + 3*239*FLEN/8, x4, x1, x2)

inst_67824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffe000000; valaddr_reg:x3; val_offset:203472*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203472*0 + 3*240*FLEN/8, x4, x1, x2)

inst_67825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffff000000; valaddr_reg:x3; val_offset:203475*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203475*0 + 3*241*FLEN/8, x4, x1, x2)

inst_67826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffff800000; valaddr_reg:x3; val_offset:203478*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203478*0 + 3*242*FLEN/8, x4, x1, x2)

inst_67827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffc00000; valaddr_reg:x3; val_offset:203481*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203481*0 + 3*243*FLEN/8, x4, x1, x2)

inst_67828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffe00000; valaddr_reg:x3; val_offset:203484*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203484*0 + 3*244*FLEN/8, x4, x1, x2)

inst_67829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffff00000; valaddr_reg:x3; val_offset:203487*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203487*0 + 3*245*FLEN/8, x4, x1, x2)

inst_67830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffff80000; valaddr_reg:x3; val_offset:203490*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203490*0 + 3*246*FLEN/8, x4, x1, x2)

inst_67831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffc0000; valaddr_reg:x3; val_offset:203493*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203493*0 + 3*247*FLEN/8, x4, x1, x2)

inst_67832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffe0000; valaddr_reg:x3; val_offset:203496*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203496*0 + 3*248*FLEN/8, x4, x1, x2)

inst_67833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffff0000; valaddr_reg:x3; val_offset:203499*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203499*0 + 3*249*FLEN/8, x4, x1, x2)

inst_67834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffff8000; valaddr_reg:x3; val_offset:203502*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203502*0 + 3*250*FLEN/8, x4, x1, x2)

inst_67835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffffc000; valaddr_reg:x3; val_offset:203505*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203505*0 + 3*251*FLEN/8, x4, x1, x2)

inst_67836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffffe000; valaddr_reg:x3; val_offset:203508*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203508*0 + 3*252*FLEN/8, x4, x1, x2)

inst_67837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffff000; valaddr_reg:x3; val_offset:203511*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203511*0 + 3*253*FLEN/8, x4, x1, x2)

inst_67838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffff800; valaddr_reg:x3; val_offset:203514*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203514*0 + 3*254*FLEN/8, x4, x1, x2)

inst_67839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffffc00; valaddr_reg:x3; val_offset:203517*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203517*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_67840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffffe00; valaddr_reg:x3; val_offset:203520*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203520*0 + 3*256*FLEN/8, x4, x1, x2)

inst_67841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffffff00; valaddr_reg:x3; val_offset:203523*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203523*0 + 3*257*FLEN/8, x4, x1, x2)

inst_67842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffffff80; valaddr_reg:x3; val_offset:203526*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203526*0 + 3*258*FLEN/8, x4, x1, x2)

inst_67843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffffffc0; valaddr_reg:x3; val_offset:203529*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203529*0 + 3*259*FLEN/8, x4, x1, x2)

inst_67844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffffffe0; valaddr_reg:x3; val_offset:203532*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203532*0 + 3*260*FLEN/8, x4, x1, x2)

inst_67845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffffff0; valaddr_reg:x3; val_offset:203535*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203535*0 + 3*261*FLEN/8, x4, x1, x2)

inst_67846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffffff8; valaddr_reg:x3; val_offset:203538*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203538*0 + 3*262*FLEN/8, x4, x1, x2)

inst_67847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffffffc; valaddr_reg:x3; val_offset:203541*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203541*0 + 3*263*FLEN/8, x4, x1, x2)

inst_67848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117ffffffffffffe; valaddr_reg:x3; val_offset:203544*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203544*0 + 3*264*FLEN/8, x4, x1, x2)

inst_67849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x117 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x117fffffffffffff; valaddr_reg:x3; val_offset:203547*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203547*0 + 3*265*FLEN/8, x4, x1, x2)

inst_67850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:203550*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203550*0 + 3*266*FLEN/8, x4, x1, x2)

inst_67851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:203553*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203553*0 + 3*267*FLEN/8, x4, x1, x2)

inst_67852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:203556*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203556*0 + 3*268*FLEN/8, x4, x1, x2)

inst_67853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:203559*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203559*0 + 3*269*FLEN/8, x4, x1, x2)

inst_67854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:203562*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203562*0 + 3*270*FLEN/8, x4, x1, x2)

inst_67855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:203565*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203565*0 + 3*271*FLEN/8, x4, x1, x2)

inst_67856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:203568*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203568*0 + 3*272*FLEN/8, x4, x1, x2)

inst_67857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:203571*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203571*0 + 3*273*FLEN/8, x4, x1, x2)

inst_67858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:203574*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203574*0 + 3*274*FLEN/8, x4, x1, x2)

inst_67859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:203577*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203577*0 + 3*275*FLEN/8, x4, x1, x2)

inst_67860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:203580*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203580*0 + 3*276*FLEN/8, x4, x1, x2)

inst_67861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:203583*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203583*0 + 3*277*FLEN/8, x4, x1, x2)

inst_67862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:203586*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203586*0 + 3*278*FLEN/8, x4, x1, x2)

inst_67863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:203589*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203589*0 + 3*279*FLEN/8, x4, x1, x2)

inst_67864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:203592*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203592*0 + 3*280*FLEN/8, x4, x1, x2)

inst_67865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:203595*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203595*0 + 3*281*FLEN/8, x4, x1, x2)

inst_67866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:203598*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203598*0 + 3*282*FLEN/8, x4, x1, x2)

inst_67867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:203601*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203601*0 + 3*283*FLEN/8, x4, x1, x2)

inst_67868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:203604*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203604*0 + 3*284*FLEN/8, x4, x1, x2)

inst_67869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:203607*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203607*0 + 3*285*FLEN/8, x4, x1, x2)

inst_67870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:203610*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203610*0 + 3*286*FLEN/8, x4, x1, x2)

inst_67871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4be13ced8ab06 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x8af028ef322df and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4be13ced8ab06; op2val:0x2038af028ef322df;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:203613*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203613*0 + 3*287*FLEN/8, x4, x1, x2)

inst_67872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000000000; valaddr_reg:x3; val_offset:203616*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203616*0 + 3*288*FLEN/8, x4, x1, x2)

inst_67873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000000001; valaddr_reg:x3; val_offset:203619*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203619*0 + 3*289*FLEN/8, x4, x1, x2)

inst_67874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000000003; valaddr_reg:x3; val_offset:203622*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203622*0 + 3*290*FLEN/8, x4, x1, x2)

inst_67875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000000007; valaddr_reg:x3; val_offset:203625*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203625*0 + 3*291*FLEN/8, x4, x1, x2)

inst_67876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000000000f; valaddr_reg:x3; val_offset:203628*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203628*0 + 3*292*FLEN/8, x4, x1, x2)

inst_67877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000000001f; valaddr_reg:x3; val_offset:203631*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203631*0 + 3*293*FLEN/8, x4, x1, x2)

inst_67878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000000003f; valaddr_reg:x3; val_offset:203634*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203634*0 + 3*294*FLEN/8, x4, x1, x2)

inst_67879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000000007f; valaddr_reg:x3; val_offset:203637*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203637*0 + 3*295*FLEN/8, x4, x1, x2)

inst_67880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000000000ff; valaddr_reg:x3; val_offset:203640*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203640*0 + 3*296*FLEN/8, x4, x1, x2)

inst_67881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000000001ff; valaddr_reg:x3; val_offset:203643*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203643*0 + 3*297*FLEN/8, x4, x1, x2)

inst_67882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000000003ff; valaddr_reg:x3; val_offset:203646*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203646*0 + 3*298*FLEN/8, x4, x1, x2)

inst_67883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000000007ff; valaddr_reg:x3; val_offset:203649*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203649*0 + 3*299*FLEN/8, x4, x1, x2)

inst_67884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000000fff; valaddr_reg:x3; val_offset:203652*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203652*0 + 3*300*FLEN/8, x4, x1, x2)

inst_67885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000001fff; valaddr_reg:x3; val_offset:203655*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203655*0 + 3*301*FLEN/8, x4, x1, x2)

inst_67886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000003fff; valaddr_reg:x3; val_offset:203658*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203658*0 + 3*302*FLEN/8, x4, x1, x2)

inst_67887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000007fff; valaddr_reg:x3; val_offset:203661*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203661*0 + 3*303*FLEN/8, x4, x1, x2)

inst_67888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000000ffff; valaddr_reg:x3; val_offset:203664*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203664*0 + 3*304*FLEN/8, x4, x1, x2)

inst_67889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000001ffff; valaddr_reg:x3; val_offset:203667*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203667*0 + 3*305*FLEN/8, x4, x1, x2)

inst_67890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000003ffff; valaddr_reg:x3; val_offset:203670*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203670*0 + 3*306*FLEN/8, x4, x1, x2)

inst_67891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000007ffff; valaddr_reg:x3; val_offset:203673*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203673*0 + 3*307*FLEN/8, x4, x1, x2)

inst_67892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000000fffff; valaddr_reg:x3; val_offset:203676*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203676*0 + 3*308*FLEN/8, x4, x1, x2)

inst_67893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000001fffff; valaddr_reg:x3; val_offset:203679*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203679*0 + 3*309*FLEN/8, x4, x1, x2)

inst_67894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000003fffff; valaddr_reg:x3; val_offset:203682*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203682*0 + 3*310*FLEN/8, x4, x1, x2)

inst_67895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000007fffff; valaddr_reg:x3; val_offset:203685*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203685*0 + 3*311*FLEN/8, x4, x1, x2)

inst_67896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000000ffffff; valaddr_reg:x3; val_offset:203688*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203688*0 + 3*312*FLEN/8, x4, x1, x2)

inst_67897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000001ffffff; valaddr_reg:x3; val_offset:203691*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203691*0 + 3*313*FLEN/8, x4, x1, x2)

inst_67898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000003ffffff; valaddr_reg:x3; val_offset:203694*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203694*0 + 3*314*FLEN/8, x4, x1, x2)

inst_67899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000007ffffff; valaddr_reg:x3; val_offset:203697*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203697*0 + 3*315*FLEN/8, x4, x1, x2)

inst_67900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000000fffffff; valaddr_reg:x3; val_offset:203700*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203700*0 + 3*316*FLEN/8, x4, x1, x2)

inst_67901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000001fffffff; valaddr_reg:x3; val_offset:203703*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203703*0 + 3*317*FLEN/8, x4, x1, x2)

inst_67902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000003fffffff; valaddr_reg:x3; val_offset:203706*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203706*0 + 3*318*FLEN/8, x4, x1, x2)

inst_67903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000007fffffff; valaddr_reg:x3; val_offset:203709*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203709*0 + 3*319*FLEN/8, x4, x1, x2)

inst_67904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000000ffffffff; valaddr_reg:x3; val_offset:203712*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203712*0 + 3*320*FLEN/8, x4, x1, x2)

inst_67905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000001ffffffff; valaddr_reg:x3; val_offset:203715*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203715*0 + 3*321*FLEN/8, x4, x1, x2)

inst_67906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000003ffffffff; valaddr_reg:x3; val_offset:203718*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203718*0 + 3*322*FLEN/8, x4, x1, x2)

inst_67907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000007ffffffff; valaddr_reg:x3; val_offset:203721*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203721*0 + 3*323*FLEN/8, x4, x1, x2)

inst_67908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00000fffffffff; valaddr_reg:x3; val_offset:203724*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203724*0 + 3*324*FLEN/8, x4, x1, x2)

inst_67909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00001fffffffff; valaddr_reg:x3; val_offset:203727*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203727*0 + 3*325*FLEN/8, x4, x1, x2)

inst_67910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00003fffffffff; valaddr_reg:x3; val_offset:203730*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203730*0 + 3*326*FLEN/8, x4, x1, x2)

inst_67911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00007fffffffff; valaddr_reg:x3; val_offset:203733*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203733*0 + 3*327*FLEN/8, x4, x1, x2)

inst_67912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0000ffffffffff; valaddr_reg:x3; val_offset:203736*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203736*0 + 3*328*FLEN/8, x4, x1, x2)

inst_67913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0001ffffffffff; valaddr_reg:x3; val_offset:203739*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203739*0 + 3*329*FLEN/8, x4, x1, x2)

inst_67914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0003ffffffffff; valaddr_reg:x3; val_offset:203742*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203742*0 + 3*330*FLEN/8, x4, x1, x2)

inst_67915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0007ffffffffff; valaddr_reg:x3; val_offset:203745*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203745*0 + 3*331*FLEN/8, x4, x1, x2)

inst_67916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf000fffffffffff; valaddr_reg:x3; val_offset:203748*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203748*0 + 3*332*FLEN/8, x4, x1, x2)

inst_67917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf001fffffffffff; valaddr_reg:x3; val_offset:203751*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203751*0 + 3*333*FLEN/8, x4, x1, x2)

inst_67918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf003fffffffffff; valaddr_reg:x3; val_offset:203754*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203754*0 + 3*334*FLEN/8, x4, x1, x2)

inst_67919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf007fffffffffff; valaddr_reg:x3; val_offset:203757*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203757*0 + 3*335*FLEN/8, x4, x1, x2)

inst_67920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf00ffffffffffff; valaddr_reg:x3; val_offset:203760*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203760*0 + 3*336*FLEN/8, x4, x1, x2)

inst_67921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf01ffffffffffff; valaddr_reg:x3; val_offset:203763*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203763*0 + 3*337*FLEN/8, x4, x1, x2)

inst_67922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf03ffffffffffff; valaddr_reg:x3; val_offset:203766*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203766*0 + 3*338*FLEN/8, x4, x1, x2)

inst_67923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf07ffffffffffff; valaddr_reg:x3; val_offset:203769*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203769*0 + 3*339*FLEN/8, x4, x1, x2)

inst_67924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf08000000000000; valaddr_reg:x3; val_offset:203772*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203772*0 + 3*340*FLEN/8, x4, x1, x2)

inst_67925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0c000000000000; valaddr_reg:x3; val_offset:203775*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203775*0 + 3*341*FLEN/8, x4, x1, x2)

inst_67926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0e000000000000; valaddr_reg:x3; val_offset:203778*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203778*0 + 3*342*FLEN/8, x4, x1, x2)

inst_67927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0f000000000000; valaddr_reg:x3; val_offset:203781*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203781*0 + 3*343*FLEN/8, x4, x1, x2)

inst_67928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0f800000000000; valaddr_reg:x3; val_offset:203784*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203784*0 + 3*344*FLEN/8, x4, x1, x2)

inst_67929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fc00000000000; valaddr_reg:x3; val_offset:203787*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203787*0 + 3*345*FLEN/8, x4, x1, x2)

inst_67930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fe00000000000; valaddr_reg:x3; val_offset:203790*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203790*0 + 3*346*FLEN/8, x4, x1, x2)

inst_67931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ff00000000000; valaddr_reg:x3; val_offset:203793*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203793*0 + 3*347*FLEN/8, x4, x1, x2)

inst_67932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ff80000000000; valaddr_reg:x3; val_offset:203796*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203796*0 + 3*348*FLEN/8, x4, x1, x2)

inst_67933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffc0000000000; valaddr_reg:x3; val_offset:203799*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203799*0 + 3*349*FLEN/8, x4, x1, x2)

inst_67934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffe0000000000; valaddr_reg:x3; val_offset:203802*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203802*0 + 3*350*FLEN/8, x4, x1, x2)

inst_67935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fff0000000000; valaddr_reg:x3; val_offset:203805*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203805*0 + 3*351*FLEN/8, x4, x1, x2)

inst_67936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fff8000000000; valaddr_reg:x3; val_offset:203808*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203808*0 + 3*352*FLEN/8, x4, x1, x2)

inst_67937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffc000000000; valaddr_reg:x3; val_offset:203811*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203811*0 + 3*353*FLEN/8, x4, x1, x2)

inst_67938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffe000000000; valaddr_reg:x3; val_offset:203814*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203814*0 + 3*354*FLEN/8, x4, x1, x2)

inst_67939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffff000000000; valaddr_reg:x3; val_offset:203817*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203817*0 + 3*355*FLEN/8, x4, x1, x2)

inst_67940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffff800000000; valaddr_reg:x3; val_offset:203820*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203820*0 + 3*356*FLEN/8, x4, x1, x2)

inst_67941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffc00000000; valaddr_reg:x3; val_offset:203823*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203823*0 + 3*357*FLEN/8, x4, x1, x2)

inst_67942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffe00000000; valaddr_reg:x3; val_offset:203826*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203826*0 + 3*358*FLEN/8, x4, x1, x2)

inst_67943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffff00000000; valaddr_reg:x3; val_offset:203829*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203829*0 + 3*359*FLEN/8, x4, x1, x2)

inst_67944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffff80000000; valaddr_reg:x3; val_offset:203832*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203832*0 + 3*360*FLEN/8, x4, x1, x2)

inst_67945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffc0000000; valaddr_reg:x3; val_offset:203835*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203835*0 + 3*361*FLEN/8, x4, x1, x2)

inst_67946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffe0000000; valaddr_reg:x3; val_offset:203838*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203838*0 + 3*362*FLEN/8, x4, x1, x2)

inst_67947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffff0000000; valaddr_reg:x3; val_offset:203841*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203841*0 + 3*363*FLEN/8, x4, x1, x2)

inst_67948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffff8000000; valaddr_reg:x3; val_offset:203844*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203844*0 + 3*364*FLEN/8, x4, x1, x2)

inst_67949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffc000000; valaddr_reg:x3; val_offset:203847*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203847*0 + 3*365*FLEN/8, x4, x1, x2)

inst_67950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffe000000; valaddr_reg:x3; val_offset:203850*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203850*0 + 3*366*FLEN/8, x4, x1, x2)

inst_67951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffff000000; valaddr_reg:x3; val_offset:203853*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203853*0 + 3*367*FLEN/8, x4, x1, x2)

inst_67952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffff800000; valaddr_reg:x3; val_offset:203856*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203856*0 + 3*368*FLEN/8, x4, x1, x2)

inst_67953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffc00000; valaddr_reg:x3; val_offset:203859*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203859*0 + 3*369*FLEN/8, x4, x1, x2)

inst_67954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffe00000; valaddr_reg:x3; val_offset:203862*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203862*0 + 3*370*FLEN/8, x4, x1, x2)

inst_67955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffff00000; valaddr_reg:x3; val_offset:203865*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203865*0 + 3*371*FLEN/8, x4, x1, x2)

inst_67956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffff80000; valaddr_reg:x3; val_offset:203868*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203868*0 + 3*372*FLEN/8, x4, x1, x2)

inst_67957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffc0000; valaddr_reg:x3; val_offset:203871*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203871*0 + 3*373*FLEN/8, x4, x1, x2)

inst_67958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffe0000; valaddr_reg:x3; val_offset:203874*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203874*0 + 3*374*FLEN/8, x4, x1, x2)

inst_67959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffff0000; valaddr_reg:x3; val_offset:203877*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203877*0 + 3*375*FLEN/8, x4, x1, x2)

inst_67960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffff8000; valaddr_reg:x3; val_offset:203880*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203880*0 + 3*376*FLEN/8, x4, x1, x2)

inst_67961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffffc000; valaddr_reg:x3; val_offset:203883*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203883*0 + 3*377*FLEN/8, x4, x1, x2)

inst_67962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffffe000; valaddr_reg:x3; val_offset:203886*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203886*0 + 3*378*FLEN/8, x4, x1, x2)

inst_67963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffff000; valaddr_reg:x3; val_offset:203889*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203889*0 + 3*379*FLEN/8, x4, x1, x2)

inst_67964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffff800; valaddr_reg:x3; val_offset:203892*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203892*0 + 3*380*FLEN/8, x4, x1, x2)

inst_67965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffffc00; valaddr_reg:x3; val_offset:203895*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203895*0 + 3*381*FLEN/8, x4, x1, x2)

inst_67966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffffe00; valaddr_reg:x3; val_offset:203898*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203898*0 + 3*382*FLEN/8, x4, x1, x2)

inst_67967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffffff00; valaddr_reg:x3; val_offset:203901*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203901*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_67968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffffff80; valaddr_reg:x3; val_offset:203904*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203904*0 + 3*384*FLEN/8, x4, x1, x2)

inst_67969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffffffc0; valaddr_reg:x3; val_offset:203907*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203907*0 + 3*385*FLEN/8, x4, x1, x2)

inst_67970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffffffe0; valaddr_reg:x3; val_offset:203910*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203910*0 + 3*386*FLEN/8, x4, x1, x2)

inst_67971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffffff0; valaddr_reg:x3; val_offset:203913*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203913*0 + 3*387*FLEN/8, x4, x1, x2)

inst_67972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffffff8; valaddr_reg:x3; val_offset:203916*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203916*0 + 3*388*FLEN/8, x4, x1, x2)

inst_67973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffffffc; valaddr_reg:x3; val_offset:203919*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203919*0 + 3*389*FLEN/8, x4, x1, x2)

inst_67974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0ffffffffffffe; valaddr_reg:x3; val_offset:203922*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203922*0 + 3*390*FLEN/8, x4, x1, x2)

inst_67975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf0fffffffffffff; valaddr_reg:x3; val_offset:203925*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203925*0 + 3*391*FLEN/8, x4, x1, x2)

inst_67976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:203928*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203928*0 + 3*392*FLEN/8, x4, x1, x2)

inst_67977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:203931*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203931*0 + 3*393*FLEN/8, x4, x1, x2)

inst_67978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:203934*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203934*0 + 3*394*FLEN/8, x4, x1, x2)

inst_67979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:203937*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203937*0 + 3*395*FLEN/8, x4, x1, x2)

inst_67980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:203940*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203940*0 + 3*396*FLEN/8, x4, x1, x2)

inst_67981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:203943*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203943*0 + 3*397*FLEN/8, x4, x1, x2)

inst_67982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:203946*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203946*0 + 3*398*FLEN/8, x4, x1, x2)

inst_67983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:203949*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203949*0 + 3*399*FLEN/8, x4, x1, x2)

inst_67984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:203952*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203952*0 + 3*400*FLEN/8, x4, x1, x2)

inst_67985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:203955*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203955*0 + 3*401*FLEN/8, x4, x1, x2)

inst_67986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:203958*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203958*0 + 3*402*FLEN/8, x4, x1, x2)

inst_67987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:203961*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203961*0 + 3*403*FLEN/8, x4, x1, x2)

inst_67988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:203964*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203964*0 + 3*404*FLEN/8, x4, x1, x2)

inst_67989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:203967*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203967*0 + 3*405*FLEN/8, x4, x1, x2)

inst_67990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:203970*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203970*0 + 3*406*FLEN/8, x4, x1, x2)

inst_67991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:203973*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203973*0 + 3*407*FLEN/8, x4, x1, x2)

inst_67992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:203976*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203976*0 + 3*408*FLEN/8, x4, x1, x2)

inst_67993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:203979*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203979*0 + 3*409*FLEN/8, x4, x1, x2)

inst_67994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:203982*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203982*0 + 3*410*FLEN/8, x4, x1, x2)

inst_67995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:203985*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203985*0 + 3*411*FLEN/8, x4, x1, x2)

inst_67996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:203988*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203988*0 + 3*412*FLEN/8, x4, x1, x2)

inst_67997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c34b3fae86a6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8a8cef0653161 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c34b3fae86a6; op2val:0x9fc8a8cef0653161;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:203991*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203991*0 + 3*413*FLEN/8, x4, x1, x2)

inst_67998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:203994*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203994*0 + 3*414*FLEN/8, x4, x1, x2)

inst_67999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:203997*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 203997*0 + 3*415*FLEN/8, x4, x1, x2)

inst_68000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:204000*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204000*0 + 3*416*FLEN/8, x4, x1, x2)

inst_68001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:204003*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204003*0 + 3*417*FLEN/8, x4, x1, x2)

inst_68002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:204006*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204006*0 + 3*418*FLEN/8, x4, x1, x2)

inst_68003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:204009*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204009*0 + 3*419*FLEN/8, x4, x1, x2)

inst_68004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:204012*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204012*0 + 3*420*FLEN/8, x4, x1, x2)

inst_68005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:204015*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204015*0 + 3*421*FLEN/8, x4, x1, x2)

inst_68006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:204018*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204018*0 + 3*422*FLEN/8, x4, x1, x2)

inst_68007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:204021*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204021*0 + 3*423*FLEN/8, x4, x1, x2)

inst_68008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:204024*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204024*0 + 3*424*FLEN/8, x4, x1, x2)

inst_68009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:204027*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204027*0 + 3*425*FLEN/8, x4, x1, x2)

inst_68010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:204030*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204030*0 + 3*426*FLEN/8, x4, x1, x2)

inst_68011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:204033*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204033*0 + 3*427*FLEN/8, x4, x1, x2)

inst_68012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:204036*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204036*0 + 3*428*FLEN/8, x4, x1, x2)

inst_68013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:204039*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204039*0 + 3*429*FLEN/8, x4, x1, x2)

inst_68014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:204042*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204042*0 + 3*430*FLEN/8, x4, x1, x2)

inst_68015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:204045*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204045*0 + 3*431*FLEN/8, x4, x1, x2)

inst_68016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:204048*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204048*0 + 3*432*FLEN/8, x4, x1, x2)

inst_68017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:204051*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204051*0 + 3*433*FLEN/8, x4, x1, x2)

inst_68018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:204054*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204054*0 + 3*434*FLEN/8, x4, x1, x2)

inst_68019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:204057*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204057*0 + 3*435*FLEN/8, x4, x1, x2)

inst_68020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:204060*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204060*0 + 3*436*FLEN/8, x4, x1, x2)

inst_68021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:204063*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204063*0 + 3*437*FLEN/8, x4, x1, x2)

inst_68022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:204066*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204066*0 + 3*438*FLEN/8, x4, x1, x2)

inst_68023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:204069*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204069*0 + 3*439*FLEN/8, x4, x1, x2)

inst_68024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:204072*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204072*0 + 3*440*FLEN/8, x4, x1, x2)

inst_68025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:204075*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204075*0 + 3*441*FLEN/8, x4, x1, x2)

inst_68026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:204078*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204078*0 + 3*442*FLEN/8, x4, x1, x2)

inst_68027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:204081*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204081*0 + 3*443*FLEN/8, x4, x1, x2)

inst_68028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:204084*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204084*0 + 3*444*FLEN/8, x4, x1, x2)

inst_68029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:204087*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204087*0 + 3*445*FLEN/8, x4, x1, x2)

inst_68030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:204090*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204090*0 + 3*446*FLEN/8, x4, x1, x2)

inst_68031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:204093*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204093*0 + 3*447*FLEN/8, x4, x1, x2)

inst_68032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:204096*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204096*0 + 3*448*FLEN/8, x4, x1, x2)

inst_68033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:204099*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204099*0 + 3*449*FLEN/8, x4, x1, x2)

inst_68034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:204102*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204102*0 + 3*450*FLEN/8, x4, x1, x2)

inst_68035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:204105*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204105*0 + 3*451*FLEN/8, x4, x1, x2)

inst_68036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:204108*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204108*0 + 3*452*FLEN/8, x4, x1, x2)

inst_68037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:204111*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204111*0 + 3*453*FLEN/8, x4, x1, x2)

inst_68038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:204114*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204114*0 + 3*454*FLEN/8, x4, x1, x2)

inst_68039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:204117*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204117*0 + 3*455*FLEN/8, x4, x1, x2)

inst_68040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:204120*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204120*0 + 3*456*FLEN/8, x4, x1, x2)

inst_68041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:204123*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204123*0 + 3*457*FLEN/8, x4, x1, x2)

inst_68042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:204126*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204126*0 + 3*458*FLEN/8, x4, x1, x2)

inst_68043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:204129*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204129*0 + 3*459*FLEN/8, x4, x1, x2)

inst_68044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:204132*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204132*0 + 3*460*FLEN/8, x4, x1, x2)

inst_68045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:204135*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204135*0 + 3*461*FLEN/8, x4, x1, x2)

inst_68046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:204138*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204138*0 + 3*462*FLEN/8, x4, x1, x2)

inst_68047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:204141*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204141*0 + 3*463*FLEN/8, x4, x1, x2)

inst_68048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:204144*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204144*0 + 3*464*FLEN/8, x4, x1, x2)

inst_68049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:204147*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204147*0 + 3*465*FLEN/8, x4, x1, x2)

inst_68050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:204150*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204150*0 + 3*466*FLEN/8, x4, x1, x2)

inst_68051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:204153*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204153*0 + 3*467*FLEN/8, x4, x1, x2)

inst_68052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:204156*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204156*0 + 3*468*FLEN/8, x4, x1, x2)

inst_68053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:204159*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204159*0 + 3*469*FLEN/8, x4, x1, x2)

inst_68054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:204162*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204162*0 + 3*470*FLEN/8, x4, x1, x2)

inst_68055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:204165*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204165*0 + 3*471*FLEN/8, x4, x1, x2)

inst_68056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:204168*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204168*0 + 3*472*FLEN/8, x4, x1, x2)

inst_68057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:204171*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204171*0 + 3*473*FLEN/8, x4, x1, x2)

inst_68058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:204174*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204174*0 + 3*474*FLEN/8, x4, x1, x2)

inst_68059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:204177*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204177*0 + 3*475*FLEN/8, x4, x1, x2)

inst_68060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:204180*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204180*0 + 3*476*FLEN/8, x4, x1, x2)

inst_68061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:204183*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204183*0 + 3*477*FLEN/8, x4, x1, x2)

inst_68062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:204186*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204186*0 + 3*478*FLEN/8, x4, x1, x2)

inst_68063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:204189*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204189*0 + 3*479*FLEN/8, x4, x1, x2)

inst_68064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:204192*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204192*0 + 3*480*FLEN/8, x4, x1, x2)

inst_68065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:204195*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204195*0 + 3*481*FLEN/8, x4, x1, x2)

inst_68066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:204198*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204198*0 + 3*482*FLEN/8, x4, x1, x2)

inst_68067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:204201*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204201*0 + 3*483*FLEN/8, x4, x1, x2)

inst_68068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:204204*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204204*0 + 3*484*FLEN/8, x4, x1, x2)

inst_68069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:204207*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204207*0 + 3*485*FLEN/8, x4, x1, x2)

inst_68070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:204210*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204210*0 + 3*486*FLEN/8, x4, x1, x2)

inst_68071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:204213*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204213*0 + 3*487*FLEN/8, x4, x1, x2)

inst_68072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:204216*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204216*0 + 3*488*FLEN/8, x4, x1, x2)

inst_68073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:204219*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204219*0 + 3*489*FLEN/8, x4, x1, x2)

inst_68074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:204222*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204222*0 + 3*490*FLEN/8, x4, x1, x2)

inst_68075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:204225*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204225*0 + 3*491*FLEN/8, x4, x1, x2)

inst_68076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:204228*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204228*0 + 3*492*FLEN/8, x4, x1, x2)

inst_68077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:204231*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204231*0 + 3*493*FLEN/8, x4, x1, x2)

inst_68078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:204234*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204234*0 + 3*494*FLEN/8, x4, x1, x2)

inst_68079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:204237*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204237*0 + 3*495*FLEN/8, x4, x1, x2)

inst_68080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:204240*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204240*0 + 3*496*FLEN/8, x4, x1, x2)

inst_68081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:204243*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204243*0 + 3*497*FLEN/8, x4, x1, x2)

inst_68082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:204246*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204246*0 + 3*498*FLEN/8, x4, x1, x2)

inst_68083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:204249*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204249*0 + 3*499*FLEN/8, x4, x1, x2)

inst_68084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:204252*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204252*0 + 3*500*FLEN/8, x4, x1, x2)

inst_68085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:204255*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204255*0 + 3*501*FLEN/8, x4, x1, x2)

inst_68086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:204258*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204258*0 + 3*502*FLEN/8, x4, x1, x2)

inst_68087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:204261*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204261*0 + 3*503*FLEN/8, x4, x1, x2)

inst_68088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:204264*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204264*0 + 3*504*FLEN/8, x4, x1, x2)

inst_68089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:204267*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204267*0 + 3*505*FLEN/8, x4, x1, x2)

inst_68090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:204270*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204270*0 + 3*506*FLEN/8, x4, x1, x2)

inst_68091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:204273*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204273*0 + 3*507*FLEN/8, x4, x1, x2)

inst_68092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:204276*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204276*0 + 3*508*FLEN/8, x4, x1, x2)

inst_68093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:204279*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204279*0 + 3*509*FLEN/8, x4, x1, x2)

inst_68094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:204282*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204282*0 + 3*510*FLEN/8, x4, x1, x2)

inst_68095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:204285*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204285*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_68096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:204288*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204288*0 + 3*512*FLEN/8, x4, x1, x2)

inst_68097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:204291*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204291*0 + 3*513*FLEN/8, x4, x1, x2)

inst_68098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:204294*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204294*0 + 3*514*FLEN/8, x4, x1, x2)

inst_68099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:204297*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204297*0 + 3*515*FLEN/8, x4, x1, x2)

inst_68100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:204300*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204300*0 + 3*516*FLEN/8, x4, x1, x2)

inst_68101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:204303*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204303*0 + 3*517*FLEN/8, x4, x1, x2)

inst_68102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:204306*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204306*0 + 3*518*FLEN/8, x4, x1, x2)

inst_68103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:204309*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204309*0 + 3*519*FLEN/8, x4, x1, x2)

inst_68104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:204312*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204312*0 + 3*520*FLEN/8, x4, x1, x2)

inst_68105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:204315*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204315*0 + 3*521*FLEN/8, x4, x1, x2)

inst_68106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:204318*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204318*0 + 3*522*FLEN/8, x4, x1, x2)

inst_68107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:204321*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204321*0 + 3*523*FLEN/8, x4, x1, x2)

inst_68108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:204324*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204324*0 + 3*524*FLEN/8, x4, x1, x2)

inst_68109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:204327*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204327*0 + 3*525*FLEN/8, x4, x1, x2)

inst_68110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:204330*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204330*0 + 3*526*FLEN/8, x4, x1, x2)

inst_68111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:204333*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204333*0 + 3*527*FLEN/8, x4, x1, x2)

inst_68112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:204336*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204336*0 + 3*528*FLEN/8, x4, x1, x2)

inst_68113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:204339*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204339*0 + 3*529*FLEN/8, x4, x1, x2)

inst_68114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:204342*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204342*0 + 3*530*FLEN/8, x4, x1, x2)

inst_68115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffffff00; valaddr_reg:x3; val_offset:204345*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204345*0 + 3*531*FLEN/8, x4, x1, x2)

inst_68116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffffff80; valaddr_reg:x3; val_offset:204348*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204348*0 + 3*532*FLEN/8, x4, x1, x2)

inst_68117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:204351*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204351*0 + 3*533*FLEN/8, x4, x1, x2)

inst_68118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:204354*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204354*0 + 3*534*FLEN/8, x4, x1, x2)

inst_68119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffffff0; valaddr_reg:x3; val_offset:204357*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204357*0 + 3*535*FLEN/8, x4, x1, x2)

inst_68120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffffff8; valaddr_reg:x3; val_offset:204360*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204360*0 + 3*536*FLEN/8, x4, x1, x2)

inst_68121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:204363*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204363*0 + 3*537*FLEN/8, x4, x1, x2)

inst_68122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:204366*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204366*0 + 3*538*FLEN/8, x4, x1, x2)

inst_68123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c914fa2a6807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4c914fa2a6807; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:204369*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204369*0 + 3*539*FLEN/8, x4, x1, x2)

inst_68124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:204372*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204372*0 + 3*540*FLEN/8, x4, x1, x2)

inst_68125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:204375*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204375*0 + 3*541*FLEN/8, x4, x1, x2)

inst_68126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:204378*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204378*0 + 3*542*FLEN/8, x4, x1, x2)

inst_68127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:204381*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204381*0 + 3*543*FLEN/8, x4, x1, x2)

inst_68128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:204384*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204384*0 + 3*544*FLEN/8, x4, x1, x2)

inst_68129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:204387*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204387*0 + 3*545*FLEN/8, x4, x1, x2)

inst_68130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:204390*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204390*0 + 3*546*FLEN/8, x4, x1, x2)

inst_68131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:204393*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204393*0 + 3*547*FLEN/8, x4, x1, x2)

inst_68132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:204396*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204396*0 + 3*548*FLEN/8, x4, x1, x2)

inst_68133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:204399*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204399*0 + 3*549*FLEN/8, x4, x1, x2)

inst_68134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:204402*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204402*0 + 3*550*FLEN/8, x4, x1, x2)

inst_68135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:204405*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204405*0 + 3*551*FLEN/8, x4, x1, x2)

inst_68136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:204408*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204408*0 + 3*552*FLEN/8, x4, x1, x2)

inst_68137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:204411*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204411*0 + 3*553*FLEN/8, x4, x1, x2)

inst_68138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:204414*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204414*0 + 3*554*FLEN/8, x4, x1, x2)

inst_68139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:204417*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204417*0 + 3*555*FLEN/8, x4, x1, x2)

inst_68140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:204420*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204420*0 + 3*556*FLEN/8, x4, x1, x2)

inst_68141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:204423*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204423*0 + 3*557*FLEN/8, x4, x1, x2)

inst_68142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:204426*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204426*0 + 3*558*FLEN/8, x4, x1, x2)

inst_68143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:204429*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204429*0 + 3*559*FLEN/8, x4, x1, x2)

inst_68144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:204432*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204432*0 + 3*560*FLEN/8, x4, x1, x2)

inst_68145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:204435*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204435*0 + 3*561*FLEN/8, x4, x1, x2)

inst_68146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000000000; valaddr_reg:x3; val_offset:204438*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204438*0 + 3*562*FLEN/8, x4, x1, x2)

inst_68147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000000001; valaddr_reg:x3; val_offset:204441*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204441*0 + 3*563*FLEN/8, x4, x1, x2)

inst_68148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000000003; valaddr_reg:x3; val_offset:204444*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204444*0 + 3*564*FLEN/8, x4, x1, x2)

inst_68149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000000007; valaddr_reg:x3; val_offset:204447*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204447*0 + 3*565*FLEN/8, x4, x1, x2)

inst_68150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000000000f; valaddr_reg:x3; val_offset:204450*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204450*0 + 3*566*FLEN/8, x4, x1, x2)

inst_68151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000000001f; valaddr_reg:x3; val_offset:204453*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204453*0 + 3*567*FLEN/8, x4, x1, x2)

inst_68152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000000003f; valaddr_reg:x3; val_offset:204456*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204456*0 + 3*568*FLEN/8, x4, x1, x2)

inst_68153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000000007f; valaddr_reg:x3; val_offset:204459*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204459*0 + 3*569*FLEN/8, x4, x1, x2)

inst_68154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000000000ff; valaddr_reg:x3; val_offset:204462*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204462*0 + 3*570*FLEN/8, x4, x1, x2)

inst_68155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000000001ff; valaddr_reg:x3; val_offset:204465*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204465*0 + 3*571*FLEN/8, x4, x1, x2)

inst_68156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000000003ff; valaddr_reg:x3; val_offset:204468*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204468*0 + 3*572*FLEN/8, x4, x1, x2)

inst_68157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000000007ff; valaddr_reg:x3; val_offset:204471*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204471*0 + 3*573*FLEN/8, x4, x1, x2)

inst_68158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000000fff; valaddr_reg:x3; val_offset:204474*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204474*0 + 3*574*FLEN/8, x4, x1, x2)

inst_68159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000001fff; valaddr_reg:x3; val_offset:204477*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204477*0 + 3*575*FLEN/8, x4, x1, x2)

inst_68160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000003fff; valaddr_reg:x3; val_offset:204480*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204480*0 + 3*576*FLEN/8, x4, x1, x2)

inst_68161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000007fff; valaddr_reg:x3; val_offset:204483*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204483*0 + 3*577*FLEN/8, x4, x1, x2)

inst_68162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000000ffff; valaddr_reg:x3; val_offset:204486*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204486*0 + 3*578*FLEN/8, x4, x1, x2)

inst_68163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000001ffff; valaddr_reg:x3; val_offset:204489*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204489*0 + 3*579*FLEN/8, x4, x1, x2)

inst_68164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000003ffff; valaddr_reg:x3; val_offset:204492*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204492*0 + 3*580*FLEN/8, x4, x1, x2)

inst_68165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000007ffff; valaddr_reg:x3; val_offset:204495*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204495*0 + 3*581*FLEN/8, x4, x1, x2)

inst_68166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000000fffff; valaddr_reg:x3; val_offset:204498*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204498*0 + 3*582*FLEN/8, x4, x1, x2)

inst_68167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000001fffff; valaddr_reg:x3; val_offset:204501*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204501*0 + 3*583*FLEN/8, x4, x1, x2)

inst_68168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000003fffff; valaddr_reg:x3; val_offset:204504*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204504*0 + 3*584*FLEN/8, x4, x1, x2)

inst_68169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000007fffff; valaddr_reg:x3; val_offset:204507*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204507*0 + 3*585*FLEN/8, x4, x1, x2)

inst_68170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000000ffffff; valaddr_reg:x3; val_offset:204510*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204510*0 + 3*586*FLEN/8, x4, x1, x2)

inst_68171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000001ffffff; valaddr_reg:x3; val_offset:204513*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204513*0 + 3*587*FLEN/8, x4, x1, x2)

inst_68172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000003ffffff; valaddr_reg:x3; val_offset:204516*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204516*0 + 3*588*FLEN/8, x4, x1, x2)

inst_68173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000007ffffff; valaddr_reg:x3; val_offset:204519*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204519*0 + 3*589*FLEN/8, x4, x1, x2)

inst_68174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000000fffffff; valaddr_reg:x3; val_offset:204522*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204522*0 + 3*590*FLEN/8, x4, x1, x2)

inst_68175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000001fffffff; valaddr_reg:x3; val_offset:204525*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204525*0 + 3*591*FLEN/8, x4, x1, x2)

inst_68176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000003fffffff; valaddr_reg:x3; val_offset:204528*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204528*0 + 3*592*FLEN/8, x4, x1, x2)

inst_68177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000007fffffff; valaddr_reg:x3; val_offset:204531*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204531*0 + 3*593*FLEN/8, x4, x1, x2)

inst_68178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000000ffffffff; valaddr_reg:x3; val_offset:204534*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204534*0 + 3*594*FLEN/8, x4, x1, x2)

inst_68179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000001ffffffff; valaddr_reg:x3; val_offset:204537*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204537*0 + 3*595*FLEN/8, x4, x1, x2)

inst_68180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000003ffffffff; valaddr_reg:x3; val_offset:204540*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204540*0 + 3*596*FLEN/8, x4, x1, x2)

inst_68181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000007ffffffff; valaddr_reg:x3; val_offset:204543*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204543*0 + 3*597*FLEN/8, x4, x1, x2)

inst_68182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200000fffffffff; valaddr_reg:x3; val_offset:204546*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204546*0 + 3*598*FLEN/8, x4, x1, x2)

inst_68183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200001fffffffff; valaddr_reg:x3; val_offset:204549*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204549*0 + 3*599*FLEN/8, x4, x1, x2)

inst_68184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200003fffffffff; valaddr_reg:x3; val_offset:204552*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204552*0 + 3*600*FLEN/8, x4, x1, x2)

inst_68185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200007fffffffff; valaddr_reg:x3; val_offset:204555*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204555*0 + 3*601*FLEN/8, x4, x1, x2)

inst_68186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820000ffffffffff; valaddr_reg:x3; val_offset:204558*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204558*0 + 3*602*FLEN/8, x4, x1, x2)

inst_68187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820001ffffffffff; valaddr_reg:x3; val_offset:204561*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204561*0 + 3*603*FLEN/8, x4, x1, x2)

inst_68188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820003ffffffffff; valaddr_reg:x3; val_offset:204564*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204564*0 + 3*604*FLEN/8, x4, x1, x2)

inst_68189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820007ffffffffff; valaddr_reg:x3; val_offset:204567*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204567*0 + 3*605*FLEN/8, x4, x1, x2)

inst_68190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82000fffffffffff; valaddr_reg:x3; val_offset:204570*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204570*0 + 3*606*FLEN/8, x4, x1, x2)

inst_68191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82001fffffffffff; valaddr_reg:x3; val_offset:204573*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204573*0 + 3*607*FLEN/8, x4, x1, x2)

inst_68192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82003fffffffffff; valaddr_reg:x3; val_offset:204576*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204576*0 + 3*608*FLEN/8, x4, x1, x2)

inst_68193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x82007fffffffffff; valaddr_reg:x3; val_offset:204579*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204579*0 + 3*609*FLEN/8, x4, x1, x2)

inst_68194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8200ffffffffffff; valaddr_reg:x3; val_offset:204582*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204582*0 + 3*610*FLEN/8, x4, x1, x2)

inst_68195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8201ffffffffffff; valaddr_reg:x3; val_offset:204585*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204585*0 + 3*611*FLEN/8, x4, x1, x2)

inst_68196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8203ffffffffffff; valaddr_reg:x3; val_offset:204588*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204588*0 + 3*612*FLEN/8, x4, x1, x2)

inst_68197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8207ffffffffffff; valaddr_reg:x3; val_offset:204591*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204591*0 + 3*613*FLEN/8, x4, x1, x2)

inst_68198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x8208000000000000; valaddr_reg:x3; val_offset:204594*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204594*0 + 3*614*FLEN/8, x4, x1, x2)

inst_68199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820c000000000000; valaddr_reg:x3; val_offset:204597*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204597*0 + 3*615*FLEN/8, x4, x1, x2)

inst_68200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820e000000000000; valaddr_reg:x3; val_offset:204600*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204600*0 + 3*616*FLEN/8, x4, x1, x2)

inst_68201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820f000000000000; valaddr_reg:x3; val_offset:204603*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204603*0 + 3*617*FLEN/8, x4, x1, x2)

inst_68202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820f800000000000; valaddr_reg:x3; val_offset:204606*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204606*0 + 3*618*FLEN/8, x4, x1, x2)

inst_68203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fc00000000000; valaddr_reg:x3; val_offset:204609*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204609*0 + 3*619*FLEN/8, x4, x1, x2)

inst_68204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fe00000000000; valaddr_reg:x3; val_offset:204612*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204612*0 + 3*620*FLEN/8, x4, x1, x2)

inst_68205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ff00000000000; valaddr_reg:x3; val_offset:204615*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204615*0 + 3*621*FLEN/8, x4, x1, x2)

inst_68206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ff80000000000; valaddr_reg:x3; val_offset:204618*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204618*0 + 3*622*FLEN/8, x4, x1, x2)

inst_68207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffc0000000000; valaddr_reg:x3; val_offset:204621*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204621*0 + 3*623*FLEN/8, x4, x1, x2)

inst_68208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffe0000000000; valaddr_reg:x3; val_offset:204624*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204624*0 + 3*624*FLEN/8, x4, x1, x2)

inst_68209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fff0000000000; valaddr_reg:x3; val_offset:204627*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204627*0 + 3*625*FLEN/8, x4, x1, x2)

inst_68210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fff8000000000; valaddr_reg:x3; val_offset:204630*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204630*0 + 3*626*FLEN/8, x4, x1, x2)

inst_68211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffc000000000; valaddr_reg:x3; val_offset:204633*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204633*0 + 3*627*FLEN/8, x4, x1, x2)

inst_68212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffe000000000; valaddr_reg:x3; val_offset:204636*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204636*0 + 3*628*FLEN/8, x4, x1, x2)

inst_68213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffff000000000; valaddr_reg:x3; val_offset:204639*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204639*0 + 3*629*FLEN/8, x4, x1, x2)

inst_68214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffff800000000; valaddr_reg:x3; val_offset:204642*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204642*0 + 3*630*FLEN/8, x4, x1, x2)

inst_68215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffc00000000; valaddr_reg:x3; val_offset:204645*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204645*0 + 3*631*FLEN/8, x4, x1, x2)

inst_68216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffe00000000; valaddr_reg:x3; val_offset:204648*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204648*0 + 3*632*FLEN/8, x4, x1, x2)

inst_68217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffff00000000; valaddr_reg:x3; val_offset:204651*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204651*0 + 3*633*FLEN/8, x4, x1, x2)

inst_68218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffff80000000; valaddr_reg:x3; val_offset:204654*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204654*0 + 3*634*FLEN/8, x4, x1, x2)

inst_68219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffc0000000; valaddr_reg:x3; val_offset:204657*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204657*0 + 3*635*FLEN/8, x4, x1, x2)

inst_68220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffe0000000; valaddr_reg:x3; val_offset:204660*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204660*0 + 3*636*FLEN/8, x4, x1, x2)

inst_68221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffff0000000; valaddr_reg:x3; val_offset:204663*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204663*0 + 3*637*FLEN/8, x4, x1, x2)

inst_68222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffff8000000; valaddr_reg:x3; val_offset:204666*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204666*0 + 3*638*FLEN/8, x4, x1, x2)

inst_68223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffc000000; valaddr_reg:x3; val_offset:204669*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204669*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_68224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffe000000; valaddr_reg:x3; val_offset:204672*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204672*0 + 3*640*FLEN/8, x4, x1, x2)

inst_68225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffff000000; valaddr_reg:x3; val_offset:204675*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204675*0 + 3*641*FLEN/8, x4, x1, x2)

inst_68226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffff800000; valaddr_reg:x3; val_offset:204678*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204678*0 + 3*642*FLEN/8, x4, x1, x2)

inst_68227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffc00000; valaddr_reg:x3; val_offset:204681*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204681*0 + 3*643*FLEN/8, x4, x1, x2)

inst_68228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffe00000; valaddr_reg:x3; val_offset:204684*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204684*0 + 3*644*FLEN/8, x4, x1, x2)

inst_68229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffff00000; valaddr_reg:x3; val_offset:204687*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204687*0 + 3*645*FLEN/8, x4, x1, x2)

inst_68230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffff80000; valaddr_reg:x3; val_offset:204690*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204690*0 + 3*646*FLEN/8, x4, x1, x2)

inst_68231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffc0000; valaddr_reg:x3; val_offset:204693*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204693*0 + 3*647*FLEN/8, x4, x1, x2)

inst_68232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffe0000; valaddr_reg:x3; val_offset:204696*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204696*0 + 3*648*FLEN/8, x4, x1, x2)

inst_68233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffff0000; valaddr_reg:x3; val_offset:204699*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204699*0 + 3*649*FLEN/8, x4, x1, x2)

inst_68234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffff8000; valaddr_reg:x3; val_offset:204702*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204702*0 + 3*650*FLEN/8, x4, x1, x2)

inst_68235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffffc000; valaddr_reg:x3; val_offset:204705*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204705*0 + 3*651*FLEN/8, x4, x1, x2)

inst_68236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffffe000; valaddr_reg:x3; val_offset:204708*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204708*0 + 3*652*FLEN/8, x4, x1, x2)

inst_68237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffff000; valaddr_reg:x3; val_offset:204711*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204711*0 + 3*653*FLEN/8, x4, x1, x2)

inst_68238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffff800; valaddr_reg:x3; val_offset:204714*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204714*0 + 3*654*FLEN/8, x4, x1, x2)

inst_68239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffffc00; valaddr_reg:x3; val_offset:204717*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204717*0 + 3*655*FLEN/8, x4, x1, x2)

inst_68240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffffe00; valaddr_reg:x3; val_offset:204720*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204720*0 + 3*656*FLEN/8, x4, x1, x2)

inst_68241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffffff00; valaddr_reg:x3; val_offset:204723*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204723*0 + 3*657*FLEN/8, x4, x1, x2)

inst_68242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffffff80; valaddr_reg:x3; val_offset:204726*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204726*0 + 3*658*FLEN/8, x4, x1, x2)

inst_68243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffffffc0; valaddr_reg:x3; val_offset:204729*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204729*0 + 3*659*FLEN/8, x4, x1, x2)

inst_68244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffffffe0; valaddr_reg:x3; val_offset:204732*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204732*0 + 3*660*FLEN/8, x4, x1, x2)

inst_68245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffffff0; valaddr_reg:x3; val_offset:204735*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204735*0 + 3*661*FLEN/8, x4, x1, x2)

inst_68246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffffff8; valaddr_reg:x3; val_offset:204738*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204738*0 + 3*662*FLEN/8, x4, x1, x2)

inst_68247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffffffc; valaddr_reg:x3; val_offset:204741*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204741*0 + 3*663*FLEN/8, x4, x1, x2)

inst_68248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820ffffffffffffe; valaddr_reg:x3; val_offset:204744*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204744*0 + 3*664*FLEN/8, x4, x1, x2)

inst_68249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4d5f36a227d79 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4d5f36a227d79; op2val:0x8000;
op3val:0x820fffffffffffff; valaddr_reg:x3; val_offset:204747*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204747*0 + 3*665*FLEN/8, x4, x1, x2)

inst_68250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000000000; valaddr_reg:x3; val_offset:204750*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204750*0 + 3*666*FLEN/8, x4, x1, x2)

inst_68251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000000001; valaddr_reg:x3; val_offset:204753*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204753*0 + 3*667*FLEN/8, x4, x1, x2)

inst_68252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000000003; valaddr_reg:x3; val_offset:204756*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204756*0 + 3*668*FLEN/8, x4, x1, x2)

inst_68253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000000007; valaddr_reg:x3; val_offset:204759*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204759*0 + 3*669*FLEN/8, x4, x1, x2)

inst_68254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000000000f; valaddr_reg:x3; val_offset:204762*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204762*0 + 3*670*FLEN/8, x4, x1, x2)

inst_68255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000000001f; valaddr_reg:x3; val_offset:204765*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204765*0 + 3*671*FLEN/8, x4, x1, x2)

inst_68256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000000003f; valaddr_reg:x3; val_offset:204768*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204768*0 + 3*672*FLEN/8, x4, x1, x2)

inst_68257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000000007f; valaddr_reg:x3; val_offset:204771*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204771*0 + 3*673*FLEN/8, x4, x1, x2)

inst_68258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000000000ff; valaddr_reg:x3; val_offset:204774*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204774*0 + 3*674*FLEN/8, x4, x1, x2)

inst_68259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000000001ff; valaddr_reg:x3; val_offset:204777*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204777*0 + 3*675*FLEN/8, x4, x1, x2)

inst_68260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000000003ff; valaddr_reg:x3; val_offset:204780*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204780*0 + 3*676*FLEN/8, x4, x1, x2)

inst_68261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000000007ff; valaddr_reg:x3; val_offset:204783*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204783*0 + 3*677*FLEN/8, x4, x1, x2)

inst_68262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000000fff; valaddr_reg:x3; val_offset:204786*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204786*0 + 3*678*FLEN/8, x4, x1, x2)

inst_68263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000001fff; valaddr_reg:x3; val_offset:204789*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204789*0 + 3*679*FLEN/8, x4, x1, x2)

inst_68264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000003fff; valaddr_reg:x3; val_offset:204792*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204792*0 + 3*680*FLEN/8, x4, x1, x2)

inst_68265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000007fff; valaddr_reg:x3; val_offset:204795*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204795*0 + 3*681*FLEN/8, x4, x1, x2)

inst_68266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000000ffff; valaddr_reg:x3; val_offset:204798*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204798*0 + 3*682*FLEN/8, x4, x1, x2)

inst_68267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000001ffff; valaddr_reg:x3; val_offset:204801*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204801*0 + 3*683*FLEN/8, x4, x1, x2)

inst_68268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000003ffff; valaddr_reg:x3; val_offset:204804*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204804*0 + 3*684*FLEN/8, x4, x1, x2)

inst_68269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000007ffff; valaddr_reg:x3; val_offset:204807*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204807*0 + 3*685*FLEN/8, x4, x1, x2)

inst_68270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000000fffff; valaddr_reg:x3; val_offset:204810*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204810*0 + 3*686*FLEN/8, x4, x1, x2)

inst_68271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000001fffff; valaddr_reg:x3; val_offset:204813*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204813*0 + 3*687*FLEN/8, x4, x1, x2)

inst_68272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000003fffff; valaddr_reg:x3; val_offset:204816*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204816*0 + 3*688*FLEN/8, x4, x1, x2)

inst_68273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000007fffff; valaddr_reg:x3; val_offset:204819*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204819*0 + 3*689*FLEN/8, x4, x1, x2)

inst_68274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000000ffffff; valaddr_reg:x3; val_offset:204822*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204822*0 + 3*690*FLEN/8, x4, x1, x2)

inst_68275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000001ffffff; valaddr_reg:x3; val_offset:204825*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204825*0 + 3*691*FLEN/8, x4, x1, x2)

inst_68276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000003ffffff; valaddr_reg:x3; val_offset:204828*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204828*0 + 3*692*FLEN/8, x4, x1, x2)

inst_68277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000007ffffff; valaddr_reg:x3; val_offset:204831*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204831*0 + 3*693*FLEN/8, x4, x1, x2)

inst_68278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000000fffffff; valaddr_reg:x3; val_offset:204834*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204834*0 + 3*694*FLEN/8, x4, x1, x2)

inst_68279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000001fffffff; valaddr_reg:x3; val_offset:204837*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204837*0 + 3*695*FLEN/8, x4, x1, x2)

inst_68280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000003fffffff; valaddr_reg:x3; val_offset:204840*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204840*0 + 3*696*FLEN/8, x4, x1, x2)

inst_68281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000007fffffff; valaddr_reg:x3; val_offset:204843*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204843*0 + 3*697*FLEN/8, x4, x1, x2)

inst_68282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00000ffffffff; valaddr_reg:x3; val_offset:204846*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204846*0 + 3*698*FLEN/8, x4, x1, x2)

inst_68283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00001ffffffff; valaddr_reg:x3; val_offset:204849*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204849*0 + 3*699*FLEN/8, x4, x1, x2)

inst_68284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00003ffffffff; valaddr_reg:x3; val_offset:204852*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204852*0 + 3*700*FLEN/8, x4, x1, x2)

inst_68285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00007ffffffff; valaddr_reg:x3; val_offset:204855*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204855*0 + 3*701*FLEN/8, x4, x1, x2)

inst_68286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0000fffffffff; valaddr_reg:x3; val_offset:204858*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204858*0 + 3*702*FLEN/8, x4, x1, x2)

inst_68287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0001fffffffff; valaddr_reg:x3; val_offset:204861*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204861*0 + 3*703*FLEN/8, x4, x1, x2)

inst_68288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0003fffffffff; valaddr_reg:x3; val_offset:204864*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204864*0 + 3*704*FLEN/8, x4, x1, x2)

inst_68289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0007fffffffff; valaddr_reg:x3; val_offset:204867*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204867*0 + 3*705*FLEN/8, x4, x1, x2)

inst_68290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c000ffffffffff; valaddr_reg:x3; val_offset:204870*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204870*0 + 3*706*FLEN/8, x4, x1, x2)

inst_68291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c001ffffffffff; valaddr_reg:x3; val_offset:204873*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204873*0 + 3*707*FLEN/8, x4, x1, x2)

inst_68292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c003ffffffffff; valaddr_reg:x3; val_offset:204876*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204876*0 + 3*708*FLEN/8, x4, x1, x2)

inst_68293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c007ffffffffff; valaddr_reg:x3; val_offset:204879*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204879*0 + 3*709*FLEN/8, x4, x1, x2)

inst_68294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c00fffffffffff; valaddr_reg:x3; val_offset:204882*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204882*0 + 3*710*FLEN/8, x4, x1, x2)

inst_68295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c01fffffffffff; valaddr_reg:x3; val_offset:204885*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204885*0 + 3*711*FLEN/8, x4, x1, x2)

inst_68296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c03fffffffffff; valaddr_reg:x3; val_offset:204888*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204888*0 + 3*712*FLEN/8, x4, x1, x2)

inst_68297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c07fffffffffff; valaddr_reg:x3; val_offset:204891*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204891*0 + 3*713*FLEN/8, x4, x1, x2)

inst_68298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c0ffffffffffff; valaddr_reg:x3; val_offset:204894*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204894*0 + 3*714*FLEN/8, x4, x1, x2)

inst_68299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c1ffffffffffff; valaddr_reg:x3; val_offset:204897*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204897*0 + 3*715*FLEN/8, x4, x1, x2)

inst_68300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c3ffffffffffff; valaddr_reg:x3; val_offset:204900*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204900*0 + 3*716*FLEN/8, x4, x1, x2)

inst_68301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c7ffffffffffff; valaddr_reg:x3; val_offset:204903*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204903*0 + 3*717*FLEN/8, x4, x1, x2)

inst_68302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9c8000000000000; valaddr_reg:x3; val_offset:204906*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204906*0 + 3*718*FLEN/8, x4, x1, x2)

inst_68303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cc000000000000; valaddr_reg:x3; val_offset:204909*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204909*0 + 3*719*FLEN/8, x4, x1, x2)

inst_68304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9ce000000000000; valaddr_reg:x3; val_offset:204912*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204912*0 + 3*720*FLEN/8, x4, x1, x2)

inst_68305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cf000000000000; valaddr_reg:x3; val_offset:204915*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204915*0 + 3*721*FLEN/8, x4, x1, x2)

inst_68306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cf800000000000; valaddr_reg:x3; val_offset:204918*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204918*0 + 3*722*FLEN/8, x4, x1, x2)

inst_68307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfc00000000000; valaddr_reg:x3; val_offset:204921*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204921*0 + 3*723*FLEN/8, x4, x1, x2)

inst_68308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfe00000000000; valaddr_reg:x3; val_offset:204924*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204924*0 + 3*724*FLEN/8, x4, x1, x2)

inst_68309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cff00000000000; valaddr_reg:x3; val_offset:204927*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204927*0 + 3*725*FLEN/8, x4, x1, x2)

inst_68310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cff80000000000; valaddr_reg:x3; val_offset:204930*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204930*0 + 3*726*FLEN/8, x4, x1, x2)

inst_68311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffc0000000000; valaddr_reg:x3; val_offset:204933*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204933*0 + 3*727*FLEN/8, x4, x1, x2)

inst_68312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffe0000000000; valaddr_reg:x3; val_offset:204936*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204936*0 + 3*728*FLEN/8, x4, x1, x2)

inst_68313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfff0000000000; valaddr_reg:x3; val_offset:204939*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204939*0 + 3*729*FLEN/8, x4, x1, x2)

inst_68314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfff8000000000; valaddr_reg:x3; val_offset:204942*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204942*0 + 3*730*FLEN/8, x4, x1, x2)

inst_68315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffc000000000; valaddr_reg:x3; val_offset:204945*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204945*0 + 3*731*FLEN/8, x4, x1, x2)

inst_68316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffe000000000; valaddr_reg:x3; val_offset:204948*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204948*0 + 3*732*FLEN/8, x4, x1, x2)

inst_68317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffff000000000; valaddr_reg:x3; val_offset:204951*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204951*0 + 3*733*FLEN/8, x4, x1, x2)

inst_68318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffff800000000; valaddr_reg:x3; val_offset:204954*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204954*0 + 3*734*FLEN/8, x4, x1, x2)

inst_68319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffc00000000; valaddr_reg:x3; val_offset:204957*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204957*0 + 3*735*FLEN/8, x4, x1, x2)

inst_68320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffe00000000; valaddr_reg:x3; val_offset:204960*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204960*0 + 3*736*FLEN/8, x4, x1, x2)

inst_68321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffff00000000; valaddr_reg:x3; val_offset:204963*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204963*0 + 3*737*FLEN/8, x4, x1, x2)

inst_68322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffff80000000; valaddr_reg:x3; val_offset:204966*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204966*0 + 3*738*FLEN/8, x4, x1, x2)

inst_68323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffc0000000; valaddr_reg:x3; val_offset:204969*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204969*0 + 3*739*FLEN/8, x4, x1, x2)

inst_68324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffe0000000; valaddr_reg:x3; val_offset:204972*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204972*0 + 3*740*FLEN/8, x4, x1, x2)

inst_68325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffff0000000; valaddr_reg:x3; val_offset:204975*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204975*0 + 3*741*FLEN/8, x4, x1, x2)

inst_68326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffff8000000; valaddr_reg:x3; val_offset:204978*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204978*0 + 3*742*FLEN/8, x4, x1, x2)

inst_68327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffc000000; valaddr_reg:x3; val_offset:204981*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204981*0 + 3*743*FLEN/8, x4, x1, x2)

inst_68328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffe000000; valaddr_reg:x3; val_offset:204984*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204984*0 + 3*744*FLEN/8, x4, x1, x2)

inst_68329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffff000000; valaddr_reg:x3; val_offset:204987*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204987*0 + 3*745*FLEN/8, x4, x1, x2)

inst_68330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffff800000; valaddr_reg:x3; val_offset:204990*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204990*0 + 3*746*FLEN/8, x4, x1, x2)

inst_68331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffc00000; valaddr_reg:x3; val_offset:204993*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204993*0 + 3*747*FLEN/8, x4, x1, x2)

inst_68332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffe00000; valaddr_reg:x3; val_offset:204996*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204996*0 + 3*748*FLEN/8, x4, x1, x2)

inst_68333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffff00000; valaddr_reg:x3; val_offset:204999*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204999*0 + 3*749*FLEN/8, x4, x1, x2)

inst_68334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffff80000; valaddr_reg:x3; val_offset:205002*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205002*0 + 3*750*FLEN/8, x4, x1, x2)

inst_68335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffc0000; valaddr_reg:x3; val_offset:205005*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205005*0 + 3*751*FLEN/8, x4, x1, x2)

inst_68336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffe0000; valaddr_reg:x3; val_offset:205008*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205008*0 + 3*752*FLEN/8, x4, x1, x2)

inst_68337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffff0000; valaddr_reg:x3; val_offset:205011*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205011*0 + 3*753*FLEN/8, x4, x1, x2)

inst_68338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffff8000; valaddr_reg:x3; val_offset:205014*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205014*0 + 3*754*FLEN/8, x4, x1, x2)

inst_68339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffffc000; valaddr_reg:x3; val_offset:205017*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205017*0 + 3*755*FLEN/8, x4, x1, x2)

inst_68340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffffe000; valaddr_reg:x3; val_offset:205020*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205020*0 + 3*756*FLEN/8, x4, x1, x2)

inst_68341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffff000; valaddr_reg:x3; val_offset:205023*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205023*0 + 3*757*FLEN/8, x4, x1, x2)

inst_68342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffff800; valaddr_reg:x3; val_offset:205026*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205026*0 + 3*758*FLEN/8, x4, x1, x2)

inst_68343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffffc00; valaddr_reg:x3; val_offset:205029*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205029*0 + 3*759*FLEN/8, x4, x1, x2)

inst_68344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffffe00; valaddr_reg:x3; val_offset:205032*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205032*0 + 3*760*FLEN/8, x4, x1, x2)

inst_68345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffffff00; valaddr_reg:x3; val_offset:205035*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205035*0 + 3*761*FLEN/8, x4, x1, x2)

inst_68346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffffff80; valaddr_reg:x3; val_offset:205038*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205038*0 + 3*762*FLEN/8, x4, x1, x2)

inst_68347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffffffc0; valaddr_reg:x3; val_offset:205041*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205041*0 + 3*763*FLEN/8, x4, x1, x2)

inst_68348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cfffffffffffe0; valaddr_reg:x3; val_offset:205044*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205044*0 + 3*764*FLEN/8, x4, x1, x2)

inst_68349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffffff0; valaddr_reg:x3; val_offset:205047*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205047*0 + 3*765*FLEN/8, x4, x1, x2)

inst_68350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffffff8; valaddr_reg:x3; val_offset:205050*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205050*0 + 3*766*FLEN/8, x4, x1, x2)

inst_68351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4dd45324c2409 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x88a1b6a1675da and fs3 == 1 and fe3 == 0x39c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4dd45324c2409; op2val:0x9fc88a1b6a1675da;
op3val:0xb9cffffffffffffc; valaddr_reg:x3; val_offset:205053*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 205053*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833670144,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833674240,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833676288,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833677312,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833677824,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678080,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678208,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678272,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678304,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678320,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678328,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678332,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678334,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833678335,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113664,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113665,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113667,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113671,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113679,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113695,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113727,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113791,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113919,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114175,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114687,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440115711,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440117759,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440121855,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440130047,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440146431,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440179199,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440244735,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440375807,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440637951,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623441162239,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623442210815,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623444307967,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623448502271,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623456890879,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623473668095,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623507222527,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623574331391,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623708549119,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623976984575,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501624513855487,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501625587597311,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501627735080959,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501632030048255,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501640619982847,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501657799852031,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501692159590399,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501760879067135,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501898318020607,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502173195927551,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502722951741439,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385503822463369215,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385506021486624767,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385510419533135871,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385519215626158079,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385536807812202495,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385571992184291327,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385642360928468991,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385783098416824319,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386064573393534975,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386627523346956287,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798911,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798912,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9388879323160641536,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389442273114062848,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389723748090773504,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389864485579128832,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389934854323306496,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389970038695395328,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389987630881439744,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389996426974461952,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390000825020973056,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390003024044228608,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004123555856384,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004673311670272,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004948189577216,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005085628530688,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005154348007424,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005188707745792,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005205887614976,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005214477549568,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005218772516864,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005220920000512,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005221993742336,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222530613248,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222799048704,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222933266432,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223000375296,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223033929728,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223050706944,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223059095552,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223063289856,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223065387008,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066435584,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066959872,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067222016,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067353088,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067418624,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067451392,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067467776,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067475968,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067480064,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067482112,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483136,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483648,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483904,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484032,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484096,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484128,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484144,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484152,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484156,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484158,64,FLEN)
NAN_BOXED(6891837507154728703,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484159,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368384,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368385,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368387,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368391,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368399,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368415,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368447,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368511,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368639,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036368895,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036369407,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036370431,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036372479,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036376575,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036384767,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036401151,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036433919,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036499455,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036630527,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296036892671,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296037416959,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296038465535,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296040562687,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296044756991,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296053145599,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296069922815,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296103477247,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296170586111,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296304803839,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504296573239295,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504297110110207,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504298183852031,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504300331335679,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504304626302975,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504313216237567,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504330396106751,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504364755845119,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504433475321855,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504570914275327,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256504845792182271,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256505395547996159,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256506495059623935,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256508694082879487,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256513092129390591,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256521888222412799,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256539480408457215,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256574664780546047,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256645033524723711,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1256785771013079039,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1257067245989789695,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1257630195943211007,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1258756095850053631,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1258756095850053632,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1259881995756896256,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1260444945710317568,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1260726420687028224,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1260867158175383552,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1260937526919561216,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1260972711291650048,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1260990303477694464,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1260999099570716672,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261003497617227776,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261005696640483328,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261006796152111104,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007345907924992,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007620785831936,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007758224785408,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007826944262144,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007861304000512,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007878483869696,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007887073804288,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007891368771584,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007893516255232,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007894589997056,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895126867968,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895395303424,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895529521152,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895596630016,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895630184448,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895646961664,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895655350272,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895659544576,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895661641728,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895662690304,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663214592,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663476736,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663607808,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663673344,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663706112,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663722496,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663730688,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663734784,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663736832,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663737856,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738368,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738624,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738752,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738816,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738848,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738864,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738872,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738876,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738878,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(1261007895663738879,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891842322067663622,64,FLEN)
NAN_BOXED(2321798033432584927,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235776,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235777,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235779,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235783,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235791,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235807,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235839,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244235903,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244236031,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244236287,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244236799,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244237823,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244239871,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244243967,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244252159,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244268543,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244301311,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244366847,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244497919,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461244760063,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461245284351,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461246332927,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461248430079,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461252624383,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461261012991,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461277790207,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461311344639,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461378453503,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461512671231,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000461781106687,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000462317977599,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000463391719423,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000465539203071,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000469834170367,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000478424104959,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000495603974143,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000529963712511,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000598683189247,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763000736122142719,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763001011000049663,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763001560755863551,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763002660267491327,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763004859290746879,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763009257337257983,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763018053430280191,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763035645616324607,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763070829988413439,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763141198732591103,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763281936220946431,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13763563411197657087,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13764126361151078399,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13765252261057921023,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13765252261057921024,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13766378160964763648,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13766941110918184960,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767222585894895616,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767363323383250944,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767433692127428608,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767468876499517440,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767486468685561856,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767495264778584064,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767499662825095168,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767501861848350720,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767502961359978496,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767503511115792384,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767503785993699328,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767503923432652800,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767503992152129536,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504026511867904,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504043691737088,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504052281671680,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504056576638976,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504058724122624,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504059797864448,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060334735360,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060603170816,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060737388544,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060804497408,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060838051840,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060854829056,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060863217664,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060867411968,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060869509120,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060870557696,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871081984,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871344128,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871475200,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871540736,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871573504,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871589888,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871598080,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871602176,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871604224,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871605248,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871605760,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606016,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606144,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606208,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606240,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606256,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606264,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606268,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606270,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13767504060871606271,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891848057742067366,64,FLEN)
NAN_BOXED(11513638054122565985,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668928,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668929,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668931,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668935,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668943,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668959,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668991,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669055,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669183,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669439,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669951,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292670975,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292673023,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292677119,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292685311,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292701695,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292734463,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292799999,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292931071,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293193215,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293717503,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793294766079,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793296863231,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793301057535,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793309446143,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793326223359,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793359777791,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793426886655,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793561104383,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793829539839,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064794366410751,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064795440152575,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064797587636223,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064801882603519,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064810472538111,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064827652407295,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064862012145663,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064930731622399,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065068170575871,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065343048482815,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065892804296703,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81066992315924479,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81069191339180031,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81073589385691135,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81082385478713343,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81099977664757759,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81135162036846591,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81205530781024255,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81346268269379583,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81627743246090239,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(82190693199511551,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354175,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354176,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(84442493013196800,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85005442966618112,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85286917943328768,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85427655431684096,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85498024175861760,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85533208547950592,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85550800733995008,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85559596827017216,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85563994873528320,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85566193896783872,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567293408411648,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567843164225536,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568118042132480,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568255481085952,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568324200562688,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568358560301056,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568375740170240,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568384330104832,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568388625072128,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568390772555776,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568391846297600,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392383168512,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392651603968,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392785821696,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392852930560,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392886484992,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392903262208,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392911650816,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392915845120,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392917942272,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392918990848,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919515136,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919777280,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919908352,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919973888,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920006656,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920023040,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920031232,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920035328,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920037376,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038400,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038912,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039168,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039296,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039360,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039392,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039408,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039416,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039420,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039422,64,FLEN)
NAN_BOXED(6891854421717313543,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039423,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631680,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631681,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631683,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631687,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631695,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631711,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631743,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631807,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631935,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632191,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632703,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930633727,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930635775,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930639871,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930648063,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930664447,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930697215,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930762751,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930893823,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931155967,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931680255,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224932728831,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224934825983,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224939020287,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224947408895,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224964186111,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224997740543,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225064849407,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225199067135,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225467502591,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487226004373503,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487227078115327,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487229225598975,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487233520566271,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487242110500863,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487259290370047,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487293650108415,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487362369585151,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487499808538623,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487774686445567,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367488324442259455,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367489423953887231,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367491622977142783,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367496021023653887,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367504817116676095,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367522409302720511,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367557593674809343,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367627962418987007,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367768699907342335,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368050174884052991,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368613124837474303,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316927,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316928,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9370864924651159552,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371427874604580864,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371709349581291520,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371850087069646848,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371920455813824512,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371955640185913344,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371973232371957760,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371982028464979968,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371986426511491072,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371988625534746624,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371989725046374400,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990274802188288,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990549680095232,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990687119048704,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990755838525440,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990790198263808,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990807378132992,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990815968067584,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990820263034880,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990822410518528,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990823484260352,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824021131264,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824289566720,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824423784448,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824490893312,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824524447744,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824541224960,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824549613568,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824553807872,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824555905024,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824556953600,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557477888,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557740032,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557871104,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557936640,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557969408,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557985792,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557993984,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557998080,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558000128,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001152,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001664,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001920,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002048,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002112,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002144,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002160,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002168,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002172,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002174,64,FLEN)
NAN_BOXED(6891868571218115961,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002175,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114112,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114113,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114115,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114119,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114127,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114143,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114175,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114239,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114367,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545114623,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545115135,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545116159,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545118207,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545122303,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545130495,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545146879,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545179647,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545245183,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545376255,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092545638399,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092546162687,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092547211263,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092549308415,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092553502719,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092561891327,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092578668543,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092612222975,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092679331839,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698092813549567,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698093081985023,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698093618855935,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698094692597759,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698096840081407,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698101135048703,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698109724983295,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698126904852479,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698161264590847,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698229984067583,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698367423021055,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384698642300927999,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384699192056741887,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384700291568369663,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384702490591625215,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384706888638136319,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384715684731158527,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384733276917202943,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384768461289291775,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384838830033469439,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13384979567521824767,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13385261042498535423,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13385823992451956735,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13386949892358799359,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13386949892358799360,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13388075792265641984,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13388638742219063296,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13388920217195773952,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389060954684129280,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389131323428306944,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389166507800395776,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389184099986440192,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389192896079462400,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389197294125973504,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389199493149229056,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389200592660856832,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201142416670720,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201417294577664,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201554733531136,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201623453007872,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201657812746240,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201674992615424,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201683582550016,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201687877517312,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201690025000960,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201691098742784,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201691635613696,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201691904049152,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692038266880,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692105375744,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692138930176,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692155707392,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692164096000,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692168290304,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692170387456,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692171436032,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692171960320,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172222464,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172353536,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172419072,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172451840,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172468224,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172476416,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172480512,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172482560,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172483584,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484096,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484352,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484480,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484544,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484576,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484592,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484600,64,FLEN)
NAN_BOXED(6891876619050034185,64,FLEN)
NAN_BOXED(11513604297721279962,64,FLEN)
NAN_BOXED(13389201692172484604,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
