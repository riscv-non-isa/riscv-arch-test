
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_49920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600000000fffff; valaddr_reg:x3; val_offset:149760*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149760*0 + 3*0*FLEN/8, x4, x1, x2)

inst_49921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600000001fffff; valaddr_reg:x3; val_offset:149763*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149763*0 + 3*1*FLEN/8, x4, x1, x2)

inst_49922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600000003fffff; valaddr_reg:x3; val_offset:149766*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149766*0 + 3*2*FLEN/8, x4, x1, x2)

inst_49923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600000007fffff; valaddr_reg:x3; val_offset:149769*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149769*0 + 3*3*FLEN/8, x4, x1, x2)

inst_49924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260000000ffffff; valaddr_reg:x3; val_offset:149772*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149772*0 + 3*4*FLEN/8, x4, x1, x2)

inst_49925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260000001ffffff; valaddr_reg:x3; val_offset:149775*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149775*0 + 3*5*FLEN/8, x4, x1, x2)

inst_49926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260000003ffffff; valaddr_reg:x3; val_offset:149778*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149778*0 + 3*6*FLEN/8, x4, x1, x2)

inst_49927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260000007ffffff; valaddr_reg:x3; val_offset:149781*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149781*0 + 3*7*FLEN/8, x4, x1, x2)

inst_49928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826000000fffffff; valaddr_reg:x3; val_offset:149784*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149784*0 + 3*8*FLEN/8, x4, x1, x2)

inst_49929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826000001fffffff; valaddr_reg:x3; val_offset:149787*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149787*0 + 3*9*FLEN/8, x4, x1, x2)

inst_49930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826000003fffffff; valaddr_reg:x3; val_offset:149790*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149790*0 + 3*10*FLEN/8, x4, x1, x2)

inst_49931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826000007fffffff; valaddr_reg:x3; val_offset:149793*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149793*0 + 3*11*FLEN/8, x4, x1, x2)

inst_49932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600000ffffffff; valaddr_reg:x3; val_offset:149796*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149796*0 + 3*12*FLEN/8, x4, x1, x2)

inst_49933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600001ffffffff; valaddr_reg:x3; val_offset:149799*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149799*0 + 3*13*FLEN/8, x4, x1, x2)

inst_49934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600003ffffffff; valaddr_reg:x3; val_offset:149802*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149802*0 + 3*14*FLEN/8, x4, x1, x2)

inst_49935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600007ffffffff; valaddr_reg:x3; val_offset:149805*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149805*0 + 3*15*FLEN/8, x4, x1, x2)

inst_49936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260000fffffffff; valaddr_reg:x3; val_offset:149808*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149808*0 + 3*16*FLEN/8, x4, x1, x2)

inst_49937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260001fffffffff; valaddr_reg:x3; val_offset:149811*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149811*0 + 3*17*FLEN/8, x4, x1, x2)

inst_49938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260003fffffffff; valaddr_reg:x3; val_offset:149814*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149814*0 + 3*18*FLEN/8, x4, x1, x2)

inst_49939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260007fffffffff; valaddr_reg:x3; val_offset:149817*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149817*0 + 3*19*FLEN/8, x4, x1, x2)

inst_49940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826000ffffffffff; valaddr_reg:x3; val_offset:149820*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149820*0 + 3*20*FLEN/8, x4, x1, x2)

inst_49941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826001ffffffffff; valaddr_reg:x3; val_offset:149823*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149823*0 + 3*21*FLEN/8, x4, x1, x2)

inst_49942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826003ffffffffff; valaddr_reg:x3; val_offset:149826*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149826*0 + 3*22*FLEN/8, x4, x1, x2)

inst_49943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826007ffffffffff; valaddr_reg:x3; val_offset:149829*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149829*0 + 3*23*FLEN/8, x4, x1, x2)

inst_49944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82600fffffffffff; valaddr_reg:x3; val_offset:149832*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149832*0 + 3*24*FLEN/8, x4, x1, x2)

inst_49945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82601fffffffffff; valaddr_reg:x3; val_offset:149835*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149835*0 + 3*25*FLEN/8, x4, x1, x2)

inst_49946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82603fffffffffff; valaddr_reg:x3; val_offset:149838*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149838*0 + 3*26*FLEN/8, x4, x1, x2)

inst_49947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x82607fffffffffff; valaddr_reg:x3; val_offset:149841*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149841*0 + 3*27*FLEN/8, x4, x1, x2)

inst_49948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8260ffffffffffff; valaddr_reg:x3; val_offset:149844*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149844*0 + 3*28*FLEN/8, x4, x1, x2)

inst_49949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8261ffffffffffff; valaddr_reg:x3; val_offset:149847*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149847*0 + 3*29*FLEN/8, x4, x1, x2)

inst_49950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8263ffffffffffff; valaddr_reg:x3; val_offset:149850*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149850*0 + 3*30*FLEN/8, x4, x1, x2)

inst_49951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8267ffffffffffff; valaddr_reg:x3; val_offset:149853*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149853*0 + 3*31*FLEN/8, x4, x1, x2)

inst_49952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x8268000000000000; valaddr_reg:x3; val_offset:149856*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149856*0 + 3*32*FLEN/8, x4, x1, x2)

inst_49953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826c000000000000; valaddr_reg:x3; val_offset:149859*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149859*0 + 3*33*FLEN/8, x4, x1, x2)

inst_49954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826e000000000000; valaddr_reg:x3; val_offset:149862*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149862*0 + 3*34*FLEN/8, x4, x1, x2)

inst_49955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826f000000000000; valaddr_reg:x3; val_offset:149865*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149865*0 + 3*35*FLEN/8, x4, x1, x2)

inst_49956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826f800000000000; valaddr_reg:x3; val_offset:149868*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149868*0 + 3*36*FLEN/8, x4, x1, x2)

inst_49957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fc00000000000; valaddr_reg:x3; val_offset:149871*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149871*0 + 3*37*FLEN/8, x4, x1, x2)

inst_49958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fe00000000000; valaddr_reg:x3; val_offset:149874*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149874*0 + 3*38*FLEN/8, x4, x1, x2)

inst_49959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ff00000000000; valaddr_reg:x3; val_offset:149877*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149877*0 + 3*39*FLEN/8, x4, x1, x2)

inst_49960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ff80000000000; valaddr_reg:x3; val_offset:149880*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149880*0 + 3*40*FLEN/8, x4, x1, x2)

inst_49961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffc0000000000; valaddr_reg:x3; val_offset:149883*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149883*0 + 3*41*FLEN/8, x4, x1, x2)

inst_49962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffe0000000000; valaddr_reg:x3; val_offset:149886*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149886*0 + 3*42*FLEN/8, x4, x1, x2)

inst_49963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fff0000000000; valaddr_reg:x3; val_offset:149889*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149889*0 + 3*43*FLEN/8, x4, x1, x2)

inst_49964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fff8000000000; valaddr_reg:x3; val_offset:149892*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149892*0 + 3*44*FLEN/8, x4, x1, x2)

inst_49965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffc000000000; valaddr_reg:x3; val_offset:149895*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149895*0 + 3*45*FLEN/8, x4, x1, x2)

inst_49966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffe000000000; valaddr_reg:x3; val_offset:149898*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149898*0 + 3*46*FLEN/8, x4, x1, x2)

inst_49967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffff000000000; valaddr_reg:x3; val_offset:149901*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149901*0 + 3*47*FLEN/8, x4, x1, x2)

inst_49968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffff800000000; valaddr_reg:x3; val_offset:149904*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149904*0 + 3*48*FLEN/8, x4, x1, x2)

inst_49969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffc00000000; valaddr_reg:x3; val_offset:149907*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149907*0 + 3*49*FLEN/8, x4, x1, x2)

inst_49970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffe00000000; valaddr_reg:x3; val_offset:149910*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149910*0 + 3*50*FLEN/8, x4, x1, x2)

inst_49971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffff00000000; valaddr_reg:x3; val_offset:149913*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149913*0 + 3*51*FLEN/8, x4, x1, x2)

inst_49972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffff80000000; valaddr_reg:x3; val_offset:149916*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149916*0 + 3*52*FLEN/8, x4, x1, x2)

inst_49973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffc0000000; valaddr_reg:x3; val_offset:149919*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149919*0 + 3*53*FLEN/8, x4, x1, x2)

inst_49974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffe0000000; valaddr_reg:x3; val_offset:149922*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149922*0 + 3*54*FLEN/8, x4, x1, x2)

inst_49975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffff0000000; valaddr_reg:x3; val_offset:149925*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149925*0 + 3*55*FLEN/8, x4, x1, x2)

inst_49976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffff8000000; valaddr_reg:x3; val_offset:149928*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149928*0 + 3*56*FLEN/8, x4, x1, x2)

inst_49977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffc000000; valaddr_reg:x3; val_offset:149931*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149931*0 + 3*57*FLEN/8, x4, x1, x2)

inst_49978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffe000000; valaddr_reg:x3; val_offset:149934*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149934*0 + 3*58*FLEN/8, x4, x1, x2)

inst_49979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffff000000; valaddr_reg:x3; val_offset:149937*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149937*0 + 3*59*FLEN/8, x4, x1, x2)

inst_49980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffff800000; valaddr_reg:x3; val_offset:149940*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149940*0 + 3*60*FLEN/8, x4, x1, x2)

inst_49981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffc00000; valaddr_reg:x3; val_offset:149943*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149943*0 + 3*61*FLEN/8, x4, x1, x2)

inst_49982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffe00000; valaddr_reg:x3; val_offset:149946*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149946*0 + 3*62*FLEN/8, x4, x1, x2)

inst_49983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffff00000; valaddr_reg:x3; val_offset:149949*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149949*0 + 3*63*FLEN/8, x4, x1, x2)

inst_49984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffff80000; valaddr_reg:x3; val_offset:149952*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149952*0 + 3*64*FLEN/8, x4, x1, x2)

inst_49985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffc0000; valaddr_reg:x3; val_offset:149955*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149955*0 + 3*65*FLEN/8, x4, x1, x2)

inst_49986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffe0000; valaddr_reg:x3; val_offset:149958*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149958*0 + 3*66*FLEN/8, x4, x1, x2)

inst_49987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffff0000; valaddr_reg:x3; val_offset:149961*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149961*0 + 3*67*FLEN/8, x4, x1, x2)

inst_49988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffff8000; valaddr_reg:x3; val_offset:149964*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149964*0 + 3*68*FLEN/8, x4, x1, x2)

inst_49989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffffc000; valaddr_reg:x3; val_offset:149967*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149967*0 + 3*69*FLEN/8, x4, x1, x2)

inst_49990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffffe000; valaddr_reg:x3; val_offset:149970*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149970*0 + 3*70*FLEN/8, x4, x1, x2)

inst_49991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffff000; valaddr_reg:x3; val_offset:149973*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149973*0 + 3*71*FLEN/8, x4, x1, x2)

inst_49992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffff800; valaddr_reg:x3; val_offset:149976*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149976*0 + 3*72*FLEN/8, x4, x1, x2)

inst_49993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffffc00; valaddr_reg:x3; val_offset:149979*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149979*0 + 3*73*FLEN/8, x4, x1, x2)

inst_49994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffffe00; valaddr_reg:x3; val_offset:149982*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149982*0 + 3*74*FLEN/8, x4, x1, x2)

inst_49995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffffff00; valaddr_reg:x3; val_offset:149985*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149985*0 + 3*75*FLEN/8, x4, x1, x2)

inst_49996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffffff80; valaddr_reg:x3; val_offset:149988*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149988*0 + 3*76*FLEN/8, x4, x1, x2)

inst_49997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffffffc0; valaddr_reg:x3; val_offset:149991*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149991*0 + 3*77*FLEN/8, x4, x1, x2)

inst_49998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffffffe0; valaddr_reg:x3; val_offset:149994*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149994*0 + 3*78*FLEN/8, x4, x1, x2)

inst_49999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffffff0; valaddr_reg:x3; val_offset:149997*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 149997*0 + 3*79*FLEN/8, x4, x1, x2)

inst_50000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffffff8; valaddr_reg:x3; val_offset:150000*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150000*0 + 3*80*FLEN/8, x4, x1, x2)

inst_50001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffffffc; valaddr_reg:x3; val_offset:150003*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150003*0 + 3*81*FLEN/8, x4, x1, x2)

inst_50002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826ffffffffffffe; valaddr_reg:x3; val_offset:150006*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150006*0 + 3*82*FLEN/8, x4, x1, x2)

inst_50003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae7473993807 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae7473993807; op2val:0x8000;
op3val:0x826fffffffffffff; valaddr_reg:x3; val_offset:150009*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150009*0 + 3*83*FLEN/8, x4, x1, x2)

inst_50004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:150012*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150012*0 + 3*84*FLEN/8, x4, x1, x2)

inst_50005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:150015*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150015*0 + 3*85*FLEN/8, x4, x1, x2)

inst_50006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:150018*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150018*0 + 3*86*FLEN/8, x4, x1, x2)

inst_50007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:150021*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150021*0 + 3*87*FLEN/8, x4, x1, x2)

inst_50008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:150024*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150024*0 + 3*88*FLEN/8, x4, x1, x2)

inst_50009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:150027*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150027*0 + 3*89*FLEN/8, x4, x1, x2)

inst_50010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:150030*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150030*0 + 3*90*FLEN/8, x4, x1, x2)

inst_50011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:150033*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150033*0 + 3*91*FLEN/8, x4, x1, x2)

inst_50012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:150036*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150036*0 + 3*92*FLEN/8, x4, x1, x2)

inst_50013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:150039*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150039*0 + 3*93*FLEN/8, x4, x1, x2)

inst_50014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:150042*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150042*0 + 3*94*FLEN/8, x4, x1, x2)

inst_50015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:150045*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150045*0 + 3*95*FLEN/8, x4, x1, x2)

inst_50016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:150048*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150048*0 + 3*96*FLEN/8, x4, x1, x2)

inst_50017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:150051*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150051*0 + 3*97*FLEN/8, x4, x1, x2)

inst_50018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:150054*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150054*0 + 3*98*FLEN/8, x4, x1, x2)

inst_50019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:150057*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150057*0 + 3*99*FLEN/8, x4, x1, x2)

inst_50020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:150060*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150060*0 + 3*100*FLEN/8, x4, x1, x2)

inst_50021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:150063*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150063*0 + 3*101*FLEN/8, x4, x1, x2)

inst_50022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:150066*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150066*0 + 3*102*FLEN/8, x4, x1, x2)

inst_50023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:150069*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150069*0 + 3*103*FLEN/8, x4, x1, x2)

inst_50024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:150072*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150072*0 + 3*104*FLEN/8, x4, x1, x2)

inst_50025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:150075*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150075*0 + 3*105*FLEN/8, x4, x1, x2)

inst_50026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000000000; valaddr_reg:x3; val_offset:150078*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150078*0 + 3*106*FLEN/8, x4, x1, x2)

inst_50027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000000001; valaddr_reg:x3; val_offset:150081*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150081*0 + 3*107*FLEN/8, x4, x1, x2)

inst_50028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000000003; valaddr_reg:x3; val_offset:150084*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150084*0 + 3*108*FLEN/8, x4, x1, x2)

inst_50029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000000007; valaddr_reg:x3; val_offset:150087*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150087*0 + 3*109*FLEN/8, x4, x1, x2)

inst_50030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000000000f; valaddr_reg:x3; val_offset:150090*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150090*0 + 3*110*FLEN/8, x4, x1, x2)

inst_50031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000000001f; valaddr_reg:x3; val_offset:150093*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150093*0 + 3*111*FLEN/8, x4, x1, x2)

inst_50032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000000003f; valaddr_reg:x3; val_offset:150096*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150096*0 + 3*112*FLEN/8, x4, x1, x2)

inst_50033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000000007f; valaddr_reg:x3; val_offset:150099*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150099*0 + 3*113*FLEN/8, x4, x1, x2)

inst_50034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000000000ff; valaddr_reg:x3; val_offset:150102*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150102*0 + 3*114*FLEN/8, x4, x1, x2)

inst_50035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000000001ff; valaddr_reg:x3; val_offset:150105*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150105*0 + 3*115*FLEN/8, x4, x1, x2)

inst_50036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000000003ff; valaddr_reg:x3; val_offset:150108*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150108*0 + 3*116*FLEN/8, x4, x1, x2)

inst_50037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000000007ff; valaddr_reg:x3; val_offset:150111*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150111*0 + 3*117*FLEN/8, x4, x1, x2)

inst_50038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000000fff; valaddr_reg:x3; val_offset:150114*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150114*0 + 3*118*FLEN/8, x4, x1, x2)

inst_50039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000001fff; valaddr_reg:x3; val_offset:150117*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150117*0 + 3*119*FLEN/8, x4, x1, x2)

inst_50040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000003fff; valaddr_reg:x3; val_offset:150120*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150120*0 + 3*120*FLEN/8, x4, x1, x2)

inst_50041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000007fff; valaddr_reg:x3; val_offset:150123*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150123*0 + 3*121*FLEN/8, x4, x1, x2)

inst_50042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000000ffff; valaddr_reg:x3; val_offset:150126*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150126*0 + 3*122*FLEN/8, x4, x1, x2)

inst_50043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000001ffff; valaddr_reg:x3; val_offset:150129*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150129*0 + 3*123*FLEN/8, x4, x1, x2)

inst_50044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000003ffff; valaddr_reg:x3; val_offset:150132*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150132*0 + 3*124*FLEN/8, x4, x1, x2)

inst_50045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000007ffff; valaddr_reg:x3; val_offset:150135*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150135*0 + 3*125*FLEN/8, x4, x1, x2)

inst_50046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000000fffff; valaddr_reg:x3; val_offset:150138*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150138*0 + 3*126*FLEN/8, x4, x1, x2)

inst_50047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000001fffff; valaddr_reg:x3; val_offset:150141*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150141*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_50048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000003fffff; valaddr_reg:x3; val_offset:150144*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150144*0 + 3*128*FLEN/8, x4, x1, x2)

inst_50049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000007fffff; valaddr_reg:x3; val_offset:150147*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150147*0 + 3*129*FLEN/8, x4, x1, x2)

inst_50050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000000ffffff; valaddr_reg:x3; val_offset:150150*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150150*0 + 3*130*FLEN/8, x4, x1, x2)

inst_50051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000001ffffff; valaddr_reg:x3; val_offset:150153*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150153*0 + 3*131*FLEN/8, x4, x1, x2)

inst_50052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000003ffffff; valaddr_reg:x3; val_offset:150156*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150156*0 + 3*132*FLEN/8, x4, x1, x2)

inst_50053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000007ffffff; valaddr_reg:x3; val_offset:150159*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150159*0 + 3*133*FLEN/8, x4, x1, x2)

inst_50054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000000fffffff; valaddr_reg:x3; val_offset:150162*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150162*0 + 3*134*FLEN/8, x4, x1, x2)

inst_50055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000001fffffff; valaddr_reg:x3; val_offset:150165*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150165*0 + 3*135*FLEN/8, x4, x1, x2)

inst_50056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000003fffffff; valaddr_reg:x3; val_offset:150168*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150168*0 + 3*136*FLEN/8, x4, x1, x2)

inst_50057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000007fffffff; valaddr_reg:x3; val_offset:150171*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150171*0 + 3*137*FLEN/8, x4, x1, x2)

inst_50058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400000ffffffff; valaddr_reg:x3; val_offset:150174*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150174*0 + 3*138*FLEN/8, x4, x1, x2)

inst_50059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400001ffffffff; valaddr_reg:x3; val_offset:150177*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150177*0 + 3*139*FLEN/8, x4, x1, x2)

inst_50060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400003ffffffff; valaddr_reg:x3; val_offset:150180*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150180*0 + 3*140*FLEN/8, x4, x1, x2)

inst_50061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400007ffffffff; valaddr_reg:x3; val_offset:150183*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150183*0 + 3*141*FLEN/8, x4, x1, x2)

inst_50062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140000fffffffff; valaddr_reg:x3; val_offset:150186*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150186*0 + 3*142*FLEN/8, x4, x1, x2)

inst_50063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140001fffffffff; valaddr_reg:x3; val_offset:150189*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150189*0 + 3*143*FLEN/8, x4, x1, x2)

inst_50064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140003fffffffff; valaddr_reg:x3; val_offset:150192*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150192*0 + 3*144*FLEN/8, x4, x1, x2)

inst_50065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140007fffffffff; valaddr_reg:x3; val_offset:150195*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150195*0 + 3*145*FLEN/8, x4, x1, x2)

inst_50066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14000ffffffffff; valaddr_reg:x3; val_offset:150198*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150198*0 + 3*146*FLEN/8, x4, x1, x2)

inst_50067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14001ffffffffff; valaddr_reg:x3; val_offset:150201*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150201*0 + 3*147*FLEN/8, x4, x1, x2)

inst_50068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14003ffffffffff; valaddr_reg:x3; val_offset:150204*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150204*0 + 3*148*FLEN/8, x4, x1, x2)

inst_50069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14007ffffffffff; valaddr_reg:x3; val_offset:150207*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150207*0 + 3*149*FLEN/8, x4, x1, x2)

inst_50070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1400fffffffffff; valaddr_reg:x3; val_offset:150210*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150210*0 + 3*150*FLEN/8, x4, x1, x2)

inst_50071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1401fffffffffff; valaddr_reg:x3; val_offset:150213*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150213*0 + 3*151*FLEN/8, x4, x1, x2)

inst_50072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1403fffffffffff; valaddr_reg:x3; val_offset:150216*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150216*0 + 3*152*FLEN/8, x4, x1, x2)

inst_50073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x1407fffffffffff; valaddr_reg:x3; val_offset:150219*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150219*0 + 3*153*FLEN/8, x4, x1, x2)

inst_50074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x140ffffffffffff; valaddr_reg:x3; val_offset:150222*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150222*0 + 3*154*FLEN/8, x4, x1, x2)

inst_50075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x141ffffffffffff; valaddr_reg:x3; val_offset:150225*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150225*0 + 3*155*FLEN/8, x4, x1, x2)

inst_50076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x143ffffffffffff; valaddr_reg:x3; val_offset:150228*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150228*0 + 3*156*FLEN/8, x4, x1, x2)

inst_50077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x147ffffffffffff; valaddr_reg:x3; val_offset:150231*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150231*0 + 3*157*FLEN/8, x4, x1, x2)

inst_50078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x148000000000000; valaddr_reg:x3; val_offset:150234*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150234*0 + 3*158*FLEN/8, x4, x1, x2)

inst_50079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14c000000000000; valaddr_reg:x3; val_offset:150237*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150237*0 + 3*159*FLEN/8, x4, x1, x2)

inst_50080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14e000000000000; valaddr_reg:x3; val_offset:150240*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150240*0 + 3*160*FLEN/8, x4, x1, x2)

inst_50081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14f000000000000; valaddr_reg:x3; val_offset:150243*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150243*0 + 3*161*FLEN/8, x4, x1, x2)

inst_50082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14f800000000000; valaddr_reg:x3; val_offset:150246*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150246*0 + 3*162*FLEN/8, x4, x1, x2)

inst_50083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fc00000000000; valaddr_reg:x3; val_offset:150249*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150249*0 + 3*163*FLEN/8, x4, x1, x2)

inst_50084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fe00000000000; valaddr_reg:x3; val_offset:150252*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150252*0 + 3*164*FLEN/8, x4, x1, x2)

inst_50085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ff00000000000; valaddr_reg:x3; val_offset:150255*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150255*0 + 3*165*FLEN/8, x4, x1, x2)

inst_50086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ff80000000000; valaddr_reg:x3; val_offset:150258*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150258*0 + 3*166*FLEN/8, x4, x1, x2)

inst_50087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffc0000000000; valaddr_reg:x3; val_offset:150261*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150261*0 + 3*167*FLEN/8, x4, x1, x2)

inst_50088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffe0000000000; valaddr_reg:x3; val_offset:150264*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150264*0 + 3*168*FLEN/8, x4, x1, x2)

inst_50089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fff0000000000; valaddr_reg:x3; val_offset:150267*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150267*0 + 3*169*FLEN/8, x4, x1, x2)

inst_50090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fff8000000000; valaddr_reg:x3; val_offset:150270*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150270*0 + 3*170*FLEN/8, x4, x1, x2)

inst_50091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffc000000000; valaddr_reg:x3; val_offset:150273*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150273*0 + 3*171*FLEN/8, x4, x1, x2)

inst_50092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffe000000000; valaddr_reg:x3; val_offset:150276*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150276*0 + 3*172*FLEN/8, x4, x1, x2)

inst_50093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffff000000000; valaddr_reg:x3; val_offset:150279*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150279*0 + 3*173*FLEN/8, x4, x1, x2)

inst_50094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffff800000000; valaddr_reg:x3; val_offset:150282*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150282*0 + 3*174*FLEN/8, x4, x1, x2)

inst_50095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffc00000000; valaddr_reg:x3; val_offset:150285*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150285*0 + 3*175*FLEN/8, x4, x1, x2)

inst_50096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffe00000000; valaddr_reg:x3; val_offset:150288*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150288*0 + 3*176*FLEN/8, x4, x1, x2)

inst_50097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffff00000000; valaddr_reg:x3; val_offset:150291*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150291*0 + 3*177*FLEN/8, x4, x1, x2)

inst_50098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffff80000000; valaddr_reg:x3; val_offset:150294*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150294*0 + 3*178*FLEN/8, x4, x1, x2)

inst_50099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffc0000000; valaddr_reg:x3; val_offset:150297*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150297*0 + 3*179*FLEN/8, x4, x1, x2)

inst_50100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffe0000000; valaddr_reg:x3; val_offset:150300*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150300*0 + 3*180*FLEN/8, x4, x1, x2)

inst_50101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffff0000000; valaddr_reg:x3; val_offset:150303*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150303*0 + 3*181*FLEN/8, x4, x1, x2)

inst_50102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffff8000000; valaddr_reg:x3; val_offset:150306*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150306*0 + 3*182*FLEN/8, x4, x1, x2)

inst_50103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffc000000; valaddr_reg:x3; val_offset:150309*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150309*0 + 3*183*FLEN/8, x4, x1, x2)

inst_50104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffe000000; valaddr_reg:x3; val_offset:150312*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150312*0 + 3*184*FLEN/8, x4, x1, x2)

inst_50105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffff000000; valaddr_reg:x3; val_offset:150315*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150315*0 + 3*185*FLEN/8, x4, x1, x2)

inst_50106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffff800000; valaddr_reg:x3; val_offset:150318*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150318*0 + 3*186*FLEN/8, x4, x1, x2)

inst_50107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffc00000; valaddr_reg:x3; val_offset:150321*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150321*0 + 3*187*FLEN/8, x4, x1, x2)

inst_50108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffe00000; valaddr_reg:x3; val_offset:150324*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150324*0 + 3*188*FLEN/8, x4, x1, x2)

inst_50109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffff00000; valaddr_reg:x3; val_offset:150327*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150327*0 + 3*189*FLEN/8, x4, x1, x2)

inst_50110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffff80000; valaddr_reg:x3; val_offset:150330*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150330*0 + 3*190*FLEN/8, x4, x1, x2)

inst_50111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffc0000; valaddr_reg:x3; val_offset:150333*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150333*0 + 3*191*FLEN/8, x4, x1, x2)

inst_50112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffe0000; valaddr_reg:x3; val_offset:150336*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150336*0 + 3*192*FLEN/8, x4, x1, x2)

inst_50113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffff0000; valaddr_reg:x3; val_offset:150339*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150339*0 + 3*193*FLEN/8, x4, x1, x2)

inst_50114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffff8000; valaddr_reg:x3; val_offset:150342*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150342*0 + 3*194*FLEN/8, x4, x1, x2)

inst_50115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffffc000; valaddr_reg:x3; val_offset:150345*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150345*0 + 3*195*FLEN/8, x4, x1, x2)

inst_50116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffffe000; valaddr_reg:x3; val_offset:150348*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150348*0 + 3*196*FLEN/8, x4, x1, x2)

inst_50117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffff000; valaddr_reg:x3; val_offset:150351*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150351*0 + 3*197*FLEN/8, x4, x1, x2)

inst_50118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffff800; valaddr_reg:x3; val_offset:150354*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150354*0 + 3*198*FLEN/8, x4, x1, x2)

inst_50119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffffc00; valaddr_reg:x3; val_offset:150357*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150357*0 + 3*199*FLEN/8, x4, x1, x2)

inst_50120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffffe00; valaddr_reg:x3; val_offset:150360*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150360*0 + 3*200*FLEN/8, x4, x1, x2)

inst_50121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffffff00; valaddr_reg:x3; val_offset:150363*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150363*0 + 3*201*FLEN/8, x4, x1, x2)

inst_50122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffffff80; valaddr_reg:x3; val_offset:150366*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150366*0 + 3*202*FLEN/8, x4, x1, x2)

inst_50123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffffffc0; valaddr_reg:x3; val_offset:150369*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150369*0 + 3*203*FLEN/8, x4, x1, x2)

inst_50124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffffffe0; valaddr_reg:x3; val_offset:150372*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150372*0 + 3*204*FLEN/8, x4, x1, x2)

inst_50125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffffff0; valaddr_reg:x3; val_offset:150375*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150375*0 + 3*205*FLEN/8, x4, x1, x2)

inst_50126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffffff8; valaddr_reg:x3; val_offset:150378*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150378*0 + 3*206*FLEN/8, x4, x1, x2)

inst_50127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffffffc; valaddr_reg:x3; val_offset:150381*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150381*0 + 3*207*FLEN/8, x4, x1, x2)

inst_50128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14ffffffffffffe; valaddr_reg:x3; val_offset:150384*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150384*0 + 3*208*FLEN/8, x4, x1, x2)

inst_50129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfae80d573fdcf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fae80d573fdcf; op2val:0x0;
op3val:0x14fffffffffffff; valaddr_reg:x3; val_offset:150387*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150387*0 + 3*209*FLEN/8, x4, x1, x2)

inst_50130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000000000; valaddr_reg:x3; val_offset:150390*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150390*0 + 3*210*FLEN/8, x4, x1, x2)

inst_50131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000000001; valaddr_reg:x3; val_offset:150393*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150393*0 + 3*211*FLEN/8, x4, x1, x2)

inst_50132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000000003; valaddr_reg:x3; val_offset:150396*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150396*0 + 3*212*FLEN/8, x4, x1, x2)

inst_50133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000000007; valaddr_reg:x3; val_offset:150399*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150399*0 + 3*213*FLEN/8, x4, x1, x2)

inst_50134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000000000f; valaddr_reg:x3; val_offset:150402*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150402*0 + 3*214*FLEN/8, x4, x1, x2)

inst_50135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000000001f; valaddr_reg:x3; val_offset:150405*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150405*0 + 3*215*FLEN/8, x4, x1, x2)

inst_50136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000000003f; valaddr_reg:x3; val_offset:150408*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150408*0 + 3*216*FLEN/8, x4, x1, x2)

inst_50137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000000007f; valaddr_reg:x3; val_offset:150411*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150411*0 + 3*217*FLEN/8, x4, x1, x2)

inst_50138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000000000ff; valaddr_reg:x3; val_offset:150414*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150414*0 + 3*218*FLEN/8, x4, x1, x2)

inst_50139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000000001ff; valaddr_reg:x3; val_offset:150417*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150417*0 + 3*219*FLEN/8, x4, x1, x2)

inst_50140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000000003ff; valaddr_reg:x3; val_offset:150420*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150420*0 + 3*220*FLEN/8, x4, x1, x2)

inst_50141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000000007ff; valaddr_reg:x3; val_offset:150423*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150423*0 + 3*221*FLEN/8, x4, x1, x2)

inst_50142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000000fff; valaddr_reg:x3; val_offset:150426*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150426*0 + 3*222*FLEN/8, x4, x1, x2)

inst_50143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000001fff; valaddr_reg:x3; val_offset:150429*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150429*0 + 3*223*FLEN/8, x4, x1, x2)

inst_50144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000003fff; valaddr_reg:x3; val_offset:150432*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150432*0 + 3*224*FLEN/8, x4, x1, x2)

inst_50145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000007fff; valaddr_reg:x3; val_offset:150435*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150435*0 + 3*225*FLEN/8, x4, x1, x2)

inst_50146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000000ffff; valaddr_reg:x3; val_offset:150438*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150438*0 + 3*226*FLEN/8, x4, x1, x2)

inst_50147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000001ffff; valaddr_reg:x3; val_offset:150441*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150441*0 + 3*227*FLEN/8, x4, x1, x2)

inst_50148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000003ffff; valaddr_reg:x3; val_offset:150444*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150444*0 + 3*228*FLEN/8, x4, x1, x2)

inst_50149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000007ffff; valaddr_reg:x3; val_offset:150447*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150447*0 + 3*229*FLEN/8, x4, x1, x2)

inst_50150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000000fffff; valaddr_reg:x3; val_offset:150450*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150450*0 + 3*230*FLEN/8, x4, x1, x2)

inst_50151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000001fffff; valaddr_reg:x3; val_offset:150453*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150453*0 + 3*231*FLEN/8, x4, x1, x2)

inst_50152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000003fffff; valaddr_reg:x3; val_offset:150456*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150456*0 + 3*232*FLEN/8, x4, x1, x2)

inst_50153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000007fffff; valaddr_reg:x3; val_offset:150459*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150459*0 + 3*233*FLEN/8, x4, x1, x2)

inst_50154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000000ffffff; valaddr_reg:x3; val_offset:150462*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150462*0 + 3*234*FLEN/8, x4, x1, x2)

inst_50155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000001ffffff; valaddr_reg:x3; val_offset:150465*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150465*0 + 3*235*FLEN/8, x4, x1, x2)

inst_50156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000003ffffff; valaddr_reg:x3; val_offset:150468*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150468*0 + 3*236*FLEN/8, x4, x1, x2)

inst_50157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000007ffffff; valaddr_reg:x3; val_offset:150471*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150471*0 + 3*237*FLEN/8, x4, x1, x2)

inst_50158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000000fffffff; valaddr_reg:x3; val_offset:150474*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150474*0 + 3*238*FLEN/8, x4, x1, x2)

inst_50159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000001fffffff; valaddr_reg:x3; val_offset:150477*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150477*0 + 3*239*FLEN/8, x4, x1, x2)

inst_50160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000003fffffff; valaddr_reg:x3; val_offset:150480*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150480*0 + 3*240*FLEN/8, x4, x1, x2)

inst_50161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000007fffffff; valaddr_reg:x3; val_offset:150483*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150483*0 + 3*241*FLEN/8, x4, x1, x2)

inst_50162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500000ffffffff; valaddr_reg:x3; val_offset:150486*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150486*0 + 3*242*FLEN/8, x4, x1, x2)

inst_50163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500001ffffffff; valaddr_reg:x3; val_offset:150489*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150489*0 + 3*243*FLEN/8, x4, x1, x2)

inst_50164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500003ffffffff; valaddr_reg:x3; val_offset:150492*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150492*0 + 3*244*FLEN/8, x4, x1, x2)

inst_50165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500007ffffffff; valaddr_reg:x3; val_offset:150495*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150495*0 + 3*245*FLEN/8, x4, x1, x2)

inst_50166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50000fffffffff; valaddr_reg:x3; val_offset:150498*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150498*0 + 3*246*FLEN/8, x4, x1, x2)

inst_50167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50001fffffffff; valaddr_reg:x3; val_offset:150501*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150501*0 + 3*247*FLEN/8, x4, x1, x2)

inst_50168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50003fffffffff; valaddr_reg:x3; val_offset:150504*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150504*0 + 3*248*FLEN/8, x4, x1, x2)

inst_50169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50007fffffffff; valaddr_reg:x3; val_offset:150507*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150507*0 + 3*249*FLEN/8, x4, x1, x2)

inst_50170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5000ffffffffff; valaddr_reg:x3; val_offset:150510*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150510*0 + 3*250*FLEN/8, x4, x1, x2)

inst_50171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5001ffffffffff; valaddr_reg:x3; val_offset:150513*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150513*0 + 3*251*FLEN/8, x4, x1, x2)

inst_50172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5003ffffffffff; valaddr_reg:x3; val_offset:150516*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150516*0 + 3*252*FLEN/8, x4, x1, x2)

inst_50173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5007ffffffffff; valaddr_reg:x3; val_offset:150519*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150519*0 + 3*253*FLEN/8, x4, x1, x2)

inst_50174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf500fffffffffff; valaddr_reg:x3; val_offset:150522*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150522*0 + 3*254*FLEN/8, x4, x1, x2)

inst_50175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf501fffffffffff; valaddr_reg:x3; val_offset:150525*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150525*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_50176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf503fffffffffff; valaddr_reg:x3; val_offset:150528*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150528*0 + 3*256*FLEN/8, x4, x1, x2)

inst_50177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf507fffffffffff; valaddr_reg:x3; val_offset:150531*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150531*0 + 3*257*FLEN/8, x4, x1, x2)

inst_50178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf50ffffffffffff; valaddr_reg:x3; val_offset:150534*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150534*0 + 3*258*FLEN/8, x4, x1, x2)

inst_50179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf51ffffffffffff; valaddr_reg:x3; val_offset:150537*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150537*0 + 3*259*FLEN/8, x4, x1, x2)

inst_50180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf53ffffffffffff; valaddr_reg:x3; val_offset:150540*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150540*0 + 3*260*FLEN/8, x4, x1, x2)

inst_50181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf57ffffffffffff; valaddr_reg:x3; val_offset:150543*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150543*0 + 3*261*FLEN/8, x4, x1, x2)

inst_50182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf58000000000000; valaddr_reg:x3; val_offset:150546*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150546*0 + 3*262*FLEN/8, x4, x1, x2)

inst_50183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5c000000000000; valaddr_reg:x3; val_offset:150549*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150549*0 + 3*263*FLEN/8, x4, x1, x2)

inst_50184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5e000000000000; valaddr_reg:x3; val_offset:150552*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150552*0 + 3*264*FLEN/8, x4, x1, x2)

inst_50185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5f000000000000; valaddr_reg:x3; val_offset:150555*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150555*0 + 3*265*FLEN/8, x4, x1, x2)

inst_50186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5f800000000000; valaddr_reg:x3; val_offset:150558*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150558*0 + 3*266*FLEN/8, x4, x1, x2)

inst_50187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fc00000000000; valaddr_reg:x3; val_offset:150561*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150561*0 + 3*267*FLEN/8, x4, x1, x2)

inst_50188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fe00000000000; valaddr_reg:x3; val_offset:150564*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150564*0 + 3*268*FLEN/8, x4, x1, x2)

inst_50189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ff00000000000; valaddr_reg:x3; val_offset:150567*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150567*0 + 3*269*FLEN/8, x4, x1, x2)

inst_50190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ff80000000000; valaddr_reg:x3; val_offset:150570*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150570*0 + 3*270*FLEN/8, x4, x1, x2)

inst_50191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffc0000000000; valaddr_reg:x3; val_offset:150573*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150573*0 + 3*271*FLEN/8, x4, x1, x2)

inst_50192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffe0000000000; valaddr_reg:x3; val_offset:150576*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150576*0 + 3*272*FLEN/8, x4, x1, x2)

inst_50193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fff0000000000; valaddr_reg:x3; val_offset:150579*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150579*0 + 3*273*FLEN/8, x4, x1, x2)

inst_50194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fff8000000000; valaddr_reg:x3; val_offset:150582*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150582*0 + 3*274*FLEN/8, x4, x1, x2)

inst_50195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffc000000000; valaddr_reg:x3; val_offset:150585*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150585*0 + 3*275*FLEN/8, x4, x1, x2)

inst_50196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffe000000000; valaddr_reg:x3; val_offset:150588*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150588*0 + 3*276*FLEN/8, x4, x1, x2)

inst_50197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffff000000000; valaddr_reg:x3; val_offset:150591*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150591*0 + 3*277*FLEN/8, x4, x1, x2)

inst_50198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffff800000000; valaddr_reg:x3; val_offset:150594*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150594*0 + 3*278*FLEN/8, x4, x1, x2)

inst_50199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffc00000000; valaddr_reg:x3; val_offset:150597*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150597*0 + 3*279*FLEN/8, x4, x1, x2)

inst_50200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffe00000000; valaddr_reg:x3; val_offset:150600*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150600*0 + 3*280*FLEN/8, x4, x1, x2)

inst_50201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffff00000000; valaddr_reg:x3; val_offset:150603*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150603*0 + 3*281*FLEN/8, x4, x1, x2)

inst_50202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffff80000000; valaddr_reg:x3; val_offset:150606*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150606*0 + 3*282*FLEN/8, x4, x1, x2)

inst_50203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffc0000000; valaddr_reg:x3; val_offset:150609*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150609*0 + 3*283*FLEN/8, x4, x1, x2)

inst_50204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffe0000000; valaddr_reg:x3; val_offset:150612*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150612*0 + 3*284*FLEN/8, x4, x1, x2)

inst_50205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffff0000000; valaddr_reg:x3; val_offset:150615*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150615*0 + 3*285*FLEN/8, x4, x1, x2)

inst_50206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffff8000000; valaddr_reg:x3; val_offset:150618*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150618*0 + 3*286*FLEN/8, x4, x1, x2)

inst_50207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffc000000; valaddr_reg:x3; val_offset:150621*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150621*0 + 3*287*FLEN/8, x4, x1, x2)

inst_50208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffe000000; valaddr_reg:x3; val_offset:150624*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150624*0 + 3*288*FLEN/8, x4, x1, x2)

inst_50209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffff000000; valaddr_reg:x3; val_offset:150627*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150627*0 + 3*289*FLEN/8, x4, x1, x2)

inst_50210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffff800000; valaddr_reg:x3; val_offset:150630*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150630*0 + 3*290*FLEN/8, x4, x1, x2)

inst_50211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffc00000; valaddr_reg:x3; val_offset:150633*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150633*0 + 3*291*FLEN/8, x4, x1, x2)

inst_50212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffe00000; valaddr_reg:x3; val_offset:150636*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150636*0 + 3*292*FLEN/8, x4, x1, x2)

inst_50213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffff00000; valaddr_reg:x3; val_offset:150639*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150639*0 + 3*293*FLEN/8, x4, x1, x2)

inst_50214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffff80000; valaddr_reg:x3; val_offset:150642*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150642*0 + 3*294*FLEN/8, x4, x1, x2)

inst_50215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffc0000; valaddr_reg:x3; val_offset:150645*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150645*0 + 3*295*FLEN/8, x4, x1, x2)

inst_50216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffe0000; valaddr_reg:x3; val_offset:150648*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150648*0 + 3*296*FLEN/8, x4, x1, x2)

inst_50217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffff0000; valaddr_reg:x3; val_offset:150651*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150651*0 + 3*297*FLEN/8, x4, x1, x2)

inst_50218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffff8000; valaddr_reg:x3; val_offset:150654*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150654*0 + 3*298*FLEN/8, x4, x1, x2)

inst_50219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffffc000; valaddr_reg:x3; val_offset:150657*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150657*0 + 3*299*FLEN/8, x4, x1, x2)

inst_50220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffffe000; valaddr_reg:x3; val_offset:150660*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150660*0 + 3*300*FLEN/8, x4, x1, x2)

inst_50221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffff000; valaddr_reg:x3; val_offset:150663*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150663*0 + 3*301*FLEN/8, x4, x1, x2)

inst_50222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffff800; valaddr_reg:x3; val_offset:150666*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150666*0 + 3*302*FLEN/8, x4, x1, x2)

inst_50223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffffc00; valaddr_reg:x3; val_offset:150669*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150669*0 + 3*303*FLEN/8, x4, x1, x2)

inst_50224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffffe00; valaddr_reg:x3; val_offset:150672*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150672*0 + 3*304*FLEN/8, x4, x1, x2)

inst_50225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffffff00; valaddr_reg:x3; val_offset:150675*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150675*0 + 3*305*FLEN/8, x4, x1, x2)

inst_50226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffffff80; valaddr_reg:x3; val_offset:150678*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150678*0 + 3*306*FLEN/8, x4, x1, x2)

inst_50227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffffffc0; valaddr_reg:x3; val_offset:150681*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150681*0 + 3*307*FLEN/8, x4, x1, x2)

inst_50228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffffffe0; valaddr_reg:x3; val_offset:150684*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150684*0 + 3*308*FLEN/8, x4, x1, x2)

inst_50229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffffff0; valaddr_reg:x3; val_offset:150687*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150687*0 + 3*309*FLEN/8, x4, x1, x2)

inst_50230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffffff8; valaddr_reg:x3; val_offset:150690*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150690*0 + 3*310*FLEN/8, x4, x1, x2)

inst_50231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffffffc; valaddr_reg:x3; val_offset:150693*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150693*0 + 3*311*FLEN/8, x4, x1, x2)

inst_50232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5ffffffffffffe; valaddr_reg:x3; val_offset:150696*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150696*0 + 3*312*FLEN/8, x4, x1, x2)

inst_50233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f5 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf5fffffffffffff; valaddr_reg:x3; val_offset:150699*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150699*0 + 3*313*FLEN/8, x4, x1, x2)

inst_50234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:150702*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150702*0 + 3*314*FLEN/8, x4, x1, x2)

inst_50235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:150705*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150705*0 + 3*315*FLEN/8, x4, x1, x2)

inst_50236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:150708*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150708*0 + 3*316*FLEN/8, x4, x1, x2)

inst_50237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:150711*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150711*0 + 3*317*FLEN/8, x4, x1, x2)

inst_50238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:150714*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150714*0 + 3*318*FLEN/8, x4, x1, x2)

inst_50239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:150717*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150717*0 + 3*319*FLEN/8, x4, x1, x2)

inst_50240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:150720*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150720*0 + 3*320*FLEN/8, x4, x1, x2)

inst_50241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:150723*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150723*0 + 3*321*FLEN/8, x4, x1, x2)

inst_50242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:150726*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150726*0 + 3*322*FLEN/8, x4, x1, x2)

inst_50243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:150729*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150729*0 + 3*323*FLEN/8, x4, x1, x2)

inst_50244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:150732*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150732*0 + 3*324*FLEN/8, x4, x1, x2)

inst_50245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:150735*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150735*0 + 3*325*FLEN/8, x4, x1, x2)

inst_50246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:150738*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150738*0 + 3*326*FLEN/8, x4, x1, x2)

inst_50247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:150741*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150741*0 + 3*327*FLEN/8, x4, x1, x2)

inst_50248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:150744*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150744*0 + 3*328*FLEN/8, x4, x1, x2)

inst_50249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:150747*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150747*0 + 3*329*FLEN/8, x4, x1, x2)

inst_50250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:150750*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150750*0 + 3*330*FLEN/8, x4, x1, x2)

inst_50251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:150753*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150753*0 + 3*331*FLEN/8, x4, x1, x2)

inst_50252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:150756*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150756*0 + 3*332*FLEN/8, x4, x1, x2)

inst_50253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:150759*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150759*0 + 3*333*FLEN/8, x4, x1, x2)

inst_50254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:150762*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150762*0 + 3*334*FLEN/8, x4, x1, x2)

inst_50255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfaf43857edf4d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x028c51a23f7d0 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9faf43857edf4d; op2val:0x9fd028c51a23f7d0;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:150765*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150765*0 + 3*335*FLEN/8, x4, x1, x2)

inst_50256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000000000; valaddr_reg:x3; val_offset:150768*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150768*0 + 3*336*FLEN/8, x4, x1, x2)

inst_50257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000000001; valaddr_reg:x3; val_offset:150771*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150771*0 + 3*337*FLEN/8, x4, x1, x2)

inst_50258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000000003; valaddr_reg:x3; val_offset:150774*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150774*0 + 3*338*FLEN/8, x4, x1, x2)

inst_50259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000000007; valaddr_reg:x3; val_offset:150777*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150777*0 + 3*339*FLEN/8, x4, x1, x2)

inst_50260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000000000f; valaddr_reg:x3; val_offset:150780*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150780*0 + 3*340*FLEN/8, x4, x1, x2)

inst_50261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000000001f; valaddr_reg:x3; val_offset:150783*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150783*0 + 3*341*FLEN/8, x4, x1, x2)

inst_50262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000000003f; valaddr_reg:x3; val_offset:150786*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150786*0 + 3*342*FLEN/8, x4, x1, x2)

inst_50263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000000007f; valaddr_reg:x3; val_offset:150789*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150789*0 + 3*343*FLEN/8, x4, x1, x2)

inst_50264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000000000ff; valaddr_reg:x3; val_offset:150792*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150792*0 + 3*344*FLEN/8, x4, x1, x2)

inst_50265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000000001ff; valaddr_reg:x3; val_offset:150795*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150795*0 + 3*345*FLEN/8, x4, x1, x2)

inst_50266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000000003ff; valaddr_reg:x3; val_offset:150798*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150798*0 + 3*346*FLEN/8, x4, x1, x2)

inst_50267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000000007ff; valaddr_reg:x3; val_offset:150801*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150801*0 + 3*347*FLEN/8, x4, x1, x2)

inst_50268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000000fff; valaddr_reg:x3; val_offset:150804*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150804*0 + 3*348*FLEN/8, x4, x1, x2)

inst_50269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000001fff; valaddr_reg:x3; val_offset:150807*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150807*0 + 3*349*FLEN/8, x4, x1, x2)

inst_50270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000003fff; valaddr_reg:x3; val_offset:150810*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150810*0 + 3*350*FLEN/8, x4, x1, x2)

inst_50271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000007fff; valaddr_reg:x3; val_offset:150813*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150813*0 + 3*351*FLEN/8, x4, x1, x2)

inst_50272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000000ffff; valaddr_reg:x3; val_offset:150816*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150816*0 + 3*352*FLEN/8, x4, x1, x2)

inst_50273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000001ffff; valaddr_reg:x3; val_offset:150819*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150819*0 + 3*353*FLEN/8, x4, x1, x2)

inst_50274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000003ffff; valaddr_reg:x3; val_offset:150822*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150822*0 + 3*354*FLEN/8, x4, x1, x2)

inst_50275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000007ffff; valaddr_reg:x3; val_offset:150825*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150825*0 + 3*355*FLEN/8, x4, x1, x2)

inst_50276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000000fffff; valaddr_reg:x3; val_offset:150828*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150828*0 + 3*356*FLEN/8, x4, x1, x2)

inst_50277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000001fffff; valaddr_reg:x3; val_offset:150831*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150831*0 + 3*357*FLEN/8, x4, x1, x2)

inst_50278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000003fffff; valaddr_reg:x3; val_offset:150834*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150834*0 + 3*358*FLEN/8, x4, x1, x2)

inst_50279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000007fffff; valaddr_reg:x3; val_offset:150837*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150837*0 + 3*359*FLEN/8, x4, x1, x2)

inst_50280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000000ffffff; valaddr_reg:x3; val_offset:150840*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150840*0 + 3*360*FLEN/8, x4, x1, x2)

inst_50281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000001ffffff; valaddr_reg:x3; val_offset:150843*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150843*0 + 3*361*FLEN/8, x4, x1, x2)

inst_50282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000003ffffff; valaddr_reg:x3; val_offset:150846*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150846*0 + 3*362*FLEN/8, x4, x1, x2)

inst_50283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000007ffffff; valaddr_reg:x3; val_offset:150849*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150849*0 + 3*363*FLEN/8, x4, x1, x2)

inst_50284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000000fffffff; valaddr_reg:x3; val_offset:150852*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150852*0 + 3*364*FLEN/8, x4, x1, x2)

inst_50285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000001fffffff; valaddr_reg:x3; val_offset:150855*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150855*0 + 3*365*FLEN/8, x4, x1, x2)

inst_50286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000003fffffff; valaddr_reg:x3; val_offset:150858*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150858*0 + 3*366*FLEN/8, x4, x1, x2)

inst_50287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000007fffffff; valaddr_reg:x3; val_offset:150861*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150861*0 + 3*367*FLEN/8, x4, x1, x2)

inst_50288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00000ffffffff; valaddr_reg:x3; val_offset:150864*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150864*0 + 3*368*FLEN/8, x4, x1, x2)

inst_50289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00001ffffffff; valaddr_reg:x3; val_offset:150867*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150867*0 + 3*369*FLEN/8, x4, x1, x2)

inst_50290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00003ffffffff; valaddr_reg:x3; val_offset:150870*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150870*0 + 3*370*FLEN/8, x4, x1, x2)

inst_50291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00007ffffffff; valaddr_reg:x3; val_offset:150873*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150873*0 + 3*371*FLEN/8, x4, x1, x2)

inst_50292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0000fffffffff; valaddr_reg:x3; val_offset:150876*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150876*0 + 3*372*FLEN/8, x4, x1, x2)

inst_50293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0001fffffffff; valaddr_reg:x3; val_offset:150879*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150879*0 + 3*373*FLEN/8, x4, x1, x2)

inst_50294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0003fffffffff; valaddr_reg:x3; val_offset:150882*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150882*0 + 3*374*FLEN/8, x4, x1, x2)

inst_50295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0007fffffffff; valaddr_reg:x3; val_offset:150885*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150885*0 + 3*375*FLEN/8, x4, x1, x2)

inst_50296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f000ffffffffff; valaddr_reg:x3; val_offset:150888*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150888*0 + 3*376*FLEN/8, x4, x1, x2)

inst_50297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f001ffffffffff; valaddr_reg:x3; val_offset:150891*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150891*0 + 3*377*FLEN/8, x4, x1, x2)

inst_50298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f003ffffffffff; valaddr_reg:x3; val_offset:150894*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150894*0 + 3*378*FLEN/8, x4, x1, x2)

inst_50299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f007ffffffffff; valaddr_reg:x3; val_offset:150897*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150897*0 + 3*379*FLEN/8, x4, x1, x2)

inst_50300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f00fffffffffff; valaddr_reg:x3; val_offset:150900*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150900*0 + 3*380*FLEN/8, x4, x1, x2)

inst_50301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f01fffffffffff; valaddr_reg:x3; val_offset:150903*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150903*0 + 3*381*FLEN/8, x4, x1, x2)

inst_50302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f03fffffffffff; valaddr_reg:x3; val_offset:150906*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150906*0 + 3*382*FLEN/8, x4, x1, x2)

inst_50303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f07fffffffffff; valaddr_reg:x3; val_offset:150909*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150909*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_50304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f0ffffffffffff; valaddr_reg:x3; val_offset:150912*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150912*0 + 3*384*FLEN/8, x4, x1, x2)

inst_50305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f1ffffffffffff; valaddr_reg:x3; val_offset:150915*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150915*0 + 3*385*FLEN/8, x4, x1, x2)

inst_50306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f3ffffffffffff; valaddr_reg:x3; val_offset:150918*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150918*0 + 3*386*FLEN/8, x4, x1, x2)

inst_50307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f7ffffffffffff; valaddr_reg:x3; val_offset:150921*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150921*0 + 3*387*FLEN/8, x4, x1, x2)

inst_50308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37f8000000000000; valaddr_reg:x3; val_offset:150924*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150924*0 + 3*388*FLEN/8, x4, x1, x2)

inst_50309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fc000000000000; valaddr_reg:x3; val_offset:150927*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150927*0 + 3*389*FLEN/8, x4, x1, x2)

inst_50310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fe000000000000; valaddr_reg:x3; val_offset:150930*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150930*0 + 3*390*FLEN/8, x4, x1, x2)

inst_50311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ff000000000000; valaddr_reg:x3; val_offset:150933*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150933*0 + 3*391*FLEN/8, x4, x1, x2)

inst_50312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ff800000000000; valaddr_reg:x3; val_offset:150936*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150936*0 + 3*392*FLEN/8, x4, x1, x2)

inst_50313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffc00000000000; valaddr_reg:x3; val_offset:150939*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150939*0 + 3*393*FLEN/8, x4, x1, x2)

inst_50314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffe00000000000; valaddr_reg:x3; val_offset:150942*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150942*0 + 3*394*FLEN/8, x4, x1, x2)

inst_50315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fff00000000000; valaddr_reg:x3; val_offset:150945*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150945*0 + 3*395*FLEN/8, x4, x1, x2)

inst_50316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fff80000000000; valaddr_reg:x3; val_offset:150948*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150948*0 + 3*396*FLEN/8, x4, x1, x2)

inst_50317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffc0000000000; valaddr_reg:x3; val_offset:150951*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150951*0 + 3*397*FLEN/8, x4, x1, x2)

inst_50318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffe0000000000; valaddr_reg:x3; val_offset:150954*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150954*0 + 3*398*FLEN/8, x4, x1, x2)

inst_50319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffff0000000000; valaddr_reg:x3; val_offset:150957*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150957*0 + 3*399*FLEN/8, x4, x1, x2)

inst_50320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffff8000000000; valaddr_reg:x3; val_offset:150960*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150960*0 + 3*400*FLEN/8, x4, x1, x2)

inst_50321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffc000000000; valaddr_reg:x3; val_offset:150963*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150963*0 + 3*401*FLEN/8, x4, x1, x2)

inst_50322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffe000000000; valaddr_reg:x3; val_offset:150966*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150966*0 + 3*402*FLEN/8, x4, x1, x2)

inst_50323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffff000000000; valaddr_reg:x3; val_offset:150969*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150969*0 + 3*403*FLEN/8, x4, x1, x2)

inst_50324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffff800000000; valaddr_reg:x3; val_offset:150972*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150972*0 + 3*404*FLEN/8, x4, x1, x2)

inst_50325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffc00000000; valaddr_reg:x3; val_offset:150975*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150975*0 + 3*405*FLEN/8, x4, x1, x2)

inst_50326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffe00000000; valaddr_reg:x3; val_offset:150978*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150978*0 + 3*406*FLEN/8, x4, x1, x2)

inst_50327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffff00000000; valaddr_reg:x3; val_offset:150981*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150981*0 + 3*407*FLEN/8, x4, x1, x2)

inst_50328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffff80000000; valaddr_reg:x3; val_offset:150984*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150984*0 + 3*408*FLEN/8, x4, x1, x2)

inst_50329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffc0000000; valaddr_reg:x3; val_offset:150987*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150987*0 + 3*409*FLEN/8, x4, x1, x2)

inst_50330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffe0000000; valaddr_reg:x3; val_offset:150990*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150990*0 + 3*410*FLEN/8, x4, x1, x2)

inst_50331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffff0000000; valaddr_reg:x3; val_offset:150993*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150993*0 + 3*411*FLEN/8, x4, x1, x2)

inst_50332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffff8000000; valaddr_reg:x3; val_offset:150996*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150996*0 + 3*412*FLEN/8, x4, x1, x2)

inst_50333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffc000000; valaddr_reg:x3; val_offset:150999*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150999*0 + 3*413*FLEN/8, x4, x1, x2)

inst_50334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffe000000; valaddr_reg:x3; val_offset:151002*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151002*0 + 3*414*FLEN/8, x4, x1, x2)

inst_50335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffff000000; valaddr_reg:x3; val_offset:151005*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151005*0 + 3*415*FLEN/8, x4, x1, x2)

inst_50336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffff800000; valaddr_reg:x3; val_offset:151008*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151008*0 + 3*416*FLEN/8, x4, x1, x2)

inst_50337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffc00000; valaddr_reg:x3; val_offset:151011*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151011*0 + 3*417*FLEN/8, x4, x1, x2)

inst_50338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffe00000; valaddr_reg:x3; val_offset:151014*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151014*0 + 3*418*FLEN/8, x4, x1, x2)

inst_50339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffff00000; valaddr_reg:x3; val_offset:151017*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151017*0 + 3*419*FLEN/8, x4, x1, x2)

inst_50340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffff80000; valaddr_reg:x3; val_offset:151020*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151020*0 + 3*420*FLEN/8, x4, x1, x2)

inst_50341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffc0000; valaddr_reg:x3; val_offset:151023*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151023*0 + 3*421*FLEN/8, x4, x1, x2)

inst_50342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffe0000; valaddr_reg:x3; val_offset:151026*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151026*0 + 3*422*FLEN/8, x4, x1, x2)

inst_50343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffff0000; valaddr_reg:x3; val_offset:151029*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151029*0 + 3*423*FLEN/8, x4, x1, x2)

inst_50344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffff8000; valaddr_reg:x3; val_offset:151032*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151032*0 + 3*424*FLEN/8, x4, x1, x2)

inst_50345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffffc000; valaddr_reg:x3; val_offset:151035*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151035*0 + 3*425*FLEN/8, x4, x1, x2)

inst_50346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffffe000; valaddr_reg:x3; val_offset:151038*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151038*0 + 3*426*FLEN/8, x4, x1, x2)

inst_50347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffff000; valaddr_reg:x3; val_offset:151041*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151041*0 + 3*427*FLEN/8, x4, x1, x2)

inst_50348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffff800; valaddr_reg:x3; val_offset:151044*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151044*0 + 3*428*FLEN/8, x4, x1, x2)

inst_50349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffffc00; valaddr_reg:x3; val_offset:151047*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151047*0 + 3*429*FLEN/8, x4, x1, x2)

inst_50350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffffe00; valaddr_reg:x3; val_offset:151050*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151050*0 + 3*430*FLEN/8, x4, x1, x2)

inst_50351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffffff00; valaddr_reg:x3; val_offset:151053*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151053*0 + 3*431*FLEN/8, x4, x1, x2)

inst_50352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffffff80; valaddr_reg:x3; val_offset:151056*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151056*0 + 3*432*FLEN/8, x4, x1, x2)

inst_50353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffffffc0; valaddr_reg:x3; val_offset:151059*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151059*0 + 3*433*FLEN/8, x4, x1, x2)

inst_50354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffffffe0; valaddr_reg:x3; val_offset:151062*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151062*0 + 3*434*FLEN/8, x4, x1, x2)

inst_50355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffffff0; valaddr_reg:x3; val_offset:151065*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151065*0 + 3*435*FLEN/8, x4, x1, x2)

inst_50356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffffff8; valaddr_reg:x3; val_offset:151068*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151068*0 + 3*436*FLEN/8, x4, x1, x2)

inst_50357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffffffc; valaddr_reg:x3; val_offset:151071*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151071*0 + 3*437*FLEN/8, x4, x1, x2)

inst_50358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37fffffffffffffe; valaddr_reg:x3; val_offset:151074*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151074*0 + 3*438*FLEN/8, x4, x1, x2)

inst_50359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x37f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x37ffffffffffffff; valaddr_reg:x3; val_offset:151077*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151077*0 + 3*439*FLEN/8, x4, x1, x2)

inst_50360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:151080*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151080*0 + 3*440*FLEN/8, x4, x1, x2)

inst_50361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:151083*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151083*0 + 3*441*FLEN/8, x4, x1, x2)

inst_50362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:151086*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151086*0 + 3*442*FLEN/8, x4, x1, x2)

inst_50363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:151089*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151089*0 + 3*443*FLEN/8, x4, x1, x2)

inst_50364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:151092*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151092*0 + 3*444*FLEN/8, x4, x1, x2)

inst_50365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:151095*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151095*0 + 3*445*FLEN/8, x4, x1, x2)

inst_50366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:151098*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151098*0 + 3*446*FLEN/8, x4, x1, x2)

inst_50367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:151101*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151101*0 + 3*447*FLEN/8, x4, x1, x2)

inst_50368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:151104*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151104*0 + 3*448*FLEN/8, x4, x1, x2)

inst_50369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:151107*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151107*0 + 3*449*FLEN/8, x4, x1, x2)

inst_50370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:151110*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151110*0 + 3*450*FLEN/8, x4, x1, x2)

inst_50371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:151113*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151113*0 + 3*451*FLEN/8, x4, x1, x2)

inst_50372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:151116*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151116*0 + 3*452*FLEN/8, x4, x1, x2)

inst_50373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:151119*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151119*0 + 3*453*FLEN/8, x4, x1, x2)

inst_50374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:151122*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151122*0 + 3*454*FLEN/8, x4, x1, x2)

inst_50375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:151125*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151125*0 + 3*455*FLEN/8, x4, x1, x2)

inst_50376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:151128*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151128*0 + 3*456*FLEN/8, x4, x1, x2)

inst_50377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:151131*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151131*0 + 3*457*FLEN/8, x4, x1, x2)

inst_50378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:151134*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151134*0 + 3*458*FLEN/8, x4, x1, x2)

inst_50379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:151137*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151137*0 + 3*459*FLEN/8, x4, x1, x2)

inst_50380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:151140*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151140*0 + 3*460*FLEN/8, x4, x1, x2)

inst_50381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfc68d53ca4873 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x01ced4465a055 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fc68d53ca4873; op2val:0x20401ced4465a055;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:151143*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151143*0 + 3*461*FLEN/8, x4, x1, x2)

inst_50382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:151146*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151146*0 + 3*462*FLEN/8, x4, x1, x2)

inst_50383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:151149*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151149*0 + 3*463*FLEN/8, x4, x1, x2)

inst_50384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:151152*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151152*0 + 3*464*FLEN/8, x4, x1, x2)

inst_50385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:151155*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151155*0 + 3*465*FLEN/8, x4, x1, x2)

inst_50386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:151158*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151158*0 + 3*466*FLEN/8, x4, x1, x2)

inst_50387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:151161*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151161*0 + 3*467*FLEN/8, x4, x1, x2)

inst_50388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:151164*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151164*0 + 3*468*FLEN/8, x4, x1, x2)

inst_50389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:151167*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151167*0 + 3*469*FLEN/8, x4, x1, x2)

inst_50390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:151170*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151170*0 + 3*470*FLEN/8, x4, x1, x2)

inst_50391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:151173*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151173*0 + 3*471*FLEN/8, x4, x1, x2)

inst_50392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:151176*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151176*0 + 3*472*FLEN/8, x4, x1, x2)

inst_50393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:151179*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151179*0 + 3*473*FLEN/8, x4, x1, x2)

inst_50394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:151182*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151182*0 + 3*474*FLEN/8, x4, x1, x2)

inst_50395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:151185*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151185*0 + 3*475*FLEN/8, x4, x1, x2)

inst_50396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:151188*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151188*0 + 3*476*FLEN/8, x4, x1, x2)

inst_50397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:151191*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151191*0 + 3*477*FLEN/8, x4, x1, x2)

inst_50398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:151194*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151194*0 + 3*478*FLEN/8, x4, x1, x2)

inst_50399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:151197*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151197*0 + 3*479*FLEN/8, x4, x1, x2)

inst_50400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:151200*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151200*0 + 3*480*FLEN/8, x4, x1, x2)

inst_50401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:151203*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151203*0 + 3*481*FLEN/8, x4, x1, x2)

inst_50402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:151206*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151206*0 + 3*482*FLEN/8, x4, x1, x2)

inst_50403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:151209*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151209*0 + 3*483*FLEN/8, x4, x1, x2)

inst_50404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000000000; valaddr_reg:x3; val_offset:151212*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151212*0 + 3*484*FLEN/8, x4, x1, x2)

inst_50405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000000001; valaddr_reg:x3; val_offset:151215*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151215*0 + 3*485*FLEN/8, x4, x1, x2)

inst_50406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000000003; valaddr_reg:x3; val_offset:151218*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151218*0 + 3*486*FLEN/8, x4, x1, x2)

inst_50407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000000007; valaddr_reg:x3; val_offset:151221*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151221*0 + 3*487*FLEN/8, x4, x1, x2)

inst_50408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000000000f; valaddr_reg:x3; val_offset:151224*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151224*0 + 3*488*FLEN/8, x4, x1, x2)

inst_50409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000000001f; valaddr_reg:x3; val_offset:151227*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151227*0 + 3*489*FLEN/8, x4, x1, x2)

inst_50410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000000003f; valaddr_reg:x3; val_offset:151230*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151230*0 + 3*490*FLEN/8, x4, x1, x2)

inst_50411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000000007f; valaddr_reg:x3; val_offset:151233*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151233*0 + 3*491*FLEN/8, x4, x1, x2)

inst_50412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000000000ff; valaddr_reg:x3; val_offset:151236*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151236*0 + 3*492*FLEN/8, x4, x1, x2)

inst_50413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000000001ff; valaddr_reg:x3; val_offset:151239*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151239*0 + 3*493*FLEN/8, x4, x1, x2)

inst_50414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000000003ff; valaddr_reg:x3; val_offset:151242*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151242*0 + 3*494*FLEN/8, x4, x1, x2)

inst_50415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000000007ff; valaddr_reg:x3; val_offset:151245*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151245*0 + 3*495*FLEN/8, x4, x1, x2)

inst_50416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000000fff; valaddr_reg:x3; val_offset:151248*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151248*0 + 3*496*FLEN/8, x4, x1, x2)

inst_50417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000001fff; valaddr_reg:x3; val_offset:151251*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151251*0 + 3*497*FLEN/8, x4, x1, x2)

inst_50418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000003fff; valaddr_reg:x3; val_offset:151254*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151254*0 + 3*498*FLEN/8, x4, x1, x2)

inst_50419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000007fff; valaddr_reg:x3; val_offset:151257*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151257*0 + 3*499*FLEN/8, x4, x1, x2)

inst_50420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000000ffff; valaddr_reg:x3; val_offset:151260*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151260*0 + 3*500*FLEN/8, x4, x1, x2)

inst_50421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000001ffff; valaddr_reg:x3; val_offset:151263*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151263*0 + 3*501*FLEN/8, x4, x1, x2)

inst_50422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000003ffff; valaddr_reg:x3; val_offset:151266*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151266*0 + 3*502*FLEN/8, x4, x1, x2)

inst_50423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000007ffff; valaddr_reg:x3; val_offset:151269*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151269*0 + 3*503*FLEN/8, x4, x1, x2)

inst_50424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000000fffff; valaddr_reg:x3; val_offset:151272*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151272*0 + 3*504*FLEN/8, x4, x1, x2)

inst_50425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000001fffff; valaddr_reg:x3; val_offset:151275*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151275*0 + 3*505*FLEN/8, x4, x1, x2)

inst_50426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000003fffff; valaddr_reg:x3; val_offset:151278*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151278*0 + 3*506*FLEN/8, x4, x1, x2)

inst_50427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000007fffff; valaddr_reg:x3; val_offset:151281*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151281*0 + 3*507*FLEN/8, x4, x1, x2)

inst_50428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000000ffffff; valaddr_reg:x3; val_offset:151284*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151284*0 + 3*508*FLEN/8, x4, x1, x2)

inst_50429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000001ffffff; valaddr_reg:x3; val_offset:151287*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151287*0 + 3*509*FLEN/8, x4, x1, x2)

inst_50430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000003ffffff; valaddr_reg:x3; val_offset:151290*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151290*0 + 3*510*FLEN/8, x4, x1, x2)

inst_50431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000007ffffff; valaddr_reg:x3; val_offset:151293*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151293*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_50432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000000fffffff; valaddr_reg:x3; val_offset:151296*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151296*0 + 3*512*FLEN/8, x4, x1, x2)

inst_50433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000001fffffff; valaddr_reg:x3; val_offset:151299*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151299*0 + 3*513*FLEN/8, x4, x1, x2)

inst_50434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000003fffffff; valaddr_reg:x3; val_offset:151302*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151302*0 + 3*514*FLEN/8, x4, x1, x2)

inst_50435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000007fffffff; valaddr_reg:x3; val_offset:151305*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151305*0 + 3*515*FLEN/8, x4, x1, x2)

inst_50436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200000ffffffff; valaddr_reg:x3; val_offset:151308*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151308*0 + 3*516*FLEN/8, x4, x1, x2)

inst_50437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200001ffffffff; valaddr_reg:x3; val_offset:151311*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151311*0 + 3*517*FLEN/8, x4, x1, x2)

inst_50438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200003ffffffff; valaddr_reg:x3; val_offset:151314*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151314*0 + 3*518*FLEN/8, x4, x1, x2)

inst_50439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200007ffffffff; valaddr_reg:x3; val_offset:151317*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151317*0 + 3*519*FLEN/8, x4, x1, x2)

inst_50440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320000fffffffff; valaddr_reg:x3; val_offset:151320*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151320*0 + 3*520*FLEN/8, x4, x1, x2)

inst_50441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320001fffffffff; valaddr_reg:x3; val_offset:151323*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151323*0 + 3*521*FLEN/8, x4, x1, x2)

inst_50442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320003fffffffff; valaddr_reg:x3; val_offset:151326*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151326*0 + 3*522*FLEN/8, x4, x1, x2)

inst_50443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320007fffffffff; valaddr_reg:x3; val_offset:151329*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151329*0 + 3*523*FLEN/8, x4, x1, x2)

inst_50444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32000ffffffffff; valaddr_reg:x3; val_offset:151332*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151332*0 + 3*524*FLEN/8, x4, x1, x2)

inst_50445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32001ffffffffff; valaddr_reg:x3; val_offset:151335*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151335*0 + 3*525*FLEN/8, x4, x1, x2)

inst_50446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32003ffffffffff; valaddr_reg:x3; val_offset:151338*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151338*0 + 3*526*FLEN/8, x4, x1, x2)

inst_50447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32007ffffffffff; valaddr_reg:x3; val_offset:151341*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151341*0 + 3*527*FLEN/8, x4, x1, x2)

inst_50448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3200fffffffffff; valaddr_reg:x3; val_offset:151344*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151344*0 + 3*528*FLEN/8, x4, x1, x2)

inst_50449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3201fffffffffff; valaddr_reg:x3; val_offset:151347*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151347*0 + 3*529*FLEN/8, x4, x1, x2)

inst_50450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3203fffffffffff; valaddr_reg:x3; val_offset:151350*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151350*0 + 3*530*FLEN/8, x4, x1, x2)

inst_50451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x3207fffffffffff; valaddr_reg:x3; val_offset:151353*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151353*0 + 3*531*FLEN/8, x4, x1, x2)

inst_50452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x320ffffffffffff; valaddr_reg:x3; val_offset:151356*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151356*0 + 3*532*FLEN/8, x4, x1, x2)

inst_50453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x321ffffffffffff; valaddr_reg:x3; val_offset:151359*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151359*0 + 3*533*FLEN/8, x4, x1, x2)

inst_50454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x323ffffffffffff; valaddr_reg:x3; val_offset:151362*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151362*0 + 3*534*FLEN/8, x4, x1, x2)

inst_50455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x327ffffffffffff; valaddr_reg:x3; val_offset:151365*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151365*0 + 3*535*FLEN/8, x4, x1, x2)

inst_50456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x328000000000000; valaddr_reg:x3; val_offset:151368*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151368*0 + 3*536*FLEN/8, x4, x1, x2)

inst_50457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32c000000000000; valaddr_reg:x3; val_offset:151371*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151371*0 + 3*537*FLEN/8, x4, x1, x2)

inst_50458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32e000000000000; valaddr_reg:x3; val_offset:151374*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151374*0 + 3*538*FLEN/8, x4, x1, x2)

inst_50459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32f000000000000; valaddr_reg:x3; val_offset:151377*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151377*0 + 3*539*FLEN/8, x4, x1, x2)

inst_50460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32f800000000000; valaddr_reg:x3; val_offset:151380*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151380*0 + 3*540*FLEN/8, x4, x1, x2)

inst_50461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fc00000000000; valaddr_reg:x3; val_offset:151383*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151383*0 + 3*541*FLEN/8, x4, x1, x2)

inst_50462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fe00000000000; valaddr_reg:x3; val_offset:151386*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151386*0 + 3*542*FLEN/8, x4, x1, x2)

inst_50463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ff00000000000; valaddr_reg:x3; val_offset:151389*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151389*0 + 3*543*FLEN/8, x4, x1, x2)

inst_50464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ff80000000000; valaddr_reg:x3; val_offset:151392*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151392*0 + 3*544*FLEN/8, x4, x1, x2)

inst_50465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffc0000000000; valaddr_reg:x3; val_offset:151395*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151395*0 + 3*545*FLEN/8, x4, x1, x2)

inst_50466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffe0000000000; valaddr_reg:x3; val_offset:151398*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151398*0 + 3*546*FLEN/8, x4, x1, x2)

inst_50467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fff0000000000; valaddr_reg:x3; val_offset:151401*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151401*0 + 3*547*FLEN/8, x4, x1, x2)

inst_50468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fff8000000000; valaddr_reg:x3; val_offset:151404*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151404*0 + 3*548*FLEN/8, x4, x1, x2)

inst_50469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffc000000000; valaddr_reg:x3; val_offset:151407*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151407*0 + 3*549*FLEN/8, x4, x1, x2)

inst_50470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffe000000000; valaddr_reg:x3; val_offset:151410*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151410*0 + 3*550*FLEN/8, x4, x1, x2)

inst_50471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffff000000000; valaddr_reg:x3; val_offset:151413*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151413*0 + 3*551*FLEN/8, x4, x1, x2)

inst_50472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffff800000000; valaddr_reg:x3; val_offset:151416*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151416*0 + 3*552*FLEN/8, x4, x1, x2)

inst_50473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffc00000000; valaddr_reg:x3; val_offset:151419*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151419*0 + 3*553*FLEN/8, x4, x1, x2)

inst_50474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffe00000000; valaddr_reg:x3; val_offset:151422*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151422*0 + 3*554*FLEN/8, x4, x1, x2)

inst_50475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffff00000000; valaddr_reg:x3; val_offset:151425*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151425*0 + 3*555*FLEN/8, x4, x1, x2)

inst_50476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffff80000000; valaddr_reg:x3; val_offset:151428*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151428*0 + 3*556*FLEN/8, x4, x1, x2)

inst_50477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffc0000000; valaddr_reg:x3; val_offset:151431*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151431*0 + 3*557*FLEN/8, x4, x1, x2)

inst_50478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffe0000000; valaddr_reg:x3; val_offset:151434*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151434*0 + 3*558*FLEN/8, x4, x1, x2)

inst_50479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffff0000000; valaddr_reg:x3; val_offset:151437*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151437*0 + 3*559*FLEN/8, x4, x1, x2)

inst_50480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffff8000000; valaddr_reg:x3; val_offset:151440*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151440*0 + 3*560*FLEN/8, x4, x1, x2)

inst_50481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffc000000; valaddr_reg:x3; val_offset:151443*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151443*0 + 3*561*FLEN/8, x4, x1, x2)

inst_50482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffe000000; valaddr_reg:x3; val_offset:151446*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151446*0 + 3*562*FLEN/8, x4, x1, x2)

inst_50483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffff000000; valaddr_reg:x3; val_offset:151449*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151449*0 + 3*563*FLEN/8, x4, x1, x2)

inst_50484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffff800000; valaddr_reg:x3; val_offset:151452*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151452*0 + 3*564*FLEN/8, x4, x1, x2)

inst_50485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffc00000; valaddr_reg:x3; val_offset:151455*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151455*0 + 3*565*FLEN/8, x4, x1, x2)

inst_50486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffe00000; valaddr_reg:x3; val_offset:151458*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151458*0 + 3*566*FLEN/8, x4, x1, x2)

inst_50487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffff00000; valaddr_reg:x3; val_offset:151461*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151461*0 + 3*567*FLEN/8, x4, x1, x2)

inst_50488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffff80000; valaddr_reg:x3; val_offset:151464*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151464*0 + 3*568*FLEN/8, x4, x1, x2)

inst_50489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffc0000; valaddr_reg:x3; val_offset:151467*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151467*0 + 3*569*FLEN/8, x4, x1, x2)

inst_50490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffe0000; valaddr_reg:x3; val_offset:151470*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151470*0 + 3*570*FLEN/8, x4, x1, x2)

inst_50491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffff0000; valaddr_reg:x3; val_offset:151473*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151473*0 + 3*571*FLEN/8, x4, x1, x2)

inst_50492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffff8000; valaddr_reg:x3; val_offset:151476*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151476*0 + 3*572*FLEN/8, x4, x1, x2)

inst_50493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffffc000; valaddr_reg:x3; val_offset:151479*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151479*0 + 3*573*FLEN/8, x4, x1, x2)

inst_50494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffffe000; valaddr_reg:x3; val_offset:151482*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151482*0 + 3*574*FLEN/8, x4, x1, x2)

inst_50495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffff000; valaddr_reg:x3; val_offset:151485*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151485*0 + 3*575*FLEN/8, x4, x1, x2)

inst_50496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffff800; valaddr_reg:x3; val_offset:151488*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151488*0 + 3*576*FLEN/8, x4, x1, x2)

inst_50497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffffc00; valaddr_reg:x3; val_offset:151491*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151491*0 + 3*577*FLEN/8, x4, x1, x2)

inst_50498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffffe00; valaddr_reg:x3; val_offset:151494*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151494*0 + 3*578*FLEN/8, x4, x1, x2)

inst_50499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffffff00; valaddr_reg:x3; val_offset:151497*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151497*0 + 3*579*FLEN/8, x4, x1, x2)

inst_50500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffffff80; valaddr_reg:x3; val_offset:151500*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151500*0 + 3*580*FLEN/8, x4, x1, x2)

inst_50501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffffffc0; valaddr_reg:x3; val_offset:151503*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151503*0 + 3*581*FLEN/8, x4, x1, x2)

inst_50502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffffffe0; valaddr_reg:x3; val_offset:151506*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151506*0 + 3*582*FLEN/8, x4, x1, x2)

inst_50503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffffff0; valaddr_reg:x3; val_offset:151509*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151509*0 + 3*583*FLEN/8, x4, x1, x2)

inst_50504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffffff8; valaddr_reg:x3; val_offset:151512*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151512*0 + 3*584*FLEN/8, x4, x1, x2)

inst_50505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffffffc; valaddr_reg:x3; val_offset:151515*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151515*0 + 3*585*FLEN/8, x4, x1, x2)

inst_50506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32ffffffffffffe; valaddr_reg:x3; val_offset:151518*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151518*0 + 3*586*FLEN/8, x4, x1, x2)

inst_50507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xff58c46c50325 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ff58c46c50325; op2val:0x0;
op3val:0x32fffffffffffff; valaddr_reg:x3; val_offset:151521*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151521*0 + 3*587*FLEN/8, x4, x1, x2)

inst_50508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:151524*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151524*0 + 3*588*FLEN/8, x4, x1, x2)

inst_50509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:151527*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151527*0 + 3*589*FLEN/8, x4, x1, x2)

inst_50510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:151530*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151530*0 + 3*590*FLEN/8, x4, x1, x2)

inst_50511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:151533*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151533*0 + 3*591*FLEN/8, x4, x1, x2)

inst_50512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:151536*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151536*0 + 3*592*FLEN/8, x4, x1, x2)

inst_50513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:151539*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151539*0 + 3*593*FLEN/8, x4, x1, x2)

inst_50514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:151542*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151542*0 + 3*594*FLEN/8, x4, x1, x2)

inst_50515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:151545*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151545*0 + 3*595*FLEN/8, x4, x1, x2)

inst_50516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:151548*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151548*0 + 3*596*FLEN/8, x4, x1, x2)

inst_50517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:151551*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151551*0 + 3*597*FLEN/8, x4, x1, x2)

inst_50518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:151554*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151554*0 + 3*598*FLEN/8, x4, x1, x2)

inst_50519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:151557*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151557*0 + 3*599*FLEN/8, x4, x1, x2)

inst_50520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:151560*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151560*0 + 3*600*FLEN/8, x4, x1, x2)

inst_50521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:151563*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151563*0 + 3*601*FLEN/8, x4, x1, x2)

inst_50522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:151566*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151566*0 + 3*602*FLEN/8, x4, x1, x2)

inst_50523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:151569*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151569*0 + 3*603*FLEN/8, x4, x1, x2)

inst_50524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:151572*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151572*0 + 3*604*FLEN/8, x4, x1, x2)

inst_50525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:151575*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151575*0 + 3*605*FLEN/8, x4, x1, x2)

inst_50526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:151578*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151578*0 + 3*606*FLEN/8, x4, x1, x2)

inst_50527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:151581*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151581*0 + 3*607*FLEN/8, x4, x1, x2)

inst_50528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:151584*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151584*0 + 3*608*FLEN/8, x4, x1, x2)

inst_50529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:151587*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151587*0 + 3*609*FLEN/8, x4, x1, x2)

inst_50530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000000000; valaddr_reg:x3; val_offset:151590*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151590*0 + 3*610*FLEN/8, x4, x1, x2)

inst_50531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000000001; valaddr_reg:x3; val_offset:151593*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151593*0 + 3*611*FLEN/8, x4, x1, x2)

inst_50532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000000003; valaddr_reg:x3; val_offset:151596*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151596*0 + 3*612*FLEN/8, x4, x1, x2)

inst_50533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000000007; valaddr_reg:x3; val_offset:151599*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151599*0 + 3*613*FLEN/8, x4, x1, x2)

inst_50534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000000000f; valaddr_reg:x3; val_offset:151602*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151602*0 + 3*614*FLEN/8, x4, x1, x2)

inst_50535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000000001f; valaddr_reg:x3; val_offset:151605*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151605*0 + 3*615*FLEN/8, x4, x1, x2)

inst_50536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000000003f; valaddr_reg:x3; val_offset:151608*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151608*0 + 3*616*FLEN/8, x4, x1, x2)

inst_50537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000000007f; valaddr_reg:x3; val_offset:151611*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151611*0 + 3*617*FLEN/8, x4, x1, x2)

inst_50538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000000000ff; valaddr_reg:x3; val_offset:151614*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151614*0 + 3*618*FLEN/8, x4, x1, x2)

inst_50539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000000001ff; valaddr_reg:x3; val_offset:151617*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151617*0 + 3*619*FLEN/8, x4, x1, x2)

inst_50540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000000003ff; valaddr_reg:x3; val_offset:151620*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151620*0 + 3*620*FLEN/8, x4, x1, x2)

inst_50541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000000007ff; valaddr_reg:x3; val_offset:151623*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151623*0 + 3*621*FLEN/8, x4, x1, x2)

inst_50542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000000fff; valaddr_reg:x3; val_offset:151626*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151626*0 + 3*622*FLEN/8, x4, x1, x2)

inst_50543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000001fff; valaddr_reg:x3; val_offset:151629*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151629*0 + 3*623*FLEN/8, x4, x1, x2)

inst_50544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000003fff; valaddr_reg:x3; val_offset:151632*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151632*0 + 3*624*FLEN/8, x4, x1, x2)

inst_50545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000007fff; valaddr_reg:x3; val_offset:151635*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151635*0 + 3*625*FLEN/8, x4, x1, x2)

inst_50546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000000ffff; valaddr_reg:x3; val_offset:151638*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151638*0 + 3*626*FLEN/8, x4, x1, x2)

inst_50547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000001ffff; valaddr_reg:x3; val_offset:151641*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151641*0 + 3*627*FLEN/8, x4, x1, x2)

inst_50548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000003ffff; valaddr_reg:x3; val_offset:151644*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151644*0 + 3*628*FLEN/8, x4, x1, x2)

inst_50549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000007ffff; valaddr_reg:x3; val_offset:151647*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151647*0 + 3*629*FLEN/8, x4, x1, x2)

inst_50550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000000fffff; valaddr_reg:x3; val_offset:151650*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151650*0 + 3*630*FLEN/8, x4, x1, x2)

inst_50551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000001fffff; valaddr_reg:x3; val_offset:151653*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151653*0 + 3*631*FLEN/8, x4, x1, x2)

inst_50552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000003fffff; valaddr_reg:x3; val_offset:151656*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151656*0 + 3*632*FLEN/8, x4, x1, x2)

inst_50553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000007fffff; valaddr_reg:x3; val_offset:151659*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151659*0 + 3*633*FLEN/8, x4, x1, x2)

inst_50554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000000ffffff; valaddr_reg:x3; val_offset:151662*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151662*0 + 3*634*FLEN/8, x4, x1, x2)

inst_50555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000001ffffff; valaddr_reg:x3; val_offset:151665*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151665*0 + 3*635*FLEN/8, x4, x1, x2)

inst_50556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000003ffffff; valaddr_reg:x3; val_offset:151668*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151668*0 + 3*636*FLEN/8, x4, x1, x2)

inst_50557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000007ffffff; valaddr_reg:x3; val_offset:151671*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151671*0 + 3*637*FLEN/8, x4, x1, x2)

inst_50558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000000fffffff; valaddr_reg:x3; val_offset:151674*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151674*0 + 3*638*FLEN/8, x4, x1, x2)

inst_50559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000001fffffff; valaddr_reg:x3; val_offset:151677*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151677*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_50560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000003fffffff; valaddr_reg:x3; val_offset:151680*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151680*0 + 3*640*FLEN/8, x4, x1, x2)

inst_50561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000007fffffff; valaddr_reg:x3; val_offset:151683*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151683*0 + 3*641*FLEN/8, x4, x1, x2)

inst_50562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00000ffffffff; valaddr_reg:x3; val_offset:151686*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151686*0 + 3*642*FLEN/8, x4, x1, x2)

inst_50563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00001ffffffff; valaddr_reg:x3; val_offset:151689*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151689*0 + 3*643*FLEN/8, x4, x1, x2)

inst_50564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00003ffffffff; valaddr_reg:x3; val_offset:151692*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151692*0 + 3*644*FLEN/8, x4, x1, x2)

inst_50565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00007ffffffff; valaddr_reg:x3; val_offset:151695*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151695*0 + 3*645*FLEN/8, x4, x1, x2)

inst_50566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0000fffffffff; valaddr_reg:x3; val_offset:151698*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151698*0 + 3*646*FLEN/8, x4, x1, x2)

inst_50567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0001fffffffff; valaddr_reg:x3; val_offset:151701*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151701*0 + 3*647*FLEN/8, x4, x1, x2)

inst_50568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0003fffffffff; valaddr_reg:x3; val_offset:151704*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151704*0 + 3*648*FLEN/8, x4, x1, x2)

inst_50569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0007fffffffff; valaddr_reg:x3; val_offset:151707*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151707*0 + 3*649*FLEN/8, x4, x1, x2)

inst_50570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc000ffffffffff; valaddr_reg:x3; val_offset:151710*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151710*0 + 3*650*FLEN/8, x4, x1, x2)

inst_50571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc001ffffffffff; valaddr_reg:x3; val_offset:151713*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151713*0 + 3*651*FLEN/8, x4, x1, x2)

inst_50572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc003ffffffffff; valaddr_reg:x3; val_offset:151716*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151716*0 + 3*652*FLEN/8, x4, x1, x2)

inst_50573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc007ffffffffff; valaddr_reg:x3; val_offset:151719*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151719*0 + 3*653*FLEN/8, x4, x1, x2)

inst_50574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc00fffffffffff; valaddr_reg:x3; val_offset:151722*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151722*0 + 3*654*FLEN/8, x4, x1, x2)

inst_50575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc01fffffffffff; valaddr_reg:x3; val_offset:151725*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151725*0 + 3*655*FLEN/8, x4, x1, x2)

inst_50576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc03fffffffffff; valaddr_reg:x3; val_offset:151728*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151728*0 + 3*656*FLEN/8, x4, x1, x2)

inst_50577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc07fffffffffff; valaddr_reg:x3; val_offset:151731*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151731*0 + 3*657*FLEN/8, x4, x1, x2)

inst_50578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc0ffffffffffff; valaddr_reg:x3; val_offset:151734*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151734*0 + 3*658*FLEN/8, x4, x1, x2)

inst_50579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc1ffffffffffff; valaddr_reg:x3; val_offset:151737*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151737*0 + 3*659*FLEN/8, x4, x1, x2)

inst_50580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc3ffffffffffff; valaddr_reg:x3; val_offset:151740*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151740*0 + 3*660*FLEN/8, x4, x1, x2)

inst_50581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc7ffffffffffff; valaddr_reg:x3; val_offset:151743*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151743*0 + 3*661*FLEN/8, x4, x1, x2)

inst_50582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xc8000000000000; valaddr_reg:x3; val_offset:151746*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151746*0 + 3*662*FLEN/8, x4, x1, x2)

inst_50583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcc000000000000; valaddr_reg:x3; val_offset:151749*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151749*0 + 3*663*FLEN/8, x4, x1, x2)

inst_50584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xce000000000000; valaddr_reg:x3; val_offset:151752*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151752*0 + 3*664*FLEN/8, x4, x1, x2)

inst_50585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcf000000000000; valaddr_reg:x3; val_offset:151755*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151755*0 + 3*665*FLEN/8, x4, x1, x2)

inst_50586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcf800000000000; valaddr_reg:x3; val_offset:151758*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151758*0 + 3*666*FLEN/8, x4, x1, x2)

inst_50587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfc00000000000; valaddr_reg:x3; val_offset:151761*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151761*0 + 3*667*FLEN/8, x4, x1, x2)

inst_50588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfe00000000000; valaddr_reg:x3; val_offset:151764*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151764*0 + 3*668*FLEN/8, x4, x1, x2)

inst_50589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcff00000000000; valaddr_reg:x3; val_offset:151767*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151767*0 + 3*669*FLEN/8, x4, x1, x2)

inst_50590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcff80000000000; valaddr_reg:x3; val_offset:151770*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151770*0 + 3*670*FLEN/8, x4, x1, x2)

inst_50591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffc0000000000; valaddr_reg:x3; val_offset:151773*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151773*0 + 3*671*FLEN/8, x4, x1, x2)

inst_50592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffe0000000000; valaddr_reg:x3; val_offset:151776*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151776*0 + 3*672*FLEN/8, x4, x1, x2)

inst_50593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfff0000000000; valaddr_reg:x3; val_offset:151779*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151779*0 + 3*673*FLEN/8, x4, x1, x2)

inst_50594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfff8000000000; valaddr_reg:x3; val_offset:151782*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151782*0 + 3*674*FLEN/8, x4, x1, x2)

inst_50595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffc000000000; valaddr_reg:x3; val_offset:151785*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151785*0 + 3*675*FLEN/8, x4, x1, x2)

inst_50596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffe000000000; valaddr_reg:x3; val_offset:151788*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151788*0 + 3*676*FLEN/8, x4, x1, x2)

inst_50597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffff000000000; valaddr_reg:x3; val_offset:151791*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151791*0 + 3*677*FLEN/8, x4, x1, x2)

inst_50598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffff800000000; valaddr_reg:x3; val_offset:151794*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151794*0 + 3*678*FLEN/8, x4, x1, x2)

inst_50599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffc00000000; valaddr_reg:x3; val_offset:151797*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151797*0 + 3*679*FLEN/8, x4, x1, x2)

inst_50600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffe00000000; valaddr_reg:x3; val_offset:151800*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151800*0 + 3*680*FLEN/8, x4, x1, x2)

inst_50601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffff00000000; valaddr_reg:x3; val_offset:151803*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151803*0 + 3*681*FLEN/8, x4, x1, x2)

inst_50602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffff80000000; valaddr_reg:x3; val_offset:151806*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151806*0 + 3*682*FLEN/8, x4, x1, x2)

inst_50603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffc0000000; valaddr_reg:x3; val_offset:151809*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151809*0 + 3*683*FLEN/8, x4, x1, x2)

inst_50604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffe0000000; valaddr_reg:x3; val_offset:151812*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151812*0 + 3*684*FLEN/8, x4, x1, x2)

inst_50605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffff0000000; valaddr_reg:x3; val_offset:151815*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151815*0 + 3*685*FLEN/8, x4, x1, x2)

inst_50606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffff8000000; valaddr_reg:x3; val_offset:151818*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151818*0 + 3*686*FLEN/8, x4, x1, x2)

inst_50607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffc000000; valaddr_reg:x3; val_offset:151821*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151821*0 + 3*687*FLEN/8, x4, x1, x2)

inst_50608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffe000000; valaddr_reg:x3; val_offset:151824*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151824*0 + 3*688*FLEN/8, x4, x1, x2)

inst_50609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffff000000; valaddr_reg:x3; val_offset:151827*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151827*0 + 3*689*FLEN/8, x4, x1, x2)

inst_50610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffff800000; valaddr_reg:x3; val_offset:151830*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151830*0 + 3*690*FLEN/8, x4, x1, x2)

inst_50611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffc00000; valaddr_reg:x3; val_offset:151833*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151833*0 + 3*691*FLEN/8, x4, x1, x2)

inst_50612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffe00000; valaddr_reg:x3; val_offset:151836*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151836*0 + 3*692*FLEN/8, x4, x1, x2)

inst_50613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffff00000; valaddr_reg:x3; val_offset:151839*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151839*0 + 3*693*FLEN/8, x4, x1, x2)

inst_50614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffff80000; valaddr_reg:x3; val_offset:151842*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151842*0 + 3*694*FLEN/8, x4, x1, x2)

inst_50615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffc0000; valaddr_reg:x3; val_offset:151845*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151845*0 + 3*695*FLEN/8, x4, x1, x2)

inst_50616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffe0000; valaddr_reg:x3; val_offset:151848*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151848*0 + 3*696*FLEN/8, x4, x1, x2)

inst_50617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffff0000; valaddr_reg:x3; val_offset:151851*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151851*0 + 3*697*FLEN/8, x4, x1, x2)

inst_50618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffff8000; valaddr_reg:x3; val_offset:151854*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151854*0 + 3*698*FLEN/8, x4, x1, x2)

inst_50619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffffc000; valaddr_reg:x3; val_offset:151857*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151857*0 + 3*699*FLEN/8, x4, x1, x2)

inst_50620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffffe000; valaddr_reg:x3; val_offset:151860*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151860*0 + 3*700*FLEN/8, x4, x1, x2)

inst_50621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffff000; valaddr_reg:x3; val_offset:151863*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151863*0 + 3*701*FLEN/8, x4, x1, x2)

inst_50622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffff800; valaddr_reg:x3; val_offset:151866*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151866*0 + 3*702*FLEN/8, x4, x1, x2)

inst_50623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffffc00; valaddr_reg:x3; val_offset:151869*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151869*0 + 3*703*FLEN/8, x4, x1, x2)

inst_50624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffffe00; valaddr_reg:x3; val_offset:151872*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151872*0 + 3*704*FLEN/8, x4, x1, x2)

inst_50625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffffff00; valaddr_reg:x3; val_offset:151875*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151875*0 + 3*705*FLEN/8, x4, x1, x2)

inst_50626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffffff80; valaddr_reg:x3; val_offset:151878*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151878*0 + 3*706*FLEN/8, x4, x1, x2)

inst_50627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffffffc0; valaddr_reg:x3; val_offset:151881*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151881*0 + 3*707*FLEN/8, x4, x1, x2)

inst_50628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffffffe0; valaddr_reg:x3; val_offset:151884*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151884*0 + 3*708*FLEN/8, x4, x1, x2)

inst_50629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffffff0; valaddr_reg:x3; val_offset:151887*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151887*0 + 3*709*FLEN/8, x4, x1, x2)

inst_50630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffffff8; valaddr_reg:x3; val_offset:151890*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151890*0 + 3*710*FLEN/8, x4, x1, x2)

inst_50631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffffffc; valaddr_reg:x3; val_offset:151893*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151893*0 + 3*711*FLEN/8, x4, x1, x2)

inst_50632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcffffffffffffe; valaddr_reg:x3; val_offset:151896*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151896*0 + 3*712*FLEN/8, x4, x1, x2)

inst_50633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xffa768d19a06b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9ffa768d19a06b; op2val:0x0;
op3val:0xcfffffffffffff; valaddr_reg:x3; val_offset:151899*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151899*0 + 3*713*FLEN/8, x4, x1, x2)

inst_50634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:151902*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151902*0 + 3*714*FLEN/8, x4, x1, x2)

inst_50635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:151905*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151905*0 + 3*715*FLEN/8, x4, x1, x2)

inst_50636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:151908*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151908*0 + 3*716*FLEN/8, x4, x1, x2)

inst_50637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:151911*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151911*0 + 3*717*FLEN/8, x4, x1, x2)

inst_50638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:151914*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151914*0 + 3*718*FLEN/8, x4, x1, x2)

inst_50639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:151917*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151917*0 + 3*719*FLEN/8, x4, x1, x2)

inst_50640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:151920*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151920*0 + 3*720*FLEN/8, x4, x1, x2)

inst_50641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:151923*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151923*0 + 3*721*FLEN/8, x4, x1, x2)

inst_50642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:151926*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151926*0 + 3*722*FLEN/8, x4, x1, x2)

inst_50643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:151929*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151929*0 + 3*723*FLEN/8, x4, x1, x2)

inst_50644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:151932*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151932*0 + 3*724*FLEN/8, x4, x1, x2)

inst_50645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:151935*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151935*0 + 3*725*FLEN/8, x4, x1, x2)

inst_50646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:151938*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151938*0 + 3*726*FLEN/8, x4, x1, x2)

inst_50647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:151941*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151941*0 + 3*727*FLEN/8, x4, x1, x2)

inst_50648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:151944*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151944*0 + 3*728*FLEN/8, x4, x1, x2)

inst_50649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:151947*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151947*0 + 3*729*FLEN/8, x4, x1, x2)

inst_50650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:151950*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151950*0 + 3*730*FLEN/8, x4, x1, x2)

inst_50651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:151953*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151953*0 + 3*731*FLEN/8, x4, x1, x2)

inst_50652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:151956*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151956*0 + 3*732*FLEN/8, x4, x1, x2)

inst_50653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:151959*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151959*0 + 3*733*FLEN/8, x4, x1, x2)

inst_50654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:151962*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151962*0 + 3*734*FLEN/8, x4, x1, x2)

inst_50655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:151965*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151965*0 + 3*735*FLEN/8, x4, x1, x2)

inst_50656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000000000; valaddr_reg:x3; val_offset:151968*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151968*0 + 3*736*FLEN/8, x4, x1, x2)

inst_50657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000000001; valaddr_reg:x3; val_offset:151971*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151971*0 + 3*737*FLEN/8, x4, x1, x2)

inst_50658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000000003; valaddr_reg:x3; val_offset:151974*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151974*0 + 3*738*FLEN/8, x4, x1, x2)

inst_50659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000000007; valaddr_reg:x3; val_offset:151977*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151977*0 + 3*739*FLEN/8, x4, x1, x2)

inst_50660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000000000f; valaddr_reg:x3; val_offset:151980*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151980*0 + 3*740*FLEN/8, x4, x1, x2)

inst_50661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000000001f; valaddr_reg:x3; val_offset:151983*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151983*0 + 3*741*FLEN/8, x4, x1, x2)

inst_50662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000000003f; valaddr_reg:x3; val_offset:151986*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151986*0 + 3*742*FLEN/8, x4, x1, x2)

inst_50663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000000007f; valaddr_reg:x3; val_offset:151989*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151989*0 + 3*743*FLEN/8, x4, x1, x2)

inst_50664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000000000ff; valaddr_reg:x3; val_offset:151992*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151992*0 + 3*744*FLEN/8, x4, x1, x2)

inst_50665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000000001ff; valaddr_reg:x3; val_offset:151995*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151995*0 + 3*745*FLEN/8, x4, x1, x2)

inst_50666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000000003ff; valaddr_reg:x3; val_offset:151998*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 151998*0 + 3*746*FLEN/8, x4, x1, x2)

inst_50667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000000007ff; valaddr_reg:x3; val_offset:152001*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152001*0 + 3*747*FLEN/8, x4, x1, x2)

inst_50668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000000fff; valaddr_reg:x3; val_offset:152004*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152004*0 + 3*748*FLEN/8, x4, x1, x2)

inst_50669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000001fff; valaddr_reg:x3; val_offset:152007*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152007*0 + 3*749*FLEN/8, x4, x1, x2)

inst_50670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000003fff; valaddr_reg:x3; val_offset:152010*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152010*0 + 3*750*FLEN/8, x4, x1, x2)

inst_50671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000007fff; valaddr_reg:x3; val_offset:152013*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152013*0 + 3*751*FLEN/8, x4, x1, x2)

inst_50672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000000ffff; valaddr_reg:x3; val_offset:152016*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152016*0 + 3*752*FLEN/8, x4, x1, x2)

inst_50673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000001ffff; valaddr_reg:x3; val_offset:152019*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152019*0 + 3*753*FLEN/8, x4, x1, x2)

inst_50674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000003ffff; valaddr_reg:x3; val_offset:152022*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152022*0 + 3*754*FLEN/8, x4, x1, x2)

inst_50675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000007ffff; valaddr_reg:x3; val_offset:152025*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152025*0 + 3*755*FLEN/8, x4, x1, x2)

inst_50676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000000fffff; valaddr_reg:x3; val_offset:152028*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152028*0 + 3*756*FLEN/8, x4, x1, x2)

inst_50677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000001fffff; valaddr_reg:x3; val_offset:152031*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152031*0 + 3*757*FLEN/8, x4, x1, x2)

inst_50678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000003fffff; valaddr_reg:x3; val_offset:152034*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152034*0 + 3*758*FLEN/8, x4, x1, x2)

inst_50679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x81600000007fffff; valaddr_reg:x3; val_offset:152037*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152037*0 + 3*759*FLEN/8, x4, x1, x2)

inst_50680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000000ffffff; valaddr_reg:x3; val_offset:152040*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152040*0 + 3*760*FLEN/8, x4, x1, x2)

inst_50681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000001ffffff; valaddr_reg:x3; val_offset:152043*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152043*0 + 3*761*FLEN/8, x4, x1, x2)

inst_50682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000003ffffff; valaddr_reg:x3; val_offset:152046*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152046*0 + 3*762*FLEN/8, x4, x1, x2)

inst_50683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x8160000007ffffff; valaddr_reg:x3; val_offset:152049*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152049*0 + 3*763*FLEN/8, x4, x1, x2)

inst_50684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000000fffffff; valaddr_reg:x3; val_offset:152052*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152052*0 + 3*764*FLEN/8, x4, x1, x2)

inst_50685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000001fffffff; valaddr_reg:x3; val_offset:152055*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152055*0 + 3*765*FLEN/8, x4, x1, x2)

inst_50686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000003fffffff; valaddr_reg:x3; val_offset:152058*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152058*0 + 3*766*FLEN/8, x4, x1, x2)

inst_50687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0030b097eb25b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0030b097eb25b; op2val:0x8000;
op3val:0x816000007fffffff; valaddr_reg:x3; val_offset:152061*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 152061*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822695903231,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822696951807,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822699048959,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822703243263,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822711631871,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822728409087,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822761963519,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822829072383,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822963290111,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823231725567,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508823768596479,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508824842338303,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508826989821951,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508831284789247,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508839874723839,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508857054593023,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508891414331391,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508960133808127,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509097572761599,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509372450668543,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394509922206482431,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394511021718110207,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394513220741365759,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394517618787876863,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394526414880899071,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394544007066943487,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394579191439032319,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394649560183209983,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394790297671565311,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395071772648275967,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9395634722601697279,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539903,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9396760622508539904,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9397886522415382528,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398449472368803840,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398730947345514496,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398871684833869824,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398942053578047488,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398977237950136320,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9398994830136180736,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399003626229202944,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399008024275714048,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399010223298969600,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011322810597376,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399011872566411264,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012147444318208,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012284883271680,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012353602748416,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012387962486784,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012405142355968,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012413732290560,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012418027257856,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012420174741504,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421248483328,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012421785354240,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422053789696,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422188007424,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422255116288,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422288670720,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422305447936,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422313836544,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422318030848,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422320128000,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321176576,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321700864,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422321963008,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322094080,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322159616,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322192384,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322208768,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322216960,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322221056,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322223104,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224128,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224640,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322224896,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225024,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225088,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225120,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225136,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225144,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225148,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225150,64,FLEN)
NAN_BOXED(6890417770079008775,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225151,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409920,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409921,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409923,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409927,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409935,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409951,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409983,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410047,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410175,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410431,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410943,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547411967,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547414015,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547418111,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547426303,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547442687,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547475455,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547540991,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547672063,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547934207,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992548458495,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992549507071,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992551604223,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992555798527,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992564187135,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992580964351,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992614518783,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992681627647,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992815845375,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993084280831,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993621151743,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071994694893567,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071996842377215,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072001137344511,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072009727279103,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072026907148287,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072061266886655,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072129986363391,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072267425316863,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072542303223807,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90073092059037695,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90074191570665471,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90076390593921023,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90080788640432127,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90089584733454335,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90107176919498751,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90142361291587583,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90212730035765247,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90353467524120575,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90634942500831231,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(91197892454252543,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095167,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095168,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(93449692267937792,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94012642221359104,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94294117198069760,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94434854686425088,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94505223430602752,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94540407802691584,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94557999988736000,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94566796081758208,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94571194128269312,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94573393151524864,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94574492663152640,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575042418966528,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575317296873472,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575454735826944,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575523455303680,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575557815042048,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575574994911232,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575583584845824,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575587879813120,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575590027296768,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591101038592,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591637909504,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591906344960,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592040562688,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592107671552,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592141225984,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592158003200,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592166391808,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592170586112,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592172683264,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592173731840,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174256128,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174518272,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174649344,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174714880,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174747648,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174764032,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174772224,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174776320,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174778368,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779392,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779904,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780160,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780288,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780352,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780384,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780400,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780408,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780412,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780414,64,FLEN)
NAN_BOXED(6890417823260343759,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780415,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088256,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088257,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088259,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088263,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088271,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088287,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088319,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088383,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088511,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381088767,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381089279,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381090303,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381092351,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381096447,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381104639,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381121023,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381153791,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381219327,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381350399,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459381612543,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459382136831,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459383185407,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459385282559,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459389476863,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459397865471,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459414642687,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459448197119,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459515305983,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459649523711,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518459917959167,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518460454830079,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518461528571903,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518463676055551,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518467971022847,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518476560957439,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518493740826623,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518528100564991,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518596820041727,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785518734258995199,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785519009136902143,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785519558892716031,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785520658404343807,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785522857427599359,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785527255474110463,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785536051567132671,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785553643753177087,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785588828125265919,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785659196869443583,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13785799934357798911,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13786081409334509567,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13786644359287930879,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13787770259194773503,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13787770259194773504,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13788896159101616128,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13789459109055037440,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13789740584031748096,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13789881321520103424,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13789951690264281088,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13789986874636369920,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790004466822414336,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790013262915436544,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790017660961947648,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790019859985203200,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790020959496830976,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790021509252644864,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790021784130551808,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790021921569505280,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790021990288982016,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022024648720384,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022041828589568,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022050418524160,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022054713491456,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022056860975104,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022057934716928,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022058471587840,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022058740023296,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022058874241024,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022058941349888,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022058974904320,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022058991681536,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059000070144,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059004264448,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059006361600,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059007410176,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059007934464,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008196608,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008327680,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008393216,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008425984,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008442368,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008450560,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008454656,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008456704,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008457728,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458240,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458496,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458624,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458688,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458720,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458736,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458744,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458748,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458750,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13790022059008458751,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890418659437502285,64,FLEN)
NAN_BOXED(11515749074198591440,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496593920,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496593921,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496593923,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496593927,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496593935,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496593951,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496593983,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496594047,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496594175,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496594431,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496594943,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496595967,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496598015,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496602111,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496610303,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496626687,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496659455,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496724991,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666496856063,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666497118207,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666497642495,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666498691071,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666500788223,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666504982527,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666513371135,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666530148351,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666563702783,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666630811647,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721666765029375,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721667033464831,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721667570335743,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721668644077567,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721670791561215,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721675086528511,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721683676463103,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721700856332287,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721735216070655,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721803935547391,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030721941374500863,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030722216252407807,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030722766008221695,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030723865519849471,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030726064543105023,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030730462589616127,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030739258682638335,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030756850868682751,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030792035240771583,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4030862403984949247,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4031003141473304575,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4031284616450015231,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4031847566403436543,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4032973466310279167,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4032973466310279168,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4034099366217121792,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4034662316170543104,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4034943791147253760,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035084528635609088,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035154897379786752,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035190081751875584,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035207673937920000,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035216470030942208,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035220868077453312,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035223067100708864,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035224166612336640,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035224716368150528,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035224991246057472,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225128685010944,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225197404487680,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225231764226048,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225248944095232,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225257534029824,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225261828997120,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225263976480768,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225265050222592,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225265587093504,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225265855528960,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225265989746688,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266056855552,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266090409984,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266107187200,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266115575808,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266119770112,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266121867264,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266122915840,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123440128,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123702272,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123833344,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123898880,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123931648,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123948032,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123956224,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123960320,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123962368,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123963392,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123963904,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964160,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964288,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964352,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964384,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964400,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964408,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964412,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964414,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4035225266123964415,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890444265198602355,64,FLEN)
NAN_BOXED(2323889213103513685,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524800,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524801,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524803,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524807,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524815,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524831,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524863,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524927,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525055,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525311,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525823,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368526847,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368528895,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368532991,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368541183,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368557567,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368590335,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368655871,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368786943,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369049087,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369573375,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981370621951,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981372719103,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981376913407,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981385302015,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981402079231,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981435633663,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981502742527,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981636960255,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981905395711,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179982442266623,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179983516008447,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179985663492095,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179989958459391,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179998548393983,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180015728263167,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180050088001535,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180118807478271,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180256246431743,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180531124338687,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225181080880152575,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225182180391780351,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225184379415035903,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225188777461547007,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225197573554569215,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225215165740613631,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225250350112702463,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225320718856880127,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225461456345235455,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225742931321946111,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(226305881275367423,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210047,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210048,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(228557681089052672,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229120631042473984,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229402106019184640,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229542843507539968,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229613212251717632,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229648396623806464,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229665988809850880,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229674784902873088,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229679182949384192,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229681381972639744,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229682481484267520,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683031240081408,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683306117988352,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683443556941824,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683512276418560,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683546636156928,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683563816026112,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683572405960704,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683576700928000,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683578848411648,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683579922153472,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580459024384,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580727459840,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580861677568,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580928786432,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580962340864,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580979118080,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580987506688,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580991700992,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580993798144,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580994846720,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995371008,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995633152,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995764224,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995829760,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995862528,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995878912,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995887104,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995891200,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995893248,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894272,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894784,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895040,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895168,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895232,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895264,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895280,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895288,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895292,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895294,64,FLEN)
NAN_BOXED(6890495937731691301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895295,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445952,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445953,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445955,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445959,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445967,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445983,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446015,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446079,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446207,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446463,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528446975,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528447999,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528450047,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528454143,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528462335,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528478719,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528511487,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528577023,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528708095,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528970239,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195529494527,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195530543103,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195532640255,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195536834559,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195545223167,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195562000383,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195595554815,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195662663679,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195796881407,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196065316863,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043196602187775,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043197675929599,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043199823413247,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043204118380543,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043212708315135,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043229888184319,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043264247922687,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043332967399423,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043470406352895,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043745284259839,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54044295040073727,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54045394551701503,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54047593574957055,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54051991621468159,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54060787714490367,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54078379900534783,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54113564272623615,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54183933016801279,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54324670505156607,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54606145481867263,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(55169095435288575,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131199,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(56294995342131200,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57420895248973824,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(57983845202395136,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58265320179105792,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58406057667461120,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58476426411638784,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58511610783727616,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58529202969772032,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58537999062794240,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58542397109305344,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58544596132560896,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58545695644188672,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546245400002560,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546520277909504,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546657716862976,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546726436339712,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546760796078080,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546777975947264,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546786565881856,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546790860849152,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546793008332800,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794082074624,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794618945536,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546794887380992,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795021598720,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795088707584,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795122262016,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795139039232,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795147427840,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795151622144,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795153719296,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795154767872,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155292160,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155554304,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155685376,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155750912,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155783680,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155800064,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155808256,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155812352,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155814400,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815424,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155815936,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816192,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816320,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816384,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816416,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816432,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816440,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816444,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816446,64,FLEN)
NAN_BOXED(6890501341980500075,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(58546795155816447,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926720,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926721,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926723,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926727,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926735,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926751,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926783,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926847,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926975,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656927231,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656927743,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656928767,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656930815,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656934911,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656943103,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656959487,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656992255,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657057791,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657188863,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657451007,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657975295,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228659023871,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228661121023,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228665315327,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228673703935,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228690481151,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228724035583,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228791144447,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228925362175,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451229193797631,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451229730668543,64,FLEN)
NAN_BOXED(6890510775815680603,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451230804410367,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
