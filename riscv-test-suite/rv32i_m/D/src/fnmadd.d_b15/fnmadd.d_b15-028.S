
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_20736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f000000003ffff; valaddr_reg:x3; val_offset:62208*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62208*0 + 3*0*FLEN/8, x4, x1, x2)

inst_20737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f000000007ffff; valaddr_reg:x3; val_offset:62211*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62211*0 + 3*1*FLEN/8, x4, x1, x2)

inst_20738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00000000fffff; valaddr_reg:x3; val_offset:62214*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62214*0 + 3*2*FLEN/8, x4, x1, x2)

inst_20739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00000001fffff; valaddr_reg:x3; val_offset:62217*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62217*0 + 3*3*FLEN/8, x4, x1, x2)

inst_20740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00000003fffff; valaddr_reg:x3; val_offset:62220*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62220*0 + 3*4*FLEN/8, x4, x1, x2)

inst_20741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00000007fffff; valaddr_reg:x3; val_offset:62223*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62223*0 + 3*5*FLEN/8, x4, x1, x2)

inst_20742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0000000ffffff; valaddr_reg:x3; val_offset:62226*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62226*0 + 3*6*FLEN/8, x4, x1, x2)

inst_20743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0000001ffffff; valaddr_reg:x3; val_offset:62229*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62229*0 + 3*7*FLEN/8, x4, x1, x2)

inst_20744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0000003ffffff; valaddr_reg:x3; val_offset:62232*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62232*0 + 3*8*FLEN/8, x4, x1, x2)

inst_20745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0000007ffffff; valaddr_reg:x3; val_offset:62235*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62235*0 + 3*9*FLEN/8, x4, x1, x2)

inst_20746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f000000fffffff; valaddr_reg:x3; val_offset:62238*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62238*0 + 3*10*FLEN/8, x4, x1, x2)

inst_20747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f000001fffffff; valaddr_reg:x3; val_offset:62241*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62241*0 + 3*11*FLEN/8, x4, x1, x2)

inst_20748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f000003fffffff; valaddr_reg:x3; val_offset:62244*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62244*0 + 3*12*FLEN/8, x4, x1, x2)

inst_20749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f000007fffffff; valaddr_reg:x3; val_offset:62247*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62247*0 + 3*13*FLEN/8, x4, x1, x2)

inst_20750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00000ffffffff; valaddr_reg:x3; val_offset:62250*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62250*0 + 3*14*FLEN/8, x4, x1, x2)

inst_20751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00001ffffffff; valaddr_reg:x3; val_offset:62253*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62253*0 + 3*15*FLEN/8, x4, x1, x2)

inst_20752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00003ffffffff; valaddr_reg:x3; val_offset:62256*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62256*0 + 3*16*FLEN/8, x4, x1, x2)

inst_20753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00007ffffffff; valaddr_reg:x3; val_offset:62259*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62259*0 + 3*17*FLEN/8, x4, x1, x2)

inst_20754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0000fffffffff; valaddr_reg:x3; val_offset:62262*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62262*0 + 3*18*FLEN/8, x4, x1, x2)

inst_20755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0001fffffffff; valaddr_reg:x3; val_offset:62265*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62265*0 + 3*19*FLEN/8, x4, x1, x2)

inst_20756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0003fffffffff; valaddr_reg:x3; val_offset:62268*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62268*0 + 3*20*FLEN/8, x4, x1, x2)

inst_20757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0007fffffffff; valaddr_reg:x3; val_offset:62271*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62271*0 + 3*21*FLEN/8, x4, x1, x2)

inst_20758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f000ffffffffff; valaddr_reg:x3; val_offset:62274*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62274*0 + 3*22*FLEN/8, x4, x1, x2)

inst_20759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f001ffffffffff; valaddr_reg:x3; val_offset:62277*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62277*0 + 3*23*FLEN/8, x4, x1, x2)

inst_20760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f003ffffffffff; valaddr_reg:x3; val_offset:62280*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62280*0 + 3*24*FLEN/8, x4, x1, x2)

inst_20761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f007ffffffffff; valaddr_reg:x3; val_offset:62283*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62283*0 + 3*25*FLEN/8, x4, x1, x2)

inst_20762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f00fffffffffff; valaddr_reg:x3; val_offset:62286*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62286*0 + 3*26*FLEN/8, x4, x1, x2)

inst_20763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f01fffffffffff; valaddr_reg:x3; val_offset:62289*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62289*0 + 3*27*FLEN/8, x4, x1, x2)

inst_20764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f03fffffffffff; valaddr_reg:x3; val_offset:62292*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62292*0 + 3*28*FLEN/8, x4, x1, x2)

inst_20765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f07fffffffffff; valaddr_reg:x3; val_offset:62295*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62295*0 + 3*29*FLEN/8, x4, x1, x2)

inst_20766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f0ffffffffffff; valaddr_reg:x3; val_offset:62298*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62298*0 + 3*30*FLEN/8, x4, x1, x2)

inst_20767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f1ffffffffffff; valaddr_reg:x3; val_offset:62301*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62301*0 + 3*31*FLEN/8, x4, x1, x2)

inst_20768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f3ffffffffffff; valaddr_reg:x3; val_offset:62304*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62304*0 + 3*32*FLEN/8, x4, x1, x2)

inst_20769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f7ffffffffffff; valaddr_reg:x3; val_offset:62307*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62307*0 + 3*33*FLEN/8, x4, x1, x2)

inst_20770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39f8000000000000; valaddr_reg:x3; val_offset:62310*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62310*0 + 3*34*FLEN/8, x4, x1, x2)

inst_20771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fc000000000000; valaddr_reg:x3; val_offset:62313*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62313*0 + 3*35*FLEN/8, x4, x1, x2)

inst_20772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fe000000000000; valaddr_reg:x3; val_offset:62316*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62316*0 + 3*36*FLEN/8, x4, x1, x2)

inst_20773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ff000000000000; valaddr_reg:x3; val_offset:62319*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62319*0 + 3*37*FLEN/8, x4, x1, x2)

inst_20774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ff800000000000; valaddr_reg:x3; val_offset:62322*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62322*0 + 3*38*FLEN/8, x4, x1, x2)

inst_20775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffc00000000000; valaddr_reg:x3; val_offset:62325*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62325*0 + 3*39*FLEN/8, x4, x1, x2)

inst_20776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffe00000000000; valaddr_reg:x3; val_offset:62328*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62328*0 + 3*40*FLEN/8, x4, x1, x2)

inst_20777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fff00000000000; valaddr_reg:x3; val_offset:62331*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62331*0 + 3*41*FLEN/8, x4, x1, x2)

inst_20778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fff80000000000; valaddr_reg:x3; val_offset:62334*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62334*0 + 3*42*FLEN/8, x4, x1, x2)

inst_20779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffc0000000000; valaddr_reg:x3; val_offset:62337*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62337*0 + 3*43*FLEN/8, x4, x1, x2)

inst_20780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffe0000000000; valaddr_reg:x3; val_offset:62340*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62340*0 + 3*44*FLEN/8, x4, x1, x2)

inst_20781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffff0000000000; valaddr_reg:x3; val_offset:62343*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62343*0 + 3*45*FLEN/8, x4, x1, x2)

inst_20782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffff8000000000; valaddr_reg:x3; val_offset:62346*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62346*0 + 3*46*FLEN/8, x4, x1, x2)

inst_20783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffc000000000; valaddr_reg:x3; val_offset:62349*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62349*0 + 3*47*FLEN/8, x4, x1, x2)

inst_20784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffe000000000; valaddr_reg:x3; val_offset:62352*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62352*0 + 3*48*FLEN/8, x4, x1, x2)

inst_20785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffff000000000; valaddr_reg:x3; val_offset:62355*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62355*0 + 3*49*FLEN/8, x4, x1, x2)

inst_20786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffff800000000; valaddr_reg:x3; val_offset:62358*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62358*0 + 3*50*FLEN/8, x4, x1, x2)

inst_20787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffc00000000; valaddr_reg:x3; val_offset:62361*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62361*0 + 3*51*FLEN/8, x4, x1, x2)

inst_20788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffe00000000; valaddr_reg:x3; val_offset:62364*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62364*0 + 3*52*FLEN/8, x4, x1, x2)

inst_20789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffff00000000; valaddr_reg:x3; val_offset:62367*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62367*0 + 3*53*FLEN/8, x4, x1, x2)

inst_20790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffff80000000; valaddr_reg:x3; val_offset:62370*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62370*0 + 3*54*FLEN/8, x4, x1, x2)

inst_20791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffc0000000; valaddr_reg:x3; val_offset:62373*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62373*0 + 3*55*FLEN/8, x4, x1, x2)

inst_20792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffe0000000; valaddr_reg:x3; val_offset:62376*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62376*0 + 3*56*FLEN/8, x4, x1, x2)

inst_20793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffff0000000; valaddr_reg:x3; val_offset:62379*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62379*0 + 3*57*FLEN/8, x4, x1, x2)

inst_20794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffff8000000; valaddr_reg:x3; val_offset:62382*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62382*0 + 3*58*FLEN/8, x4, x1, x2)

inst_20795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffc000000; valaddr_reg:x3; val_offset:62385*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62385*0 + 3*59*FLEN/8, x4, x1, x2)

inst_20796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffe000000; valaddr_reg:x3; val_offset:62388*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62388*0 + 3*60*FLEN/8, x4, x1, x2)

inst_20797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffff000000; valaddr_reg:x3; val_offset:62391*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62391*0 + 3*61*FLEN/8, x4, x1, x2)

inst_20798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffff800000; valaddr_reg:x3; val_offset:62394*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62394*0 + 3*62*FLEN/8, x4, x1, x2)

inst_20799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffc00000; valaddr_reg:x3; val_offset:62397*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62397*0 + 3*63*FLEN/8, x4, x1, x2)

inst_20800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffe00000; valaddr_reg:x3; val_offset:62400*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62400*0 + 3*64*FLEN/8, x4, x1, x2)

inst_20801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffff00000; valaddr_reg:x3; val_offset:62403*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62403*0 + 3*65*FLEN/8, x4, x1, x2)

inst_20802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffff80000; valaddr_reg:x3; val_offset:62406*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62406*0 + 3*66*FLEN/8, x4, x1, x2)

inst_20803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffc0000; valaddr_reg:x3; val_offset:62409*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62409*0 + 3*67*FLEN/8, x4, x1, x2)

inst_20804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffe0000; valaddr_reg:x3; val_offset:62412*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62412*0 + 3*68*FLEN/8, x4, x1, x2)

inst_20805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffff0000; valaddr_reg:x3; val_offset:62415*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62415*0 + 3*69*FLEN/8, x4, x1, x2)

inst_20806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffff8000; valaddr_reg:x3; val_offset:62418*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62418*0 + 3*70*FLEN/8, x4, x1, x2)

inst_20807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffffc000; valaddr_reg:x3; val_offset:62421*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62421*0 + 3*71*FLEN/8, x4, x1, x2)

inst_20808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffffe000; valaddr_reg:x3; val_offset:62424*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62424*0 + 3*72*FLEN/8, x4, x1, x2)

inst_20809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffff000; valaddr_reg:x3; val_offset:62427*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62427*0 + 3*73*FLEN/8, x4, x1, x2)

inst_20810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffff800; valaddr_reg:x3; val_offset:62430*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62430*0 + 3*74*FLEN/8, x4, x1, x2)

inst_20811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffffc00; valaddr_reg:x3; val_offset:62433*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62433*0 + 3*75*FLEN/8, x4, x1, x2)

inst_20812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffffe00; valaddr_reg:x3; val_offset:62436*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62436*0 + 3*76*FLEN/8, x4, x1, x2)

inst_20813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffffff00; valaddr_reg:x3; val_offset:62439*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62439*0 + 3*77*FLEN/8, x4, x1, x2)

inst_20814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffffff80; valaddr_reg:x3; val_offset:62442*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62442*0 + 3*78*FLEN/8, x4, x1, x2)

inst_20815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffffffc0; valaddr_reg:x3; val_offset:62445*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62445*0 + 3*79*FLEN/8, x4, x1, x2)

inst_20816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffffffe0; valaddr_reg:x3; val_offset:62448*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62448*0 + 3*80*FLEN/8, x4, x1, x2)

inst_20817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffffff0; valaddr_reg:x3; val_offset:62451*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62451*0 + 3*81*FLEN/8, x4, x1, x2)

inst_20818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffffff8; valaddr_reg:x3; val_offset:62454*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62454*0 + 3*82*FLEN/8, x4, x1, x2)

inst_20819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffffffc; valaddr_reg:x3; val_offset:62457*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62457*0 + 3*83*FLEN/8, x4, x1, x2)

inst_20820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39fffffffffffffe; valaddr_reg:x3; val_offset:62460*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62460*0 + 3*84*FLEN/8, x4, x1, x2)

inst_20821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x39f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x39ffffffffffffff; valaddr_reg:x3; val_offset:62463*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62463*0 + 3*85*FLEN/8, x4, x1, x2)

inst_20822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:62466*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62466*0 + 3*86*FLEN/8, x4, x1, x2)

inst_20823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:62469*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62469*0 + 3*87*FLEN/8, x4, x1, x2)

inst_20824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:62472*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62472*0 + 3*88*FLEN/8, x4, x1, x2)

inst_20825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:62475*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62475*0 + 3*89*FLEN/8, x4, x1, x2)

inst_20826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:62478*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62478*0 + 3*90*FLEN/8, x4, x1, x2)

inst_20827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:62481*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62481*0 + 3*91*FLEN/8, x4, x1, x2)

inst_20828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:62484*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62484*0 + 3*92*FLEN/8, x4, x1, x2)

inst_20829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:62487*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62487*0 + 3*93*FLEN/8, x4, x1, x2)

inst_20830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:62490*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62490*0 + 3*94*FLEN/8, x4, x1, x2)

inst_20831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:62493*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62493*0 + 3*95*FLEN/8, x4, x1, x2)

inst_20832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:62496*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62496*0 + 3*96*FLEN/8, x4, x1, x2)

inst_20833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:62499*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62499*0 + 3*97*FLEN/8, x4, x1, x2)

inst_20834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:62502*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62502*0 + 3*98*FLEN/8, x4, x1, x2)

inst_20835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:62505*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62505*0 + 3*99*FLEN/8, x4, x1, x2)

inst_20836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:62508*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62508*0 + 3*100*FLEN/8, x4, x1, x2)

inst_20837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:62511*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62511*0 + 3*101*FLEN/8, x4, x1, x2)

inst_20838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:62514*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62514*0 + 3*102*FLEN/8, x4, x1, x2)

inst_20839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:62517*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62517*0 + 3*103*FLEN/8, x4, x1, x2)

inst_20840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:62520*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62520*0 + 3*104*FLEN/8, x4, x1, x2)

inst_20841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:62523*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62523*0 + 3*105*FLEN/8, x4, x1, x2)

inst_20842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:62526*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62526*0 + 3*106*FLEN/8, x4, x1, x2)

inst_20843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb27219e02302f and fs2 == 0 and fe2 == 0x205 and fm2 == 0x2db30a7c4861a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b27219e02302f; op2val:0x2052db30a7c4861a;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:62529*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62529*0 + 3*107*FLEN/8, x4, x1, x2)

inst_20844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000000000; valaddr_reg:x3; val_offset:62532*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62532*0 + 3*108*FLEN/8, x4, x1, x2)

inst_20845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000000001; valaddr_reg:x3; val_offset:62535*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62535*0 + 3*109*FLEN/8, x4, x1, x2)

inst_20846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000000003; valaddr_reg:x3; val_offset:62538*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62538*0 + 3*110*FLEN/8, x4, x1, x2)

inst_20847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000000007; valaddr_reg:x3; val_offset:62541*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62541*0 + 3*111*FLEN/8, x4, x1, x2)

inst_20848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000000000f; valaddr_reg:x3; val_offset:62544*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62544*0 + 3*112*FLEN/8, x4, x1, x2)

inst_20849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000000001f; valaddr_reg:x3; val_offset:62547*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62547*0 + 3*113*FLEN/8, x4, x1, x2)

inst_20850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000000003f; valaddr_reg:x3; val_offset:62550*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62550*0 + 3*114*FLEN/8, x4, x1, x2)

inst_20851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000000007f; valaddr_reg:x3; val_offset:62553*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62553*0 + 3*115*FLEN/8, x4, x1, x2)

inst_20852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000000000ff; valaddr_reg:x3; val_offset:62556*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62556*0 + 3*116*FLEN/8, x4, x1, x2)

inst_20853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000000001ff; valaddr_reg:x3; val_offset:62559*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62559*0 + 3*117*FLEN/8, x4, x1, x2)

inst_20854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000000003ff; valaddr_reg:x3; val_offset:62562*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62562*0 + 3*118*FLEN/8, x4, x1, x2)

inst_20855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000000007ff; valaddr_reg:x3; val_offset:62565*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62565*0 + 3*119*FLEN/8, x4, x1, x2)

inst_20856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000000fff; valaddr_reg:x3; val_offset:62568*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62568*0 + 3*120*FLEN/8, x4, x1, x2)

inst_20857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000001fff; valaddr_reg:x3; val_offset:62571*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62571*0 + 3*121*FLEN/8, x4, x1, x2)

inst_20858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000003fff; valaddr_reg:x3; val_offset:62574*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62574*0 + 3*122*FLEN/8, x4, x1, x2)

inst_20859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000007fff; valaddr_reg:x3; val_offset:62577*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62577*0 + 3*123*FLEN/8, x4, x1, x2)

inst_20860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000000ffff; valaddr_reg:x3; val_offset:62580*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62580*0 + 3*124*FLEN/8, x4, x1, x2)

inst_20861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000001ffff; valaddr_reg:x3; val_offset:62583*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62583*0 + 3*125*FLEN/8, x4, x1, x2)

inst_20862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000003ffff; valaddr_reg:x3; val_offset:62586*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62586*0 + 3*126*FLEN/8, x4, x1, x2)

inst_20863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000007ffff; valaddr_reg:x3; val_offset:62589*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62589*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_20864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000000fffff; valaddr_reg:x3; val_offset:62592*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62592*0 + 3*128*FLEN/8, x4, x1, x2)

inst_20865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000001fffff; valaddr_reg:x3; val_offset:62595*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62595*0 + 3*129*FLEN/8, x4, x1, x2)

inst_20866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000003fffff; valaddr_reg:x3; val_offset:62598*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62598*0 + 3*130*FLEN/8, x4, x1, x2)

inst_20867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000007fffff; valaddr_reg:x3; val_offset:62601*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62601*0 + 3*131*FLEN/8, x4, x1, x2)

inst_20868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000000ffffff; valaddr_reg:x3; val_offset:62604*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62604*0 + 3*132*FLEN/8, x4, x1, x2)

inst_20869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000001ffffff; valaddr_reg:x3; val_offset:62607*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62607*0 + 3*133*FLEN/8, x4, x1, x2)

inst_20870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000003ffffff; valaddr_reg:x3; val_offset:62610*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62610*0 + 3*134*FLEN/8, x4, x1, x2)

inst_20871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000007ffffff; valaddr_reg:x3; val_offset:62613*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62613*0 + 3*135*FLEN/8, x4, x1, x2)

inst_20872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000000fffffff; valaddr_reg:x3; val_offset:62616*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62616*0 + 3*136*FLEN/8, x4, x1, x2)

inst_20873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000001fffffff; valaddr_reg:x3; val_offset:62619*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62619*0 + 3*137*FLEN/8, x4, x1, x2)

inst_20874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000003fffffff; valaddr_reg:x3; val_offset:62622*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62622*0 + 3*138*FLEN/8, x4, x1, x2)

inst_20875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000007fffffff; valaddr_reg:x3; val_offset:62625*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62625*0 + 3*139*FLEN/8, x4, x1, x2)

inst_20876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00000ffffffff; valaddr_reg:x3; val_offset:62628*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62628*0 + 3*140*FLEN/8, x4, x1, x2)

inst_20877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00001ffffffff; valaddr_reg:x3; val_offset:62631*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62631*0 + 3*141*FLEN/8, x4, x1, x2)

inst_20878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00003ffffffff; valaddr_reg:x3; val_offset:62634*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62634*0 + 3*142*FLEN/8, x4, x1, x2)

inst_20879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00007ffffffff; valaddr_reg:x3; val_offset:62637*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62637*0 + 3*143*FLEN/8, x4, x1, x2)

inst_20880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0000fffffffff; valaddr_reg:x3; val_offset:62640*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62640*0 + 3*144*FLEN/8, x4, x1, x2)

inst_20881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0001fffffffff; valaddr_reg:x3; val_offset:62643*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62643*0 + 3*145*FLEN/8, x4, x1, x2)

inst_20882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0003fffffffff; valaddr_reg:x3; val_offset:62646*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62646*0 + 3*146*FLEN/8, x4, x1, x2)

inst_20883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0007fffffffff; valaddr_reg:x3; val_offset:62649*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62649*0 + 3*147*FLEN/8, x4, x1, x2)

inst_20884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e000ffffffffff; valaddr_reg:x3; val_offset:62652*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62652*0 + 3*148*FLEN/8, x4, x1, x2)

inst_20885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e001ffffffffff; valaddr_reg:x3; val_offset:62655*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62655*0 + 3*149*FLEN/8, x4, x1, x2)

inst_20886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e003ffffffffff; valaddr_reg:x3; val_offset:62658*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62658*0 + 3*150*FLEN/8, x4, x1, x2)

inst_20887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e007ffffffffff; valaddr_reg:x3; val_offset:62661*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62661*0 + 3*151*FLEN/8, x4, x1, x2)

inst_20888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e00fffffffffff; valaddr_reg:x3; val_offset:62664*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62664*0 + 3*152*FLEN/8, x4, x1, x2)

inst_20889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e01fffffffffff; valaddr_reg:x3; val_offset:62667*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62667*0 + 3*153*FLEN/8, x4, x1, x2)

inst_20890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e03fffffffffff; valaddr_reg:x3; val_offset:62670*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62670*0 + 3*154*FLEN/8, x4, x1, x2)

inst_20891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e07fffffffffff; valaddr_reg:x3; val_offset:62673*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62673*0 + 3*155*FLEN/8, x4, x1, x2)

inst_20892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e0ffffffffffff; valaddr_reg:x3; val_offset:62676*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62676*0 + 3*156*FLEN/8, x4, x1, x2)

inst_20893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e1ffffffffffff; valaddr_reg:x3; val_offset:62679*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62679*0 + 3*157*FLEN/8, x4, x1, x2)

inst_20894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e3ffffffffffff; valaddr_reg:x3; val_offset:62682*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62682*0 + 3*158*FLEN/8, x4, x1, x2)

inst_20895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e7ffffffffffff; valaddr_reg:x3; val_offset:62685*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62685*0 + 3*159*FLEN/8, x4, x1, x2)

inst_20896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8e8000000000000; valaddr_reg:x3; val_offset:62688*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62688*0 + 3*160*FLEN/8, x4, x1, x2)

inst_20897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8ec000000000000; valaddr_reg:x3; val_offset:62691*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62691*0 + 3*161*FLEN/8, x4, x1, x2)

inst_20898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8ee000000000000; valaddr_reg:x3; val_offset:62694*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62694*0 + 3*162*FLEN/8, x4, x1, x2)

inst_20899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8ef000000000000; valaddr_reg:x3; val_offset:62697*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62697*0 + 3*163*FLEN/8, x4, x1, x2)

inst_20900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8ef800000000000; valaddr_reg:x3; val_offset:62700*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62700*0 + 3*164*FLEN/8, x4, x1, x2)

inst_20901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efc00000000000; valaddr_reg:x3; val_offset:62703*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62703*0 + 3*165*FLEN/8, x4, x1, x2)

inst_20902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efe00000000000; valaddr_reg:x3; val_offset:62706*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62706*0 + 3*166*FLEN/8, x4, x1, x2)

inst_20903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8eff00000000000; valaddr_reg:x3; val_offset:62709*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62709*0 + 3*167*FLEN/8, x4, x1, x2)

inst_20904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8eff80000000000; valaddr_reg:x3; val_offset:62712*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62712*0 + 3*168*FLEN/8, x4, x1, x2)

inst_20905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effc0000000000; valaddr_reg:x3; val_offset:62715*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62715*0 + 3*169*FLEN/8, x4, x1, x2)

inst_20906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effe0000000000; valaddr_reg:x3; val_offset:62718*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62718*0 + 3*170*FLEN/8, x4, x1, x2)

inst_20907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efff0000000000; valaddr_reg:x3; val_offset:62721*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62721*0 + 3*171*FLEN/8, x4, x1, x2)

inst_20908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efff8000000000; valaddr_reg:x3; val_offset:62724*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62724*0 + 3*172*FLEN/8, x4, x1, x2)

inst_20909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffc000000000; valaddr_reg:x3; val_offset:62727*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62727*0 + 3*173*FLEN/8, x4, x1, x2)

inst_20910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffe000000000; valaddr_reg:x3; val_offset:62730*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62730*0 + 3*174*FLEN/8, x4, x1, x2)

inst_20911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effff000000000; valaddr_reg:x3; val_offset:62733*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62733*0 + 3*175*FLEN/8, x4, x1, x2)

inst_20912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effff800000000; valaddr_reg:x3; val_offset:62736*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62736*0 + 3*176*FLEN/8, x4, x1, x2)

inst_20913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffc00000000; valaddr_reg:x3; val_offset:62739*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62739*0 + 3*177*FLEN/8, x4, x1, x2)

inst_20914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffe00000000; valaddr_reg:x3; val_offset:62742*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62742*0 + 3*178*FLEN/8, x4, x1, x2)

inst_20915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffff00000000; valaddr_reg:x3; val_offset:62745*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62745*0 + 3*179*FLEN/8, x4, x1, x2)

inst_20916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffff80000000; valaddr_reg:x3; val_offset:62748*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62748*0 + 3*180*FLEN/8, x4, x1, x2)

inst_20917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffc0000000; valaddr_reg:x3; val_offset:62751*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62751*0 + 3*181*FLEN/8, x4, x1, x2)

inst_20918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffe0000000; valaddr_reg:x3; val_offset:62754*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62754*0 + 3*182*FLEN/8, x4, x1, x2)

inst_20919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffff0000000; valaddr_reg:x3; val_offset:62757*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62757*0 + 3*183*FLEN/8, x4, x1, x2)

inst_20920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffff8000000; valaddr_reg:x3; val_offset:62760*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62760*0 + 3*184*FLEN/8, x4, x1, x2)

inst_20921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffc000000; valaddr_reg:x3; val_offset:62763*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62763*0 + 3*185*FLEN/8, x4, x1, x2)

inst_20922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffe000000; valaddr_reg:x3; val_offset:62766*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62766*0 + 3*186*FLEN/8, x4, x1, x2)

inst_20923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffff000000; valaddr_reg:x3; val_offset:62769*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62769*0 + 3*187*FLEN/8, x4, x1, x2)

inst_20924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffff800000; valaddr_reg:x3; val_offset:62772*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62772*0 + 3*188*FLEN/8, x4, x1, x2)

inst_20925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffc00000; valaddr_reg:x3; val_offset:62775*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62775*0 + 3*189*FLEN/8, x4, x1, x2)

inst_20926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffe00000; valaddr_reg:x3; val_offset:62778*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62778*0 + 3*190*FLEN/8, x4, x1, x2)

inst_20927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffff00000; valaddr_reg:x3; val_offset:62781*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62781*0 + 3*191*FLEN/8, x4, x1, x2)

inst_20928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffff80000; valaddr_reg:x3; val_offset:62784*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62784*0 + 3*192*FLEN/8, x4, x1, x2)

inst_20929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffc0000; valaddr_reg:x3; val_offset:62787*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62787*0 + 3*193*FLEN/8, x4, x1, x2)

inst_20930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffe0000; valaddr_reg:x3; val_offset:62790*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62790*0 + 3*194*FLEN/8, x4, x1, x2)

inst_20931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffff0000; valaddr_reg:x3; val_offset:62793*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62793*0 + 3*195*FLEN/8, x4, x1, x2)

inst_20932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffff8000; valaddr_reg:x3; val_offset:62796*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62796*0 + 3*196*FLEN/8, x4, x1, x2)

inst_20933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffffc000; valaddr_reg:x3; val_offset:62799*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62799*0 + 3*197*FLEN/8, x4, x1, x2)

inst_20934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffffe000; valaddr_reg:x3; val_offset:62802*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62802*0 + 3*198*FLEN/8, x4, x1, x2)

inst_20935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffff000; valaddr_reg:x3; val_offset:62805*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62805*0 + 3*199*FLEN/8, x4, x1, x2)

inst_20936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffff800; valaddr_reg:x3; val_offset:62808*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62808*0 + 3*200*FLEN/8, x4, x1, x2)

inst_20937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffffc00; valaddr_reg:x3; val_offset:62811*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62811*0 + 3*201*FLEN/8, x4, x1, x2)

inst_20938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffffe00; valaddr_reg:x3; val_offset:62814*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62814*0 + 3*202*FLEN/8, x4, x1, x2)

inst_20939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffffff00; valaddr_reg:x3; val_offset:62817*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62817*0 + 3*203*FLEN/8, x4, x1, x2)

inst_20940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffffff80; valaddr_reg:x3; val_offset:62820*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62820*0 + 3*204*FLEN/8, x4, x1, x2)

inst_20941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffffffc0; valaddr_reg:x3; val_offset:62823*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62823*0 + 3*205*FLEN/8, x4, x1, x2)

inst_20942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffffffe0; valaddr_reg:x3; val_offset:62826*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62826*0 + 3*206*FLEN/8, x4, x1, x2)

inst_20943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffffff0; valaddr_reg:x3; val_offset:62829*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62829*0 + 3*207*FLEN/8, x4, x1, x2)

inst_20944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffffff8; valaddr_reg:x3; val_offset:62832*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62832*0 + 3*208*FLEN/8, x4, x1, x2)

inst_20945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffffffc; valaddr_reg:x3; val_offset:62835*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62835*0 + 3*209*FLEN/8, x4, x1, x2)

inst_20946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8effffffffffffe; valaddr_reg:x3; val_offset:62838*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62838*0 + 3*210*FLEN/8, x4, x1, x2)

inst_20947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x38e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xb8efffffffffffff; valaddr_reg:x3; val_offset:62841*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62841*0 + 3*211*FLEN/8, x4, x1, x2)

inst_20948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:62844*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62844*0 + 3*212*FLEN/8, x4, x1, x2)

inst_20949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:62847*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62847*0 + 3*213*FLEN/8, x4, x1, x2)

inst_20950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:62850*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62850*0 + 3*214*FLEN/8, x4, x1, x2)

inst_20951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:62853*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62853*0 + 3*215*FLEN/8, x4, x1, x2)

inst_20952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:62856*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62856*0 + 3*216*FLEN/8, x4, x1, x2)

inst_20953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:62859*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62859*0 + 3*217*FLEN/8, x4, x1, x2)

inst_20954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:62862*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62862*0 + 3*218*FLEN/8, x4, x1, x2)

inst_20955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:62865*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62865*0 + 3*219*FLEN/8, x4, x1, x2)

inst_20956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:62868*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62868*0 + 3*220*FLEN/8, x4, x1, x2)

inst_20957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:62871*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62871*0 + 3*221*FLEN/8, x4, x1, x2)

inst_20958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:62874*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62874*0 + 3*222*FLEN/8, x4, x1, x2)

inst_20959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:62877*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62877*0 + 3*223*FLEN/8, x4, x1, x2)

inst_20960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:62880*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62880*0 + 3*224*FLEN/8, x4, x1, x2)

inst_20961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:62883*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62883*0 + 3*225*FLEN/8, x4, x1, x2)

inst_20962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:62886*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62886*0 + 3*226*FLEN/8, x4, x1, x2)

inst_20963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:62889*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62889*0 + 3*227*FLEN/8, x4, x1, x2)

inst_20964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:62892*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62892*0 + 3*228*FLEN/8, x4, x1, x2)

inst_20965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:62895*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62895*0 + 3*229*FLEN/8, x4, x1, x2)

inst_20966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:62898*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62898*0 + 3*230*FLEN/8, x4, x1, x2)

inst_20967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:62901*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62901*0 + 3*231*FLEN/8, x4, x1, x2)

inst_20968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:62904*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62904*0 + 3*232*FLEN/8, x4, x1, x2)

inst_20969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xb8b73fc8fea5b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x296835c326fdd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8b8b73fc8fea5b; op2val:0x9fe296835c326fdd;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:62907*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62907*0 + 3*233*FLEN/8, x4, x1, x2)

inst_20970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:62910*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62910*0 + 3*234*FLEN/8, x4, x1, x2)

inst_20971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:62913*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62913*0 + 3*235*FLEN/8, x4, x1, x2)

inst_20972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:62916*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62916*0 + 3*236*FLEN/8, x4, x1, x2)

inst_20973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:62919*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62919*0 + 3*237*FLEN/8, x4, x1, x2)

inst_20974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:62922*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62922*0 + 3*238*FLEN/8, x4, x1, x2)

inst_20975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:62925*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62925*0 + 3*239*FLEN/8, x4, x1, x2)

inst_20976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:62928*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62928*0 + 3*240*FLEN/8, x4, x1, x2)

inst_20977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:62931*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62931*0 + 3*241*FLEN/8, x4, x1, x2)

inst_20978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:62934*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62934*0 + 3*242*FLEN/8, x4, x1, x2)

inst_20979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:62937*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62937*0 + 3*243*FLEN/8, x4, x1, x2)

inst_20980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:62940*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62940*0 + 3*244*FLEN/8, x4, x1, x2)

inst_20981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:62943*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62943*0 + 3*245*FLEN/8, x4, x1, x2)

inst_20982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:62946*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62946*0 + 3*246*FLEN/8, x4, x1, x2)

inst_20983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:62949*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62949*0 + 3*247*FLEN/8, x4, x1, x2)

inst_20984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:62952*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62952*0 + 3*248*FLEN/8, x4, x1, x2)

inst_20985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:62955*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62955*0 + 3*249*FLEN/8, x4, x1, x2)

inst_20986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:62958*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62958*0 + 3*250*FLEN/8, x4, x1, x2)

inst_20987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:62961*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62961*0 + 3*251*FLEN/8, x4, x1, x2)

inst_20988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:62964*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62964*0 + 3*252*FLEN/8, x4, x1, x2)

inst_20989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:62967*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62967*0 + 3*253*FLEN/8, x4, x1, x2)

inst_20990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:62970*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62970*0 + 3*254*FLEN/8, x4, x1, x2)

inst_20991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:62973*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62973*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_20992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000000000; valaddr_reg:x3; val_offset:62976*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62976*0 + 3*256*FLEN/8, x4, x1, x2)

inst_20993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000000001; valaddr_reg:x3; val_offset:62979*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62979*0 + 3*257*FLEN/8, x4, x1, x2)

inst_20994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000000003; valaddr_reg:x3; val_offset:62982*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62982*0 + 3*258*FLEN/8, x4, x1, x2)

inst_20995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000000007; valaddr_reg:x3; val_offset:62985*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62985*0 + 3*259*FLEN/8, x4, x1, x2)

inst_20996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000000000f; valaddr_reg:x3; val_offset:62988*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62988*0 + 3*260*FLEN/8, x4, x1, x2)

inst_20997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000000001f; valaddr_reg:x3; val_offset:62991*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62991*0 + 3*261*FLEN/8, x4, x1, x2)

inst_20998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000000003f; valaddr_reg:x3; val_offset:62994*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62994*0 + 3*262*FLEN/8, x4, x1, x2)

inst_20999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000000007f; valaddr_reg:x3; val_offset:62997*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 62997*0 + 3*263*FLEN/8, x4, x1, x2)

inst_21000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000000000ff; valaddr_reg:x3; val_offset:63000*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63000*0 + 3*264*FLEN/8, x4, x1, x2)

inst_21001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000000001ff; valaddr_reg:x3; val_offset:63003*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63003*0 + 3*265*FLEN/8, x4, x1, x2)

inst_21002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000000003ff; valaddr_reg:x3; val_offset:63006*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63006*0 + 3*266*FLEN/8, x4, x1, x2)

inst_21003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000000007ff; valaddr_reg:x3; val_offset:63009*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63009*0 + 3*267*FLEN/8, x4, x1, x2)

inst_21004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000000fff; valaddr_reg:x3; val_offset:63012*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63012*0 + 3*268*FLEN/8, x4, x1, x2)

inst_21005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000001fff; valaddr_reg:x3; val_offset:63015*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63015*0 + 3*269*FLEN/8, x4, x1, x2)

inst_21006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000003fff; valaddr_reg:x3; val_offset:63018*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63018*0 + 3*270*FLEN/8, x4, x1, x2)

inst_21007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000007fff; valaddr_reg:x3; val_offset:63021*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63021*0 + 3*271*FLEN/8, x4, x1, x2)

inst_21008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000000ffff; valaddr_reg:x3; val_offset:63024*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63024*0 + 3*272*FLEN/8, x4, x1, x2)

inst_21009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000001ffff; valaddr_reg:x3; val_offset:63027*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63027*0 + 3*273*FLEN/8, x4, x1, x2)

inst_21010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000003ffff; valaddr_reg:x3; val_offset:63030*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63030*0 + 3*274*FLEN/8, x4, x1, x2)

inst_21011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000007ffff; valaddr_reg:x3; val_offset:63033*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63033*0 + 3*275*FLEN/8, x4, x1, x2)

inst_21012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000000fffff; valaddr_reg:x3; val_offset:63036*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63036*0 + 3*276*FLEN/8, x4, x1, x2)

inst_21013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000001fffff; valaddr_reg:x3; val_offset:63039*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63039*0 + 3*277*FLEN/8, x4, x1, x2)

inst_21014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000003fffff; valaddr_reg:x3; val_offset:63042*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63042*0 + 3*278*FLEN/8, x4, x1, x2)

inst_21015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000007fffff; valaddr_reg:x3; val_offset:63045*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63045*0 + 3*279*FLEN/8, x4, x1, x2)

inst_21016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000000ffffff; valaddr_reg:x3; val_offset:63048*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63048*0 + 3*280*FLEN/8, x4, x1, x2)

inst_21017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000001ffffff; valaddr_reg:x3; val_offset:63051*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63051*0 + 3*281*FLEN/8, x4, x1, x2)

inst_21018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000003ffffff; valaddr_reg:x3; val_offset:63054*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63054*0 + 3*282*FLEN/8, x4, x1, x2)

inst_21019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000007ffffff; valaddr_reg:x3; val_offset:63057*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63057*0 + 3*283*FLEN/8, x4, x1, x2)

inst_21020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000000fffffff; valaddr_reg:x3; val_offset:63060*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63060*0 + 3*284*FLEN/8, x4, x1, x2)

inst_21021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000001fffffff; valaddr_reg:x3; val_offset:63063*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63063*0 + 3*285*FLEN/8, x4, x1, x2)

inst_21022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000003fffffff; valaddr_reg:x3; val_offset:63066*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63066*0 + 3*286*FLEN/8, x4, x1, x2)

inst_21023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000007fffffff; valaddr_reg:x3; val_offset:63069*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63069*0 + 3*287*FLEN/8, x4, x1, x2)

inst_21024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00000ffffffff; valaddr_reg:x3; val_offset:63072*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63072*0 + 3*288*FLEN/8, x4, x1, x2)

inst_21025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00001ffffffff; valaddr_reg:x3; val_offset:63075*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63075*0 + 3*289*FLEN/8, x4, x1, x2)

inst_21026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00003ffffffff; valaddr_reg:x3; val_offset:63078*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63078*0 + 3*290*FLEN/8, x4, x1, x2)

inst_21027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00007ffffffff; valaddr_reg:x3; val_offset:63081*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63081*0 + 3*291*FLEN/8, x4, x1, x2)

inst_21028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0000fffffffff; valaddr_reg:x3; val_offset:63084*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63084*0 + 3*292*FLEN/8, x4, x1, x2)

inst_21029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0001fffffffff; valaddr_reg:x3; val_offset:63087*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63087*0 + 3*293*FLEN/8, x4, x1, x2)

inst_21030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0003fffffffff; valaddr_reg:x3; val_offset:63090*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63090*0 + 3*294*FLEN/8, x4, x1, x2)

inst_21031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0007fffffffff; valaddr_reg:x3; val_offset:63093*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63093*0 + 3*295*FLEN/8, x4, x1, x2)

inst_21032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a000ffffffffff; valaddr_reg:x3; val_offset:63096*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63096*0 + 3*296*FLEN/8, x4, x1, x2)

inst_21033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a001ffffffffff; valaddr_reg:x3; val_offset:63099*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63099*0 + 3*297*FLEN/8, x4, x1, x2)

inst_21034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a003ffffffffff; valaddr_reg:x3; val_offset:63102*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63102*0 + 3*298*FLEN/8, x4, x1, x2)

inst_21035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a007ffffffffff; valaddr_reg:x3; val_offset:63105*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63105*0 + 3*299*FLEN/8, x4, x1, x2)

inst_21036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a00fffffffffff; valaddr_reg:x3; val_offset:63108*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63108*0 + 3*300*FLEN/8, x4, x1, x2)

inst_21037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a01fffffffffff; valaddr_reg:x3; val_offset:63111*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63111*0 + 3*301*FLEN/8, x4, x1, x2)

inst_21038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a03fffffffffff; valaddr_reg:x3; val_offset:63114*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63114*0 + 3*302*FLEN/8, x4, x1, x2)

inst_21039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a07fffffffffff; valaddr_reg:x3; val_offset:63117*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63117*0 + 3*303*FLEN/8, x4, x1, x2)

inst_21040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a0ffffffffffff; valaddr_reg:x3; val_offset:63120*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63120*0 + 3*304*FLEN/8, x4, x1, x2)

inst_21041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a1ffffffffffff; valaddr_reg:x3; val_offset:63123*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63123*0 + 3*305*FLEN/8, x4, x1, x2)

inst_21042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a3ffffffffffff; valaddr_reg:x3; val_offset:63126*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63126*0 + 3*306*FLEN/8, x4, x1, x2)

inst_21043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a7ffffffffffff; valaddr_reg:x3; val_offset:63129*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63129*0 + 3*307*FLEN/8, x4, x1, x2)

inst_21044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81a8000000000000; valaddr_reg:x3; val_offset:63132*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63132*0 + 3*308*FLEN/8, x4, x1, x2)

inst_21045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81ac000000000000; valaddr_reg:x3; val_offset:63135*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63135*0 + 3*309*FLEN/8, x4, x1, x2)

inst_21046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81ae000000000000; valaddr_reg:x3; val_offset:63138*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63138*0 + 3*310*FLEN/8, x4, x1, x2)

inst_21047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81af000000000000; valaddr_reg:x3; val_offset:63141*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63141*0 + 3*311*FLEN/8, x4, x1, x2)

inst_21048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81af800000000000; valaddr_reg:x3; val_offset:63144*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63144*0 + 3*312*FLEN/8, x4, x1, x2)

inst_21049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afc00000000000; valaddr_reg:x3; val_offset:63147*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63147*0 + 3*313*FLEN/8, x4, x1, x2)

inst_21050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afe00000000000; valaddr_reg:x3; val_offset:63150*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63150*0 + 3*314*FLEN/8, x4, x1, x2)

inst_21051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81aff00000000000; valaddr_reg:x3; val_offset:63153*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63153*0 + 3*315*FLEN/8, x4, x1, x2)

inst_21052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81aff80000000000; valaddr_reg:x3; val_offset:63156*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63156*0 + 3*316*FLEN/8, x4, x1, x2)

inst_21053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affc0000000000; valaddr_reg:x3; val_offset:63159*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63159*0 + 3*317*FLEN/8, x4, x1, x2)

inst_21054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affe0000000000; valaddr_reg:x3; val_offset:63162*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63162*0 + 3*318*FLEN/8, x4, x1, x2)

inst_21055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afff0000000000; valaddr_reg:x3; val_offset:63165*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63165*0 + 3*319*FLEN/8, x4, x1, x2)

inst_21056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afff8000000000; valaddr_reg:x3; val_offset:63168*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63168*0 + 3*320*FLEN/8, x4, x1, x2)

inst_21057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffc000000000; valaddr_reg:x3; val_offset:63171*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63171*0 + 3*321*FLEN/8, x4, x1, x2)

inst_21058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffe000000000; valaddr_reg:x3; val_offset:63174*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63174*0 + 3*322*FLEN/8, x4, x1, x2)

inst_21059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affff000000000; valaddr_reg:x3; val_offset:63177*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63177*0 + 3*323*FLEN/8, x4, x1, x2)

inst_21060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affff800000000; valaddr_reg:x3; val_offset:63180*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63180*0 + 3*324*FLEN/8, x4, x1, x2)

inst_21061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffc00000000; valaddr_reg:x3; val_offset:63183*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63183*0 + 3*325*FLEN/8, x4, x1, x2)

inst_21062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffe00000000; valaddr_reg:x3; val_offset:63186*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63186*0 + 3*326*FLEN/8, x4, x1, x2)

inst_21063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffff00000000; valaddr_reg:x3; val_offset:63189*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63189*0 + 3*327*FLEN/8, x4, x1, x2)

inst_21064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffff80000000; valaddr_reg:x3; val_offset:63192*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63192*0 + 3*328*FLEN/8, x4, x1, x2)

inst_21065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffc0000000; valaddr_reg:x3; val_offset:63195*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63195*0 + 3*329*FLEN/8, x4, x1, x2)

inst_21066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffe0000000; valaddr_reg:x3; val_offset:63198*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63198*0 + 3*330*FLEN/8, x4, x1, x2)

inst_21067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffff0000000; valaddr_reg:x3; val_offset:63201*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63201*0 + 3*331*FLEN/8, x4, x1, x2)

inst_21068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffff8000000; valaddr_reg:x3; val_offset:63204*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63204*0 + 3*332*FLEN/8, x4, x1, x2)

inst_21069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffc000000; valaddr_reg:x3; val_offset:63207*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63207*0 + 3*333*FLEN/8, x4, x1, x2)

inst_21070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffe000000; valaddr_reg:x3; val_offset:63210*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63210*0 + 3*334*FLEN/8, x4, x1, x2)

inst_21071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffff000000; valaddr_reg:x3; val_offset:63213*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63213*0 + 3*335*FLEN/8, x4, x1, x2)

inst_21072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffff800000; valaddr_reg:x3; val_offset:63216*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63216*0 + 3*336*FLEN/8, x4, x1, x2)

inst_21073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffc00000; valaddr_reg:x3; val_offset:63219*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63219*0 + 3*337*FLEN/8, x4, x1, x2)

inst_21074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffe00000; valaddr_reg:x3; val_offset:63222*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63222*0 + 3*338*FLEN/8, x4, x1, x2)

inst_21075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffff00000; valaddr_reg:x3; val_offset:63225*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63225*0 + 3*339*FLEN/8, x4, x1, x2)

inst_21076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffff80000; valaddr_reg:x3; val_offset:63228*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63228*0 + 3*340*FLEN/8, x4, x1, x2)

inst_21077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffc0000; valaddr_reg:x3; val_offset:63231*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63231*0 + 3*341*FLEN/8, x4, x1, x2)

inst_21078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffe0000; valaddr_reg:x3; val_offset:63234*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63234*0 + 3*342*FLEN/8, x4, x1, x2)

inst_21079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffff0000; valaddr_reg:x3; val_offset:63237*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63237*0 + 3*343*FLEN/8, x4, x1, x2)

inst_21080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffff8000; valaddr_reg:x3; val_offset:63240*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63240*0 + 3*344*FLEN/8, x4, x1, x2)

inst_21081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffffc000; valaddr_reg:x3; val_offset:63243*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63243*0 + 3*345*FLEN/8, x4, x1, x2)

inst_21082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffffe000; valaddr_reg:x3; val_offset:63246*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63246*0 + 3*346*FLEN/8, x4, x1, x2)

inst_21083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffff000; valaddr_reg:x3; val_offset:63249*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63249*0 + 3*347*FLEN/8, x4, x1, x2)

inst_21084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffff800; valaddr_reg:x3; val_offset:63252*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63252*0 + 3*348*FLEN/8, x4, x1, x2)

inst_21085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffffc00; valaddr_reg:x3; val_offset:63255*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63255*0 + 3*349*FLEN/8, x4, x1, x2)

inst_21086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffffe00; valaddr_reg:x3; val_offset:63258*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63258*0 + 3*350*FLEN/8, x4, x1, x2)

inst_21087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffffff00; valaddr_reg:x3; val_offset:63261*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63261*0 + 3*351*FLEN/8, x4, x1, x2)

inst_21088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffffff80; valaddr_reg:x3; val_offset:63264*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63264*0 + 3*352*FLEN/8, x4, x1, x2)

inst_21089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffffffc0; valaddr_reg:x3; val_offset:63267*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63267*0 + 3*353*FLEN/8, x4, x1, x2)

inst_21090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffffffe0; valaddr_reg:x3; val_offset:63270*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63270*0 + 3*354*FLEN/8, x4, x1, x2)

inst_21091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffffff0; valaddr_reg:x3; val_offset:63273*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63273*0 + 3*355*FLEN/8, x4, x1, x2)

inst_21092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffffff8; valaddr_reg:x3; val_offset:63276*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63276*0 + 3*356*FLEN/8, x4, x1, x2)

inst_21093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffffffc; valaddr_reg:x3; val_offset:63279*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63279*0 + 3*357*FLEN/8, x4, x1, x2)

inst_21094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81affffffffffffe; valaddr_reg:x3; val_offset:63282*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63282*0 + 3*358*FLEN/8, x4, x1, x2)

inst_21095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbb82a6aeecb53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bb82a6aeecb53; op2val:0x8000;
op3val:0x81afffffffffffff; valaddr_reg:x3; val_offset:63285*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63285*0 + 3*359*FLEN/8, x4, x1, x2)

inst_21096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000000000; valaddr_reg:x3; val_offset:63288*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63288*0 + 3*360*FLEN/8, x4, x1, x2)

inst_21097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000000001; valaddr_reg:x3; val_offset:63291*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63291*0 + 3*361*FLEN/8, x4, x1, x2)

inst_21098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000000003; valaddr_reg:x3; val_offset:63294*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63294*0 + 3*362*FLEN/8, x4, x1, x2)

inst_21099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000000007; valaddr_reg:x3; val_offset:63297*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63297*0 + 3*363*FLEN/8, x4, x1, x2)

inst_21100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000000000f; valaddr_reg:x3; val_offset:63300*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63300*0 + 3*364*FLEN/8, x4, x1, x2)

inst_21101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000000001f; valaddr_reg:x3; val_offset:63303*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63303*0 + 3*365*FLEN/8, x4, x1, x2)

inst_21102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000000003f; valaddr_reg:x3; val_offset:63306*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63306*0 + 3*366*FLEN/8, x4, x1, x2)

inst_21103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000000007f; valaddr_reg:x3; val_offset:63309*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63309*0 + 3*367*FLEN/8, x4, x1, x2)

inst_21104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000000000ff; valaddr_reg:x3; val_offset:63312*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63312*0 + 3*368*FLEN/8, x4, x1, x2)

inst_21105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000000001ff; valaddr_reg:x3; val_offset:63315*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63315*0 + 3*369*FLEN/8, x4, x1, x2)

inst_21106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000000003ff; valaddr_reg:x3; val_offset:63318*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63318*0 + 3*370*FLEN/8, x4, x1, x2)

inst_21107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000000007ff; valaddr_reg:x3; val_offset:63321*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63321*0 + 3*371*FLEN/8, x4, x1, x2)

inst_21108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000000fff; valaddr_reg:x3; val_offset:63324*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63324*0 + 3*372*FLEN/8, x4, x1, x2)

inst_21109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000001fff; valaddr_reg:x3; val_offset:63327*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63327*0 + 3*373*FLEN/8, x4, x1, x2)

inst_21110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000003fff; valaddr_reg:x3; val_offset:63330*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63330*0 + 3*374*FLEN/8, x4, x1, x2)

inst_21111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000007fff; valaddr_reg:x3; val_offset:63333*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63333*0 + 3*375*FLEN/8, x4, x1, x2)

inst_21112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000000ffff; valaddr_reg:x3; val_offset:63336*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63336*0 + 3*376*FLEN/8, x4, x1, x2)

inst_21113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000001ffff; valaddr_reg:x3; val_offset:63339*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63339*0 + 3*377*FLEN/8, x4, x1, x2)

inst_21114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000003ffff; valaddr_reg:x3; val_offset:63342*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63342*0 + 3*378*FLEN/8, x4, x1, x2)

inst_21115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000007ffff; valaddr_reg:x3; val_offset:63345*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63345*0 + 3*379*FLEN/8, x4, x1, x2)

inst_21116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000000fffff; valaddr_reg:x3; val_offset:63348*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63348*0 + 3*380*FLEN/8, x4, x1, x2)

inst_21117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000001fffff; valaddr_reg:x3; val_offset:63351*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63351*0 + 3*381*FLEN/8, x4, x1, x2)

inst_21118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000003fffff; valaddr_reg:x3; val_offset:63354*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63354*0 + 3*382*FLEN/8, x4, x1, x2)

inst_21119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000007fffff; valaddr_reg:x3; val_offset:63357*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63357*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_21120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000000ffffff; valaddr_reg:x3; val_offset:63360*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63360*0 + 3*384*FLEN/8, x4, x1, x2)

inst_21121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000001ffffff; valaddr_reg:x3; val_offset:63363*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63363*0 + 3*385*FLEN/8, x4, x1, x2)

inst_21122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000003ffffff; valaddr_reg:x3; val_offset:63366*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63366*0 + 3*386*FLEN/8, x4, x1, x2)

inst_21123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000007ffffff; valaddr_reg:x3; val_offset:63369*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63369*0 + 3*387*FLEN/8, x4, x1, x2)

inst_21124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000000fffffff; valaddr_reg:x3; val_offset:63372*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63372*0 + 3*388*FLEN/8, x4, x1, x2)

inst_21125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000001fffffff; valaddr_reg:x3; val_offset:63375*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63375*0 + 3*389*FLEN/8, x4, x1, x2)

inst_21126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000003fffffff; valaddr_reg:x3; val_offset:63378*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63378*0 + 3*390*FLEN/8, x4, x1, x2)

inst_21127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000007fffffff; valaddr_reg:x3; val_offset:63381*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63381*0 + 3*391*FLEN/8, x4, x1, x2)

inst_21128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00000ffffffff; valaddr_reg:x3; val_offset:63384*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63384*0 + 3*392*FLEN/8, x4, x1, x2)

inst_21129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00001ffffffff; valaddr_reg:x3; val_offset:63387*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63387*0 + 3*393*FLEN/8, x4, x1, x2)

inst_21130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00003ffffffff; valaddr_reg:x3; val_offset:63390*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63390*0 + 3*394*FLEN/8, x4, x1, x2)

inst_21131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00007ffffffff; valaddr_reg:x3; val_offset:63393*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63393*0 + 3*395*FLEN/8, x4, x1, x2)

inst_21132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0000fffffffff; valaddr_reg:x3; val_offset:63396*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63396*0 + 3*396*FLEN/8, x4, x1, x2)

inst_21133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0001fffffffff; valaddr_reg:x3; val_offset:63399*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63399*0 + 3*397*FLEN/8, x4, x1, x2)

inst_21134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0003fffffffff; valaddr_reg:x3; val_offset:63402*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63402*0 + 3*398*FLEN/8, x4, x1, x2)

inst_21135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0007fffffffff; valaddr_reg:x3; val_offset:63405*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63405*0 + 3*399*FLEN/8, x4, x1, x2)

inst_21136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab000ffffffffff; valaddr_reg:x3; val_offset:63408*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63408*0 + 3*400*FLEN/8, x4, x1, x2)

inst_21137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab001ffffffffff; valaddr_reg:x3; val_offset:63411*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63411*0 + 3*401*FLEN/8, x4, x1, x2)

inst_21138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab003ffffffffff; valaddr_reg:x3; val_offset:63414*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63414*0 + 3*402*FLEN/8, x4, x1, x2)

inst_21139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab007ffffffffff; valaddr_reg:x3; val_offset:63417*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63417*0 + 3*403*FLEN/8, x4, x1, x2)

inst_21140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab00fffffffffff; valaddr_reg:x3; val_offset:63420*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63420*0 + 3*404*FLEN/8, x4, x1, x2)

inst_21141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab01fffffffffff; valaddr_reg:x3; val_offset:63423*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63423*0 + 3*405*FLEN/8, x4, x1, x2)

inst_21142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab03fffffffffff; valaddr_reg:x3; val_offset:63426*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63426*0 + 3*406*FLEN/8, x4, x1, x2)

inst_21143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab07fffffffffff; valaddr_reg:x3; val_offset:63429*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63429*0 + 3*407*FLEN/8, x4, x1, x2)

inst_21144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab0ffffffffffff; valaddr_reg:x3; val_offset:63432*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63432*0 + 3*408*FLEN/8, x4, x1, x2)

inst_21145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab1ffffffffffff; valaddr_reg:x3; val_offset:63435*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63435*0 + 3*409*FLEN/8, x4, x1, x2)

inst_21146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab3ffffffffffff; valaddr_reg:x3; val_offset:63438*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63438*0 + 3*410*FLEN/8, x4, x1, x2)

inst_21147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab7ffffffffffff; valaddr_reg:x3; val_offset:63441*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63441*0 + 3*411*FLEN/8, x4, x1, x2)

inst_21148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ab8000000000000; valaddr_reg:x3; val_offset:63444*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63444*0 + 3*412*FLEN/8, x4, x1, x2)

inst_21149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abc000000000000; valaddr_reg:x3; val_offset:63447*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63447*0 + 3*413*FLEN/8, x4, x1, x2)

inst_21150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abe000000000000; valaddr_reg:x3; val_offset:63450*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63450*0 + 3*414*FLEN/8, x4, x1, x2)

inst_21151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abf000000000000; valaddr_reg:x3; val_offset:63453*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63453*0 + 3*415*FLEN/8, x4, x1, x2)

inst_21152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abf800000000000; valaddr_reg:x3; val_offset:63456*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63456*0 + 3*416*FLEN/8, x4, x1, x2)

inst_21153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfc00000000000; valaddr_reg:x3; val_offset:63459*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63459*0 + 3*417*FLEN/8, x4, x1, x2)

inst_21154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfe00000000000; valaddr_reg:x3; val_offset:63462*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63462*0 + 3*418*FLEN/8, x4, x1, x2)

inst_21155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abff00000000000; valaddr_reg:x3; val_offset:63465*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63465*0 + 3*419*FLEN/8, x4, x1, x2)

inst_21156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abff80000000000; valaddr_reg:x3; val_offset:63468*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63468*0 + 3*420*FLEN/8, x4, x1, x2)

inst_21157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffc0000000000; valaddr_reg:x3; val_offset:63471*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63471*0 + 3*421*FLEN/8, x4, x1, x2)

inst_21158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffe0000000000; valaddr_reg:x3; val_offset:63474*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63474*0 + 3*422*FLEN/8, x4, x1, x2)

inst_21159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfff0000000000; valaddr_reg:x3; val_offset:63477*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63477*0 + 3*423*FLEN/8, x4, x1, x2)

inst_21160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfff8000000000; valaddr_reg:x3; val_offset:63480*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63480*0 + 3*424*FLEN/8, x4, x1, x2)

inst_21161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffc000000000; valaddr_reg:x3; val_offset:63483*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63483*0 + 3*425*FLEN/8, x4, x1, x2)

inst_21162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffe000000000; valaddr_reg:x3; val_offset:63486*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63486*0 + 3*426*FLEN/8, x4, x1, x2)

inst_21163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffff000000000; valaddr_reg:x3; val_offset:63489*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63489*0 + 3*427*FLEN/8, x4, x1, x2)

inst_21164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffff800000000; valaddr_reg:x3; val_offset:63492*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63492*0 + 3*428*FLEN/8, x4, x1, x2)

inst_21165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffc00000000; valaddr_reg:x3; val_offset:63495*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63495*0 + 3*429*FLEN/8, x4, x1, x2)

inst_21166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffe00000000; valaddr_reg:x3; val_offset:63498*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63498*0 + 3*430*FLEN/8, x4, x1, x2)

inst_21167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffff00000000; valaddr_reg:x3; val_offset:63501*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63501*0 + 3*431*FLEN/8, x4, x1, x2)

inst_21168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffff80000000; valaddr_reg:x3; val_offset:63504*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63504*0 + 3*432*FLEN/8, x4, x1, x2)

inst_21169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffc0000000; valaddr_reg:x3; val_offset:63507*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63507*0 + 3*433*FLEN/8, x4, x1, x2)

inst_21170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffe0000000; valaddr_reg:x3; val_offset:63510*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63510*0 + 3*434*FLEN/8, x4, x1, x2)

inst_21171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffff0000000; valaddr_reg:x3; val_offset:63513*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63513*0 + 3*435*FLEN/8, x4, x1, x2)

inst_21172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffff8000000; valaddr_reg:x3; val_offset:63516*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63516*0 + 3*436*FLEN/8, x4, x1, x2)

inst_21173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffc000000; valaddr_reg:x3; val_offset:63519*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63519*0 + 3*437*FLEN/8, x4, x1, x2)

inst_21174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffe000000; valaddr_reg:x3; val_offset:63522*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63522*0 + 3*438*FLEN/8, x4, x1, x2)

inst_21175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffff000000; valaddr_reg:x3; val_offset:63525*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63525*0 + 3*439*FLEN/8, x4, x1, x2)

inst_21176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffff800000; valaddr_reg:x3; val_offset:63528*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63528*0 + 3*440*FLEN/8, x4, x1, x2)

inst_21177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffc00000; valaddr_reg:x3; val_offset:63531*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63531*0 + 3*441*FLEN/8, x4, x1, x2)

inst_21178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffe00000; valaddr_reg:x3; val_offset:63534*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63534*0 + 3*442*FLEN/8, x4, x1, x2)

inst_21179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffff00000; valaddr_reg:x3; val_offset:63537*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63537*0 + 3*443*FLEN/8, x4, x1, x2)

inst_21180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffff80000; valaddr_reg:x3; val_offset:63540*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63540*0 + 3*444*FLEN/8, x4, x1, x2)

inst_21181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffc0000; valaddr_reg:x3; val_offset:63543*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63543*0 + 3*445*FLEN/8, x4, x1, x2)

inst_21182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffe0000; valaddr_reg:x3; val_offset:63546*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63546*0 + 3*446*FLEN/8, x4, x1, x2)

inst_21183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffff0000; valaddr_reg:x3; val_offset:63549*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63549*0 + 3*447*FLEN/8, x4, x1, x2)

inst_21184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffff8000; valaddr_reg:x3; val_offset:63552*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63552*0 + 3*448*FLEN/8, x4, x1, x2)

inst_21185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffffc000; valaddr_reg:x3; val_offset:63555*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63555*0 + 3*449*FLEN/8, x4, x1, x2)

inst_21186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffffe000; valaddr_reg:x3; val_offset:63558*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63558*0 + 3*450*FLEN/8, x4, x1, x2)

inst_21187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffff000; valaddr_reg:x3; val_offset:63561*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63561*0 + 3*451*FLEN/8, x4, x1, x2)

inst_21188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffff800; valaddr_reg:x3; val_offset:63564*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63564*0 + 3*452*FLEN/8, x4, x1, x2)

inst_21189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffffc00; valaddr_reg:x3; val_offset:63567*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63567*0 + 3*453*FLEN/8, x4, x1, x2)

inst_21190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffffe00; valaddr_reg:x3; val_offset:63570*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63570*0 + 3*454*FLEN/8, x4, x1, x2)

inst_21191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffffff00; valaddr_reg:x3; val_offset:63573*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63573*0 + 3*455*FLEN/8, x4, x1, x2)

inst_21192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffffff80; valaddr_reg:x3; val_offset:63576*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63576*0 + 3*456*FLEN/8, x4, x1, x2)

inst_21193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffffffc0; valaddr_reg:x3; val_offset:63579*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63579*0 + 3*457*FLEN/8, x4, x1, x2)

inst_21194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffffffe0; valaddr_reg:x3; val_offset:63582*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63582*0 + 3*458*FLEN/8, x4, x1, x2)

inst_21195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffffff0; valaddr_reg:x3; val_offset:63585*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63585*0 + 3*459*FLEN/8, x4, x1, x2)

inst_21196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffffff8; valaddr_reg:x3; val_offset:63588*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63588*0 + 3*460*FLEN/8, x4, x1, x2)

inst_21197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffffffc; valaddr_reg:x3; val_offset:63591*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63591*0 + 3*461*FLEN/8, x4, x1, x2)

inst_21198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abffffffffffffe; valaddr_reg:x3; val_offset:63594*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63594*0 + 3*462*FLEN/8, x4, x1, x2)

inst_21199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ab and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3abfffffffffffff; valaddr_reg:x3; val_offset:63597*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63597*0 + 3*463*FLEN/8, x4, x1, x2)

inst_21200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:63600*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63600*0 + 3*464*FLEN/8, x4, x1, x2)

inst_21201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:63603*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63603*0 + 3*465*FLEN/8, x4, x1, x2)

inst_21202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:63606*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63606*0 + 3*466*FLEN/8, x4, x1, x2)

inst_21203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:63609*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63609*0 + 3*467*FLEN/8, x4, x1, x2)

inst_21204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:63612*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63612*0 + 3*468*FLEN/8, x4, x1, x2)

inst_21205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:63615*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63615*0 + 3*469*FLEN/8, x4, x1, x2)

inst_21206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:63618*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63618*0 + 3*470*FLEN/8, x4, x1, x2)

inst_21207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:63621*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63621*0 + 3*471*FLEN/8, x4, x1, x2)

inst_21208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:63624*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63624*0 + 3*472*FLEN/8, x4, x1, x2)

inst_21209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:63627*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63627*0 + 3*473*FLEN/8, x4, x1, x2)

inst_21210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:63630*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63630*0 + 3*474*FLEN/8, x4, x1, x2)

inst_21211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:63633*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63633*0 + 3*475*FLEN/8, x4, x1, x2)

inst_21212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:63636*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63636*0 + 3*476*FLEN/8, x4, x1, x2)

inst_21213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:63639*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63639*0 + 3*477*FLEN/8, x4, x1, x2)

inst_21214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:63642*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63642*0 + 3*478*FLEN/8, x4, x1, x2)

inst_21215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:63645*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63645*0 + 3*479*FLEN/8, x4, x1, x2)

inst_21216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:63648*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63648*0 + 3*480*FLEN/8, x4, x1, x2)

inst_21217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:63651*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63651*0 + 3*481*FLEN/8, x4, x1, x2)

inst_21218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:63654*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63654*0 + 3*482*FLEN/8, x4, x1, x2)

inst_21219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:63657*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63657*0 + 3*483*FLEN/8, x4, x1, x2)

inst_21220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:63660*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63660*0 + 3*484*FLEN/8, x4, x1, x2)

inst_21221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbda000f652cff and fs2 == 0 and fe2 == 0x205 and fm2 == 0x262175ec07953 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bda000f652cff; op2val:0x205262175ec07953;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:63663*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63663*0 + 3*485*FLEN/8, x4, x1, x2)

inst_21222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000000000; valaddr_reg:x3; val_offset:63666*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63666*0 + 3*486*FLEN/8, x4, x1, x2)

inst_21223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000000001; valaddr_reg:x3; val_offset:63669*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63669*0 + 3*487*FLEN/8, x4, x1, x2)

inst_21224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000000003; valaddr_reg:x3; val_offset:63672*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63672*0 + 3*488*FLEN/8, x4, x1, x2)

inst_21225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000000007; valaddr_reg:x3; val_offset:63675*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63675*0 + 3*489*FLEN/8, x4, x1, x2)

inst_21226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000000000f; valaddr_reg:x3; val_offset:63678*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63678*0 + 3*490*FLEN/8, x4, x1, x2)

inst_21227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000000001f; valaddr_reg:x3; val_offset:63681*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63681*0 + 3*491*FLEN/8, x4, x1, x2)

inst_21228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000000003f; valaddr_reg:x3; val_offset:63684*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63684*0 + 3*492*FLEN/8, x4, x1, x2)

inst_21229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000000007f; valaddr_reg:x3; val_offset:63687*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63687*0 + 3*493*FLEN/8, x4, x1, x2)

inst_21230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000000000ff; valaddr_reg:x3; val_offset:63690*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63690*0 + 3*494*FLEN/8, x4, x1, x2)

inst_21231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000000001ff; valaddr_reg:x3; val_offset:63693*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63693*0 + 3*495*FLEN/8, x4, x1, x2)

inst_21232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000000003ff; valaddr_reg:x3; val_offset:63696*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63696*0 + 3*496*FLEN/8, x4, x1, x2)

inst_21233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000000007ff; valaddr_reg:x3; val_offset:63699*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63699*0 + 3*497*FLEN/8, x4, x1, x2)

inst_21234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000000fff; valaddr_reg:x3; val_offset:63702*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63702*0 + 3*498*FLEN/8, x4, x1, x2)

inst_21235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000001fff; valaddr_reg:x3; val_offset:63705*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63705*0 + 3*499*FLEN/8, x4, x1, x2)

inst_21236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000003fff; valaddr_reg:x3; val_offset:63708*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63708*0 + 3*500*FLEN/8, x4, x1, x2)

inst_21237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000007fff; valaddr_reg:x3; val_offset:63711*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63711*0 + 3*501*FLEN/8, x4, x1, x2)

inst_21238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000000ffff; valaddr_reg:x3; val_offset:63714*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63714*0 + 3*502*FLEN/8, x4, x1, x2)

inst_21239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000001ffff; valaddr_reg:x3; val_offset:63717*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63717*0 + 3*503*FLEN/8, x4, x1, x2)

inst_21240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000003ffff; valaddr_reg:x3; val_offset:63720*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63720*0 + 3*504*FLEN/8, x4, x1, x2)

inst_21241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000007ffff; valaddr_reg:x3; val_offset:63723*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63723*0 + 3*505*FLEN/8, x4, x1, x2)

inst_21242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000000fffff; valaddr_reg:x3; val_offset:63726*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63726*0 + 3*506*FLEN/8, x4, x1, x2)

inst_21243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000001fffff; valaddr_reg:x3; val_offset:63729*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63729*0 + 3*507*FLEN/8, x4, x1, x2)

inst_21244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000003fffff; valaddr_reg:x3; val_offset:63732*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63732*0 + 3*508*FLEN/8, x4, x1, x2)

inst_21245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000007fffff; valaddr_reg:x3; val_offset:63735*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63735*0 + 3*509*FLEN/8, x4, x1, x2)

inst_21246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000000ffffff; valaddr_reg:x3; val_offset:63738*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63738*0 + 3*510*FLEN/8, x4, x1, x2)

inst_21247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000001ffffff; valaddr_reg:x3; val_offset:63741*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63741*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_21248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000003ffffff; valaddr_reg:x3; val_offset:63744*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63744*0 + 3*512*FLEN/8, x4, x1, x2)

inst_21249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000007ffffff; valaddr_reg:x3; val_offset:63747*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63747*0 + 3*513*FLEN/8, x4, x1, x2)

inst_21250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000000fffffff; valaddr_reg:x3; val_offset:63750*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63750*0 + 3*514*FLEN/8, x4, x1, x2)

inst_21251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000001fffffff; valaddr_reg:x3; val_offset:63753*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63753*0 + 3*515*FLEN/8, x4, x1, x2)

inst_21252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000003fffffff; valaddr_reg:x3; val_offset:63756*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63756*0 + 3*516*FLEN/8, x4, x1, x2)

inst_21253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000007fffffff; valaddr_reg:x3; val_offset:63759*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63759*0 + 3*517*FLEN/8, x4, x1, x2)

inst_21254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00000ffffffff; valaddr_reg:x3; val_offset:63762*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63762*0 + 3*518*FLEN/8, x4, x1, x2)

inst_21255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00001ffffffff; valaddr_reg:x3; val_offset:63765*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63765*0 + 3*519*FLEN/8, x4, x1, x2)

inst_21256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00003ffffffff; valaddr_reg:x3; val_offset:63768*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63768*0 + 3*520*FLEN/8, x4, x1, x2)

inst_21257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00007ffffffff; valaddr_reg:x3; val_offset:63771*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63771*0 + 3*521*FLEN/8, x4, x1, x2)

inst_21258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0000fffffffff; valaddr_reg:x3; val_offset:63774*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63774*0 + 3*522*FLEN/8, x4, x1, x2)

inst_21259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0001fffffffff; valaddr_reg:x3; val_offset:63777*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63777*0 + 3*523*FLEN/8, x4, x1, x2)

inst_21260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0003fffffffff; valaddr_reg:x3; val_offset:63780*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63780*0 + 3*524*FLEN/8, x4, x1, x2)

inst_21261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0007fffffffff; valaddr_reg:x3; val_offset:63783*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63783*0 + 3*525*FLEN/8, x4, x1, x2)

inst_21262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff000ffffffffff; valaddr_reg:x3; val_offset:63786*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63786*0 + 3*526*FLEN/8, x4, x1, x2)

inst_21263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff001ffffffffff; valaddr_reg:x3; val_offset:63789*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63789*0 + 3*527*FLEN/8, x4, x1, x2)

inst_21264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff003ffffffffff; valaddr_reg:x3; val_offset:63792*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63792*0 + 3*528*FLEN/8, x4, x1, x2)

inst_21265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff007ffffffffff; valaddr_reg:x3; val_offset:63795*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63795*0 + 3*529*FLEN/8, x4, x1, x2)

inst_21266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff00fffffffffff; valaddr_reg:x3; val_offset:63798*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63798*0 + 3*530*FLEN/8, x4, x1, x2)

inst_21267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff01fffffffffff; valaddr_reg:x3; val_offset:63801*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63801*0 + 3*531*FLEN/8, x4, x1, x2)

inst_21268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff03fffffffffff; valaddr_reg:x3; val_offset:63804*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63804*0 + 3*532*FLEN/8, x4, x1, x2)

inst_21269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff07fffffffffff; valaddr_reg:x3; val_offset:63807*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63807*0 + 3*533*FLEN/8, x4, x1, x2)

inst_21270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff0ffffffffffff; valaddr_reg:x3; val_offset:63810*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63810*0 + 3*534*FLEN/8, x4, x1, x2)

inst_21271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff1ffffffffffff; valaddr_reg:x3; val_offset:63813*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63813*0 + 3*535*FLEN/8, x4, x1, x2)

inst_21272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff3ffffffffffff; valaddr_reg:x3; val_offset:63816*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63816*0 + 3*536*FLEN/8, x4, x1, x2)

inst_21273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff7ffffffffffff; valaddr_reg:x3; val_offset:63819*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63819*0 + 3*537*FLEN/8, x4, x1, x2)

inst_21274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbff8000000000000; valaddr_reg:x3; val_offset:63822*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63822*0 + 3*538*FLEN/8, x4, x1, x2)

inst_21275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffc000000000000; valaddr_reg:x3; val_offset:63825*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63825*0 + 3*539*FLEN/8, x4, x1, x2)

inst_21276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffe000000000000; valaddr_reg:x3; val_offset:63828*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63828*0 + 3*540*FLEN/8, x4, x1, x2)

inst_21277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfff000000000000; valaddr_reg:x3; val_offset:63831*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63831*0 + 3*541*FLEN/8, x4, x1, x2)

inst_21278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfff800000000000; valaddr_reg:x3; val_offset:63834*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63834*0 + 3*542*FLEN/8, x4, x1, x2)

inst_21279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffc00000000000; valaddr_reg:x3; val_offset:63837*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63837*0 + 3*543*FLEN/8, x4, x1, x2)

inst_21280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffe00000000000; valaddr_reg:x3; val_offset:63840*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63840*0 + 3*544*FLEN/8, x4, x1, x2)

inst_21281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffff00000000000; valaddr_reg:x3; val_offset:63843*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63843*0 + 3*545*FLEN/8, x4, x1, x2)

inst_21282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffff80000000000; valaddr_reg:x3; val_offset:63846*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63846*0 + 3*546*FLEN/8, x4, x1, x2)

inst_21283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffc0000000000; valaddr_reg:x3; val_offset:63849*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63849*0 + 3*547*FLEN/8, x4, x1, x2)

inst_21284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffe0000000000; valaddr_reg:x3; val_offset:63852*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63852*0 + 3*548*FLEN/8, x4, x1, x2)

inst_21285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffff0000000000; valaddr_reg:x3; val_offset:63855*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63855*0 + 3*549*FLEN/8, x4, x1, x2)

inst_21286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffff8000000000; valaddr_reg:x3; val_offset:63858*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63858*0 + 3*550*FLEN/8, x4, x1, x2)

inst_21287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffc000000000; valaddr_reg:x3; val_offset:63861*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63861*0 + 3*551*FLEN/8, x4, x1, x2)

inst_21288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffe000000000; valaddr_reg:x3; val_offset:63864*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63864*0 + 3*552*FLEN/8, x4, x1, x2)

inst_21289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffff000000000; valaddr_reg:x3; val_offset:63867*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63867*0 + 3*553*FLEN/8, x4, x1, x2)

inst_21290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffff800000000; valaddr_reg:x3; val_offset:63870*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63870*0 + 3*554*FLEN/8, x4, x1, x2)

inst_21291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffc00000000; valaddr_reg:x3; val_offset:63873*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63873*0 + 3*555*FLEN/8, x4, x1, x2)

inst_21292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffe00000000; valaddr_reg:x3; val_offset:63876*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63876*0 + 3*556*FLEN/8, x4, x1, x2)

inst_21293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffff00000000; valaddr_reg:x3; val_offset:63879*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63879*0 + 3*557*FLEN/8, x4, x1, x2)

inst_21294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffff80000000; valaddr_reg:x3; val_offset:63882*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63882*0 + 3*558*FLEN/8, x4, x1, x2)

inst_21295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffc0000000; valaddr_reg:x3; val_offset:63885*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63885*0 + 3*559*FLEN/8, x4, x1, x2)

inst_21296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffe0000000; valaddr_reg:x3; val_offset:63888*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63888*0 + 3*560*FLEN/8, x4, x1, x2)

inst_21297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffff0000000; valaddr_reg:x3; val_offset:63891*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63891*0 + 3*561*FLEN/8, x4, x1, x2)

inst_21298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffff8000000; valaddr_reg:x3; val_offset:63894*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63894*0 + 3*562*FLEN/8, x4, x1, x2)

inst_21299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffc000000; valaddr_reg:x3; val_offset:63897*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63897*0 + 3*563*FLEN/8, x4, x1, x2)

inst_21300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffe000000; valaddr_reg:x3; val_offset:63900*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63900*0 + 3*564*FLEN/8, x4, x1, x2)

inst_21301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffff000000; valaddr_reg:x3; val_offset:63903*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63903*0 + 3*565*FLEN/8, x4, x1, x2)

inst_21302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffff800000; valaddr_reg:x3; val_offset:63906*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63906*0 + 3*566*FLEN/8, x4, x1, x2)

inst_21303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffc00000; valaddr_reg:x3; val_offset:63909*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63909*0 + 3*567*FLEN/8, x4, x1, x2)

inst_21304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffe00000; valaddr_reg:x3; val_offset:63912*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63912*0 + 3*568*FLEN/8, x4, x1, x2)

inst_21305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffff00000; valaddr_reg:x3; val_offset:63915*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63915*0 + 3*569*FLEN/8, x4, x1, x2)

inst_21306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffff80000; valaddr_reg:x3; val_offset:63918*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63918*0 + 3*570*FLEN/8, x4, x1, x2)

inst_21307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffc0000; valaddr_reg:x3; val_offset:63921*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63921*0 + 3*571*FLEN/8, x4, x1, x2)

inst_21308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffe0000; valaddr_reg:x3; val_offset:63924*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63924*0 + 3*572*FLEN/8, x4, x1, x2)

inst_21309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffff0000; valaddr_reg:x3; val_offset:63927*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63927*0 + 3*573*FLEN/8, x4, x1, x2)

inst_21310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffff8000; valaddr_reg:x3; val_offset:63930*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63930*0 + 3*574*FLEN/8, x4, x1, x2)

inst_21311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffffc000; valaddr_reg:x3; val_offset:63933*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63933*0 + 3*575*FLEN/8, x4, x1, x2)

inst_21312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffffe000; valaddr_reg:x3; val_offset:63936*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63936*0 + 3*576*FLEN/8, x4, x1, x2)

inst_21313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffff000; valaddr_reg:x3; val_offset:63939*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63939*0 + 3*577*FLEN/8, x4, x1, x2)

inst_21314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffff800; valaddr_reg:x3; val_offset:63942*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63942*0 + 3*578*FLEN/8, x4, x1, x2)

inst_21315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffffc00; valaddr_reg:x3; val_offset:63945*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63945*0 + 3*579*FLEN/8, x4, x1, x2)

inst_21316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffffe00; valaddr_reg:x3; val_offset:63948*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63948*0 + 3*580*FLEN/8, x4, x1, x2)

inst_21317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffffff00; valaddr_reg:x3; val_offset:63951*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63951*0 + 3*581*FLEN/8, x4, x1, x2)

inst_21318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffffff80; valaddr_reg:x3; val_offset:63954*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63954*0 + 3*582*FLEN/8, x4, x1, x2)

inst_21319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffffffc0; valaddr_reg:x3; val_offset:63957*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63957*0 + 3*583*FLEN/8, x4, x1, x2)

inst_21320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffffffe0; valaddr_reg:x3; val_offset:63960*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63960*0 + 3*584*FLEN/8, x4, x1, x2)

inst_21321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffffff0; valaddr_reg:x3; val_offset:63963*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63963*0 + 3*585*FLEN/8, x4, x1, x2)

inst_21322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffffff8; valaddr_reg:x3; val_offset:63966*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63966*0 + 3*586*FLEN/8, x4, x1, x2)

inst_21323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffffffc; valaddr_reg:x3; val_offset:63969*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63969*0 + 3*587*FLEN/8, x4, x1, x2)

inst_21324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbffffffffffffffe; valaddr_reg:x3; val_offset:63972*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63972*0 + 3*588*FLEN/8, x4, x1, x2)

inst_21325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x3ff and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xbfffffffffffffff; valaddr_reg:x3; val_offset:63975*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63975*0 + 3*589*FLEN/8, x4, x1, x2)

inst_21326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe0000000000001; valaddr_reg:x3; val_offset:63978*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63978*0 + 3*590*FLEN/8, x4, x1, x2)

inst_21327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe0000000000003; valaddr_reg:x3; val_offset:63981*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63981*0 + 3*591*FLEN/8, x4, x1, x2)

inst_21328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe0000000000007; valaddr_reg:x3; val_offset:63984*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63984*0 + 3*592*FLEN/8, x4, x1, x2)

inst_21329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe000000000000f; valaddr_reg:x3; val_offset:63987*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63987*0 + 3*593*FLEN/8, x4, x1, x2)

inst_21330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe000000000001f; valaddr_reg:x3; val_offset:63990*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63990*0 + 3*594*FLEN/8, x4, x1, x2)

inst_21331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe000000000003f; valaddr_reg:x3; val_offset:63993*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63993*0 + 3*595*FLEN/8, x4, x1, x2)

inst_21332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe3333333333333; valaddr_reg:x3; val_offset:63996*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63996*0 + 3*596*FLEN/8, x4, x1, x2)

inst_21333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe4924924924924; valaddr_reg:x3; val_offset:63999*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 63999*0 + 3*597*FLEN/8, x4, x1, x2)

inst_21334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe6666666666666; valaddr_reg:x3; val_offset:64002*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64002*0 + 3*598*FLEN/8, x4, x1, x2)

inst_21335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe6db6db6db6db6; valaddr_reg:x3; val_offset:64005*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64005*0 + 3*599*FLEN/8, x4, x1, x2)

inst_21336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe7777777777777; valaddr_reg:x3; val_offset:64008*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64008*0 + 3*600*FLEN/8, x4, x1, x2)

inst_21337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe8888888888888; valaddr_reg:x3; val_offset:64011*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64011*0 + 3*601*FLEN/8, x4, x1, x2)

inst_21338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffe9999999999999; valaddr_reg:x3; val_offset:64014*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64014*0 + 3*602*FLEN/8, x4, x1, x2)

inst_21339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffeb6db6db6db6db; valaddr_reg:x3; val_offset:64017*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64017*0 + 3*603*FLEN/8, x4, x1, x2)

inst_21340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffeccccccccccccc; valaddr_reg:x3; val_offset:64020*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64020*0 + 3*604*FLEN/8, x4, x1, x2)

inst_21341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffedb6db6db6db6d; valaddr_reg:x3; val_offset:64023*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64023*0 + 3*605*FLEN/8, x4, x1, x2)

inst_21342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffefffffffffffc0; valaddr_reg:x3; val_offset:64026*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64026*0 + 3*606*FLEN/8, x4, x1, x2)

inst_21343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffefffffffffffe0; valaddr_reg:x3; val_offset:64029*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64029*0 + 3*607*FLEN/8, x4, x1, x2)

inst_21344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffeffffffffffff0; valaddr_reg:x3; val_offset:64032*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64032*0 + 3*608*FLEN/8, x4, x1, x2)

inst_21345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffeffffffffffff8; valaddr_reg:x3; val_offset:64035*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64035*0 + 3*609*FLEN/8, x4, x1, x2)

inst_21346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffeffffffffffffc; valaddr_reg:x3; val_offset:64038*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64038*0 + 3*610*FLEN/8, x4, x1, x2)

inst_21347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xc4e0e690120e7 and fs2 == 1 and fe2 == 0x605 and fm2 == 0x216b768bce548 and fs3 == 1 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8c4e0e690120e7; op2val:0xe05216b768bce548;
op3val:0xffeffffffffffffe; valaddr_reg:x3; val_offset:64041*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64041*0 + 3*611*FLEN/8, x4, x1, x2)

inst_21348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000000000; valaddr_reg:x3; val_offset:64044*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64044*0 + 3*612*FLEN/8, x4, x1, x2)

inst_21349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000000001; valaddr_reg:x3; val_offset:64047*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64047*0 + 3*613*FLEN/8, x4, x1, x2)

inst_21350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000000003; valaddr_reg:x3; val_offset:64050*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64050*0 + 3*614*FLEN/8, x4, x1, x2)

inst_21351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000000007; valaddr_reg:x3; val_offset:64053*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64053*0 + 3*615*FLEN/8, x4, x1, x2)

inst_21352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000000000f; valaddr_reg:x3; val_offset:64056*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64056*0 + 3*616*FLEN/8, x4, x1, x2)

inst_21353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000000001f; valaddr_reg:x3; val_offset:64059*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64059*0 + 3*617*FLEN/8, x4, x1, x2)

inst_21354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000000003f; valaddr_reg:x3; val_offset:64062*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64062*0 + 3*618*FLEN/8, x4, x1, x2)

inst_21355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000000007f; valaddr_reg:x3; val_offset:64065*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64065*0 + 3*619*FLEN/8, x4, x1, x2)

inst_21356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000000000ff; valaddr_reg:x3; val_offset:64068*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64068*0 + 3*620*FLEN/8, x4, x1, x2)

inst_21357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000000001ff; valaddr_reg:x3; val_offset:64071*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64071*0 + 3*621*FLEN/8, x4, x1, x2)

inst_21358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000000003ff; valaddr_reg:x3; val_offset:64074*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64074*0 + 3*622*FLEN/8, x4, x1, x2)

inst_21359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000000007ff; valaddr_reg:x3; val_offset:64077*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64077*0 + 3*623*FLEN/8, x4, x1, x2)

inst_21360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000000fff; valaddr_reg:x3; val_offset:64080*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64080*0 + 3*624*FLEN/8, x4, x1, x2)

inst_21361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000001fff; valaddr_reg:x3; val_offset:64083*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64083*0 + 3*625*FLEN/8, x4, x1, x2)

inst_21362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000003fff; valaddr_reg:x3; val_offset:64086*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64086*0 + 3*626*FLEN/8, x4, x1, x2)

inst_21363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000007fff; valaddr_reg:x3; val_offset:64089*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64089*0 + 3*627*FLEN/8, x4, x1, x2)

inst_21364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000000ffff; valaddr_reg:x3; val_offset:64092*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64092*0 + 3*628*FLEN/8, x4, x1, x2)

inst_21365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000001ffff; valaddr_reg:x3; val_offset:64095*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64095*0 + 3*629*FLEN/8, x4, x1, x2)

inst_21366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000003ffff; valaddr_reg:x3; val_offset:64098*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64098*0 + 3*630*FLEN/8, x4, x1, x2)

inst_21367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000007ffff; valaddr_reg:x3; val_offset:64101*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64101*0 + 3*631*FLEN/8, x4, x1, x2)

inst_21368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000000fffff; valaddr_reg:x3; val_offset:64104*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64104*0 + 3*632*FLEN/8, x4, x1, x2)

inst_21369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000001fffff; valaddr_reg:x3; val_offset:64107*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64107*0 + 3*633*FLEN/8, x4, x1, x2)

inst_21370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000003fffff; valaddr_reg:x3; val_offset:64110*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64110*0 + 3*634*FLEN/8, x4, x1, x2)

inst_21371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000007fffff; valaddr_reg:x3; val_offset:64113*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64113*0 + 3*635*FLEN/8, x4, x1, x2)

inst_21372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000000ffffff; valaddr_reg:x3; val_offset:64116*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64116*0 + 3*636*FLEN/8, x4, x1, x2)

inst_21373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000001ffffff; valaddr_reg:x3; val_offset:64119*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64119*0 + 3*637*FLEN/8, x4, x1, x2)

inst_21374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000003ffffff; valaddr_reg:x3; val_offset:64122*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64122*0 + 3*638*FLEN/8, x4, x1, x2)

inst_21375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000007ffffff; valaddr_reg:x3; val_offset:64125*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64125*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_21376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000000fffffff; valaddr_reg:x3; val_offset:64128*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64128*0 + 3*640*FLEN/8, x4, x1, x2)

inst_21377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000001fffffff; valaddr_reg:x3; val_offset:64131*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64131*0 + 3*641*FLEN/8, x4, x1, x2)

inst_21378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000003fffffff; valaddr_reg:x3; val_offset:64134*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64134*0 + 3*642*FLEN/8, x4, x1, x2)

inst_21379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000007fffffff; valaddr_reg:x3; val_offset:64137*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64137*0 + 3*643*FLEN/8, x4, x1, x2)

inst_21380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700000ffffffff; valaddr_reg:x3; val_offset:64140*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64140*0 + 3*644*FLEN/8, x4, x1, x2)

inst_21381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700001ffffffff; valaddr_reg:x3; val_offset:64143*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64143*0 + 3*645*FLEN/8, x4, x1, x2)

inst_21382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700003ffffffff; valaddr_reg:x3; val_offset:64146*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64146*0 + 3*646*FLEN/8, x4, x1, x2)

inst_21383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700007ffffffff; valaddr_reg:x3; val_offset:64149*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64149*0 + 3*647*FLEN/8, x4, x1, x2)

inst_21384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70000fffffffff; valaddr_reg:x3; val_offset:64152*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64152*0 + 3*648*FLEN/8, x4, x1, x2)

inst_21385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70001fffffffff; valaddr_reg:x3; val_offset:64155*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64155*0 + 3*649*FLEN/8, x4, x1, x2)

inst_21386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70003fffffffff; valaddr_reg:x3; val_offset:64158*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64158*0 + 3*650*FLEN/8, x4, x1, x2)

inst_21387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70007fffffffff; valaddr_reg:x3; val_offset:64161*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64161*0 + 3*651*FLEN/8, x4, x1, x2)

inst_21388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7000ffffffffff; valaddr_reg:x3; val_offset:64164*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64164*0 + 3*652*FLEN/8, x4, x1, x2)

inst_21389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7001ffffffffff; valaddr_reg:x3; val_offset:64167*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64167*0 + 3*653*FLEN/8, x4, x1, x2)

inst_21390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7003ffffffffff; valaddr_reg:x3; val_offset:64170*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64170*0 + 3*654*FLEN/8, x4, x1, x2)

inst_21391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7007ffffffffff; valaddr_reg:x3; val_offset:64173*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64173*0 + 3*655*FLEN/8, x4, x1, x2)

inst_21392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf700fffffffffff; valaddr_reg:x3; val_offset:64176*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64176*0 + 3*656*FLEN/8, x4, x1, x2)

inst_21393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf701fffffffffff; valaddr_reg:x3; val_offset:64179*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64179*0 + 3*657*FLEN/8, x4, x1, x2)

inst_21394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf703fffffffffff; valaddr_reg:x3; val_offset:64182*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64182*0 + 3*658*FLEN/8, x4, x1, x2)

inst_21395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf707fffffffffff; valaddr_reg:x3; val_offset:64185*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64185*0 + 3*659*FLEN/8, x4, x1, x2)

inst_21396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf70ffffffffffff; valaddr_reg:x3; val_offset:64188*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64188*0 + 3*660*FLEN/8, x4, x1, x2)

inst_21397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf71ffffffffffff; valaddr_reg:x3; val_offset:64191*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64191*0 + 3*661*FLEN/8, x4, x1, x2)

inst_21398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf73ffffffffffff; valaddr_reg:x3; val_offset:64194*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64194*0 + 3*662*FLEN/8, x4, x1, x2)

inst_21399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf77ffffffffffff; valaddr_reg:x3; val_offset:64197*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64197*0 + 3*663*FLEN/8, x4, x1, x2)

inst_21400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf78000000000000; valaddr_reg:x3; val_offset:64200*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64200*0 + 3*664*FLEN/8, x4, x1, x2)

inst_21401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7c000000000000; valaddr_reg:x3; val_offset:64203*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64203*0 + 3*665*FLEN/8, x4, x1, x2)

inst_21402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7e000000000000; valaddr_reg:x3; val_offset:64206*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64206*0 + 3*666*FLEN/8, x4, x1, x2)

inst_21403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7f000000000000; valaddr_reg:x3; val_offset:64209*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64209*0 + 3*667*FLEN/8, x4, x1, x2)

inst_21404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7f800000000000; valaddr_reg:x3; val_offset:64212*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64212*0 + 3*668*FLEN/8, x4, x1, x2)

inst_21405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fc00000000000; valaddr_reg:x3; val_offset:64215*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64215*0 + 3*669*FLEN/8, x4, x1, x2)

inst_21406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fe00000000000; valaddr_reg:x3; val_offset:64218*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64218*0 + 3*670*FLEN/8, x4, x1, x2)

inst_21407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ff00000000000; valaddr_reg:x3; val_offset:64221*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64221*0 + 3*671*FLEN/8, x4, x1, x2)

inst_21408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ff80000000000; valaddr_reg:x3; val_offset:64224*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64224*0 + 3*672*FLEN/8, x4, x1, x2)

inst_21409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffc0000000000; valaddr_reg:x3; val_offset:64227*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64227*0 + 3*673*FLEN/8, x4, x1, x2)

inst_21410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffe0000000000; valaddr_reg:x3; val_offset:64230*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64230*0 + 3*674*FLEN/8, x4, x1, x2)

inst_21411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fff0000000000; valaddr_reg:x3; val_offset:64233*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64233*0 + 3*675*FLEN/8, x4, x1, x2)

inst_21412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fff8000000000; valaddr_reg:x3; val_offset:64236*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64236*0 + 3*676*FLEN/8, x4, x1, x2)

inst_21413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffc000000000; valaddr_reg:x3; val_offset:64239*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64239*0 + 3*677*FLEN/8, x4, x1, x2)

inst_21414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffe000000000; valaddr_reg:x3; val_offset:64242*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64242*0 + 3*678*FLEN/8, x4, x1, x2)

inst_21415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffff000000000; valaddr_reg:x3; val_offset:64245*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64245*0 + 3*679*FLEN/8, x4, x1, x2)

inst_21416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffff800000000; valaddr_reg:x3; val_offset:64248*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64248*0 + 3*680*FLEN/8, x4, x1, x2)

inst_21417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffc00000000; valaddr_reg:x3; val_offset:64251*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64251*0 + 3*681*FLEN/8, x4, x1, x2)

inst_21418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffe00000000; valaddr_reg:x3; val_offset:64254*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64254*0 + 3*682*FLEN/8, x4, x1, x2)

inst_21419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffff00000000; valaddr_reg:x3; val_offset:64257*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64257*0 + 3*683*FLEN/8, x4, x1, x2)

inst_21420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffff80000000; valaddr_reg:x3; val_offset:64260*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64260*0 + 3*684*FLEN/8, x4, x1, x2)

inst_21421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffc0000000; valaddr_reg:x3; val_offset:64263*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64263*0 + 3*685*FLEN/8, x4, x1, x2)

inst_21422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffe0000000; valaddr_reg:x3; val_offset:64266*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64266*0 + 3*686*FLEN/8, x4, x1, x2)

inst_21423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffff0000000; valaddr_reg:x3; val_offset:64269*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64269*0 + 3*687*FLEN/8, x4, x1, x2)

inst_21424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffff8000000; valaddr_reg:x3; val_offset:64272*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64272*0 + 3*688*FLEN/8, x4, x1, x2)

inst_21425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffc000000; valaddr_reg:x3; val_offset:64275*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64275*0 + 3*689*FLEN/8, x4, x1, x2)

inst_21426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffe000000; valaddr_reg:x3; val_offset:64278*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64278*0 + 3*690*FLEN/8, x4, x1, x2)

inst_21427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffff000000; valaddr_reg:x3; val_offset:64281*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64281*0 + 3*691*FLEN/8, x4, x1, x2)

inst_21428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffff800000; valaddr_reg:x3; val_offset:64284*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64284*0 + 3*692*FLEN/8, x4, x1, x2)

inst_21429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffc00000; valaddr_reg:x3; val_offset:64287*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64287*0 + 3*693*FLEN/8, x4, x1, x2)

inst_21430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffe00000; valaddr_reg:x3; val_offset:64290*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64290*0 + 3*694*FLEN/8, x4, x1, x2)

inst_21431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffff00000; valaddr_reg:x3; val_offset:64293*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64293*0 + 3*695*FLEN/8, x4, x1, x2)

inst_21432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffff80000; valaddr_reg:x3; val_offset:64296*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64296*0 + 3*696*FLEN/8, x4, x1, x2)

inst_21433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffc0000; valaddr_reg:x3; val_offset:64299*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64299*0 + 3*697*FLEN/8, x4, x1, x2)

inst_21434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffe0000; valaddr_reg:x3; val_offset:64302*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64302*0 + 3*698*FLEN/8, x4, x1, x2)

inst_21435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffff0000; valaddr_reg:x3; val_offset:64305*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64305*0 + 3*699*FLEN/8, x4, x1, x2)

inst_21436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffff8000; valaddr_reg:x3; val_offset:64308*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64308*0 + 3*700*FLEN/8, x4, x1, x2)

inst_21437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffffc000; valaddr_reg:x3; val_offset:64311*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64311*0 + 3*701*FLEN/8, x4, x1, x2)

inst_21438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffffe000; valaddr_reg:x3; val_offset:64314*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64314*0 + 3*702*FLEN/8, x4, x1, x2)

inst_21439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffff000; valaddr_reg:x3; val_offset:64317*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64317*0 + 3*703*FLEN/8, x4, x1, x2)

inst_21440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffff800; valaddr_reg:x3; val_offset:64320*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64320*0 + 3*704*FLEN/8, x4, x1, x2)

inst_21441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffffc00; valaddr_reg:x3; val_offset:64323*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64323*0 + 3*705*FLEN/8, x4, x1, x2)

inst_21442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffffe00; valaddr_reg:x3; val_offset:64326*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64326*0 + 3*706*FLEN/8, x4, x1, x2)

inst_21443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffffff00; valaddr_reg:x3; val_offset:64329*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64329*0 + 3*707*FLEN/8, x4, x1, x2)

inst_21444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffffff80; valaddr_reg:x3; val_offset:64332*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64332*0 + 3*708*FLEN/8, x4, x1, x2)

inst_21445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffffffc0; valaddr_reg:x3; val_offset:64335*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64335*0 + 3*709*FLEN/8, x4, x1, x2)

inst_21446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffffffe0; valaddr_reg:x3; val_offset:64338*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64338*0 + 3*710*FLEN/8, x4, x1, x2)

inst_21447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffffff0; valaddr_reg:x3; val_offset:64341*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64341*0 + 3*711*FLEN/8, x4, x1, x2)

inst_21448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffffff8; valaddr_reg:x3; val_offset:64344*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64344*0 + 3*712*FLEN/8, x4, x1, x2)

inst_21449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffffffc; valaddr_reg:x3; val_offset:64347*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64347*0 + 3*713*FLEN/8, x4, x1, x2)

inst_21450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7ffffffffffffe; valaddr_reg:x3; val_offset:64350*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64350*0 + 3*714*FLEN/8, x4, x1, x2)

inst_21451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf7fffffffffffff; valaddr_reg:x3; val_offset:64353*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64353*0 + 3*715*FLEN/8, x4, x1, x2)

inst_21452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:64356*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64356*0 + 3*716*FLEN/8, x4, x1, x2)

inst_21453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:64359*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64359*0 + 3*717*FLEN/8, x4, x1, x2)

inst_21454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:64362*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64362*0 + 3*718*FLEN/8, x4, x1, x2)

inst_21455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:64365*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64365*0 + 3*719*FLEN/8, x4, x1, x2)

inst_21456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:64368*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64368*0 + 3*720*FLEN/8, x4, x1, x2)

inst_21457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:64371*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64371*0 + 3*721*FLEN/8, x4, x1, x2)

inst_21458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:64374*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64374*0 + 3*722*FLEN/8, x4, x1, x2)

inst_21459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:64377*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64377*0 + 3*723*FLEN/8, x4, x1, x2)

inst_21460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:64380*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64380*0 + 3*724*FLEN/8, x4, x1, x2)

inst_21461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:64383*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64383*0 + 3*725*FLEN/8, x4, x1, x2)

inst_21462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:64386*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64386*0 + 3*726*FLEN/8, x4, x1, x2)

inst_21463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:64389*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64389*0 + 3*727*FLEN/8, x4, x1, x2)

inst_21464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:64392*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64392*0 + 3*728*FLEN/8, x4, x1, x2)

inst_21465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:64395*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64395*0 + 3*729*FLEN/8, x4, x1, x2)

inst_21466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:64398*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64398*0 + 3*730*FLEN/8, x4, x1, x2)

inst_21467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:64401*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64401*0 + 3*731*FLEN/8, x4, x1, x2)

inst_21468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:64404*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64404*0 + 3*732*FLEN/8, x4, x1, x2)

inst_21469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:64407*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64407*0 + 3*733*FLEN/8, x4, x1, x2)

inst_21470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:64410*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64410*0 + 3*734*FLEN/8, x4, x1, x2)

inst_21471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:64413*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64413*0 + 3*735*FLEN/8, x4, x1, x2)

inst_21472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:64416*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64416*0 + 3*736*FLEN/8, x4, x1, x2)

inst_21473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcced59b67d14f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x1c5db0c1b6e87 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cced59b67d14f; op2val:0x9fe1c5db0c1b6e87;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:64419*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64419*0 + 3*737*FLEN/8, x4, x1, x2)

inst_21474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000000000; valaddr_reg:x3; val_offset:64422*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64422*0 + 3*738*FLEN/8, x4, x1, x2)

inst_21475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000000001; valaddr_reg:x3; val_offset:64425*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64425*0 + 3*739*FLEN/8, x4, x1, x2)

inst_21476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000000003; valaddr_reg:x3; val_offset:64428*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64428*0 + 3*740*FLEN/8, x4, x1, x2)

inst_21477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000000007; valaddr_reg:x3; val_offset:64431*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64431*0 + 3*741*FLEN/8, x4, x1, x2)

inst_21478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000000000f; valaddr_reg:x3; val_offset:64434*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64434*0 + 3*742*FLEN/8, x4, x1, x2)

inst_21479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000000001f; valaddr_reg:x3; val_offset:64437*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64437*0 + 3*743*FLEN/8, x4, x1, x2)

inst_21480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000000003f; valaddr_reg:x3; val_offset:64440*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64440*0 + 3*744*FLEN/8, x4, x1, x2)

inst_21481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000000007f; valaddr_reg:x3; val_offset:64443*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64443*0 + 3*745*FLEN/8, x4, x1, x2)

inst_21482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000000000ff; valaddr_reg:x3; val_offset:64446*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64446*0 + 3*746*FLEN/8, x4, x1, x2)

inst_21483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000000001ff; valaddr_reg:x3; val_offset:64449*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64449*0 + 3*747*FLEN/8, x4, x1, x2)

inst_21484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000000003ff; valaddr_reg:x3; val_offset:64452*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64452*0 + 3*748*FLEN/8, x4, x1, x2)

inst_21485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000000007ff; valaddr_reg:x3; val_offset:64455*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64455*0 + 3*749*FLEN/8, x4, x1, x2)

inst_21486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000000fff; valaddr_reg:x3; val_offset:64458*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64458*0 + 3*750*FLEN/8, x4, x1, x2)

inst_21487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000001fff; valaddr_reg:x3; val_offset:64461*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64461*0 + 3*751*FLEN/8, x4, x1, x2)

inst_21488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000003fff; valaddr_reg:x3; val_offset:64464*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64464*0 + 3*752*FLEN/8, x4, x1, x2)

inst_21489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000007fff; valaddr_reg:x3; val_offset:64467*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64467*0 + 3*753*FLEN/8, x4, x1, x2)

inst_21490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000000ffff; valaddr_reg:x3; val_offset:64470*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64470*0 + 3*754*FLEN/8, x4, x1, x2)

inst_21491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000001ffff; valaddr_reg:x3; val_offset:64473*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64473*0 + 3*755*FLEN/8, x4, x1, x2)

inst_21492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000003ffff; valaddr_reg:x3; val_offset:64476*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64476*0 + 3*756*FLEN/8, x4, x1, x2)

inst_21493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000007ffff; valaddr_reg:x3; val_offset:64479*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64479*0 + 3*757*FLEN/8, x4, x1, x2)

inst_21494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000000fffff; valaddr_reg:x3; val_offset:64482*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64482*0 + 3*758*FLEN/8, x4, x1, x2)

inst_21495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000001fffff; valaddr_reg:x3; val_offset:64485*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64485*0 + 3*759*FLEN/8, x4, x1, x2)

inst_21496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000003fffff; valaddr_reg:x3; val_offset:64488*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64488*0 + 3*760*FLEN/8, x4, x1, x2)

inst_21497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000007fffff; valaddr_reg:x3; val_offset:64491*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64491*0 + 3*761*FLEN/8, x4, x1, x2)

inst_21498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000000ffffff; valaddr_reg:x3; val_offset:64494*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64494*0 + 3*762*FLEN/8, x4, x1, x2)

inst_21499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000001ffffff; valaddr_reg:x3; val_offset:64497*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64497*0 + 3*763*FLEN/8, x4, x1, x2)

inst_21500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000003ffffff; valaddr_reg:x3; val_offset:64500*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64500*0 + 3*764*FLEN/8, x4, x1, x2)

inst_21501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000007ffffff; valaddr_reg:x3; val_offset:64503*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64503*0 + 3*765*FLEN/8, x4, x1, x2)

inst_21502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000000fffffff; valaddr_reg:x3; val_offset:64506*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64506*0 + 3*766*FLEN/8, x4, x1, x2)

inst_21503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000001fffffff; valaddr_reg:x3; val_offset:64509*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64509*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854572711935,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854572974079,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854573498367,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854574546943,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854576644095,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854580838399,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854589227007,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854606004223,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854639558655,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854706667519,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836854840885247,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836855109320703,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836855646191615,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836856719933439,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836858867417087,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836863162384383,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836871752318975,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836888932188159,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836923291926527,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174836992011403263,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174837129450356735,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174837404328263679,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174837954084077567,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174839053595705343,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174841252618960895,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174845650665471999,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174854446758494207,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174872038944538623,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174907223316627455,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4174977592060805119,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4175118329549160447,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4175399804525871103,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4175962754479292415,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4177088654386135039,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4177088654386135040,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4178214554292977664,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4178777504246398976,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179058979223109632,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179199716711464960,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179270085455642624,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179305269827731456,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179322862013775872,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179331658106798080,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179336056153309184,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179338255176564736,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179339354688192512,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179339904444006400,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340179321913344,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340316760866816,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340385480343552,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340419840081920,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340437019951104,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340445609885696,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340449904852992,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340452052336640,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340453126078464,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340453662949376,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340453931384832,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454065602560,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454132711424,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454166265856,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454183043072,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454191431680,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454195625984,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454197723136,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454198771712,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199296000,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199558144,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199689216,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199754752,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199787520,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199803904,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199812096,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199816192,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199818240,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199819264,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199819776,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820032,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820160,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820224,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820256,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820272,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820280,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820284,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820286,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4179340454199820287,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6884639480704282671,64,FLEN)
NAN_BOXED(2329164959323555354,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927168,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927169,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927171,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927175,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927183,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927199,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927231,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927295,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927423,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761927679,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761928191,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761929215,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761931263,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761935359,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761943551,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761959935,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697761992703,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697762058239,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697762189311,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697762451455,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697762975743,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697764024319,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697766121471,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697770315775,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697778704383,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697795481599,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697829036031,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647697896144895,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647698030362623,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647698298798079,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647698835668991,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647699909410815,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647702056894463,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647706351861759,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647714941796351,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647732121665535,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647766481403903,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647835200880639,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321647972639834111,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321648247517741055,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321648797273554943,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321649896785182719,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321652095808438271,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321656493854949375,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321665289947971583,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321682882134015999,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321718066506104831,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321788435250282495,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13321929172738637823,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13322210647715348479,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13322773597668769791,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13323899497575612415,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13323899497575612416,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13325025397482455040,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13325588347435876352,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13325869822412587008,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326010559900942336,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326080928645120000,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326116113017208832,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326133705203253248,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326142501296275456,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326146899342786560,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326149098366042112,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326150197877669888,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326150747633483776,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151022511390720,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151159950344192,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151228669820928,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151263029559296,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151280209428480,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151288799363072,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151293094330368,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151295241814016,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151296315555840,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151296852426752,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297120862208,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297255079936,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297322188800,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297355743232,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297372520448,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297380909056,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297385103360,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297387200512,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297388249088,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297388773376,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389035520,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389166592,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389232128,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389264896,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389281280,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389289472,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389293568,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389295616,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389296640,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297152,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297408,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297536,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297600,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297632,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297648,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297656,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297660,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297662,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13326151297389297663,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6884749785640725083,64,FLEN)
NAN_BOXED(11520936287698841565,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408704,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408705,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408707,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408711,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408719,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408735,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408767,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408831,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408959,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409215,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409727,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166410751,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166412799,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166416895,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166425087,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166441471,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166474239,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166539775,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166670847,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166932991,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627167457279,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627168505855,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627170603007,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627174797311,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627183185919,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627199963135,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627233517567,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627300626431,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627434844159,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627703279615,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465628240150527,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465629313892351,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465631461375999,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465635756343295,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465644346277887,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465661526147071,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465695885885439,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465764605362175,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465902044315647,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466176922222591,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466726678036479,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340467826189664255,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340470025212919807,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340474423259430911,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340483219352453119,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340500811538497535,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340535995910586367,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340606364654764031,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340747102143119359,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341028577119830015,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341591527073251327,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093951,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093952,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9343843326886936576,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344406276840357888,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344687751817068544,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344828489305423872,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344898858049601536,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344934042421690368,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344951634607734784,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344960430700756992,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344964828747268096,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344967027770523648,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968127282151424,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968677037965312,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968951915872256,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969089354825728,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969158074302464,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969192434040832,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969209613910016,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969218203844608,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969222498811904,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969224646295552,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969225720037376,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226256908288,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226525343744,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226659561472,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226726670336,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226760224768,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226777001984,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226785390592,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226789584896,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226791682048,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226792730624,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793254912,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793517056,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793648128,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793713664,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793746432,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793762816,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793771008,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793775104,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793777152,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778176,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778688,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778944,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779072,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779136,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779168,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779184,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779192,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779196,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779198,64,FLEN)
NAN_BOXED(6884798947688106835,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779199,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895744,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895745,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895747,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895751,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895759,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895775,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895807,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895871,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100895999,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100896255,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100896767,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100897791,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100899839,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100903935,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100912127,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100928511,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050100961279,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050101026815,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050101157887,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050101420031,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050101944319,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050102992895,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050105090047,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050109284351,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050117672959,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050134450175,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050168004607,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050235113471,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050369331199,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880050637766655,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880051174637567,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880052248379391,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880054395863039,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880058690830335,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880067280764927,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880084460634111,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880118820372479,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880187539849215,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880324978802687,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228880599856709631,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228881149612523519,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228882249124151295,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228884448147406847,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228888846193917951,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228897642286940159,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228915234472984575,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4228950418845073407,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4229020787589251071,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4229161525077606399,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4229443000054317055,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4230005950007738367,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4231131849914580991,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4231131849914580992,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4232257749821423616,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4232820699774844928,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233102174751555584,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233242912239910912,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233313280984088576,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233348465356177408,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233366057542221824,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233374853635244032,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233379251681755136,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233381450705010688,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233382550216638464,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383099972452352,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383374850359296,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383512289312768,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383581008789504,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383615368527872,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383632548397056,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383641138331648,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383645433298944,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383647580782592,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383648654524416,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649191395328,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649459830784,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649594048512,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649661157376,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649694711808,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649711489024,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649719877632,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649724071936,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649726169088,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649727217664,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649727741952,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728004096,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728135168,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728200704,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728233472,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728249856,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728258048,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728262144,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728264192,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728265216,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728265728,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728265984,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266112,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266176,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266208,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266224,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266232,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266236,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266238,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4233383649728266239,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6884836149159079167,64,FLEN)
NAN_BOXED(2329031809817409875,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793216,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793217,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793219,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793223,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793231,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793247,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793279,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793343,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793471,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654793727,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654794239,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654795263,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654797311,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654801407,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654809599,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654825983,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654858751,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455654924287,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455655055359,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455655317503,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455655841791,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455656890367,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455658987519,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455663181823,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455671570431,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455688347647,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455721902079,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455789010943,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554455923228671,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554456191664127,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554456728535039,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554457802276863,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554459949760511,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554464244727807,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554472834662399,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554490014531583,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554524374269951,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554593093746687,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830554730532700159,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830555005410607103,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830555555166420991,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830556654678048767,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830558853701304319,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830563251747815423,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830572047840837631,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830589640026882047,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830624824398970879,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830695193143148543,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13830835930631503871,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13831117405608214527,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13831680355561635839,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13832806255468478463,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13832806255468478464,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13833932155375321088,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13834495105328742400,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13834776580305453056,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13834917317793808384,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13834987686537986048,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835022870910074880,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835040463096119296,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835049259189141504,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835053657235652608,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835055856258908160,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835056955770535936,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835057505526349824,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835057780404256768,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835057917843210240,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835057986562686976,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058020922425344,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058038102294528,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058046692229120,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058050987196416,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058053134680064,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058054208421888,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058054745292800,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055013728256,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055147945984,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055215054848,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055248609280,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055265386496,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055273775104,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055277969408,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055280066560,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055281115136,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055281639424,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055281901568,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282032640,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282098176,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282130944,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282147328,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282155520,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282159616,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282161664,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282162688,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163200,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163456,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163584,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163648,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163680,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163696,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163704,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163708,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163710,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(13835058055282163711,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18437736874454810625,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18437736874454810627,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18437736874454810631,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18437736874454810639,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18437736874454810655,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18437736874454810687,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18438637594380284723,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18439023617205487908,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18439538314305758822,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18439666988580826550,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18439838554280916855,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18440138794256074888,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18440439034231232921,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18440953731331503835,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18441339754156707020,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18441597102706842477,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18442240474082181056,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18442240474082181088,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18442240474082181104,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18442240474082181112,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18442240474082181116,64,FLEN)
NAN_BOXED(6884963754140836071,64,FLEN)
NAN_BOXED(16164006989578167624,64,FLEN)
NAN_BOXED(18442240474082181118,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829248,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829249,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829251,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829255,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829263,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829279,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829311,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829375,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829503,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635829759,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635830271,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635831295,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635833343,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635837439,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635845631,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635862015,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635894783,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658635960319,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658636091391,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658636353535,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658636877823,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658637926399,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658640023551,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658644217855,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658652606463,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658669383679,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658702938111,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658770046975,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525658904264703,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525659172700159,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525659709571071,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525660783312895,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525662930796543,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525667225763839,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525675815698431,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525692995567615,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525727355305983,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525796074782719,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794525933513736191,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794526208391643135,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794526758147457023,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794527857659084799,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794530056682340351,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794534454728851455,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794543250821873663,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794560843007918079,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794596027380006911,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794666396124184575,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13794807133612539903,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13795088608589250559,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13795651558542671871,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13796777458449514495,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13796777458449514496,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13797903358356357120,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13798466308309778432,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13798747783286489088,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13798888520774844416,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13798958889519022080,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13798994073891110912,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799011666077155328,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799020462170177536,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799024860216688640,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799027059239944192,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799028158751571968,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799028708507385856,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799028983385292800,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029120824246272,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029189543723008,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029223903461376,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029241083330560,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029249673265152,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029253968232448,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029256115716096,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029257189457920,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029257726328832,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029257994764288,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258128982016,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258196090880,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258229645312,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258246422528,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258254811136,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258259005440,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258261102592,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258262151168,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258262675456,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258262937600,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263068672,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263134208,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263166976,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263183360,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263191552,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263195648,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263197696,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263198720,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199232,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199488,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199616,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199680,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199712,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199728,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199736,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199740,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199742,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199743,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6885105347173273935,64,FLEN)
NAN_BOXED(11520706866382073479,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039872,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039873,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039875,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039879,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039887,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039903,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039935,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025039999,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025040127,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025040383,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025040895,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025041919,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025043967,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025048063,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025056255,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025072639,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025105407,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025170943,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025302015,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862025564159,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862026088447,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862027137023,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862029234175,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862033428479,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862041817087,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862058594303,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862092148735,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862159257599,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862293475327,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764862561910783,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
