
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_33792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x486c628502779 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8f183858a9d4c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9486c628502779; op2val:0x2048f183858a9d4c;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:101376*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101376*0 + 3*0*FLEN/8, x4, x1, x2)

inst_33793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x486c628502779 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8f183858a9d4c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9486c628502779; op2val:0x2048f183858a9d4c;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:101379*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101379*0 + 3*1*FLEN/8, x4, x1, x2)

inst_33794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x486c628502779 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8f183858a9d4c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9486c628502779; op2val:0x2048f183858a9d4c;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:101382*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101382*0 + 3*2*FLEN/8, x4, x1, x2)

inst_33795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x486c628502779 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8f183858a9d4c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9486c628502779; op2val:0x2048f183858a9d4c;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:101385*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101385*0 + 3*3*FLEN/8, x4, x1, x2)

inst_33796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x486c628502779 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8f183858a9d4c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9486c628502779; op2val:0x2048f183858a9d4c;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:101388*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101388*0 + 3*4*FLEN/8, x4, x1, x2)

inst_33797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x486c628502779 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x8f183858a9d4c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9486c628502779; op2val:0x2048f183858a9d4c;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:101391*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101391*0 + 3*5*FLEN/8, x4, x1, x2)

inst_33798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:101394*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101394*0 + 3*6*FLEN/8, x4, x1, x2)

inst_33799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:101397*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101397*0 + 3*7*FLEN/8, x4, x1, x2)

inst_33800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:101400*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101400*0 + 3*8*FLEN/8, x4, x1, x2)

inst_33801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:101403*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101403*0 + 3*9*FLEN/8, x4, x1, x2)

inst_33802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:101406*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101406*0 + 3*10*FLEN/8, x4, x1, x2)

inst_33803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:101409*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101409*0 + 3*11*FLEN/8, x4, x1, x2)

inst_33804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:101412*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101412*0 + 3*12*FLEN/8, x4, x1, x2)

inst_33805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:101415*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101415*0 + 3*13*FLEN/8, x4, x1, x2)

inst_33806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:101418*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101418*0 + 3*14*FLEN/8, x4, x1, x2)

inst_33807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:101421*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101421*0 + 3*15*FLEN/8, x4, x1, x2)

inst_33808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:101424*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101424*0 + 3*16*FLEN/8, x4, x1, x2)

inst_33809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:101427*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101427*0 + 3*17*FLEN/8, x4, x1, x2)

inst_33810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:101430*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101430*0 + 3*18*FLEN/8, x4, x1, x2)

inst_33811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:101433*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101433*0 + 3*19*FLEN/8, x4, x1, x2)

inst_33812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:101436*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101436*0 + 3*20*FLEN/8, x4, x1, x2)

inst_33813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:101439*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101439*0 + 3*21*FLEN/8, x4, x1, x2)

inst_33814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:101442*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101442*0 + 3*22*FLEN/8, x4, x1, x2)

inst_33815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:101445*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101445*0 + 3*23*FLEN/8, x4, x1, x2)

inst_33816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:101448*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101448*0 + 3*24*FLEN/8, x4, x1, x2)

inst_33817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:101451*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101451*0 + 3*25*FLEN/8, x4, x1, x2)

inst_33818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:101454*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101454*0 + 3*26*FLEN/8, x4, x1, x2)

inst_33819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:101457*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101457*0 + 3*27*FLEN/8, x4, x1, x2)

inst_33820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000000000; valaddr_reg:x3; val_offset:101460*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101460*0 + 3*28*FLEN/8, x4, x1, x2)

inst_33821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000000001; valaddr_reg:x3; val_offset:101463*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101463*0 + 3*29*FLEN/8, x4, x1, x2)

inst_33822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000000003; valaddr_reg:x3; val_offset:101466*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101466*0 + 3*30*FLEN/8, x4, x1, x2)

inst_33823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000000007; valaddr_reg:x3; val_offset:101469*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101469*0 + 3*31*FLEN/8, x4, x1, x2)

inst_33824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000000000f; valaddr_reg:x3; val_offset:101472*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101472*0 + 3*32*FLEN/8, x4, x1, x2)

inst_33825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000000001f; valaddr_reg:x3; val_offset:101475*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101475*0 + 3*33*FLEN/8, x4, x1, x2)

inst_33826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000000003f; valaddr_reg:x3; val_offset:101478*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101478*0 + 3*34*FLEN/8, x4, x1, x2)

inst_33827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000000007f; valaddr_reg:x3; val_offset:101481*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101481*0 + 3*35*FLEN/8, x4, x1, x2)

inst_33828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000000000ff; valaddr_reg:x3; val_offset:101484*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101484*0 + 3*36*FLEN/8, x4, x1, x2)

inst_33829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000000001ff; valaddr_reg:x3; val_offset:101487*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101487*0 + 3*37*FLEN/8, x4, x1, x2)

inst_33830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000000003ff; valaddr_reg:x3; val_offset:101490*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101490*0 + 3*38*FLEN/8, x4, x1, x2)

inst_33831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000000007ff; valaddr_reg:x3; val_offset:101493*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101493*0 + 3*39*FLEN/8, x4, x1, x2)

inst_33832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000000fff; valaddr_reg:x3; val_offset:101496*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101496*0 + 3*40*FLEN/8, x4, x1, x2)

inst_33833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000001fff; valaddr_reg:x3; val_offset:101499*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101499*0 + 3*41*FLEN/8, x4, x1, x2)

inst_33834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000003fff; valaddr_reg:x3; val_offset:101502*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101502*0 + 3*42*FLEN/8, x4, x1, x2)

inst_33835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000007fff; valaddr_reg:x3; val_offset:101505*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101505*0 + 3*43*FLEN/8, x4, x1, x2)

inst_33836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000000ffff; valaddr_reg:x3; val_offset:101508*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101508*0 + 3*44*FLEN/8, x4, x1, x2)

inst_33837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000001ffff; valaddr_reg:x3; val_offset:101511*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101511*0 + 3*45*FLEN/8, x4, x1, x2)

inst_33838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000003ffff; valaddr_reg:x3; val_offset:101514*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101514*0 + 3*46*FLEN/8, x4, x1, x2)

inst_33839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000007ffff; valaddr_reg:x3; val_offset:101517*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101517*0 + 3*47*FLEN/8, x4, x1, x2)

inst_33840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000000fffff; valaddr_reg:x3; val_offset:101520*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101520*0 + 3*48*FLEN/8, x4, x1, x2)

inst_33841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000001fffff; valaddr_reg:x3; val_offset:101523*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101523*0 + 3*49*FLEN/8, x4, x1, x2)

inst_33842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000003fffff; valaddr_reg:x3; val_offset:101526*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101526*0 + 3*50*FLEN/8, x4, x1, x2)

inst_33843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000007fffff; valaddr_reg:x3; val_offset:101529*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101529*0 + 3*51*FLEN/8, x4, x1, x2)

inst_33844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000000ffffff; valaddr_reg:x3; val_offset:101532*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101532*0 + 3*52*FLEN/8, x4, x1, x2)

inst_33845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000001ffffff; valaddr_reg:x3; val_offset:101535*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101535*0 + 3*53*FLEN/8, x4, x1, x2)

inst_33846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000003ffffff; valaddr_reg:x3; val_offset:101538*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101538*0 + 3*54*FLEN/8, x4, x1, x2)

inst_33847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000007ffffff; valaddr_reg:x3; val_offset:101541*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101541*0 + 3*55*FLEN/8, x4, x1, x2)

inst_33848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000000fffffff; valaddr_reg:x3; val_offset:101544*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101544*0 + 3*56*FLEN/8, x4, x1, x2)

inst_33849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000001fffffff; valaddr_reg:x3; val_offset:101547*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101547*0 + 3*57*FLEN/8, x4, x1, x2)

inst_33850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000003fffffff; valaddr_reg:x3; val_offset:101550*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101550*0 + 3*58*FLEN/8, x4, x1, x2)

inst_33851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000007fffffff; valaddr_reg:x3; val_offset:101553*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101553*0 + 3*59*FLEN/8, x4, x1, x2)

inst_33852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400000ffffffff; valaddr_reg:x3; val_offset:101556*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101556*0 + 3*60*FLEN/8, x4, x1, x2)

inst_33853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400001ffffffff; valaddr_reg:x3; val_offset:101559*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101559*0 + 3*61*FLEN/8, x4, x1, x2)

inst_33854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400003ffffffff; valaddr_reg:x3; val_offset:101562*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101562*0 + 3*62*FLEN/8, x4, x1, x2)

inst_33855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400007ffffffff; valaddr_reg:x3; val_offset:101565*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101565*0 + 3*63*FLEN/8, x4, x1, x2)

inst_33856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240000fffffffff; valaddr_reg:x3; val_offset:101568*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101568*0 + 3*64*FLEN/8, x4, x1, x2)

inst_33857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240001fffffffff; valaddr_reg:x3; val_offset:101571*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101571*0 + 3*65*FLEN/8, x4, x1, x2)

inst_33858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240003fffffffff; valaddr_reg:x3; val_offset:101574*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101574*0 + 3*66*FLEN/8, x4, x1, x2)

inst_33859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240007fffffffff; valaddr_reg:x3; val_offset:101577*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101577*0 + 3*67*FLEN/8, x4, x1, x2)

inst_33860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824000ffffffffff; valaddr_reg:x3; val_offset:101580*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101580*0 + 3*68*FLEN/8, x4, x1, x2)

inst_33861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824001ffffffffff; valaddr_reg:x3; val_offset:101583*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101583*0 + 3*69*FLEN/8, x4, x1, x2)

inst_33862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824003ffffffffff; valaddr_reg:x3; val_offset:101586*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101586*0 + 3*70*FLEN/8, x4, x1, x2)

inst_33863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824007ffffffffff; valaddr_reg:x3; val_offset:101589*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101589*0 + 3*71*FLEN/8, x4, x1, x2)

inst_33864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82400fffffffffff; valaddr_reg:x3; val_offset:101592*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101592*0 + 3*72*FLEN/8, x4, x1, x2)

inst_33865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82401fffffffffff; valaddr_reg:x3; val_offset:101595*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101595*0 + 3*73*FLEN/8, x4, x1, x2)

inst_33866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82403fffffffffff; valaddr_reg:x3; val_offset:101598*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101598*0 + 3*74*FLEN/8, x4, x1, x2)

inst_33867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x82407fffffffffff; valaddr_reg:x3; val_offset:101601*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101601*0 + 3*75*FLEN/8, x4, x1, x2)

inst_33868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8240ffffffffffff; valaddr_reg:x3; val_offset:101604*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101604*0 + 3*76*FLEN/8, x4, x1, x2)

inst_33869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8241ffffffffffff; valaddr_reg:x3; val_offset:101607*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101607*0 + 3*77*FLEN/8, x4, x1, x2)

inst_33870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8243ffffffffffff; valaddr_reg:x3; val_offset:101610*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101610*0 + 3*78*FLEN/8, x4, x1, x2)

inst_33871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8247ffffffffffff; valaddr_reg:x3; val_offset:101613*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101613*0 + 3*79*FLEN/8, x4, x1, x2)

inst_33872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x8248000000000000; valaddr_reg:x3; val_offset:101616*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101616*0 + 3*80*FLEN/8, x4, x1, x2)

inst_33873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824c000000000000; valaddr_reg:x3; val_offset:101619*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101619*0 + 3*81*FLEN/8, x4, x1, x2)

inst_33874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824e000000000000; valaddr_reg:x3; val_offset:101622*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101622*0 + 3*82*FLEN/8, x4, x1, x2)

inst_33875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824f000000000000; valaddr_reg:x3; val_offset:101625*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101625*0 + 3*83*FLEN/8, x4, x1, x2)

inst_33876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824f800000000000; valaddr_reg:x3; val_offset:101628*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101628*0 + 3*84*FLEN/8, x4, x1, x2)

inst_33877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fc00000000000; valaddr_reg:x3; val_offset:101631*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101631*0 + 3*85*FLEN/8, x4, x1, x2)

inst_33878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fe00000000000; valaddr_reg:x3; val_offset:101634*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101634*0 + 3*86*FLEN/8, x4, x1, x2)

inst_33879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ff00000000000; valaddr_reg:x3; val_offset:101637*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101637*0 + 3*87*FLEN/8, x4, x1, x2)

inst_33880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ff80000000000; valaddr_reg:x3; val_offset:101640*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101640*0 + 3*88*FLEN/8, x4, x1, x2)

inst_33881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffc0000000000; valaddr_reg:x3; val_offset:101643*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101643*0 + 3*89*FLEN/8, x4, x1, x2)

inst_33882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffe0000000000; valaddr_reg:x3; val_offset:101646*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101646*0 + 3*90*FLEN/8, x4, x1, x2)

inst_33883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fff0000000000; valaddr_reg:x3; val_offset:101649*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101649*0 + 3*91*FLEN/8, x4, x1, x2)

inst_33884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fff8000000000; valaddr_reg:x3; val_offset:101652*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101652*0 + 3*92*FLEN/8, x4, x1, x2)

inst_33885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffc000000000; valaddr_reg:x3; val_offset:101655*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101655*0 + 3*93*FLEN/8, x4, x1, x2)

inst_33886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffe000000000; valaddr_reg:x3; val_offset:101658*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101658*0 + 3*94*FLEN/8, x4, x1, x2)

inst_33887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffff000000000; valaddr_reg:x3; val_offset:101661*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101661*0 + 3*95*FLEN/8, x4, x1, x2)

inst_33888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffff800000000; valaddr_reg:x3; val_offset:101664*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101664*0 + 3*96*FLEN/8, x4, x1, x2)

inst_33889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffc00000000; valaddr_reg:x3; val_offset:101667*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101667*0 + 3*97*FLEN/8, x4, x1, x2)

inst_33890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffe00000000; valaddr_reg:x3; val_offset:101670*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101670*0 + 3*98*FLEN/8, x4, x1, x2)

inst_33891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffff00000000; valaddr_reg:x3; val_offset:101673*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101673*0 + 3*99*FLEN/8, x4, x1, x2)

inst_33892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffff80000000; valaddr_reg:x3; val_offset:101676*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101676*0 + 3*100*FLEN/8, x4, x1, x2)

inst_33893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffc0000000; valaddr_reg:x3; val_offset:101679*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101679*0 + 3*101*FLEN/8, x4, x1, x2)

inst_33894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffe0000000; valaddr_reg:x3; val_offset:101682*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101682*0 + 3*102*FLEN/8, x4, x1, x2)

inst_33895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffff0000000; valaddr_reg:x3; val_offset:101685*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101685*0 + 3*103*FLEN/8, x4, x1, x2)

inst_33896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffff8000000; valaddr_reg:x3; val_offset:101688*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101688*0 + 3*104*FLEN/8, x4, x1, x2)

inst_33897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffc000000; valaddr_reg:x3; val_offset:101691*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101691*0 + 3*105*FLEN/8, x4, x1, x2)

inst_33898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffe000000; valaddr_reg:x3; val_offset:101694*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101694*0 + 3*106*FLEN/8, x4, x1, x2)

inst_33899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffff000000; valaddr_reg:x3; val_offset:101697*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101697*0 + 3*107*FLEN/8, x4, x1, x2)

inst_33900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffff800000; valaddr_reg:x3; val_offset:101700*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101700*0 + 3*108*FLEN/8, x4, x1, x2)

inst_33901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffc00000; valaddr_reg:x3; val_offset:101703*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101703*0 + 3*109*FLEN/8, x4, x1, x2)

inst_33902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffe00000; valaddr_reg:x3; val_offset:101706*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101706*0 + 3*110*FLEN/8, x4, x1, x2)

inst_33903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffff00000; valaddr_reg:x3; val_offset:101709*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101709*0 + 3*111*FLEN/8, x4, x1, x2)

inst_33904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffff80000; valaddr_reg:x3; val_offset:101712*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101712*0 + 3*112*FLEN/8, x4, x1, x2)

inst_33905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffc0000; valaddr_reg:x3; val_offset:101715*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101715*0 + 3*113*FLEN/8, x4, x1, x2)

inst_33906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffe0000; valaddr_reg:x3; val_offset:101718*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101718*0 + 3*114*FLEN/8, x4, x1, x2)

inst_33907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffff0000; valaddr_reg:x3; val_offset:101721*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101721*0 + 3*115*FLEN/8, x4, x1, x2)

inst_33908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffff8000; valaddr_reg:x3; val_offset:101724*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101724*0 + 3*116*FLEN/8, x4, x1, x2)

inst_33909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffffc000; valaddr_reg:x3; val_offset:101727*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101727*0 + 3*117*FLEN/8, x4, x1, x2)

inst_33910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffffe000; valaddr_reg:x3; val_offset:101730*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101730*0 + 3*118*FLEN/8, x4, x1, x2)

inst_33911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffff000; valaddr_reg:x3; val_offset:101733*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101733*0 + 3*119*FLEN/8, x4, x1, x2)

inst_33912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffff800; valaddr_reg:x3; val_offset:101736*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101736*0 + 3*120*FLEN/8, x4, x1, x2)

inst_33913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffffc00; valaddr_reg:x3; val_offset:101739*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101739*0 + 3*121*FLEN/8, x4, x1, x2)

inst_33914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffffe00; valaddr_reg:x3; val_offset:101742*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101742*0 + 3*122*FLEN/8, x4, x1, x2)

inst_33915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffffff00; valaddr_reg:x3; val_offset:101745*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101745*0 + 3*123*FLEN/8, x4, x1, x2)

inst_33916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffffff80; valaddr_reg:x3; val_offset:101748*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101748*0 + 3*124*FLEN/8, x4, x1, x2)

inst_33917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffffffc0; valaddr_reg:x3; val_offset:101751*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101751*0 + 3*125*FLEN/8, x4, x1, x2)

inst_33918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffffffe0; valaddr_reg:x3; val_offset:101754*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101754*0 + 3*126*FLEN/8, x4, x1, x2)

inst_33919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffffff0; valaddr_reg:x3; val_offset:101757*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101757*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_33920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffffff8; valaddr_reg:x3; val_offset:101760*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101760*0 + 3*128*FLEN/8, x4, x1, x2)

inst_33921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffffffc; valaddr_reg:x3; val_offset:101763*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101763*0 + 3*129*FLEN/8, x4, x1, x2)

inst_33922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824ffffffffffffe; valaddr_reg:x3; val_offset:101766*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101766*0 + 3*130*FLEN/8, x4, x1, x2)

inst_33923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d187adfd6991 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d187adfd6991; op2val:0x8000;
op3val:0x824fffffffffffff; valaddr_reg:x3; val_offset:101769*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101769*0 + 3*131*FLEN/8, x4, x1, x2)

inst_33924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:101772*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101772*0 + 3*132*FLEN/8, x4, x1, x2)

inst_33925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:101775*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101775*0 + 3*133*FLEN/8, x4, x1, x2)

inst_33926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:101778*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101778*0 + 3*134*FLEN/8, x4, x1, x2)

inst_33927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:101781*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101781*0 + 3*135*FLEN/8, x4, x1, x2)

inst_33928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:101784*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101784*0 + 3*136*FLEN/8, x4, x1, x2)

inst_33929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:101787*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101787*0 + 3*137*FLEN/8, x4, x1, x2)

inst_33930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:101790*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101790*0 + 3*138*FLEN/8, x4, x1, x2)

inst_33931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:101793*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101793*0 + 3*139*FLEN/8, x4, x1, x2)

inst_33932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:101796*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101796*0 + 3*140*FLEN/8, x4, x1, x2)

inst_33933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:101799*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101799*0 + 3*141*FLEN/8, x4, x1, x2)

inst_33934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:101802*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101802*0 + 3*142*FLEN/8, x4, x1, x2)

inst_33935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:101805*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101805*0 + 3*143*FLEN/8, x4, x1, x2)

inst_33936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:101808*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101808*0 + 3*144*FLEN/8, x4, x1, x2)

inst_33937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:101811*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101811*0 + 3*145*FLEN/8, x4, x1, x2)

inst_33938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:101814*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101814*0 + 3*146*FLEN/8, x4, x1, x2)

inst_33939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:101817*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101817*0 + 3*147*FLEN/8, x4, x1, x2)

inst_33940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:101820*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101820*0 + 3*148*FLEN/8, x4, x1, x2)

inst_33941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:101823*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101823*0 + 3*149*FLEN/8, x4, x1, x2)

inst_33942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:101826*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101826*0 + 3*150*FLEN/8, x4, x1, x2)

inst_33943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:101829*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101829*0 + 3*151*FLEN/8, x4, x1, x2)

inst_33944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:101832*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101832*0 + 3*152*FLEN/8, x4, x1, x2)

inst_33945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:101835*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101835*0 + 3*153*FLEN/8, x4, x1, x2)

inst_33946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000000000; valaddr_reg:x3; val_offset:101838*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101838*0 + 3*154*FLEN/8, x4, x1, x2)

inst_33947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000000001; valaddr_reg:x3; val_offset:101841*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101841*0 + 3*155*FLEN/8, x4, x1, x2)

inst_33948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000000003; valaddr_reg:x3; val_offset:101844*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101844*0 + 3*156*FLEN/8, x4, x1, x2)

inst_33949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000000007; valaddr_reg:x3; val_offset:101847*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101847*0 + 3*157*FLEN/8, x4, x1, x2)

inst_33950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000000000f; valaddr_reg:x3; val_offset:101850*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101850*0 + 3*158*FLEN/8, x4, x1, x2)

inst_33951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000000001f; valaddr_reg:x3; val_offset:101853*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101853*0 + 3*159*FLEN/8, x4, x1, x2)

inst_33952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000000003f; valaddr_reg:x3; val_offset:101856*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101856*0 + 3*160*FLEN/8, x4, x1, x2)

inst_33953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000000007f; valaddr_reg:x3; val_offset:101859*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101859*0 + 3*161*FLEN/8, x4, x1, x2)

inst_33954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:101862*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101862*0 + 3*162*FLEN/8, x4, x1, x2)

inst_33955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:101865*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101865*0 + 3*163*FLEN/8, x4, x1, x2)

inst_33956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:101868*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101868*0 + 3*164*FLEN/8, x4, x1, x2)

inst_33957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:101871*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101871*0 + 3*165*FLEN/8, x4, x1, x2)

inst_33958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:101874*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101874*0 + 3*166*FLEN/8, x4, x1, x2)

inst_33959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:101877*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101877*0 + 3*167*FLEN/8, x4, x1, x2)

inst_33960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:101880*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101880*0 + 3*168*FLEN/8, x4, x1, x2)

inst_33961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:101883*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101883*0 + 3*169*FLEN/8, x4, x1, x2)

inst_33962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:101886*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101886*0 + 3*170*FLEN/8, x4, x1, x2)

inst_33963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:101889*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101889*0 + 3*171*FLEN/8, x4, x1, x2)

inst_33964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:101892*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101892*0 + 3*172*FLEN/8, x4, x1, x2)

inst_33965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:101895*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101895*0 + 3*173*FLEN/8, x4, x1, x2)

inst_33966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:101898*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101898*0 + 3*174*FLEN/8, x4, x1, x2)

inst_33967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:101901*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101901*0 + 3*175*FLEN/8, x4, x1, x2)

inst_33968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:101904*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101904*0 + 3*176*FLEN/8, x4, x1, x2)

inst_33969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:101907*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101907*0 + 3*177*FLEN/8, x4, x1, x2)

inst_33970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:101910*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101910*0 + 3*178*FLEN/8, x4, x1, x2)

inst_33971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:101913*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101913*0 + 3*179*FLEN/8, x4, x1, x2)

inst_33972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:101916*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101916*0 + 3*180*FLEN/8, x4, x1, x2)

inst_33973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:101919*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101919*0 + 3*181*FLEN/8, x4, x1, x2)

inst_33974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:101922*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101922*0 + 3*182*FLEN/8, x4, x1, x2)

inst_33975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:101925*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101925*0 + 3*183*FLEN/8, x4, x1, x2)

inst_33976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:101928*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101928*0 + 3*184*FLEN/8, x4, x1, x2)

inst_33977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:101931*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101931*0 + 3*185*FLEN/8, x4, x1, x2)

inst_33978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:101934*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101934*0 + 3*186*FLEN/8, x4, x1, x2)

inst_33979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:101937*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101937*0 + 3*187*FLEN/8, x4, x1, x2)

inst_33980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:101940*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101940*0 + 3*188*FLEN/8, x4, x1, x2)

inst_33981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:101943*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101943*0 + 3*189*FLEN/8, x4, x1, x2)

inst_33982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:101946*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101946*0 + 3*190*FLEN/8, x4, x1, x2)

inst_33983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:101949*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101949*0 + 3*191*FLEN/8, x4, x1, x2)

inst_33984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:101952*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101952*0 + 3*192*FLEN/8, x4, x1, x2)

inst_33985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:101955*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101955*0 + 3*193*FLEN/8, x4, x1, x2)

inst_33986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:101958*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101958*0 + 3*194*FLEN/8, x4, x1, x2)

inst_33987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:101961*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101961*0 + 3*195*FLEN/8, x4, x1, x2)

inst_33988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:101964*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101964*0 + 3*196*FLEN/8, x4, x1, x2)

inst_33989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:101967*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101967*0 + 3*197*FLEN/8, x4, x1, x2)

inst_33990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f00fffffffffff; valaddr_reg:x3; val_offset:101970*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101970*0 + 3*198*FLEN/8, x4, x1, x2)

inst_33991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f01fffffffffff; valaddr_reg:x3; val_offset:101973*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101973*0 + 3*199*FLEN/8, x4, x1, x2)

inst_33992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f03fffffffffff; valaddr_reg:x3; val_offset:101976*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101976*0 + 3*200*FLEN/8, x4, x1, x2)

inst_33993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f07fffffffffff; valaddr_reg:x3; val_offset:101979*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101979*0 + 3*201*FLEN/8, x4, x1, x2)

inst_33994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f0ffffffffffff; valaddr_reg:x3; val_offset:101982*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101982*0 + 3*202*FLEN/8, x4, x1, x2)

inst_33995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f1ffffffffffff; valaddr_reg:x3; val_offset:101985*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101985*0 + 3*203*FLEN/8, x4, x1, x2)

inst_33996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f3ffffffffffff; valaddr_reg:x3; val_offset:101988*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101988*0 + 3*204*FLEN/8, x4, x1, x2)

inst_33997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f7ffffffffffff; valaddr_reg:x3; val_offset:101991*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101991*0 + 3*205*FLEN/8, x4, x1, x2)

inst_33998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:101994*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101994*0 + 3*206*FLEN/8, x4, x1, x2)

inst_33999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:101997*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101997*0 + 3*207*FLEN/8, x4, x1, x2)

inst_34000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:102000*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102000*0 + 3*208*FLEN/8, x4, x1, x2)

inst_34001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:102003*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102003*0 + 3*209*FLEN/8, x4, x1, x2)

inst_34002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:102006*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102006*0 + 3*210*FLEN/8, x4, x1, x2)

inst_34003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:102009*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102009*0 + 3*211*FLEN/8, x4, x1, x2)

inst_34004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:102012*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102012*0 + 3*212*FLEN/8, x4, x1, x2)

inst_34005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:102015*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102015*0 + 3*213*FLEN/8, x4, x1, x2)

inst_34006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:102018*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102018*0 + 3*214*FLEN/8, x4, x1, x2)

inst_34007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:102021*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102021*0 + 3*215*FLEN/8, x4, x1, x2)

inst_34008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:102024*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102024*0 + 3*216*FLEN/8, x4, x1, x2)

inst_34009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:102027*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102027*0 + 3*217*FLEN/8, x4, x1, x2)

inst_34010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:102030*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102030*0 + 3*218*FLEN/8, x4, x1, x2)

inst_34011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:102033*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102033*0 + 3*219*FLEN/8, x4, x1, x2)

inst_34012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:102036*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102036*0 + 3*220*FLEN/8, x4, x1, x2)

inst_34013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:102039*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102039*0 + 3*221*FLEN/8, x4, x1, x2)

inst_34014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:102042*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102042*0 + 3*222*FLEN/8, x4, x1, x2)

inst_34015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:102045*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102045*0 + 3*223*FLEN/8, x4, x1, x2)

inst_34016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:102048*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102048*0 + 3*224*FLEN/8, x4, x1, x2)

inst_34017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:102051*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102051*0 + 3*225*FLEN/8, x4, x1, x2)

inst_34018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:102054*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102054*0 + 3*226*FLEN/8, x4, x1, x2)

inst_34019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:102057*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102057*0 + 3*227*FLEN/8, x4, x1, x2)

inst_34020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffe0000000; valaddr_reg:x3; val_offset:102060*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102060*0 + 3*228*FLEN/8, x4, x1, x2)

inst_34021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffff0000000; valaddr_reg:x3; val_offset:102063*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102063*0 + 3*229*FLEN/8, x4, x1, x2)

inst_34022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffff8000000; valaddr_reg:x3; val_offset:102066*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102066*0 + 3*230*FLEN/8, x4, x1, x2)

inst_34023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffc000000; valaddr_reg:x3; val_offset:102069*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102069*0 + 3*231*FLEN/8, x4, x1, x2)

inst_34024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffe000000; valaddr_reg:x3; val_offset:102072*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102072*0 + 3*232*FLEN/8, x4, x1, x2)

inst_34025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffff000000; valaddr_reg:x3; val_offset:102075*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102075*0 + 3*233*FLEN/8, x4, x1, x2)

inst_34026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffff800000; valaddr_reg:x3; val_offset:102078*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102078*0 + 3*234*FLEN/8, x4, x1, x2)

inst_34027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffc00000; valaddr_reg:x3; val_offset:102081*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102081*0 + 3*235*FLEN/8, x4, x1, x2)

inst_34028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffe00000; valaddr_reg:x3; val_offset:102084*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102084*0 + 3*236*FLEN/8, x4, x1, x2)

inst_34029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffff00000; valaddr_reg:x3; val_offset:102087*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102087*0 + 3*237*FLEN/8, x4, x1, x2)

inst_34030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffff80000; valaddr_reg:x3; val_offset:102090*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102090*0 + 3*238*FLEN/8, x4, x1, x2)

inst_34031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffc0000; valaddr_reg:x3; val_offset:102093*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102093*0 + 3*239*FLEN/8, x4, x1, x2)

inst_34032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffe0000; valaddr_reg:x3; val_offset:102096*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102096*0 + 3*240*FLEN/8, x4, x1, x2)

inst_34033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffff0000; valaddr_reg:x3; val_offset:102099*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102099*0 + 3*241*FLEN/8, x4, x1, x2)

inst_34034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffff8000; valaddr_reg:x3; val_offset:102102*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102102*0 + 3*242*FLEN/8, x4, x1, x2)

inst_34035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffffc000; valaddr_reg:x3; val_offset:102105*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102105*0 + 3*243*FLEN/8, x4, x1, x2)

inst_34036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffffe000; valaddr_reg:x3; val_offset:102108*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102108*0 + 3*244*FLEN/8, x4, x1, x2)

inst_34037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffff000; valaddr_reg:x3; val_offset:102111*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102111*0 + 3*245*FLEN/8, x4, x1, x2)

inst_34038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffff800; valaddr_reg:x3; val_offset:102114*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102114*0 + 3*246*FLEN/8, x4, x1, x2)

inst_34039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffffc00; valaddr_reg:x3; val_offset:102117*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102117*0 + 3*247*FLEN/8, x4, x1, x2)

inst_34040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffffe00; valaddr_reg:x3; val_offset:102120*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102120*0 + 3*248*FLEN/8, x4, x1, x2)

inst_34041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffffff00; valaddr_reg:x3; val_offset:102123*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102123*0 + 3*249*FLEN/8, x4, x1, x2)

inst_34042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffffff80; valaddr_reg:x3; val_offset:102126*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102126*0 + 3*250*FLEN/8, x4, x1, x2)

inst_34043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffffffc0; valaddr_reg:x3; val_offset:102129*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102129*0 + 3*251*FLEN/8, x4, x1, x2)

inst_34044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffffffe0; valaddr_reg:x3; val_offset:102132*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102132*0 + 3*252*FLEN/8, x4, x1, x2)

inst_34045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffffff0; valaddr_reg:x3; val_offset:102135*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102135*0 + 3*253*FLEN/8, x4, x1, x2)

inst_34046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffffff8; valaddr_reg:x3; val_offset:102138*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102138*0 + 3*254*FLEN/8, x4, x1, x2)

inst_34047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffffffc; valaddr_reg:x3; val_offset:102141*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102141*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_34048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3fffffffffffffe; valaddr_reg:x3; val_offset:102144*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102144*0 + 3*256*FLEN/8, x4, x1, x2)

inst_34049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d395c0afb02f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d395c0afb02f; op2val:0x0;
op3val:0x3ffffffffffffff; valaddr_reg:x3; val_offset:102147*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102147*0 + 3*257*FLEN/8, x4, x1, x2)

inst_34050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:102150*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102150*0 + 3*258*FLEN/8, x4, x1, x2)

inst_34051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:102153*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102153*0 + 3*259*FLEN/8, x4, x1, x2)

inst_34052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:102156*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102156*0 + 3*260*FLEN/8, x4, x1, x2)

inst_34053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:102159*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102159*0 + 3*261*FLEN/8, x4, x1, x2)

inst_34054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:102162*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102162*0 + 3*262*FLEN/8, x4, x1, x2)

inst_34055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:102165*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102165*0 + 3*263*FLEN/8, x4, x1, x2)

inst_34056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:102168*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102168*0 + 3*264*FLEN/8, x4, x1, x2)

inst_34057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:102171*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102171*0 + 3*265*FLEN/8, x4, x1, x2)

inst_34058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:102174*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102174*0 + 3*266*FLEN/8, x4, x1, x2)

inst_34059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:102177*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102177*0 + 3*267*FLEN/8, x4, x1, x2)

inst_34060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:102180*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102180*0 + 3*268*FLEN/8, x4, x1, x2)

inst_34061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:102183*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102183*0 + 3*269*FLEN/8, x4, x1, x2)

inst_34062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:102186*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102186*0 + 3*270*FLEN/8, x4, x1, x2)

inst_34063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:102189*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102189*0 + 3*271*FLEN/8, x4, x1, x2)

inst_34064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:102192*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102192*0 + 3*272*FLEN/8, x4, x1, x2)

inst_34065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:102195*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102195*0 + 3*273*FLEN/8, x4, x1, x2)

inst_34066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:102198*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102198*0 + 3*274*FLEN/8, x4, x1, x2)

inst_34067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:102201*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102201*0 + 3*275*FLEN/8, x4, x1, x2)

inst_34068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:102204*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102204*0 + 3*276*FLEN/8, x4, x1, x2)

inst_34069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:102207*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102207*0 + 3*277*FLEN/8, x4, x1, x2)

inst_34070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:102210*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102210*0 + 3*278*FLEN/8, x4, x1, x2)

inst_34071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:102213*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102213*0 + 3*279*FLEN/8, x4, x1, x2)

inst_34072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000000000; valaddr_reg:x3; val_offset:102216*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102216*0 + 3*280*FLEN/8, x4, x1, x2)

inst_34073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000000001; valaddr_reg:x3; val_offset:102219*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102219*0 + 3*281*FLEN/8, x4, x1, x2)

inst_34074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000000003; valaddr_reg:x3; val_offset:102222*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102222*0 + 3*282*FLEN/8, x4, x1, x2)

inst_34075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000000007; valaddr_reg:x3; val_offset:102225*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102225*0 + 3*283*FLEN/8, x4, x1, x2)

inst_34076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000000000f; valaddr_reg:x3; val_offset:102228*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102228*0 + 3*284*FLEN/8, x4, x1, x2)

inst_34077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000000001f; valaddr_reg:x3; val_offset:102231*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102231*0 + 3*285*FLEN/8, x4, x1, x2)

inst_34078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000000003f; valaddr_reg:x3; val_offset:102234*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102234*0 + 3*286*FLEN/8, x4, x1, x2)

inst_34079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000000007f; valaddr_reg:x3; val_offset:102237*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102237*0 + 3*287*FLEN/8, x4, x1, x2)

inst_34080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000000000ff; valaddr_reg:x3; val_offset:102240*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102240*0 + 3*288*FLEN/8, x4, x1, x2)

inst_34081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000000001ff; valaddr_reg:x3; val_offset:102243*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102243*0 + 3*289*FLEN/8, x4, x1, x2)

inst_34082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000000003ff; valaddr_reg:x3; val_offset:102246*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102246*0 + 3*290*FLEN/8, x4, x1, x2)

inst_34083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000000007ff; valaddr_reg:x3; val_offset:102249*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102249*0 + 3*291*FLEN/8, x4, x1, x2)

inst_34084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000000fff; valaddr_reg:x3; val_offset:102252*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102252*0 + 3*292*FLEN/8, x4, x1, x2)

inst_34085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000001fff; valaddr_reg:x3; val_offset:102255*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102255*0 + 3*293*FLEN/8, x4, x1, x2)

inst_34086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000003fff; valaddr_reg:x3; val_offset:102258*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102258*0 + 3*294*FLEN/8, x4, x1, x2)

inst_34087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000007fff; valaddr_reg:x3; val_offset:102261*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102261*0 + 3*295*FLEN/8, x4, x1, x2)

inst_34088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000000ffff; valaddr_reg:x3; val_offset:102264*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102264*0 + 3*296*FLEN/8, x4, x1, x2)

inst_34089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000001ffff; valaddr_reg:x3; val_offset:102267*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102267*0 + 3*297*FLEN/8, x4, x1, x2)

inst_34090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000003ffff; valaddr_reg:x3; val_offset:102270*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102270*0 + 3*298*FLEN/8, x4, x1, x2)

inst_34091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000007ffff; valaddr_reg:x3; val_offset:102273*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102273*0 + 3*299*FLEN/8, x4, x1, x2)

inst_34092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000000fffff; valaddr_reg:x3; val_offset:102276*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102276*0 + 3*300*FLEN/8, x4, x1, x2)

inst_34093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000001fffff; valaddr_reg:x3; val_offset:102279*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102279*0 + 3*301*FLEN/8, x4, x1, x2)

inst_34094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000003fffff; valaddr_reg:x3; val_offset:102282*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102282*0 + 3*302*FLEN/8, x4, x1, x2)

inst_34095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000007fffff; valaddr_reg:x3; val_offset:102285*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102285*0 + 3*303*FLEN/8, x4, x1, x2)

inst_34096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000000ffffff; valaddr_reg:x3; val_offset:102288*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102288*0 + 3*304*FLEN/8, x4, x1, x2)

inst_34097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000001ffffff; valaddr_reg:x3; val_offset:102291*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102291*0 + 3*305*FLEN/8, x4, x1, x2)

inst_34098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000003ffffff; valaddr_reg:x3; val_offset:102294*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102294*0 + 3*306*FLEN/8, x4, x1, x2)

inst_34099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000007ffffff; valaddr_reg:x3; val_offset:102297*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102297*0 + 3*307*FLEN/8, x4, x1, x2)

inst_34100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000000fffffff; valaddr_reg:x3; val_offset:102300*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102300*0 + 3*308*FLEN/8, x4, x1, x2)

inst_34101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000001fffffff; valaddr_reg:x3; val_offset:102303*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102303*0 + 3*309*FLEN/8, x4, x1, x2)

inst_34102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000003fffffff; valaddr_reg:x3; val_offset:102306*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102306*0 + 3*310*FLEN/8, x4, x1, x2)

inst_34103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000007fffffff; valaddr_reg:x3; val_offset:102309*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102309*0 + 3*311*FLEN/8, x4, x1, x2)

inst_34104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00000ffffffff; valaddr_reg:x3; val_offset:102312*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102312*0 + 3*312*FLEN/8, x4, x1, x2)

inst_34105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00001ffffffff; valaddr_reg:x3; val_offset:102315*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102315*0 + 3*313*FLEN/8, x4, x1, x2)

inst_34106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00003ffffffff; valaddr_reg:x3; val_offset:102318*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102318*0 + 3*314*FLEN/8, x4, x1, x2)

inst_34107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00007ffffffff; valaddr_reg:x3; val_offset:102321*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102321*0 + 3*315*FLEN/8, x4, x1, x2)

inst_34108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0000fffffffff; valaddr_reg:x3; val_offset:102324*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102324*0 + 3*316*FLEN/8, x4, x1, x2)

inst_34109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0001fffffffff; valaddr_reg:x3; val_offset:102327*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102327*0 + 3*317*FLEN/8, x4, x1, x2)

inst_34110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0003fffffffff; valaddr_reg:x3; val_offset:102330*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102330*0 + 3*318*FLEN/8, x4, x1, x2)

inst_34111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0007fffffffff; valaddr_reg:x3; val_offset:102333*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102333*0 + 3*319*FLEN/8, x4, x1, x2)

inst_34112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a000ffffffffff; valaddr_reg:x3; val_offset:102336*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102336*0 + 3*320*FLEN/8, x4, x1, x2)

inst_34113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a001ffffffffff; valaddr_reg:x3; val_offset:102339*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102339*0 + 3*321*FLEN/8, x4, x1, x2)

inst_34114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a003ffffffffff; valaddr_reg:x3; val_offset:102342*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102342*0 + 3*322*FLEN/8, x4, x1, x2)

inst_34115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a007ffffffffff; valaddr_reg:x3; val_offset:102345*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102345*0 + 3*323*FLEN/8, x4, x1, x2)

inst_34116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a00fffffffffff; valaddr_reg:x3; val_offset:102348*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102348*0 + 3*324*FLEN/8, x4, x1, x2)

inst_34117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a01fffffffffff; valaddr_reg:x3; val_offset:102351*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102351*0 + 3*325*FLEN/8, x4, x1, x2)

inst_34118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a03fffffffffff; valaddr_reg:x3; val_offset:102354*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102354*0 + 3*326*FLEN/8, x4, x1, x2)

inst_34119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a07fffffffffff; valaddr_reg:x3; val_offset:102357*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102357*0 + 3*327*FLEN/8, x4, x1, x2)

inst_34120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a0ffffffffffff; valaddr_reg:x3; val_offset:102360*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102360*0 + 3*328*FLEN/8, x4, x1, x2)

inst_34121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a1ffffffffffff; valaddr_reg:x3; val_offset:102363*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102363*0 + 3*329*FLEN/8, x4, x1, x2)

inst_34122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a3ffffffffffff; valaddr_reg:x3; val_offset:102366*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102366*0 + 3*330*FLEN/8, x4, x1, x2)

inst_34123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a7ffffffffffff; valaddr_reg:x3; val_offset:102369*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102369*0 + 3*331*FLEN/8, x4, x1, x2)

inst_34124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82a8000000000000; valaddr_reg:x3; val_offset:102372*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102372*0 + 3*332*FLEN/8, x4, x1, x2)

inst_34125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82ac000000000000; valaddr_reg:x3; val_offset:102375*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102375*0 + 3*333*FLEN/8, x4, x1, x2)

inst_34126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82ae000000000000; valaddr_reg:x3; val_offset:102378*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102378*0 + 3*334*FLEN/8, x4, x1, x2)

inst_34127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82af000000000000; valaddr_reg:x3; val_offset:102381*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102381*0 + 3*335*FLEN/8, x4, x1, x2)

inst_34128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82af800000000000; valaddr_reg:x3; val_offset:102384*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102384*0 + 3*336*FLEN/8, x4, x1, x2)

inst_34129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afc00000000000; valaddr_reg:x3; val_offset:102387*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102387*0 + 3*337*FLEN/8, x4, x1, x2)

inst_34130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afe00000000000; valaddr_reg:x3; val_offset:102390*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102390*0 + 3*338*FLEN/8, x4, x1, x2)

inst_34131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82aff00000000000; valaddr_reg:x3; val_offset:102393*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102393*0 + 3*339*FLEN/8, x4, x1, x2)

inst_34132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82aff80000000000; valaddr_reg:x3; val_offset:102396*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102396*0 + 3*340*FLEN/8, x4, x1, x2)

inst_34133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affc0000000000; valaddr_reg:x3; val_offset:102399*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102399*0 + 3*341*FLEN/8, x4, x1, x2)

inst_34134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affe0000000000; valaddr_reg:x3; val_offset:102402*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102402*0 + 3*342*FLEN/8, x4, x1, x2)

inst_34135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afff0000000000; valaddr_reg:x3; val_offset:102405*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102405*0 + 3*343*FLEN/8, x4, x1, x2)

inst_34136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afff8000000000; valaddr_reg:x3; val_offset:102408*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102408*0 + 3*344*FLEN/8, x4, x1, x2)

inst_34137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffc000000000; valaddr_reg:x3; val_offset:102411*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102411*0 + 3*345*FLEN/8, x4, x1, x2)

inst_34138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffe000000000; valaddr_reg:x3; val_offset:102414*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102414*0 + 3*346*FLEN/8, x4, x1, x2)

inst_34139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affff000000000; valaddr_reg:x3; val_offset:102417*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102417*0 + 3*347*FLEN/8, x4, x1, x2)

inst_34140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affff800000000; valaddr_reg:x3; val_offset:102420*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102420*0 + 3*348*FLEN/8, x4, x1, x2)

inst_34141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffc00000000; valaddr_reg:x3; val_offset:102423*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102423*0 + 3*349*FLEN/8, x4, x1, x2)

inst_34142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffe00000000; valaddr_reg:x3; val_offset:102426*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102426*0 + 3*350*FLEN/8, x4, x1, x2)

inst_34143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffff00000000; valaddr_reg:x3; val_offset:102429*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102429*0 + 3*351*FLEN/8, x4, x1, x2)

inst_34144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffff80000000; valaddr_reg:x3; val_offset:102432*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102432*0 + 3*352*FLEN/8, x4, x1, x2)

inst_34145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffc0000000; valaddr_reg:x3; val_offset:102435*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102435*0 + 3*353*FLEN/8, x4, x1, x2)

inst_34146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffe0000000; valaddr_reg:x3; val_offset:102438*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102438*0 + 3*354*FLEN/8, x4, x1, x2)

inst_34147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffff0000000; valaddr_reg:x3; val_offset:102441*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102441*0 + 3*355*FLEN/8, x4, x1, x2)

inst_34148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffff8000000; valaddr_reg:x3; val_offset:102444*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102444*0 + 3*356*FLEN/8, x4, x1, x2)

inst_34149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffc000000; valaddr_reg:x3; val_offset:102447*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102447*0 + 3*357*FLEN/8, x4, x1, x2)

inst_34150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffe000000; valaddr_reg:x3; val_offset:102450*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102450*0 + 3*358*FLEN/8, x4, x1, x2)

inst_34151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffff000000; valaddr_reg:x3; val_offset:102453*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102453*0 + 3*359*FLEN/8, x4, x1, x2)

inst_34152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffff800000; valaddr_reg:x3; val_offset:102456*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102456*0 + 3*360*FLEN/8, x4, x1, x2)

inst_34153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffc00000; valaddr_reg:x3; val_offset:102459*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102459*0 + 3*361*FLEN/8, x4, x1, x2)

inst_34154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffe00000; valaddr_reg:x3; val_offset:102462*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102462*0 + 3*362*FLEN/8, x4, x1, x2)

inst_34155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffff00000; valaddr_reg:x3; val_offset:102465*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102465*0 + 3*363*FLEN/8, x4, x1, x2)

inst_34156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffff80000; valaddr_reg:x3; val_offset:102468*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102468*0 + 3*364*FLEN/8, x4, x1, x2)

inst_34157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffc0000; valaddr_reg:x3; val_offset:102471*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102471*0 + 3*365*FLEN/8, x4, x1, x2)

inst_34158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffe0000; valaddr_reg:x3; val_offset:102474*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102474*0 + 3*366*FLEN/8, x4, x1, x2)

inst_34159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffff0000; valaddr_reg:x3; val_offset:102477*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102477*0 + 3*367*FLEN/8, x4, x1, x2)

inst_34160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffff8000; valaddr_reg:x3; val_offset:102480*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102480*0 + 3*368*FLEN/8, x4, x1, x2)

inst_34161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffffc000; valaddr_reg:x3; val_offset:102483*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102483*0 + 3*369*FLEN/8, x4, x1, x2)

inst_34162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffffe000; valaddr_reg:x3; val_offset:102486*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102486*0 + 3*370*FLEN/8, x4, x1, x2)

inst_34163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffff000; valaddr_reg:x3; val_offset:102489*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102489*0 + 3*371*FLEN/8, x4, x1, x2)

inst_34164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffff800; valaddr_reg:x3; val_offset:102492*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102492*0 + 3*372*FLEN/8, x4, x1, x2)

inst_34165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffffc00; valaddr_reg:x3; val_offset:102495*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102495*0 + 3*373*FLEN/8, x4, x1, x2)

inst_34166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffffe00; valaddr_reg:x3; val_offset:102498*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102498*0 + 3*374*FLEN/8, x4, x1, x2)

inst_34167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffffff00; valaddr_reg:x3; val_offset:102501*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102501*0 + 3*375*FLEN/8, x4, x1, x2)

inst_34168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffffff80; valaddr_reg:x3; val_offset:102504*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102504*0 + 3*376*FLEN/8, x4, x1, x2)

inst_34169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffffffc0; valaddr_reg:x3; val_offset:102507*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102507*0 + 3*377*FLEN/8, x4, x1, x2)

inst_34170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffffffe0; valaddr_reg:x3; val_offset:102510*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102510*0 + 3*378*FLEN/8, x4, x1, x2)

inst_34171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffffff0; valaddr_reg:x3; val_offset:102513*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102513*0 + 3*379*FLEN/8, x4, x1, x2)

inst_34172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffffff8; valaddr_reg:x3; val_offset:102516*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102516*0 + 3*380*FLEN/8, x4, x1, x2)

inst_34173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffffffc; valaddr_reg:x3; val_offset:102519*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102519*0 + 3*381*FLEN/8, x4, x1, x2)

inst_34174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82affffffffffffe; valaddr_reg:x3; val_offset:102522*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102522*0 + 3*382*FLEN/8, x4, x1, x2)

inst_34175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4d62fd6471449 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94d62fd6471449; op2val:0x8000;
op3val:0x82afffffffffffff; valaddr_reg:x3; val_offset:102525*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102525*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_34176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000000000; valaddr_reg:x3; val_offset:102528*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102528*0 + 3*384*FLEN/8, x4, x1, x2)

inst_34177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000000001; valaddr_reg:x3; val_offset:102531*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102531*0 + 3*385*FLEN/8, x4, x1, x2)

inst_34178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000000003; valaddr_reg:x3; val_offset:102534*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102534*0 + 3*386*FLEN/8, x4, x1, x2)

inst_34179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000000007; valaddr_reg:x3; val_offset:102537*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102537*0 + 3*387*FLEN/8, x4, x1, x2)

inst_34180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000000000f; valaddr_reg:x3; val_offset:102540*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102540*0 + 3*388*FLEN/8, x4, x1, x2)

inst_34181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000000001f; valaddr_reg:x3; val_offset:102543*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102543*0 + 3*389*FLEN/8, x4, x1, x2)

inst_34182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000000003f; valaddr_reg:x3; val_offset:102546*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102546*0 + 3*390*FLEN/8, x4, x1, x2)

inst_34183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000000007f; valaddr_reg:x3; val_offset:102549*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102549*0 + 3*391*FLEN/8, x4, x1, x2)

inst_34184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000000000ff; valaddr_reg:x3; val_offset:102552*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102552*0 + 3*392*FLEN/8, x4, x1, x2)

inst_34185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000000001ff; valaddr_reg:x3; val_offset:102555*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102555*0 + 3*393*FLEN/8, x4, x1, x2)

inst_34186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000000003ff; valaddr_reg:x3; val_offset:102558*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102558*0 + 3*394*FLEN/8, x4, x1, x2)

inst_34187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000000007ff; valaddr_reg:x3; val_offset:102561*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102561*0 + 3*395*FLEN/8, x4, x1, x2)

inst_34188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000000fff; valaddr_reg:x3; val_offset:102564*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102564*0 + 3*396*FLEN/8, x4, x1, x2)

inst_34189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000001fff; valaddr_reg:x3; val_offset:102567*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102567*0 + 3*397*FLEN/8, x4, x1, x2)

inst_34190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000003fff; valaddr_reg:x3; val_offset:102570*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102570*0 + 3*398*FLEN/8, x4, x1, x2)

inst_34191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000007fff; valaddr_reg:x3; val_offset:102573*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102573*0 + 3*399*FLEN/8, x4, x1, x2)

inst_34192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000000ffff; valaddr_reg:x3; val_offset:102576*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102576*0 + 3*400*FLEN/8, x4, x1, x2)

inst_34193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000001ffff; valaddr_reg:x3; val_offset:102579*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102579*0 + 3*401*FLEN/8, x4, x1, x2)

inst_34194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000003ffff; valaddr_reg:x3; val_offset:102582*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102582*0 + 3*402*FLEN/8, x4, x1, x2)

inst_34195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000007ffff; valaddr_reg:x3; val_offset:102585*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102585*0 + 3*403*FLEN/8, x4, x1, x2)

inst_34196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000000fffff; valaddr_reg:x3; val_offset:102588*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102588*0 + 3*404*FLEN/8, x4, x1, x2)

inst_34197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000001fffff; valaddr_reg:x3; val_offset:102591*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102591*0 + 3*405*FLEN/8, x4, x1, x2)

inst_34198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000003fffff; valaddr_reg:x3; val_offset:102594*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102594*0 + 3*406*FLEN/8, x4, x1, x2)

inst_34199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000007fffff; valaddr_reg:x3; val_offset:102597*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102597*0 + 3*407*FLEN/8, x4, x1, x2)

inst_34200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000000ffffff; valaddr_reg:x3; val_offset:102600*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102600*0 + 3*408*FLEN/8, x4, x1, x2)

inst_34201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000001ffffff; valaddr_reg:x3; val_offset:102603*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102603*0 + 3*409*FLEN/8, x4, x1, x2)

inst_34202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000003ffffff; valaddr_reg:x3; val_offset:102606*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102606*0 + 3*410*FLEN/8, x4, x1, x2)

inst_34203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000007ffffff; valaddr_reg:x3; val_offset:102609*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102609*0 + 3*411*FLEN/8, x4, x1, x2)

inst_34204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000000fffffff; valaddr_reg:x3; val_offset:102612*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102612*0 + 3*412*FLEN/8, x4, x1, x2)

inst_34205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000001fffffff; valaddr_reg:x3; val_offset:102615*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102615*0 + 3*413*FLEN/8, x4, x1, x2)

inst_34206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000003fffffff; valaddr_reg:x3; val_offset:102618*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102618*0 + 3*414*FLEN/8, x4, x1, x2)

inst_34207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000007fffffff; valaddr_reg:x3; val_offset:102621*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102621*0 + 3*415*FLEN/8, x4, x1, x2)

inst_34208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100000ffffffff; valaddr_reg:x3; val_offset:102624*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102624*0 + 3*416*FLEN/8, x4, x1, x2)

inst_34209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100001ffffffff; valaddr_reg:x3; val_offset:102627*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102627*0 + 3*417*FLEN/8, x4, x1, x2)

inst_34210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100003ffffffff; valaddr_reg:x3; val_offset:102630*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102630*0 + 3*418*FLEN/8, x4, x1, x2)

inst_34211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100007ffffffff; valaddr_reg:x3; val_offset:102633*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102633*0 + 3*419*FLEN/8, x4, x1, x2)

inst_34212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10000fffffffff; valaddr_reg:x3; val_offset:102636*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102636*0 + 3*420*FLEN/8, x4, x1, x2)

inst_34213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10001fffffffff; valaddr_reg:x3; val_offset:102639*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102639*0 + 3*421*FLEN/8, x4, x1, x2)

inst_34214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10003fffffffff; valaddr_reg:x3; val_offset:102642*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102642*0 + 3*422*FLEN/8, x4, x1, x2)

inst_34215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10007fffffffff; valaddr_reg:x3; val_offset:102645*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102645*0 + 3*423*FLEN/8, x4, x1, x2)

inst_34216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1000ffffffffff; valaddr_reg:x3; val_offset:102648*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102648*0 + 3*424*FLEN/8, x4, x1, x2)

inst_34217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1001ffffffffff; valaddr_reg:x3; val_offset:102651*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102651*0 + 3*425*FLEN/8, x4, x1, x2)

inst_34218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1003ffffffffff; valaddr_reg:x3; val_offset:102654*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102654*0 + 3*426*FLEN/8, x4, x1, x2)

inst_34219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1007ffffffffff; valaddr_reg:x3; val_offset:102657*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102657*0 + 3*427*FLEN/8, x4, x1, x2)

inst_34220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba100fffffffffff; valaddr_reg:x3; val_offset:102660*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102660*0 + 3*428*FLEN/8, x4, x1, x2)

inst_34221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba101fffffffffff; valaddr_reg:x3; val_offset:102663*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102663*0 + 3*429*FLEN/8, x4, x1, x2)

inst_34222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba103fffffffffff; valaddr_reg:x3; val_offset:102666*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102666*0 + 3*430*FLEN/8, x4, x1, x2)

inst_34223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba107fffffffffff; valaddr_reg:x3; val_offset:102669*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102669*0 + 3*431*FLEN/8, x4, x1, x2)

inst_34224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba10ffffffffffff; valaddr_reg:x3; val_offset:102672*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102672*0 + 3*432*FLEN/8, x4, x1, x2)

inst_34225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba11ffffffffffff; valaddr_reg:x3; val_offset:102675*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102675*0 + 3*433*FLEN/8, x4, x1, x2)

inst_34226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba13ffffffffffff; valaddr_reg:x3; val_offset:102678*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102678*0 + 3*434*FLEN/8, x4, x1, x2)

inst_34227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba17ffffffffffff; valaddr_reg:x3; val_offset:102681*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102681*0 + 3*435*FLEN/8, x4, x1, x2)

inst_34228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba18000000000000; valaddr_reg:x3; val_offset:102684*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102684*0 + 3*436*FLEN/8, x4, x1, x2)

inst_34229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1c000000000000; valaddr_reg:x3; val_offset:102687*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102687*0 + 3*437*FLEN/8, x4, x1, x2)

inst_34230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1e000000000000; valaddr_reg:x3; val_offset:102690*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102690*0 + 3*438*FLEN/8, x4, x1, x2)

inst_34231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1f000000000000; valaddr_reg:x3; val_offset:102693*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102693*0 + 3*439*FLEN/8, x4, x1, x2)

inst_34232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1f800000000000; valaddr_reg:x3; val_offset:102696*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102696*0 + 3*440*FLEN/8, x4, x1, x2)

inst_34233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fc00000000000; valaddr_reg:x3; val_offset:102699*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102699*0 + 3*441*FLEN/8, x4, x1, x2)

inst_34234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fe00000000000; valaddr_reg:x3; val_offset:102702*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102702*0 + 3*442*FLEN/8, x4, x1, x2)

inst_34235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ff00000000000; valaddr_reg:x3; val_offset:102705*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102705*0 + 3*443*FLEN/8, x4, x1, x2)

inst_34236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ff80000000000; valaddr_reg:x3; val_offset:102708*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102708*0 + 3*444*FLEN/8, x4, x1, x2)

inst_34237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffc0000000000; valaddr_reg:x3; val_offset:102711*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102711*0 + 3*445*FLEN/8, x4, x1, x2)

inst_34238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffe0000000000; valaddr_reg:x3; val_offset:102714*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102714*0 + 3*446*FLEN/8, x4, x1, x2)

inst_34239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fff0000000000; valaddr_reg:x3; val_offset:102717*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102717*0 + 3*447*FLEN/8, x4, x1, x2)

inst_34240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fff8000000000; valaddr_reg:x3; val_offset:102720*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102720*0 + 3*448*FLEN/8, x4, x1, x2)

inst_34241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffc000000000; valaddr_reg:x3; val_offset:102723*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102723*0 + 3*449*FLEN/8, x4, x1, x2)

inst_34242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffe000000000; valaddr_reg:x3; val_offset:102726*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102726*0 + 3*450*FLEN/8, x4, x1, x2)

inst_34243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffff000000000; valaddr_reg:x3; val_offset:102729*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102729*0 + 3*451*FLEN/8, x4, x1, x2)

inst_34244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffff800000000; valaddr_reg:x3; val_offset:102732*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102732*0 + 3*452*FLEN/8, x4, x1, x2)

inst_34245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffc00000000; valaddr_reg:x3; val_offset:102735*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102735*0 + 3*453*FLEN/8, x4, x1, x2)

inst_34246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffe00000000; valaddr_reg:x3; val_offset:102738*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102738*0 + 3*454*FLEN/8, x4, x1, x2)

inst_34247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffff00000000; valaddr_reg:x3; val_offset:102741*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102741*0 + 3*455*FLEN/8, x4, x1, x2)

inst_34248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffff80000000; valaddr_reg:x3; val_offset:102744*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102744*0 + 3*456*FLEN/8, x4, x1, x2)

inst_34249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffc0000000; valaddr_reg:x3; val_offset:102747*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102747*0 + 3*457*FLEN/8, x4, x1, x2)

inst_34250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffe0000000; valaddr_reg:x3; val_offset:102750*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102750*0 + 3*458*FLEN/8, x4, x1, x2)

inst_34251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffff0000000; valaddr_reg:x3; val_offset:102753*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102753*0 + 3*459*FLEN/8, x4, x1, x2)

inst_34252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffff8000000; valaddr_reg:x3; val_offset:102756*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102756*0 + 3*460*FLEN/8, x4, x1, x2)

inst_34253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffc000000; valaddr_reg:x3; val_offset:102759*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102759*0 + 3*461*FLEN/8, x4, x1, x2)

inst_34254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffe000000; valaddr_reg:x3; val_offset:102762*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102762*0 + 3*462*FLEN/8, x4, x1, x2)

inst_34255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffff000000; valaddr_reg:x3; val_offset:102765*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102765*0 + 3*463*FLEN/8, x4, x1, x2)

inst_34256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffff800000; valaddr_reg:x3; val_offset:102768*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102768*0 + 3*464*FLEN/8, x4, x1, x2)

inst_34257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffc00000; valaddr_reg:x3; val_offset:102771*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102771*0 + 3*465*FLEN/8, x4, x1, x2)

inst_34258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffe00000; valaddr_reg:x3; val_offset:102774*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102774*0 + 3*466*FLEN/8, x4, x1, x2)

inst_34259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffff00000; valaddr_reg:x3; val_offset:102777*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102777*0 + 3*467*FLEN/8, x4, x1, x2)

inst_34260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffff80000; valaddr_reg:x3; val_offset:102780*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102780*0 + 3*468*FLEN/8, x4, x1, x2)

inst_34261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffc0000; valaddr_reg:x3; val_offset:102783*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102783*0 + 3*469*FLEN/8, x4, x1, x2)

inst_34262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffe0000; valaddr_reg:x3; val_offset:102786*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102786*0 + 3*470*FLEN/8, x4, x1, x2)

inst_34263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffff0000; valaddr_reg:x3; val_offset:102789*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102789*0 + 3*471*FLEN/8, x4, x1, x2)

inst_34264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffff8000; valaddr_reg:x3; val_offset:102792*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102792*0 + 3*472*FLEN/8, x4, x1, x2)

inst_34265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffffc000; valaddr_reg:x3; val_offset:102795*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102795*0 + 3*473*FLEN/8, x4, x1, x2)

inst_34266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffffe000; valaddr_reg:x3; val_offset:102798*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102798*0 + 3*474*FLEN/8, x4, x1, x2)

inst_34267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffff000; valaddr_reg:x3; val_offset:102801*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102801*0 + 3*475*FLEN/8, x4, x1, x2)

inst_34268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffff800; valaddr_reg:x3; val_offset:102804*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102804*0 + 3*476*FLEN/8, x4, x1, x2)

inst_34269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffffc00; valaddr_reg:x3; val_offset:102807*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102807*0 + 3*477*FLEN/8, x4, x1, x2)

inst_34270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffffe00; valaddr_reg:x3; val_offset:102810*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102810*0 + 3*478*FLEN/8, x4, x1, x2)

inst_34271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffffff00; valaddr_reg:x3; val_offset:102813*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102813*0 + 3*479*FLEN/8, x4, x1, x2)

inst_34272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffffff80; valaddr_reg:x3; val_offset:102816*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102816*0 + 3*480*FLEN/8, x4, x1, x2)

inst_34273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffffffc0; valaddr_reg:x3; val_offset:102819*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102819*0 + 3*481*FLEN/8, x4, x1, x2)

inst_34274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffffffe0; valaddr_reg:x3; val_offset:102822*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102822*0 + 3*482*FLEN/8, x4, x1, x2)

inst_34275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffffff0; valaddr_reg:x3; val_offset:102825*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102825*0 + 3*483*FLEN/8, x4, x1, x2)

inst_34276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffffff8; valaddr_reg:x3; val_offset:102828*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102828*0 + 3*484*FLEN/8, x4, x1, x2)

inst_34277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffffffc; valaddr_reg:x3; val_offset:102831*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102831*0 + 3*485*FLEN/8, x4, x1, x2)

inst_34278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1ffffffffffffe; valaddr_reg:x3; val_offset:102834*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102834*0 + 3*486*FLEN/8, x4, x1, x2)

inst_34279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3a1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xba1fffffffffffff; valaddr_reg:x3; val_offset:102837*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102837*0 + 3*487*FLEN/8, x4, x1, x2)

inst_34280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:102840*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102840*0 + 3*488*FLEN/8, x4, x1, x2)

inst_34281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:102843*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102843*0 + 3*489*FLEN/8, x4, x1, x2)

inst_34282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:102846*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102846*0 + 3*490*FLEN/8, x4, x1, x2)

inst_34283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:102849*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102849*0 + 3*491*FLEN/8, x4, x1, x2)

inst_34284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:102852*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102852*0 + 3*492*FLEN/8, x4, x1, x2)

inst_34285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:102855*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102855*0 + 3*493*FLEN/8, x4, x1, x2)

inst_34286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:102858*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102858*0 + 3*494*FLEN/8, x4, x1, x2)

inst_34287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:102861*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102861*0 + 3*495*FLEN/8, x4, x1, x2)

inst_34288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:102864*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102864*0 + 3*496*FLEN/8, x4, x1, x2)

inst_34289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:102867*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102867*0 + 3*497*FLEN/8, x4, x1, x2)

inst_34290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:102870*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102870*0 + 3*498*FLEN/8, x4, x1, x2)

inst_34291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:102873*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102873*0 + 3*499*FLEN/8, x4, x1, x2)

inst_34292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:102876*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102876*0 + 3*500*FLEN/8, x4, x1, x2)

inst_34293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:102879*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102879*0 + 3*501*FLEN/8, x4, x1, x2)

inst_34294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:102882*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102882*0 + 3*502*FLEN/8, x4, x1, x2)

inst_34295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:102885*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102885*0 + 3*503*FLEN/8, x4, x1, x2)

inst_34296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:102888*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102888*0 + 3*504*FLEN/8, x4, x1, x2)

inst_34297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:102891*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102891*0 + 3*505*FLEN/8, x4, x1, x2)

inst_34298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:102894*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102894*0 + 3*506*FLEN/8, x4, x1, x2)

inst_34299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:102897*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102897*0 + 3*507*FLEN/8, x4, x1, x2)

inst_34300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:102900*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102900*0 + 3*508*FLEN/8, x4, x1, x2)

inst_34301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f185f97e97bb and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x87260666896dd and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f185f97e97bb; op2val:0x9fd87260666896dd;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:102903*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102903*0 + 3*509*FLEN/8, x4, x1, x2)

inst_34302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:102906*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102906*0 + 3*510*FLEN/8, x4, x1, x2)

inst_34303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:102909*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102909*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_34304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:102912*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102912*0 + 3*512*FLEN/8, x4, x1, x2)

inst_34305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:102915*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102915*0 + 3*513*FLEN/8, x4, x1, x2)

inst_34306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:102918*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102918*0 + 3*514*FLEN/8, x4, x1, x2)

inst_34307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:102921*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102921*0 + 3*515*FLEN/8, x4, x1, x2)

inst_34308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:102924*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102924*0 + 3*516*FLEN/8, x4, x1, x2)

inst_34309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:102927*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102927*0 + 3*517*FLEN/8, x4, x1, x2)

inst_34310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:102930*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102930*0 + 3*518*FLEN/8, x4, x1, x2)

inst_34311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:102933*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102933*0 + 3*519*FLEN/8, x4, x1, x2)

inst_34312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:102936*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102936*0 + 3*520*FLEN/8, x4, x1, x2)

inst_34313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:102939*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102939*0 + 3*521*FLEN/8, x4, x1, x2)

inst_34314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:102942*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102942*0 + 3*522*FLEN/8, x4, x1, x2)

inst_34315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:102945*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102945*0 + 3*523*FLEN/8, x4, x1, x2)

inst_34316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:102948*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102948*0 + 3*524*FLEN/8, x4, x1, x2)

inst_34317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:102951*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102951*0 + 3*525*FLEN/8, x4, x1, x2)

inst_34318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:102954*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102954*0 + 3*526*FLEN/8, x4, x1, x2)

inst_34319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:102957*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102957*0 + 3*527*FLEN/8, x4, x1, x2)

inst_34320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:102960*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102960*0 + 3*528*FLEN/8, x4, x1, x2)

inst_34321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:102963*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102963*0 + 3*529*FLEN/8, x4, x1, x2)

inst_34322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:102966*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102966*0 + 3*530*FLEN/8, x4, x1, x2)

inst_34323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:102969*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102969*0 + 3*531*FLEN/8, x4, x1, x2)

inst_34324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000000000; valaddr_reg:x3; val_offset:102972*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102972*0 + 3*532*FLEN/8, x4, x1, x2)

inst_34325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000000001; valaddr_reg:x3; val_offset:102975*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102975*0 + 3*533*FLEN/8, x4, x1, x2)

inst_34326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000000003; valaddr_reg:x3; val_offset:102978*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102978*0 + 3*534*FLEN/8, x4, x1, x2)

inst_34327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000000007; valaddr_reg:x3; val_offset:102981*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102981*0 + 3*535*FLEN/8, x4, x1, x2)

inst_34328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000000000f; valaddr_reg:x3; val_offset:102984*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102984*0 + 3*536*FLEN/8, x4, x1, x2)

inst_34329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000000001f; valaddr_reg:x3; val_offset:102987*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102987*0 + 3*537*FLEN/8, x4, x1, x2)

inst_34330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000000003f; valaddr_reg:x3; val_offset:102990*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102990*0 + 3*538*FLEN/8, x4, x1, x2)

inst_34331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000000007f; valaddr_reg:x3; val_offset:102993*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102993*0 + 3*539*FLEN/8, x4, x1, x2)

inst_34332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000000000ff; valaddr_reg:x3; val_offset:102996*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102996*0 + 3*540*FLEN/8, x4, x1, x2)

inst_34333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000000001ff; valaddr_reg:x3; val_offset:102999*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102999*0 + 3*541*FLEN/8, x4, x1, x2)

inst_34334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000000003ff; valaddr_reg:x3; val_offset:103002*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103002*0 + 3*542*FLEN/8, x4, x1, x2)

inst_34335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000000007ff; valaddr_reg:x3; val_offset:103005*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103005*0 + 3*543*FLEN/8, x4, x1, x2)

inst_34336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000000fff; valaddr_reg:x3; val_offset:103008*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103008*0 + 3*544*FLEN/8, x4, x1, x2)

inst_34337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000001fff; valaddr_reg:x3; val_offset:103011*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103011*0 + 3*545*FLEN/8, x4, x1, x2)

inst_34338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000003fff; valaddr_reg:x3; val_offset:103014*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103014*0 + 3*546*FLEN/8, x4, x1, x2)

inst_34339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000007fff; valaddr_reg:x3; val_offset:103017*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103017*0 + 3*547*FLEN/8, x4, x1, x2)

inst_34340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000000ffff; valaddr_reg:x3; val_offset:103020*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103020*0 + 3*548*FLEN/8, x4, x1, x2)

inst_34341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000001ffff; valaddr_reg:x3; val_offset:103023*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103023*0 + 3*549*FLEN/8, x4, x1, x2)

inst_34342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000003ffff; valaddr_reg:x3; val_offset:103026*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103026*0 + 3*550*FLEN/8, x4, x1, x2)

inst_34343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000007ffff; valaddr_reg:x3; val_offset:103029*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103029*0 + 3*551*FLEN/8, x4, x1, x2)

inst_34344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000000fffff; valaddr_reg:x3; val_offset:103032*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103032*0 + 3*552*FLEN/8, x4, x1, x2)

inst_34345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000001fffff; valaddr_reg:x3; val_offset:103035*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103035*0 + 3*553*FLEN/8, x4, x1, x2)

inst_34346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000003fffff; valaddr_reg:x3; val_offset:103038*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103038*0 + 3*554*FLEN/8, x4, x1, x2)

inst_34347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000007fffff; valaddr_reg:x3; val_offset:103041*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103041*0 + 3*555*FLEN/8, x4, x1, x2)

inst_34348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000000ffffff; valaddr_reg:x3; val_offset:103044*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103044*0 + 3*556*FLEN/8, x4, x1, x2)

inst_34349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000001ffffff; valaddr_reg:x3; val_offset:103047*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103047*0 + 3*557*FLEN/8, x4, x1, x2)

inst_34350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000003ffffff; valaddr_reg:x3; val_offset:103050*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103050*0 + 3*558*FLEN/8, x4, x1, x2)

inst_34351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000007ffffff; valaddr_reg:x3; val_offset:103053*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103053*0 + 3*559*FLEN/8, x4, x1, x2)

inst_34352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000000fffffff; valaddr_reg:x3; val_offset:103056*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103056*0 + 3*560*FLEN/8, x4, x1, x2)

inst_34353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000001fffffff; valaddr_reg:x3; val_offset:103059*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103059*0 + 3*561*FLEN/8, x4, x1, x2)

inst_34354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000003fffffff; valaddr_reg:x3; val_offset:103062*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103062*0 + 3*562*FLEN/8, x4, x1, x2)

inst_34355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000007fffffff; valaddr_reg:x3; val_offset:103065*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103065*0 + 3*563*FLEN/8, x4, x1, x2)

inst_34356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00000ffffffff; valaddr_reg:x3; val_offset:103068*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103068*0 + 3*564*FLEN/8, x4, x1, x2)

inst_34357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00001ffffffff; valaddr_reg:x3; val_offset:103071*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103071*0 + 3*565*FLEN/8, x4, x1, x2)

inst_34358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00003ffffffff; valaddr_reg:x3; val_offset:103074*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103074*0 + 3*566*FLEN/8, x4, x1, x2)

inst_34359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00007ffffffff; valaddr_reg:x3; val_offset:103077*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103077*0 + 3*567*FLEN/8, x4, x1, x2)

inst_34360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0000fffffffff; valaddr_reg:x3; val_offset:103080*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103080*0 + 3*568*FLEN/8, x4, x1, x2)

inst_34361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0001fffffffff; valaddr_reg:x3; val_offset:103083*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103083*0 + 3*569*FLEN/8, x4, x1, x2)

inst_34362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0003fffffffff; valaddr_reg:x3; val_offset:103086*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103086*0 + 3*570*FLEN/8, x4, x1, x2)

inst_34363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0007fffffffff; valaddr_reg:x3; val_offset:103089*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103089*0 + 3*571*FLEN/8, x4, x1, x2)

inst_34364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b000ffffffffff; valaddr_reg:x3; val_offset:103092*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103092*0 + 3*572*FLEN/8, x4, x1, x2)

inst_34365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b001ffffffffff; valaddr_reg:x3; val_offset:103095*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103095*0 + 3*573*FLEN/8, x4, x1, x2)

inst_34366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b003ffffffffff; valaddr_reg:x3; val_offset:103098*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103098*0 + 3*574*FLEN/8, x4, x1, x2)

inst_34367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b007ffffffffff; valaddr_reg:x3; val_offset:103101*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103101*0 + 3*575*FLEN/8, x4, x1, x2)

inst_34368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b00fffffffffff; valaddr_reg:x3; val_offset:103104*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103104*0 + 3*576*FLEN/8, x4, x1, x2)

inst_34369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b01fffffffffff; valaddr_reg:x3; val_offset:103107*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103107*0 + 3*577*FLEN/8, x4, x1, x2)

inst_34370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b03fffffffffff; valaddr_reg:x3; val_offset:103110*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103110*0 + 3*578*FLEN/8, x4, x1, x2)

inst_34371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b07fffffffffff; valaddr_reg:x3; val_offset:103113*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103113*0 + 3*579*FLEN/8, x4, x1, x2)

inst_34372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b0ffffffffffff; valaddr_reg:x3; val_offset:103116*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103116*0 + 3*580*FLEN/8, x4, x1, x2)

inst_34373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b1ffffffffffff; valaddr_reg:x3; val_offset:103119*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103119*0 + 3*581*FLEN/8, x4, x1, x2)

inst_34374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b3ffffffffffff; valaddr_reg:x3; val_offset:103122*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103122*0 + 3*582*FLEN/8, x4, x1, x2)

inst_34375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b7ffffffffffff; valaddr_reg:x3; val_offset:103125*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103125*0 + 3*583*FLEN/8, x4, x1, x2)

inst_34376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82b8000000000000; valaddr_reg:x3; val_offset:103128*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103128*0 + 3*584*FLEN/8, x4, x1, x2)

inst_34377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bc000000000000; valaddr_reg:x3; val_offset:103131*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103131*0 + 3*585*FLEN/8, x4, x1, x2)

inst_34378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82be000000000000; valaddr_reg:x3; val_offset:103134*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103134*0 + 3*586*FLEN/8, x4, x1, x2)

inst_34379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bf000000000000; valaddr_reg:x3; val_offset:103137*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103137*0 + 3*587*FLEN/8, x4, x1, x2)

inst_34380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bf800000000000; valaddr_reg:x3; val_offset:103140*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103140*0 + 3*588*FLEN/8, x4, x1, x2)

inst_34381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfc00000000000; valaddr_reg:x3; val_offset:103143*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103143*0 + 3*589*FLEN/8, x4, x1, x2)

inst_34382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfe00000000000; valaddr_reg:x3; val_offset:103146*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103146*0 + 3*590*FLEN/8, x4, x1, x2)

inst_34383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bff00000000000; valaddr_reg:x3; val_offset:103149*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103149*0 + 3*591*FLEN/8, x4, x1, x2)

inst_34384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bff80000000000; valaddr_reg:x3; val_offset:103152*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103152*0 + 3*592*FLEN/8, x4, x1, x2)

inst_34385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffc0000000000; valaddr_reg:x3; val_offset:103155*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103155*0 + 3*593*FLEN/8, x4, x1, x2)

inst_34386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffe0000000000; valaddr_reg:x3; val_offset:103158*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103158*0 + 3*594*FLEN/8, x4, x1, x2)

inst_34387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfff0000000000; valaddr_reg:x3; val_offset:103161*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103161*0 + 3*595*FLEN/8, x4, x1, x2)

inst_34388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfff8000000000; valaddr_reg:x3; val_offset:103164*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103164*0 + 3*596*FLEN/8, x4, x1, x2)

inst_34389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffc000000000; valaddr_reg:x3; val_offset:103167*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103167*0 + 3*597*FLEN/8, x4, x1, x2)

inst_34390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffe000000000; valaddr_reg:x3; val_offset:103170*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103170*0 + 3*598*FLEN/8, x4, x1, x2)

inst_34391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffff000000000; valaddr_reg:x3; val_offset:103173*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103173*0 + 3*599*FLEN/8, x4, x1, x2)

inst_34392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffff800000000; valaddr_reg:x3; val_offset:103176*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103176*0 + 3*600*FLEN/8, x4, x1, x2)

inst_34393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffc00000000; valaddr_reg:x3; val_offset:103179*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103179*0 + 3*601*FLEN/8, x4, x1, x2)

inst_34394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffe00000000; valaddr_reg:x3; val_offset:103182*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103182*0 + 3*602*FLEN/8, x4, x1, x2)

inst_34395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffff00000000; valaddr_reg:x3; val_offset:103185*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103185*0 + 3*603*FLEN/8, x4, x1, x2)

inst_34396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffff80000000; valaddr_reg:x3; val_offset:103188*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103188*0 + 3*604*FLEN/8, x4, x1, x2)

inst_34397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffc0000000; valaddr_reg:x3; val_offset:103191*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103191*0 + 3*605*FLEN/8, x4, x1, x2)

inst_34398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffe0000000; valaddr_reg:x3; val_offset:103194*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103194*0 + 3*606*FLEN/8, x4, x1, x2)

inst_34399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffff0000000; valaddr_reg:x3; val_offset:103197*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103197*0 + 3*607*FLEN/8, x4, x1, x2)

inst_34400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffff8000000; valaddr_reg:x3; val_offset:103200*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103200*0 + 3*608*FLEN/8, x4, x1, x2)

inst_34401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffc000000; valaddr_reg:x3; val_offset:103203*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103203*0 + 3*609*FLEN/8, x4, x1, x2)

inst_34402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffe000000; valaddr_reg:x3; val_offset:103206*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103206*0 + 3*610*FLEN/8, x4, x1, x2)

inst_34403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffff000000; valaddr_reg:x3; val_offset:103209*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103209*0 + 3*611*FLEN/8, x4, x1, x2)

inst_34404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffff800000; valaddr_reg:x3; val_offset:103212*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103212*0 + 3*612*FLEN/8, x4, x1, x2)

inst_34405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffc00000; valaddr_reg:x3; val_offset:103215*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103215*0 + 3*613*FLEN/8, x4, x1, x2)

inst_34406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffe00000; valaddr_reg:x3; val_offset:103218*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103218*0 + 3*614*FLEN/8, x4, x1, x2)

inst_34407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffff00000; valaddr_reg:x3; val_offset:103221*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103221*0 + 3*615*FLEN/8, x4, x1, x2)

inst_34408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffff80000; valaddr_reg:x3; val_offset:103224*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103224*0 + 3*616*FLEN/8, x4, x1, x2)

inst_34409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffc0000; valaddr_reg:x3; val_offset:103227*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103227*0 + 3*617*FLEN/8, x4, x1, x2)

inst_34410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffe0000; valaddr_reg:x3; val_offset:103230*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103230*0 + 3*618*FLEN/8, x4, x1, x2)

inst_34411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffff0000; valaddr_reg:x3; val_offset:103233*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103233*0 + 3*619*FLEN/8, x4, x1, x2)

inst_34412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffff8000; valaddr_reg:x3; val_offset:103236*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103236*0 + 3*620*FLEN/8, x4, x1, x2)

inst_34413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffffc000; valaddr_reg:x3; val_offset:103239*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103239*0 + 3*621*FLEN/8, x4, x1, x2)

inst_34414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffffe000; valaddr_reg:x3; val_offset:103242*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103242*0 + 3*622*FLEN/8, x4, x1, x2)

inst_34415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffff000; valaddr_reg:x3; val_offset:103245*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103245*0 + 3*623*FLEN/8, x4, x1, x2)

inst_34416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffff800; valaddr_reg:x3; val_offset:103248*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103248*0 + 3*624*FLEN/8, x4, x1, x2)

inst_34417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffffc00; valaddr_reg:x3; val_offset:103251*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103251*0 + 3*625*FLEN/8, x4, x1, x2)

inst_34418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffffe00; valaddr_reg:x3; val_offset:103254*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103254*0 + 3*626*FLEN/8, x4, x1, x2)

inst_34419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffffff00; valaddr_reg:x3; val_offset:103257*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103257*0 + 3*627*FLEN/8, x4, x1, x2)

inst_34420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffffff80; valaddr_reg:x3; val_offset:103260*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103260*0 + 3*628*FLEN/8, x4, x1, x2)

inst_34421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffffffc0; valaddr_reg:x3; val_offset:103263*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103263*0 + 3*629*FLEN/8, x4, x1, x2)

inst_34422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffffffe0; valaddr_reg:x3; val_offset:103266*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103266*0 + 3*630*FLEN/8, x4, x1, x2)

inst_34423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffffff0; valaddr_reg:x3; val_offset:103269*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103269*0 + 3*631*FLEN/8, x4, x1, x2)

inst_34424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffffff8; valaddr_reg:x3; val_offset:103272*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103272*0 + 3*632*FLEN/8, x4, x1, x2)

inst_34425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffffffc; valaddr_reg:x3; val_offset:103275*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103275*0 + 3*633*FLEN/8, x4, x1, x2)

inst_34426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bffffffffffffe; valaddr_reg:x3; val_offset:103278*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103278*0 + 3*634*FLEN/8, x4, x1, x2)

inst_34427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x4f6d0e495baaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f94f6d0e495baaf; op2val:0x8000;
op3val:0x82bfffffffffffff; valaddr_reg:x3; val_offset:103281*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103281*0 + 3*635*FLEN/8, x4, x1, x2)

inst_34428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:103284*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103284*0 + 3*636*FLEN/8, x4, x1, x2)

inst_34429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:103287*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103287*0 + 3*637*FLEN/8, x4, x1, x2)

inst_34430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:103290*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103290*0 + 3*638*FLEN/8, x4, x1, x2)

inst_34431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:103293*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103293*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_34432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:103296*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103296*0 + 3*640*FLEN/8, x4, x1, x2)

inst_34433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:103299*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103299*0 + 3*641*FLEN/8, x4, x1, x2)

inst_34434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:103302*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103302*0 + 3*642*FLEN/8, x4, x1, x2)

inst_34435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:103305*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103305*0 + 3*643*FLEN/8, x4, x1, x2)

inst_34436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:103308*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103308*0 + 3*644*FLEN/8, x4, x1, x2)

inst_34437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:103311*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103311*0 + 3*645*FLEN/8, x4, x1, x2)

inst_34438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:103314*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103314*0 + 3*646*FLEN/8, x4, x1, x2)

inst_34439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:103317*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103317*0 + 3*647*FLEN/8, x4, x1, x2)

inst_34440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:103320*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103320*0 + 3*648*FLEN/8, x4, x1, x2)

inst_34441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:103323*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103323*0 + 3*649*FLEN/8, x4, x1, x2)

inst_34442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:103326*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103326*0 + 3*650*FLEN/8, x4, x1, x2)

inst_34443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:103329*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103329*0 + 3*651*FLEN/8, x4, x1, x2)

inst_34444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:103332*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103332*0 + 3*652*FLEN/8, x4, x1, x2)

inst_34445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:103335*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103335*0 + 3*653*FLEN/8, x4, x1, x2)

inst_34446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:103338*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103338*0 + 3*654*FLEN/8, x4, x1, x2)

inst_34447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:103341*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103341*0 + 3*655*FLEN/8, x4, x1, x2)

inst_34448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:103344*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103344*0 + 3*656*FLEN/8, x4, x1, x2)

inst_34449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:103347*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103347*0 + 3*657*FLEN/8, x4, x1, x2)

inst_34450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:103350*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103350*0 + 3*658*FLEN/8, x4, x1, x2)

inst_34451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:103353*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103353*0 + 3*659*FLEN/8, x4, x1, x2)

inst_34452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:103356*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103356*0 + 3*660*FLEN/8, x4, x1, x2)

inst_34453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:103359*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103359*0 + 3*661*FLEN/8, x4, x1, x2)

inst_34454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:103362*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103362*0 + 3*662*FLEN/8, x4, x1, x2)

inst_34455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:103365*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103365*0 + 3*663*FLEN/8, x4, x1, x2)

inst_34456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:103368*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103368*0 + 3*664*FLEN/8, x4, x1, x2)

inst_34457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:103371*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103371*0 + 3*665*FLEN/8, x4, x1, x2)

inst_34458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:103374*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103374*0 + 3*666*FLEN/8, x4, x1, x2)

inst_34459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:103377*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103377*0 + 3*667*FLEN/8, x4, x1, x2)

inst_34460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:103380*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103380*0 + 3*668*FLEN/8, x4, x1, x2)

inst_34461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:103383*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103383*0 + 3*669*FLEN/8, x4, x1, x2)

inst_34462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:103386*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103386*0 + 3*670*FLEN/8, x4, x1, x2)

inst_34463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:103389*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103389*0 + 3*671*FLEN/8, x4, x1, x2)

inst_34464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:103392*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103392*0 + 3*672*FLEN/8, x4, x1, x2)

inst_34465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:103395*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103395*0 + 3*673*FLEN/8, x4, x1, x2)

inst_34466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:103398*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103398*0 + 3*674*FLEN/8, x4, x1, x2)

inst_34467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:103401*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103401*0 + 3*675*FLEN/8, x4, x1, x2)

inst_34468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:103404*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103404*0 + 3*676*FLEN/8, x4, x1, x2)

inst_34469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:103407*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103407*0 + 3*677*FLEN/8, x4, x1, x2)

inst_34470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:103410*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103410*0 + 3*678*FLEN/8, x4, x1, x2)

inst_34471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:103413*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103413*0 + 3*679*FLEN/8, x4, x1, x2)

inst_34472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:103416*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103416*0 + 3*680*FLEN/8, x4, x1, x2)

inst_34473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:103419*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103419*0 + 3*681*FLEN/8, x4, x1, x2)

inst_34474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:103422*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103422*0 + 3*682*FLEN/8, x4, x1, x2)

inst_34475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:103425*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103425*0 + 3*683*FLEN/8, x4, x1, x2)

inst_34476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:103428*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103428*0 + 3*684*FLEN/8, x4, x1, x2)

inst_34477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:103431*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103431*0 + 3*685*FLEN/8, x4, x1, x2)

inst_34478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:103434*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103434*0 + 3*686*FLEN/8, x4, x1, x2)

inst_34479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:103437*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103437*0 + 3*687*FLEN/8, x4, x1, x2)

inst_34480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:103440*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103440*0 + 3*688*FLEN/8, x4, x1, x2)

inst_34481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:103443*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103443*0 + 3*689*FLEN/8, x4, x1, x2)

inst_34482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:103446*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103446*0 + 3*690*FLEN/8, x4, x1, x2)

inst_34483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:103449*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103449*0 + 3*691*FLEN/8, x4, x1, x2)

inst_34484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:103452*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103452*0 + 3*692*FLEN/8, x4, x1, x2)

inst_34485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:103455*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103455*0 + 3*693*FLEN/8, x4, x1, x2)

inst_34486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:103458*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103458*0 + 3*694*FLEN/8, x4, x1, x2)

inst_34487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:103461*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103461*0 + 3*695*FLEN/8, x4, x1, x2)

inst_34488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:103464*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103464*0 + 3*696*FLEN/8, x4, x1, x2)

inst_34489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:103467*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103467*0 + 3*697*FLEN/8, x4, x1, x2)

inst_34490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:103470*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103470*0 + 3*698*FLEN/8, x4, x1, x2)

inst_34491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:103473*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103473*0 + 3*699*FLEN/8, x4, x1, x2)

inst_34492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:103476*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103476*0 + 3*700*FLEN/8, x4, x1, x2)

inst_34493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:103479*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103479*0 + 3*701*FLEN/8, x4, x1, x2)

inst_34494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:103482*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103482*0 + 3*702*FLEN/8, x4, x1, x2)

inst_34495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:103485*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103485*0 + 3*703*FLEN/8, x4, x1, x2)

inst_34496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:103488*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103488*0 + 3*704*FLEN/8, x4, x1, x2)

inst_34497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:103491*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103491*0 + 3*705*FLEN/8, x4, x1, x2)

inst_34498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:103494*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103494*0 + 3*706*FLEN/8, x4, x1, x2)

inst_34499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:103497*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103497*0 + 3*707*FLEN/8, x4, x1, x2)

inst_34500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:103500*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103500*0 + 3*708*FLEN/8, x4, x1, x2)

inst_34501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:103503*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103503*0 + 3*709*FLEN/8, x4, x1, x2)

inst_34502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:103506*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103506*0 + 3*710*FLEN/8, x4, x1, x2)

inst_34503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:103509*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103509*0 + 3*711*FLEN/8, x4, x1, x2)

inst_34504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:103512*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103512*0 + 3*712*FLEN/8, x4, x1, x2)

inst_34505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:103515*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103515*0 + 3*713*FLEN/8, x4, x1, x2)

inst_34506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:103518*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103518*0 + 3*714*FLEN/8, x4, x1, x2)

inst_34507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:103521*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103521*0 + 3*715*FLEN/8, x4, x1, x2)

inst_34508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:103524*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103524*0 + 3*716*FLEN/8, x4, x1, x2)

inst_34509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:103527*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103527*0 + 3*717*FLEN/8, x4, x1, x2)

inst_34510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:103530*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103530*0 + 3*718*FLEN/8, x4, x1, x2)

inst_34511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:103533*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103533*0 + 3*719*FLEN/8, x4, x1, x2)

inst_34512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:103536*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103536*0 + 3*720*FLEN/8, x4, x1, x2)

inst_34513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:103539*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103539*0 + 3*721*FLEN/8, x4, x1, x2)

inst_34514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:103542*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103542*0 + 3*722*FLEN/8, x4, x1, x2)

inst_34515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:103545*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103545*0 + 3*723*FLEN/8, x4, x1, x2)

inst_34516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:103548*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103548*0 + 3*724*FLEN/8, x4, x1, x2)

inst_34517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:103551*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103551*0 + 3*725*FLEN/8, x4, x1, x2)

inst_34518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:103554*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103554*0 + 3*726*FLEN/8, x4, x1, x2)

inst_34519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:103557*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103557*0 + 3*727*FLEN/8, x4, x1, x2)

inst_34520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:103560*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103560*0 + 3*728*FLEN/8, x4, x1, x2)

inst_34521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:103563*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103563*0 + 3*729*FLEN/8, x4, x1, x2)

inst_34522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:103566*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103566*0 + 3*730*FLEN/8, x4, x1, x2)

inst_34523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:103569*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103569*0 + 3*731*FLEN/8, x4, x1, x2)

inst_34524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:103572*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103572*0 + 3*732*FLEN/8, x4, x1, x2)

inst_34525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:103575*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103575*0 + 3*733*FLEN/8, x4, x1, x2)

inst_34526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:103578*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103578*0 + 3*734*FLEN/8, x4, x1, x2)

inst_34527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:103581*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103581*0 + 3*735*FLEN/8, x4, x1, x2)

inst_34528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:103584*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103584*0 + 3*736*FLEN/8, x4, x1, x2)

inst_34529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:103587*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103587*0 + 3*737*FLEN/8, x4, x1, x2)

inst_34530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:103590*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103590*0 + 3*738*FLEN/8, x4, x1, x2)

inst_34531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:103593*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103593*0 + 3*739*FLEN/8, x4, x1, x2)

inst_34532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:103596*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103596*0 + 3*740*FLEN/8, x4, x1, x2)

inst_34533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:103599*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103599*0 + 3*741*FLEN/8, x4, x1, x2)

inst_34534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:103602*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103602*0 + 3*742*FLEN/8, x4, x1, x2)

inst_34535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:103605*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103605*0 + 3*743*FLEN/8, x4, x1, x2)

inst_34536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:103608*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103608*0 + 3*744*FLEN/8, x4, x1, x2)

inst_34537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:103611*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103611*0 + 3*745*FLEN/8, x4, x1, x2)

inst_34538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:103614*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103614*0 + 3*746*FLEN/8, x4, x1, x2)

inst_34539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:103617*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103617*0 + 3*747*FLEN/8, x4, x1, x2)

inst_34540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:103620*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103620*0 + 3*748*FLEN/8, x4, x1, x2)

inst_34541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:103623*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103623*0 + 3*749*FLEN/8, x4, x1, x2)

inst_34542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:103626*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103626*0 + 3*750*FLEN/8, x4, x1, x2)

inst_34543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:103629*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103629*0 + 3*751*FLEN/8, x4, x1, x2)

inst_34544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:103632*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103632*0 + 3*752*FLEN/8, x4, x1, x2)

inst_34545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffffff00; valaddr_reg:x3; val_offset:103635*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103635*0 + 3*753*FLEN/8, x4, x1, x2)

inst_34546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffffff80; valaddr_reg:x3; val_offset:103638*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103638*0 + 3*754*FLEN/8, x4, x1, x2)

inst_34547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:103641*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103641*0 + 3*755*FLEN/8, x4, x1, x2)

inst_34548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:103644*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103644*0 + 3*756*FLEN/8, x4, x1, x2)

inst_34549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffffff0; valaddr_reg:x3; val_offset:103647*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103647*0 + 3*757*FLEN/8, x4, x1, x2)

inst_34550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffffff8; valaddr_reg:x3; val_offset:103650*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103650*0 + 3*758*FLEN/8, x4, x1, x2)

inst_34551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:103653*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103653*0 + 3*759*FLEN/8, x4, x1, x2)

inst_34552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:103656*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103656*0 + 3*760*FLEN/8, x4, x1, x2)

inst_34553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x51b865d0c6ac3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f951b865d0c6ac3; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:103659*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103659*0 + 3*761*FLEN/8, x4, x1, x2)

inst_34554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x52079cf626139 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f952079cf626139; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:103662*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103662*0 + 3*762*FLEN/8, x4, x1, x2)

inst_34555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x52079cf626139 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f952079cf626139; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:103665*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103665*0 + 3*763*FLEN/8, x4, x1, x2)

inst_34556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x52079cf626139 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f952079cf626139; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:103668*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103668*0 + 3*764*FLEN/8, x4, x1, x2)

inst_34557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x52079cf626139 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f952079cf626139; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:103671*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103671*0 + 3*765*FLEN/8, x4, x1, x2)

inst_34558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x52079cf626139 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f952079cf626139; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:103674*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103674*0 + 3*766*FLEN/8, x4, x1, x2)

inst_34559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x52079cf626139 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f952079cf626139; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:103677*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103677*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6887277915794319225,64,FLEN)
NAN_BOXED(2326374754720324940,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6887277915794319225,64,FLEN)
NAN_BOXED(2326374754720324940,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6887277915794319225,64,FLEN)
NAN_BOXED(2326374754720324940,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6887277915794319225,64,FLEN)
NAN_BOXED(2326374754720324940,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6887277915794319225,64,FLEN)
NAN_BOXED(2326374754720324940,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6887277915794319225,64,FLEN)
NAN_BOXED(2326374754720324940,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113664,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113665,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113667,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113671,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113679,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113695,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113727,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113791,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113919,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114175,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440114687,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440115711,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440117759,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440121855,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440130047,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440146431,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440179199,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440244735,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440375807,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440637951,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623441162239,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623442210815,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623444307967,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623448502271,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623456890879,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623473668095,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623507222527,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623574331391,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623708549119,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623976984575,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501624513855487,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501625587597311,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501627735080959,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501632030048255,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501640619982847,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501657799852031,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501692159590399,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501760879067135,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501898318020607,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502173195927551,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385502722951741439,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385503822463369215,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385506021486624767,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385510419533135871,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385519215626158079,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385536807812202495,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385571992184291327,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385642360928468991,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385783098416824319,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386064573393534975,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9386627523346956287,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798911,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9387753423253798912,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9388879323160641536,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389442273114062848,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389723748090773504,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389864485579128832,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389934854323306496,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389970038695395328,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389987630881439744,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9389996426974461952,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390000825020973056,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390003024044228608,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004123555856384,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004673311670272,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390004948189577216,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005085628530688,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005154348007424,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005188707745792,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005205887614976,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005214477549568,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005218772516864,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005220920000512,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005221993742336,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222530613248,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222799048704,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005222933266432,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223000375296,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223033929728,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223050706944,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223059095552,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223063289856,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223065387008,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066435584,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223066959872,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067222016,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067353088,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067418624,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067451392,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067467776,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067475968,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067480064,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067482112,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483136,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483648,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067483904,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484032,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484096,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484128,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484144,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484152,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484156,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484158,64,FLEN)
NAN_BOXED(6887360110826187153,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484159,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341248,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341249,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341251,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341255,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341263,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341279,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341311,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341375,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341503,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341759,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524342271,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524343295,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524345343,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524349439,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524357631,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524374015,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524406783,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524472319,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524603391,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524865535,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776525389823,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776526438399,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776528535551,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776532729855,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776541118463,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776557895679,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776591450111,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776658558975,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776792776703,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777061212159,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777598083071,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726778671824895,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726780819308543,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726785114275839,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726793704210431,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726810884079615,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726845243817983,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726913963294719,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727051402248191,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727326280155135,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727876035969023,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283728975547596799,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283731174570852351,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283735572617363455,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283744368710385663,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283761960896430079,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283797145268518911,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283867514012696575,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284008251501051903,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284289726477762559,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284852676431183871,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026495,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026496,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287104476244869120,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287667426198290432,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287948901175001088,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288089638663356416,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288160007407534080,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288195191779622912,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288212783965667328,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288221580058689536,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288225978105200640,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288228177128456192,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229276640083968,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229826395897856,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230101273804800,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230238712758272,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230307432235008,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230341791973376,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230358971842560,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230367561777152,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230371856744448,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230374004228096,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375077969920,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375614840832,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375883276288,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376017494016,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376084602880,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376118157312,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376134934528,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376143323136,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376147517440,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376149614592,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376150663168,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151187456,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151449600,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151580672,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151646208,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151678976,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151695360,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151703552,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151707648,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151709696,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151710720,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711232,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711488,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711616,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711680,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711712,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711728,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711736,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711740,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711742,64,FLEN)
NAN_BOXED(6887362370292658223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711743,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336640,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336641,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336643,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336647,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336655,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336671,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336703,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336767,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336895,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204337151,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204337663,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204338687,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204340735,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204344831,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204353023,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204369407,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204402175,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204467711,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204598783,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204860927,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221205385215,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221206433791,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221208530943,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221212725247,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221221113855,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221237891071,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221271445503,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221338554367,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221472772095,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221741207551,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523222278078463,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523223351820287,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523225499303935,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523229794271231,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523238384205823,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523255564075007,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523289923813375,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523358643290111,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523496082243583,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523770960150527,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412524320715964415,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412525420227592191,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412527619250847743,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412532017297358847,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412540813390381055,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412558405576425471,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412593589948514303,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412663958692691967,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412804696181047295,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9413086171157757951,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9413649121111179263,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9414775021018021887,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9414775021018021888,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9415900920924864512,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416463870878285824,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416745345854996480,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416886083343351808,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416956452087529472,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9416991636459618304,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417009228645662720,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417018024738684928,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417022422785196032,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417024621808451584,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417025721320079360,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026271075893248,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026545953800192,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026683392753664,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026752112230400,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026786471968768,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026803651837952,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026812241772544,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026816536739840,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026818684223488,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026819757965312,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820294836224,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820563271680,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820697489408,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820764598272,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820798152704,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820814929920,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820823318528,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820827512832,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820829609984,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820830658560,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831182848,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831444992,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831576064,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831641600,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831674368,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831690752,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831698944,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831703040,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831705088,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706112,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706624,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831706880,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707008,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707072,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707104,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707120,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707128,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707132,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707134,64,FLEN)
NAN_BOXED(6887365231103120457,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707135,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966592,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966593,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966595,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966599,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966607,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966623,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966655,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966719,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681966847,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681967103,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681967615,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681968639,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681970687,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681974783,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681982975,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090681999359,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090682032127,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090682097663,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090682228735,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090682490879,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090683015167,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090684063743,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090686160895,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090690355199,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090698743807,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090715521023,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090749075455,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090816184319,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216090950402047,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216091218837503,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216091755708415,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216092829450239,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216094976933887,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216099271901183,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216107861835775,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216125041704959,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216159401443327,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216228120920063,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216365559873535,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407216640437780479,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407217190193594367,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407218289705222143,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407220488728477695,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407224886774988799,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407233682868011007,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407251275054055423,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407286459426144255,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407356828170321919,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407497565658677247,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13407779040635387903,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13408341990588809215,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13409467890495651839,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13409467890495651840,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13410593790402494464,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411156740355915776,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411438215332626432,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411578952820981760,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411649321565159424,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411684505937248256,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411702098123292672,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411710894216314880,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411715292262825984,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411717491286081536,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411718590797709312,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719140553523200,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719415431430144,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719552870383616,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719621589860352,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719655949598720,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719673129467904,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719681719402496,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719686014369792,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719688161853440,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719689235595264,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719689772466176,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690040901632,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690175119360,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690242228224,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690275782656,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690292559872,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690300948480,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690305142784,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690307239936,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690308288512,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690308812800,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309074944,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309206016,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309271552,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309304320,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309320704,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309328896,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309332992,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309335040,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309336064,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309336576,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309336832,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309336960,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309337024,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309337056,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309337072,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309337080,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309337084,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309337086,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13411719690309337087,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6887395287875098555,64,FLEN)
NAN_BOXED(11518081805360600797,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707136,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707137,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707139,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707143,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707151,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707167,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707199,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707263,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707391,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707647,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831708159,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831709183,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831711231,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831715327,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831723519,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831739903,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831772671,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831838207,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831969279,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832231423,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832755711,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820833804287,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820835901439,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820840095743,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820848484351,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820865261567,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820898815999,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820965924863,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821100142591,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821368578047,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821905448959,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026822979190783,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026825126674431,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026829421641727,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026838011576319,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026855191445503,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026889551183871,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026958270660607,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027095709614079,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027370587521023,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027920343334911,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417029019854962687,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417031218878218239,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417035616924729343,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417044413017751551,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417062005203795967,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417097189575884799,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417167558320062463,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417308295808417791,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417589770785128447,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9418152720738549759,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392383,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392384,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420404520552235008,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420967470505656320,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421248945482366976,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421389682970722304,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421460051714899968,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421495236086988800,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421512828273033216,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421521624366055424,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421526022412566528,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421528221435822080,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529320947449856,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529870703263744,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530145581170688,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530283020124160,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530351739600896,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530386099339264,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530403279208448,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530411869143040,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530416164110336,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530418311593984,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419385335808,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419922206720,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420190642176,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420324859904,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420391968768,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420425523200,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420442300416,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420450689024,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420454883328,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420456980480,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458029056,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458553344,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458815488,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458946560,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459012096,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459044864,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459061248,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459069440,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459073536,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459075584,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459076608,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077120,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077376,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077504,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077568,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077600,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077616,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077624,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077628,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077630,64,FLEN)
NAN_BOXED(6887401107204979375,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077631,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668928,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668929,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668931,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668935,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668943,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668959,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668991,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669055,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669183,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669439,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669951,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292670975,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292673023,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292677119,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292685311,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292701695,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292734463,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292799999,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292931071,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293193215,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293717503,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793294766079,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793296863231,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793301057535,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793309446143,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793326223359,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793359777791,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793426886655,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793561104383,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793829539839,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064794366410751,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064795440152575,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064797587636223,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064801882603519,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064810472538111,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064827652407295,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064862012145663,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064930731622399,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065068170575871,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065343048482815,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065892804296703,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81066992315924479,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81069191339180031,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81073589385691135,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81082385478713343,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81099977664757759,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81135162036846591,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81205530781024255,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81346268269379583,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81627743246090239,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(82190693199511551,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354175,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354176,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(84442493013196800,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85005442966618112,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85286917943328768,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85427655431684096,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85498024175861760,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85533208547950592,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85550800733995008,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85559596827017216,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85563994873528320,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85566193896783872,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567293408411648,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567843164225536,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568118042132480,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568255481085952,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568324200562688,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568358560301056,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568375740170240,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568384330104832,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568388625072128,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568390772555776,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568391846297600,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392383168512,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392651603968,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392785821696,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392852930560,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392886484992,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392903262208,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392911650816,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392915845120,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392917942272,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392918990848,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919515136,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919777280,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919908352,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919973888,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920006656,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920023040,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920031232,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920035328,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920037376,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038400,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038912,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039168,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039296,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039360,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039392,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039408,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039416,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039420,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039422,64,FLEN)
NAN_BOXED(6887441469033704131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039423,64,FLEN)
NAN_BOXED(6887446912675504441,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6887446912675504441,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6887446912675504441,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6887446912675504441,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6887446912675504441,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6887446912675504441,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
