
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_21504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000003fffffff; valaddr_reg:x3; val_offset:64512*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64512*0 + 3*0*FLEN/8, x4, x1, x2)

inst_21505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000007fffffff; valaddr_reg:x3; val_offset:64515*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64515*0 + 3*1*FLEN/8, x4, x1, x2)

inst_21506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00000ffffffff; valaddr_reg:x3; val_offset:64518*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64518*0 + 3*2*FLEN/8, x4, x1, x2)

inst_21507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00001ffffffff; valaddr_reg:x3; val_offset:64521*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64521*0 + 3*3*FLEN/8, x4, x1, x2)

inst_21508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00003ffffffff; valaddr_reg:x3; val_offset:64524*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64524*0 + 3*4*FLEN/8, x4, x1, x2)

inst_21509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00007ffffffff; valaddr_reg:x3; val_offset:64527*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64527*0 + 3*5*FLEN/8, x4, x1, x2)

inst_21510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0000fffffffff; valaddr_reg:x3; val_offset:64530*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64530*0 + 3*6*FLEN/8, x4, x1, x2)

inst_21511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0001fffffffff; valaddr_reg:x3; val_offset:64533*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64533*0 + 3*7*FLEN/8, x4, x1, x2)

inst_21512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0003fffffffff; valaddr_reg:x3; val_offset:64536*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64536*0 + 3*8*FLEN/8, x4, x1, x2)

inst_21513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0007fffffffff; valaddr_reg:x3; val_offset:64539*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64539*0 + 3*9*FLEN/8, x4, x1, x2)

inst_21514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b000ffffffffff; valaddr_reg:x3; val_offset:64542*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64542*0 + 3*10*FLEN/8, x4, x1, x2)

inst_21515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b001ffffffffff; valaddr_reg:x3; val_offset:64545*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64545*0 + 3*11*FLEN/8, x4, x1, x2)

inst_21516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b003ffffffffff; valaddr_reg:x3; val_offset:64548*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64548*0 + 3*12*FLEN/8, x4, x1, x2)

inst_21517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b007ffffffffff; valaddr_reg:x3; val_offset:64551*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64551*0 + 3*13*FLEN/8, x4, x1, x2)

inst_21518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b00fffffffffff; valaddr_reg:x3; val_offset:64554*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64554*0 + 3*14*FLEN/8, x4, x1, x2)

inst_21519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b01fffffffffff; valaddr_reg:x3; val_offset:64557*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64557*0 + 3*15*FLEN/8, x4, x1, x2)

inst_21520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b03fffffffffff; valaddr_reg:x3; val_offset:64560*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64560*0 + 3*16*FLEN/8, x4, x1, x2)

inst_21521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b07fffffffffff; valaddr_reg:x3; val_offset:64563*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64563*0 + 3*17*FLEN/8, x4, x1, x2)

inst_21522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b0ffffffffffff; valaddr_reg:x3; val_offset:64566*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64566*0 + 3*18*FLEN/8, x4, x1, x2)

inst_21523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b1ffffffffffff; valaddr_reg:x3; val_offset:64569*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64569*0 + 3*19*FLEN/8, x4, x1, x2)

inst_21524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b3ffffffffffff; valaddr_reg:x3; val_offset:64572*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64572*0 + 3*20*FLEN/8, x4, x1, x2)

inst_21525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b7ffffffffffff; valaddr_reg:x3; val_offset:64575*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64575*0 + 3*21*FLEN/8, x4, x1, x2)

inst_21526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38b8000000000000; valaddr_reg:x3; val_offset:64578*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64578*0 + 3*22*FLEN/8, x4, x1, x2)

inst_21527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bc000000000000; valaddr_reg:x3; val_offset:64581*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64581*0 + 3*23*FLEN/8, x4, x1, x2)

inst_21528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38be000000000000; valaddr_reg:x3; val_offset:64584*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64584*0 + 3*24*FLEN/8, x4, x1, x2)

inst_21529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bf000000000000; valaddr_reg:x3; val_offset:64587*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64587*0 + 3*25*FLEN/8, x4, x1, x2)

inst_21530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bf800000000000; valaddr_reg:x3; val_offset:64590*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64590*0 + 3*26*FLEN/8, x4, x1, x2)

inst_21531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfc00000000000; valaddr_reg:x3; val_offset:64593*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64593*0 + 3*27*FLEN/8, x4, x1, x2)

inst_21532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfe00000000000; valaddr_reg:x3; val_offset:64596*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64596*0 + 3*28*FLEN/8, x4, x1, x2)

inst_21533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bff00000000000; valaddr_reg:x3; val_offset:64599*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64599*0 + 3*29*FLEN/8, x4, x1, x2)

inst_21534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bff80000000000; valaddr_reg:x3; val_offset:64602*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64602*0 + 3*30*FLEN/8, x4, x1, x2)

inst_21535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffc0000000000; valaddr_reg:x3; val_offset:64605*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64605*0 + 3*31*FLEN/8, x4, x1, x2)

inst_21536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffe0000000000; valaddr_reg:x3; val_offset:64608*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64608*0 + 3*32*FLEN/8, x4, x1, x2)

inst_21537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfff0000000000; valaddr_reg:x3; val_offset:64611*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64611*0 + 3*33*FLEN/8, x4, x1, x2)

inst_21538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfff8000000000; valaddr_reg:x3; val_offset:64614*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64614*0 + 3*34*FLEN/8, x4, x1, x2)

inst_21539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffc000000000; valaddr_reg:x3; val_offset:64617*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64617*0 + 3*35*FLEN/8, x4, x1, x2)

inst_21540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffe000000000; valaddr_reg:x3; val_offset:64620*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64620*0 + 3*36*FLEN/8, x4, x1, x2)

inst_21541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffff000000000; valaddr_reg:x3; val_offset:64623*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64623*0 + 3*37*FLEN/8, x4, x1, x2)

inst_21542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffff800000000; valaddr_reg:x3; val_offset:64626*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64626*0 + 3*38*FLEN/8, x4, x1, x2)

inst_21543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffc00000000; valaddr_reg:x3; val_offset:64629*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64629*0 + 3*39*FLEN/8, x4, x1, x2)

inst_21544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffe00000000; valaddr_reg:x3; val_offset:64632*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64632*0 + 3*40*FLEN/8, x4, x1, x2)

inst_21545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffff00000000; valaddr_reg:x3; val_offset:64635*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64635*0 + 3*41*FLEN/8, x4, x1, x2)

inst_21546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffff80000000; valaddr_reg:x3; val_offset:64638*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64638*0 + 3*42*FLEN/8, x4, x1, x2)

inst_21547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffc0000000; valaddr_reg:x3; val_offset:64641*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64641*0 + 3*43*FLEN/8, x4, x1, x2)

inst_21548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffe0000000; valaddr_reg:x3; val_offset:64644*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64644*0 + 3*44*FLEN/8, x4, x1, x2)

inst_21549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffff0000000; valaddr_reg:x3; val_offset:64647*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64647*0 + 3*45*FLEN/8, x4, x1, x2)

inst_21550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffff8000000; valaddr_reg:x3; val_offset:64650*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64650*0 + 3*46*FLEN/8, x4, x1, x2)

inst_21551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffc000000; valaddr_reg:x3; val_offset:64653*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64653*0 + 3*47*FLEN/8, x4, x1, x2)

inst_21552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffe000000; valaddr_reg:x3; val_offset:64656*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64656*0 + 3*48*FLEN/8, x4, x1, x2)

inst_21553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffff000000; valaddr_reg:x3; val_offset:64659*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64659*0 + 3*49*FLEN/8, x4, x1, x2)

inst_21554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffff800000; valaddr_reg:x3; val_offset:64662*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64662*0 + 3*50*FLEN/8, x4, x1, x2)

inst_21555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffc00000; valaddr_reg:x3; val_offset:64665*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64665*0 + 3*51*FLEN/8, x4, x1, x2)

inst_21556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffe00000; valaddr_reg:x3; val_offset:64668*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64668*0 + 3*52*FLEN/8, x4, x1, x2)

inst_21557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffff00000; valaddr_reg:x3; val_offset:64671*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64671*0 + 3*53*FLEN/8, x4, x1, x2)

inst_21558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffff80000; valaddr_reg:x3; val_offset:64674*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64674*0 + 3*54*FLEN/8, x4, x1, x2)

inst_21559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffc0000; valaddr_reg:x3; val_offset:64677*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64677*0 + 3*55*FLEN/8, x4, x1, x2)

inst_21560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffe0000; valaddr_reg:x3; val_offset:64680*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64680*0 + 3*56*FLEN/8, x4, x1, x2)

inst_21561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffff0000; valaddr_reg:x3; val_offset:64683*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64683*0 + 3*57*FLEN/8, x4, x1, x2)

inst_21562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffff8000; valaddr_reg:x3; val_offset:64686*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64686*0 + 3*58*FLEN/8, x4, x1, x2)

inst_21563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffffc000; valaddr_reg:x3; val_offset:64689*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64689*0 + 3*59*FLEN/8, x4, x1, x2)

inst_21564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffffe000; valaddr_reg:x3; val_offset:64692*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64692*0 + 3*60*FLEN/8, x4, x1, x2)

inst_21565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffff000; valaddr_reg:x3; val_offset:64695*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64695*0 + 3*61*FLEN/8, x4, x1, x2)

inst_21566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffff800; valaddr_reg:x3; val_offset:64698*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64698*0 + 3*62*FLEN/8, x4, x1, x2)

inst_21567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffffc00; valaddr_reg:x3; val_offset:64701*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64701*0 + 3*63*FLEN/8, x4, x1, x2)

inst_21568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffffe00; valaddr_reg:x3; val_offset:64704*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64704*0 + 3*64*FLEN/8, x4, x1, x2)

inst_21569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffffff00; valaddr_reg:x3; val_offset:64707*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64707*0 + 3*65*FLEN/8, x4, x1, x2)

inst_21570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffffff80; valaddr_reg:x3; val_offset:64710*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64710*0 + 3*66*FLEN/8, x4, x1, x2)

inst_21571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffffffc0; valaddr_reg:x3; val_offset:64713*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64713*0 + 3*67*FLEN/8, x4, x1, x2)

inst_21572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffffffe0; valaddr_reg:x3; val_offset:64716*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64716*0 + 3*68*FLEN/8, x4, x1, x2)

inst_21573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffffff0; valaddr_reg:x3; val_offset:64719*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64719*0 + 3*69*FLEN/8, x4, x1, x2)

inst_21574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffffff8; valaddr_reg:x3; val_offset:64722*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64722*0 + 3*70*FLEN/8, x4, x1, x2)

inst_21575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffffffc; valaddr_reg:x3; val_offset:64725*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64725*0 + 3*71*FLEN/8, x4, x1, x2)

inst_21576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bffffffffffffe; valaddr_reg:x3; val_offset:64728*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64728*0 + 3*72*FLEN/8, x4, x1, x2)

inst_21577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x38bfffffffffffff; valaddr_reg:x3; val_offset:64731*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64731*0 + 3*73*FLEN/8, x4, x1, x2)

inst_21578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:64734*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64734*0 + 3*74*FLEN/8, x4, x1, x2)

inst_21579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:64737*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64737*0 + 3*75*FLEN/8, x4, x1, x2)

inst_21580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:64740*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64740*0 + 3*76*FLEN/8, x4, x1, x2)

inst_21581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:64743*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64743*0 + 3*77*FLEN/8, x4, x1, x2)

inst_21582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:64746*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64746*0 + 3*78*FLEN/8, x4, x1, x2)

inst_21583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:64749*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64749*0 + 3*79*FLEN/8, x4, x1, x2)

inst_21584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:64752*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64752*0 + 3*80*FLEN/8, x4, x1, x2)

inst_21585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:64755*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64755*0 + 3*81*FLEN/8, x4, x1, x2)

inst_21586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:64758*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64758*0 + 3*82*FLEN/8, x4, x1, x2)

inst_21587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:64761*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64761*0 + 3*83*FLEN/8, x4, x1, x2)

inst_21588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:64764*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64764*0 + 3*84*FLEN/8, x4, x1, x2)

inst_21589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:64767*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64767*0 + 3*85*FLEN/8, x4, x1, x2)

inst_21590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:64770*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64770*0 + 3*86*FLEN/8, x4, x1, x2)

inst_21591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:64773*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64773*0 + 3*87*FLEN/8, x4, x1, x2)

inst_21592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:64776*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64776*0 + 3*88*FLEN/8, x4, x1, x2)

inst_21593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:64779*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64779*0 + 3*89*FLEN/8, x4, x1, x2)

inst_21594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:64782*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64782*0 + 3*90*FLEN/8, x4, x1, x2)

inst_21595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:64785*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64785*0 + 3*91*FLEN/8, x4, x1, x2)

inst_21596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:64788*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64788*0 + 3*92*FLEN/8, x4, x1, x2)

inst_21597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:64791*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64791*0 + 3*93*FLEN/8, x4, x1, x2)

inst_21598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:64794*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64794*0 + 3*94*FLEN/8, x4, x1, x2)

inst_21599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xcd90e40492c4b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x1bf8ef5d0edea and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8cd90e40492c4b; op2val:0x2051bf8ef5d0edea;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:64797*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64797*0 + 3*95*FLEN/8, x4, x1, x2)

inst_21600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:64800*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64800*0 + 3*96*FLEN/8, x4, x1, x2)

inst_21601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:64803*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64803*0 + 3*97*FLEN/8, x4, x1, x2)

inst_21602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:64806*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64806*0 + 3*98*FLEN/8, x4, x1, x2)

inst_21603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:64809*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64809*0 + 3*99*FLEN/8, x4, x1, x2)

inst_21604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:64812*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64812*0 + 3*100*FLEN/8, x4, x1, x2)

inst_21605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:64815*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64815*0 + 3*101*FLEN/8, x4, x1, x2)

inst_21606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:64818*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64818*0 + 3*102*FLEN/8, x4, x1, x2)

inst_21607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:64821*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64821*0 + 3*103*FLEN/8, x4, x1, x2)

inst_21608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:64824*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64824*0 + 3*104*FLEN/8, x4, x1, x2)

inst_21609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:64827*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64827*0 + 3*105*FLEN/8, x4, x1, x2)

inst_21610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:64830*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64830*0 + 3*106*FLEN/8, x4, x1, x2)

inst_21611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:64833*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64833*0 + 3*107*FLEN/8, x4, x1, x2)

inst_21612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:64836*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64836*0 + 3*108*FLEN/8, x4, x1, x2)

inst_21613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:64839*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64839*0 + 3*109*FLEN/8, x4, x1, x2)

inst_21614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:64842*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64842*0 + 3*110*FLEN/8, x4, x1, x2)

inst_21615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:64845*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64845*0 + 3*111*FLEN/8, x4, x1, x2)

inst_21616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:64848*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64848*0 + 3*112*FLEN/8, x4, x1, x2)

inst_21617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:64851*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64851*0 + 3*113*FLEN/8, x4, x1, x2)

inst_21618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:64854*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64854*0 + 3*114*FLEN/8, x4, x1, x2)

inst_21619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:64857*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64857*0 + 3*115*FLEN/8, x4, x1, x2)

inst_21620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:64860*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64860*0 + 3*116*FLEN/8, x4, x1, x2)

inst_21621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:64863*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64863*0 + 3*117*FLEN/8, x4, x1, x2)

inst_21622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000000000; valaddr_reg:x3; val_offset:64866*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64866*0 + 3*118*FLEN/8, x4, x1, x2)

inst_21623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000000001; valaddr_reg:x3; val_offset:64869*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64869*0 + 3*119*FLEN/8, x4, x1, x2)

inst_21624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000000003; valaddr_reg:x3; val_offset:64872*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64872*0 + 3*120*FLEN/8, x4, x1, x2)

inst_21625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000000007; valaddr_reg:x3; val_offset:64875*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64875*0 + 3*121*FLEN/8, x4, x1, x2)

inst_21626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000000000f; valaddr_reg:x3; val_offset:64878*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64878*0 + 3*122*FLEN/8, x4, x1, x2)

inst_21627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000000001f; valaddr_reg:x3; val_offset:64881*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64881*0 + 3*123*FLEN/8, x4, x1, x2)

inst_21628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000000003f; valaddr_reg:x3; val_offset:64884*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64884*0 + 3*124*FLEN/8, x4, x1, x2)

inst_21629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000000007f; valaddr_reg:x3; val_offset:64887*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64887*0 + 3*125*FLEN/8, x4, x1, x2)

inst_21630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000000000ff; valaddr_reg:x3; val_offset:64890*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64890*0 + 3*126*FLEN/8, x4, x1, x2)

inst_21631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000000001ff; valaddr_reg:x3; val_offset:64893*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64893*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_21632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000000003ff; valaddr_reg:x3; val_offset:64896*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64896*0 + 3*128*FLEN/8, x4, x1, x2)

inst_21633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000000007ff; valaddr_reg:x3; val_offset:64899*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64899*0 + 3*129*FLEN/8, x4, x1, x2)

inst_21634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000000fff; valaddr_reg:x3; val_offset:64902*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64902*0 + 3*130*FLEN/8, x4, x1, x2)

inst_21635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000001fff; valaddr_reg:x3; val_offset:64905*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64905*0 + 3*131*FLEN/8, x4, x1, x2)

inst_21636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000003fff; valaddr_reg:x3; val_offset:64908*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64908*0 + 3*132*FLEN/8, x4, x1, x2)

inst_21637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000007fff; valaddr_reg:x3; val_offset:64911*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64911*0 + 3*133*FLEN/8, x4, x1, x2)

inst_21638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000000ffff; valaddr_reg:x3; val_offset:64914*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64914*0 + 3*134*FLEN/8, x4, x1, x2)

inst_21639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000001ffff; valaddr_reg:x3; val_offset:64917*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64917*0 + 3*135*FLEN/8, x4, x1, x2)

inst_21640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000003ffff; valaddr_reg:x3; val_offset:64920*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64920*0 + 3*136*FLEN/8, x4, x1, x2)

inst_21641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000007ffff; valaddr_reg:x3; val_offset:64923*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64923*0 + 3*137*FLEN/8, x4, x1, x2)

inst_21642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000000fffff; valaddr_reg:x3; val_offset:64926*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64926*0 + 3*138*FLEN/8, x4, x1, x2)

inst_21643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000001fffff; valaddr_reg:x3; val_offset:64929*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64929*0 + 3*139*FLEN/8, x4, x1, x2)

inst_21644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000003fffff; valaddr_reg:x3; val_offset:64932*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64932*0 + 3*140*FLEN/8, x4, x1, x2)

inst_21645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000007fffff; valaddr_reg:x3; val_offset:64935*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64935*0 + 3*141*FLEN/8, x4, x1, x2)

inst_21646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000000ffffff; valaddr_reg:x3; val_offset:64938*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64938*0 + 3*142*FLEN/8, x4, x1, x2)

inst_21647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000001ffffff; valaddr_reg:x3; val_offset:64941*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64941*0 + 3*143*FLEN/8, x4, x1, x2)

inst_21648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000003ffffff; valaddr_reg:x3; val_offset:64944*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64944*0 + 3*144*FLEN/8, x4, x1, x2)

inst_21649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000007ffffff; valaddr_reg:x3; val_offset:64947*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64947*0 + 3*145*FLEN/8, x4, x1, x2)

inst_21650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000000fffffff; valaddr_reg:x3; val_offset:64950*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64950*0 + 3*146*FLEN/8, x4, x1, x2)

inst_21651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000001fffffff; valaddr_reg:x3; val_offset:64953*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64953*0 + 3*147*FLEN/8, x4, x1, x2)

inst_21652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000003fffffff; valaddr_reg:x3; val_offset:64956*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64956*0 + 3*148*FLEN/8, x4, x1, x2)

inst_21653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000007fffffff; valaddr_reg:x3; val_offset:64959*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64959*0 + 3*149*FLEN/8, x4, x1, x2)

inst_21654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00000ffffffff; valaddr_reg:x3; val_offset:64962*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64962*0 + 3*150*FLEN/8, x4, x1, x2)

inst_21655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00001ffffffff; valaddr_reg:x3; val_offset:64965*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64965*0 + 3*151*FLEN/8, x4, x1, x2)

inst_21656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00003ffffffff; valaddr_reg:x3; val_offset:64968*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64968*0 + 3*152*FLEN/8, x4, x1, x2)

inst_21657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00007ffffffff; valaddr_reg:x3; val_offset:64971*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64971*0 + 3*153*FLEN/8, x4, x1, x2)

inst_21658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0000fffffffff; valaddr_reg:x3; val_offset:64974*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64974*0 + 3*154*FLEN/8, x4, x1, x2)

inst_21659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0001fffffffff; valaddr_reg:x3; val_offset:64977*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64977*0 + 3*155*FLEN/8, x4, x1, x2)

inst_21660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0003fffffffff; valaddr_reg:x3; val_offset:64980*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64980*0 + 3*156*FLEN/8, x4, x1, x2)

inst_21661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0007fffffffff; valaddr_reg:x3; val_offset:64983*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64983*0 + 3*157*FLEN/8, x4, x1, x2)

inst_21662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b000ffffffffff; valaddr_reg:x3; val_offset:64986*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64986*0 + 3*158*FLEN/8, x4, x1, x2)

inst_21663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b001ffffffffff; valaddr_reg:x3; val_offset:64989*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64989*0 + 3*159*FLEN/8, x4, x1, x2)

inst_21664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b003ffffffffff; valaddr_reg:x3; val_offset:64992*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64992*0 + 3*160*FLEN/8, x4, x1, x2)

inst_21665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b007ffffffffff; valaddr_reg:x3; val_offset:64995*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64995*0 + 3*161*FLEN/8, x4, x1, x2)

inst_21666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b00fffffffffff; valaddr_reg:x3; val_offset:64998*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 64998*0 + 3*162*FLEN/8, x4, x1, x2)

inst_21667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b01fffffffffff; valaddr_reg:x3; val_offset:65001*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65001*0 + 3*163*FLEN/8, x4, x1, x2)

inst_21668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b03fffffffffff; valaddr_reg:x3; val_offset:65004*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65004*0 + 3*164*FLEN/8, x4, x1, x2)

inst_21669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b07fffffffffff; valaddr_reg:x3; val_offset:65007*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65007*0 + 3*165*FLEN/8, x4, x1, x2)

inst_21670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b0ffffffffffff; valaddr_reg:x3; val_offset:65010*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65010*0 + 3*166*FLEN/8, x4, x1, x2)

inst_21671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b1ffffffffffff; valaddr_reg:x3; val_offset:65013*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65013*0 + 3*167*FLEN/8, x4, x1, x2)

inst_21672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b3ffffffffffff; valaddr_reg:x3; val_offset:65016*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65016*0 + 3*168*FLEN/8, x4, x1, x2)

inst_21673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b7ffffffffffff; valaddr_reg:x3; val_offset:65019*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65019*0 + 3*169*FLEN/8, x4, x1, x2)

inst_21674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82b8000000000000; valaddr_reg:x3; val_offset:65022*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65022*0 + 3*170*FLEN/8, x4, x1, x2)

inst_21675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bc000000000000; valaddr_reg:x3; val_offset:65025*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65025*0 + 3*171*FLEN/8, x4, x1, x2)

inst_21676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82be000000000000; valaddr_reg:x3; val_offset:65028*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65028*0 + 3*172*FLEN/8, x4, x1, x2)

inst_21677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bf000000000000; valaddr_reg:x3; val_offset:65031*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65031*0 + 3*173*FLEN/8, x4, x1, x2)

inst_21678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bf800000000000; valaddr_reg:x3; val_offset:65034*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65034*0 + 3*174*FLEN/8, x4, x1, x2)

inst_21679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfc00000000000; valaddr_reg:x3; val_offset:65037*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65037*0 + 3*175*FLEN/8, x4, x1, x2)

inst_21680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfe00000000000; valaddr_reg:x3; val_offset:65040*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65040*0 + 3*176*FLEN/8, x4, x1, x2)

inst_21681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bff00000000000; valaddr_reg:x3; val_offset:65043*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65043*0 + 3*177*FLEN/8, x4, x1, x2)

inst_21682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bff80000000000; valaddr_reg:x3; val_offset:65046*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65046*0 + 3*178*FLEN/8, x4, x1, x2)

inst_21683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffc0000000000; valaddr_reg:x3; val_offset:65049*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65049*0 + 3*179*FLEN/8, x4, x1, x2)

inst_21684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffe0000000000; valaddr_reg:x3; val_offset:65052*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65052*0 + 3*180*FLEN/8, x4, x1, x2)

inst_21685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfff0000000000; valaddr_reg:x3; val_offset:65055*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65055*0 + 3*181*FLEN/8, x4, x1, x2)

inst_21686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfff8000000000; valaddr_reg:x3; val_offset:65058*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65058*0 + 3*182*FLEN/8, x4, x1, x2)

inst_21687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffc000000000; valaddr_reg:x3; val_offset:65061*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65061*0 + 3*183*FLEN/8, x4, x1, x2)

inst_21688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffe000000000; valaddr_reg:x3; val_offset:65064*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65064*0 + 3*184*FLEN/8, x4, x1, x2)

inst_21689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffff000000000; valaddr_reg:x3; val_offset:65067*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65067*0 + 3*185*FLEN/8, x4, x1, x2)

inst_21690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffff800000000; valaddr_reg:x3; val_offset:65070*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65070*0 + 3*186*FLEN/8, x4, x1, x2)

inst_21691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffc00000000; valaddr_reg:x3; val_offset:65073*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65073*0 + 3*187*FLEN/8, x4, x1, x2)

inst_21692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffe00000000; valaddr_reg:x3; val_offset:65076*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65076*0 + 3*188*FLEN/8, x4, x1, x2)

inst_21693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffff00000000; valaddr_reg:x3; val_offset:65079*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65079*0 + 3*189*FLEN/8, x4, x1, x2)

inst_21694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffff80000000; valaddr_reg:x3; val_offset:65082*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65082*0 + 3*190*FLEN/8, x4, x1, x2)

inst_21695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffc0000000; valaddr_reg:x3; val_offset:65085*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65085*0 + 3*191*FLEN/8, x4, x1, x2)

inst_21696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffe0000000; valaddr_reg:x3; val_offset:65088*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65088*0 + 3*192*FLEN/8, x4, x1, x2)

inst_21697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffff0000000; valaddr_reg:x3; val_offset:65091*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65091*0 + 3*193*FLEN/8, x4, x1, x2)

inst_21698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffff8000000; valaddr_reg:x3; val_offset:65094*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65094*0 + 3*194*FLEN/8, x4, x1, x2)

inst_21699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffc000000; valaddr_reg:x3; val_offset:65097*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65097*0 + 3*195*FLEN/8, x4, x1, x2)

inst_21700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffe000000; valaddr_reg:x3; val_offset:65100*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65100*0 + 3*196*FLEN/8, x4, x1, x2)

inst_21701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffff000000; valaddr_reg:x3; val_offset:65103*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65103*0 + 3*197*FLEN/8, x4, x1, x2)

inst_21702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffff800000; valaddr_reg:x3; val_offset:65106*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65106*0 + 3*198*FLEN/8, x4, x1, x2)

inst_21703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffc00000; valaddr_reg:x3; val_offset:65109*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65109*0 + 3*199*FLEN/8, x4, x1, x2)

inst_21704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffe00000; valaddr_reg:x3; val_offset:65112*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65112*0 + 3*200*FLEN/8, x4, x1, x2)

inst_21705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffff00000; valaddr_reg:x3; val_offset:65115*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65115*0 + 3*201*FLEN/8, x4, x1, x2)

inst_21706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffff80000; valaddr_reg:x3; val_offset:65118*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65118*0 + 3*202*FLEN/8, x4, x1, x2)

inst_21707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffc0000; valaddr_reg:x3; val_offset:65121*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65121*0 + 3*203*FLEN/8, x4, x1, x2)

inst_21708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffe0000; valaddr_reg:x3; val_offset:65124*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65124*0 + 3*204*FLEN/8, x4, x1, x2)

inst_21709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffff0000; valaddr_reg:x3; val_offset:65127*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65127*0 + 3*205*FLEN/8, x4, x1, x2)

inst_21710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffff8000; valaddr_reg:x3; val_offset:65130*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65130*0 + 3*206*FLEN/8, x4, x1, x2)

inst_21711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffffc000; valaddr_reg:x3; val_offset:65133*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65133*0 + 3*207*FLEN/8, x4, x1, x2)

inst_21712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffffe000; valaddr_reg:x3; val_offset:65136*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65136*0 + 3*208*FLEN/8, x4, x1, x2)

inst_21713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffff000; valaddr_reg:x3; val_offset:65139*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65139*0 + 3*209*FLEN/8, x4, x1, x2)

inst_21714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffff800; valaddr_reg:x3; val_offset:65142*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65142*0 + 3*210*FLEN/8, x4, x1, x2)

inst_21715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffffc00; valaddr_reg:x3; val_offset:65145*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65145*0 + 3*211*FLEN/8, x4, x1, x2)

inst_21716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffffe00; valaddr_reg:x3; val_offset:65148*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65148*0 + 3*212*FLEN/8, x4, x1, x2)

inst_21717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffffff00; valaddr_reg:x3; val_offset:65151*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65151*0 + 3*213*FLEN/8, x4, x1, x2)

inst_21718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffffff80; valaddr_reg:x3; val_offset:65154*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65154*0 + 3*214*FLEN/8, x4, x1, x2)

inst_21719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffffffc0; valaddr_reg:x3; val_offset:65157*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65157*0 + 3*215*FLEN/8, x4, x1, x2)

inst_21720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffffffe0; valaddr_reg:x3; val_offset:65160*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65160*0 + 3*216*FLEN/8, x4, x1, x2)

inst_21721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffffff0; valaddr_reg:x3; val_offset:65163*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65163*0 + 3*217*FLEN/8, x4, x1, x2)

inst_21722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffffff8; valaddr_reg:x3; val_offset:65166*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65166*0 + 3*218*FLEN/8, x4, x1, x2)

inst_21723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffffffc; valaddr_reg:x3; val_offset:65169*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65169*0 + 3*219*FLEN/8, x4, x1, x2)

inst_21724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bffffffffffffe; valaddr_reg:x3; val_offset:65172*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65172*0 + 3*220*FLEN/8, x4, x1, x2)

inst_21725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xd63b29a2a7adf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8d63b29a2a7adf; op2val:0x8000;
op3val:0x82bfffffffffffff; valaddr_reg:x3; val_offset:65175*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65175*0 + 3*221*FLEN/8, x4, x1, x2)

inst_21726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:65178*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65178*0 + 3*222*FLEN/8, x4, x1, x2)

inst_21727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:65181*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65181*0 + 3*223*FLEN/8, x4, x1, x2)

inst_21728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:65184*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65184*0 + 3*224*FLEN/8, x4, x1, x2)

inst_21729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:65187*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65187*0 + 3*225*FLEN/8, x4, x1, x2)

inst_21730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:65190*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65190*0 + 3*226*FLEN/8, x4, x1, x2)

inst_21731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:65193*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65193*0 + 3*227*FLEN/8, x4, x1, x2)

inst_21732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:65196*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65196*0 + 3*228*FLEN/8, x4, x1, x2)

inst_21733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:65199*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65199*0 + 3*229*FLEN/8, x4, x1, x2)

inst_21734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:65202*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65202*0 + 3*230*FLEN/8, x4, x1, x2)

inst_21735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:65205*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65205*0 + 3*231*FLEN/8, x4, x1, x2)

inst_21736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:65208*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65208*0 + 3*232*FLEN/8, x4, x1, x2)

inst_21737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:65211*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65211*0 + 3*233*FLEN/8, x4, x1, x2)

inst_21738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:65214*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65214*0 + 3*234*FLEN/8, x4, x1, x2)

inst_21739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:65217*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65217*0 + 3*235*FLEN/8, x4, x1, x2)

inst_21740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:65220*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65220*0 + 3*236*FLEN/8, x4, x1, x2)

inst_21741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:65223*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65223*0 + 3*237*FLEN/8, x4, x1, x2)

inst_21742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:65226*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65226*0 + 3*238*FLEN/8, x4, x1, x2)

inst_21743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:65229*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65229*0 + 3*239*FLEN/8, x4, x1, x2)

inst_21744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:65232*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65232*0 + 3*240*FLEN/8, x4, x1, x2)

inst_21745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:65235*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65235*0 + 3*241*FLEN/8, x4, x1, x2)

inst_21746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:65238*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65238*0 + 3*242*FLEN/8, x4, x1, x2)

inst_21747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:65241*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65241*0 + 3*243*FLEN/8, x4, x1, x2)

inst_21748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000000000; valaddr_reg:x3; val_offset:65244*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65244*0 + 3*244*FLEN/8, x4, x1, x2)

inst_21749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000000001; valaddr_reg:x3; val_offset:65247*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65247*0 + 3*245*FLEN/8, x4, x1, x2)

inst_21750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000000003; valaddr_reg:x3; val_offset:65250*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65250*0 + 3*246*FLEN/8, x4, x1, x2)

inst_21751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000000007; valaddr_reg:x3; val_offset:65253*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65253*0 + 3*247*FLEN/8, x4, x1, x2)

inst_21752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000000000f; valaddr_reg:x3; val_offset:65256*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65256*0 + 3*248*FLEN/8, x4, x1, x2)

inst_21753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000000001f; valaddr_reg:x3; val_offset:65259*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65259*0 + 3*249*FLEN/8, x4, x1, x2)

inst_21754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000000003f; valaddr_reg:x3; val_offset:65262*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65262*0 + 3*250*FLEN/8, x4, x1, x2)

inst_21755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000000007f; valaddr_reg:x3; val_offset:65265*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65265*0 + 3*251*FLEN/8, x4, x1, x2)

inst_21756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000000000ff; valaddr_reg:x3; val_offset:65268*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65268*0 + 3*252*FLEN/8, x4, x1, x2)

inst_21757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000000001ff; valaddr_reg:x3; val_offset:65271*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65271*0 + 3*253*FLEN/8, x4, x1, x2)

inst_21758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000000003ff; valaddr_reg:x3; val_offset:65274*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65274*0 + 3*254*FLEN/8, x4, x1, x2)

inst_21759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000000007ff; valaddr_reg:x3; val_offset:65277*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65277*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_21760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000000fff; valaddr_reg:x3; val_offset:65280*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65280*0 + 3*256*FLEN/8, x4, x1, x2)

inst_21761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000001fff; valaddr_reg:x3; val_offset:65283*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65283*0 + 3*257*FLEN/8, x4, x1, x2)

inst_21762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000003fff; valaddr_reg:x3; val_offset:65286*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65286*0 + 3*258*FLEN/8, x4, x1, x2)

inst_21763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000007fff; valaddr_reg:x3; val_offset:65289*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65289*0 + 3*259*FLEN/8, x4, x1, x2)

inst_21764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000000ffff; valaddr_reg:x3; val_offset:65292*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65292*0 + 3*260*FLEN/8, x4, x1, x2)

inst_21765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000001ffff; valaddr_reg:x3; val_offset:65295*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65295*0 + 3*261*FLEN/8, x4, x1, x2)

inst_21766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000003ffff; valaddr_reg:x3; val_offset:65298*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65298*0 + 3*262*FLEN/8, x4, x1, x2)

inst_21767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000007ffff; valaddr_reg:x3; val_offset:65301*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65301*0 + 3*263*FLEN/8, x4, x1, x2)

inst_21768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000000fffff; valaddr_reg:x3; val_offset:65304*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65304*0 + 3*264*FLEN/8, x4, x1, x2)

inst_21769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000001fffff; valaddr_reg:x3; val_offset:65307*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65307*0 + 3*265*FLEN/8, x4, x1, x2)

inst_21770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000003fffff; valaddr_reg:x3; val_offset:65310*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65310*0 + 3*266*FLEN/8, x4, x1, x2)

inst_21771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000007fffff; valaddr_reg:x3; val_offset:65313*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65313*0 + 3*267*FLEN/8, x4, x1, x2)

inst_21772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000000ffffff; valaddr_reg:x3; val_offset:65316*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65316*0 + 3*268*FLEN/8, x4, x1, x2)

inst_21773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000001ffffff; valaddr_reg:x3; val_offset:65319*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65319*0 + 3*269*FLEN/8, x4, x1, x2)

inst_21774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000003ffffff; valaddr_reg:x3; val_offset:65322*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65322*0 + 3*270*FLEN/8, x4, x1, x2)

inst_21775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000007ffffff; valaddr_reg:x3; val_offset:65325*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65325*0 + 3*271*FLEN/8, x4, x1, x2)

inst_21776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000000fffffff; valaddr_reg:x3; val_offset:65328*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65328*0 + 3*272*FLEN/8, x4, x1, x2)

inst_21777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000001fffffff; valaddr_reg:x3; val_offset:65331*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65331*0 + 3*273*FLEN/8, x4, x1, x2)

inst_21778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000003fffffff; valaddr_reg:x3; val_offset:65334*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65334*0 + 3*274*FLEN/8, x4, x1, x2)

inst_21779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000007fffffff; valaddr_reg:x3; val_offset:65337*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65337*0 + 3*275*FLEN/8, x4, x1, x2)

inst_21780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900000ffffffff; valaddr_reg:x3; val_offset:65340*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65340*0 + 3*276*FLEN/8, x4, x1, x2)

inst_21781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900001ffffffff; valaddr_reg:x3; val_offset:65343*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65343*0 + 3*277*FLEN/8, x4, x1, x2)

inst_21782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900003ffffffff; valaddr_reg:x3; val_offset:65346*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65346*0 + 3*278*FLEN/8, x4, x1, x2)

inst_21783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900007ffffffff; valaddr_reg:x3; val_offset:65349*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65349*0 + 3*279*FLEN/8, x4, x1, x2)

inst_21784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290000fffffffff; valaddr_reg:x3; val_offset:65352*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65352*0 + 3*280*FLEN/8, x4, x1, x2)

inst_21785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290001fffffffff; valaddr_reg:x3; val_offset:65355*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65355*0 + 3*281*FLEN/8, x4, x1, x2)

inst_21786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290003fffffffff; valaddr_reg:x3; val_offset:65358*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65358*0 + 3*282*FLEN/8, x4, x1, x2)

inst_21787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290007fffffffff; valaddr_reg:x3; val_offset:65361*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65361*0 + 3*283*FLEN/8, x4, x1, x2)

inst_21788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829000ffffffffff; valaddr_reg:x3; val_offset:65364*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65364*0 + 3*284*FLEN/8, x4, x1, x2)

inst_21789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829001ffffffffff; valaddr_reg:x3; val_offset:65367*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65367*0 + 3*285*FLEN/8, x4, x1, x2)

inst_21790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829003ffffffffff; valaddr_reg:x3; val_offset:65370*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65370*0 + 3*286*FLEN/8, x4, x1, x2)

inst_21791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829007ffffffffff; valaddr_reg:x3; val_offset:65373*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65373*0 + 3*287*FLEN/8, x4, x1, x2)

inst_21792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82900fffffffffff; valaddr_reg:x3; val_offset:65376*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65376*0 + 3*288*FLEN/8, x4, x1, x2)

inst_21793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82901fffffffffff; valaddr_reg:x3; val_offset:65379*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65379*0 + 3*289*FLEN/8, x4, x1, x2)

inst_21794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82903fffffffffff; valaddr_reg:x3; val_offset:65382*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65382*0 + 3*290*FLEN/8, x4, x1, x2)

inst_21795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x82907fffffffffff; valaddr_reg:x3; val_offset:65385*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65385*0 + 3*291*FLEN/8, x4, x1, x2)

inst_21796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8290ffffffffffff; valaddr_reg:x3; val_offset:65388*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65388*0 + 3*292*FLEN/8, x4, x1, x2)

inst_21797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8291ffffffffffff; valaddr_reg:x3; val_offset:65391*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65391*0 + 3*293*FLEN/8, x4, x1, x2)

inst_21798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8293ffffffffffff; valaddr_reg:x3; val_offset:65394*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65394*0 + 3*294*FLEN/8, x4, x1, x2)

inst_21799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8297ffffffffffff; valaddr_reg:x3; val_offset:65397*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65397*0 + 3*295*FLEN/8, x4, x1, x2)

inst_21800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x8298000000000000; valaddr_reg:x3; val_offset:65400*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65400*0 + 3*296*FLEN/8, x4, x1, x2)

inst_21801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829c000000000000; valaddr_reg:x3; val_offset:65403*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65403*0 + 3*297*FLEN/8, x4, x1, x2)

inst_21802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829e000000000000; valaddr_reg:x3; val_offset:65406*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65406*0 + 3*298*FLEN/8, x4, x1, x2)

inst_21803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829f000000000000; valaddr_reg:x3; val_offset:65409*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65409*0 + 3*299*FLEN/8, x4, x1, x2)

inst_21804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829f800000000000; valaddr_reg:x3; val_offset:65412*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65412*0 + 3*300*FLEN/8, x4, x1, x2)

inst_21805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fc00000000000; valaddr_reg:x3; val_offset:65415*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65415*0 + 3*301*FLEN/8, x4, x1, x2)

inst_21806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fe00000000000; valaddr_reg:x3; val_offset:65418*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65418*0 + 3*302*FLEN/8, x4, x1, x2)

inst_21807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ff00000000000; valaddr_reg:x3; val_offset:65421*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65421*0 + 3*303*FLEN/8, x4, x1, x2)

inst_21808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ff80000000000; valaddr_reg:x3; val_offset:65424*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65424*0 + 3*304*FLEN/8, x4, x1, x2)

inst_21809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffc0000000000; valaddr_reg:x3; val_offset:65427*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65427*0 + 3*305*FLEN/8, x4, x1, x2)

inst_21810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffe0000000000; valaddr_reg:x3; val_offset:65430*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65430*0 + 3*306*FLEN/8, x4, x1, x2)

inst_21811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fff0000000000; valaddr_reg:x3; val_offset:65433*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65433*0 + 3*307*FLEN/8, x4, x1, x2)

inst_21812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fff8000000000; valaddr_reg:x3; val_offset:65436*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65436*0 + 3*308*FLEN/8, x4, x1, x2)

inst_21813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffc000000000; valaddr_reg:x3; val_offset:65439*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65439*0 + 3*309*FLEN/8, x4, x1, x2)

inst_21814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffe000000000; valaddr_reg:x3; val_offset:65442*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65442*0 + 3*310*FLEN/8, x4, x1, x2)

inst_21815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffff000000000; valaddr_reg:x3; val_offset:65445*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65445*0 + 3*311*FLEN/8, x4, x1, x2)

inst_21816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffff800000000; valaddr_reg:x3; val_offset:65448*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65448*0 + 3*312*FLEN/8, x4, x1, x2)

inst_21817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffc00000000; valaddr_reg:x3; val_offset:65451*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65451*0 + 3*313*FLEN/8, x4, x1, x2)

inst_21818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffe00000000; valaddr_reg:x3; val_offset:65454*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65454*0 + 3*314*FLEN/8, x4, x1, x2)

inst_21819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffff00000000; valaddr_reg:x3; val_offset:65457*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65457*0 + 3*315*FLEN/8, x4, x1, x2)

inst_21820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffff80000000; valaddr_reg:x3; val_offset:65460*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65460*0 + 3*316*FLEN/8, x4, x1, x2)

inst_21821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffc0000000; valaddr_reg:x3; val_offset:65463*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65463*0 + 3*317*FLEN/8, x4, x1, x2)

inst_21822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffe0000000; valaddr_reg:x3; val_offset:65466*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65466*0 + 3*318*FLEN/8, x4, x1, x2)

inst_21823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffff0000000; valaddr_reg:x3; val_offset:65469*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65469*0 + 3*319*FLEN/8, x4, x1, x2)

inst_21824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffff8000000; valaddr_reg:x3; val_offset:65472*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65472*0 + 3*320*FLEN/8, x4, x1, x2)

inst_21825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffc000000; valaddr_reg:x3; val_offset:65475*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65475*0 + 3*321*FLEN/8, x4, x1, x2)

inst_21826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffe000000; valaddr_reg:x3; val_offset:65478*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65478*0 + 3*322*FLEN/8, x4, x1, x2)

inst_21827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffff000000; valaddr_reg:x3; val_offset:65481*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65481*0 + 3*323*FLEN/8, x4, x1, x2)

inst_21828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffff800000; valaddr_reg:x3; val_offset:65484*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65484*0 + 3*324*FLEN/8, x4, x1, x2)

inst_21829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffc00000; valaddr_reg:x3; val_offset:65487*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65487*0 + 3*325*FLEN/8, x4, x1, x2)

inst_21830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffe00000; valaddr_reg:x3; val_offset:65490*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65490*0 + 3*326*FLEN/8, x4, x1, x2)

inst_21831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffff00000; valaddr_reg:x3; val_offset:65493*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65493*0 + 3*327*FLEN/8, x4, x1, x2)

inst_21832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffff80000; valaddr_reg:x3; val_offset:65496*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65496*0 + 3*328*FLEN/8, x4, x1, x2)

inst_21833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffc0000; valaddr_reg:x3; val_offset:65499*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65499*0 + 3*329*FLEN/8, x4, x1, x2)

inst_21834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffe0000; valaddr_reg:x3; val_offset:65502*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65502*0 + 3*330*FLEN/8, x4, x1, x2)

inst_21835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffff0000; valaddr_reg:x3; val_offset:65505*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65505*0 + 3*331*FLEN/8, x4, x1, x2)

inst_21836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffff8000; valaddr_reg:x3; val_offset:65508*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65508*0 + 3*332*FLEN/8, x4, x1, x2)

inst_21837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffffc000; valaddr_reg:x3; val_offset:65511*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65511*0 + 3*333*FLEN/8, x4, x1, x2)

inst_21838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffffe000; valaddr_reg:x3; val_offset:65514*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65514*0 + 3*334*FLEN/8, x4, x1, x2)

inst_21839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffff000; valaddr_reg:x3; val_offset:65517*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65517*0 + 3*335*FLEN/8, x4, x1, x2)

inst_21840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffff800; valaddr_reg:x3; val_offset:65520*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65520*0 + 3*336*FLEN/8, x4, x1, x2)

inst_21841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffffc00; valaddr_reg:x3; val_offset:65523*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65523*0 + 3*337*FLEN/8, x4, x1, x2)

inst_21842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffffe00; valaddr_reg:x3; val_offset:65526*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65526*0 + 3*338*FLEN/8, x4, x1, x2)

inst_21843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffffff00; valaddr_reg:x3; val_offset:65529*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65529*0 + 3*339*FLEN/8, x4, x1, x2)

inst_21844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffffff80; valaddr_reg:x3; val_offset:65532*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65532*0 + 3*340*FLEN/8, x4, x1, x2)

inst_21845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffffffc0; valaddr_reg:x3; val_offset:65535*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65535*0 + 3*341*FLEN/8, x4, x1, x2)

inst_21846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffffffe0; valaddr_reg:x3; val_offset:65538*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65538*0 + 3*342*FLEN/8, x4, x1, x2)

inst_21847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffffff0; valaddr_reg:x3; val_offset:65541*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65541*0 + 3*343*FLEN/8, x4, x1, x2)

inst_21848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffffff8; valaddr_reg:x3; val_offset:65544*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65544*0 + 3*344*FLEN/8, x4, x1, x2)

inst_21849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffffffc; valaddr_reg:x3; val_offset:65547*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65547*0 + 3*345*FLEN/8, x4, x1, x2)

inst_21850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829ffffffffffffe; valaddr_reg:x3; val_offset:65550*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65550*0 + 3*346*FLEN/8, x4, x1, x2)

inst_21851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xda8e9b3c593e3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8da8e9b3c593e3; op2val:0x8000;
op3val:0x829fffffffffffff; valaddr_reg:x3; val_offset:65553*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65553*0 + 3*347*FLEN/8, x4, x1, x2)

inst_21852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:65556*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65556*0 + 3*348*FLEN/8, x4, x1, x2)

inst_21853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:65559*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65559*0 + 3*349*FLEN/8, x4, x1, x2)

inst_21854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:65562*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65562*0 + 3*350*FLEN/8, x4, x1, x2)

inst_21855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:65565*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65565*0 + 3*351*FLEN/8, x4, x1, x2)

inst_21856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:65568*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65568*0 + 3*352*FLEN/8, x4, x1, x2)

inst_21857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:65571*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65571*0 + 3*353*FLEN/8, x4, x1, x2)

inst_21858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:65574*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65574*0 + 3*354*FLEN/8, x4, x1, x2)

inst_21859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:65577*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65577*0 + 3*355*FLEN/8, x4, x1, x2)

inst_21860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:65580*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65580*0 + 3*356*FLEN/8, x4, x1, x2)

inst_21861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:65583*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65583*0 + 3*357*FLEN/8, x4, x1, x2)

inst_21862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:65586*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65586*0 + 3*358*FLEN/8, x4, x1, x2)

inst_21863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:65589*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65589*0 + 3*359*FLEN/8, x4, x1, x2)

inst_21864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:65592*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65592*0 + 3*360*FLEN/8, x4, x1, x2)

inst_21865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:65595*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65595*0 + 3*361*FLEN/8, x4, x1, x2)

inst_21866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:65598*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65598*0 + 3*362*FLEN/8, x4, x1, x2)

inst_21867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:65601*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65601*0 + 3*363*FLEN/8, x4, x1, x2)

inst_21868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:65604*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65604*0 + 3*364*FLEN/8, x4, x1, x2)

inst_21869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:65607*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65607*0 + 3*365*FLEN/8, x4, x1, x2)

inst_21870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:65610*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65610*0 + 3*366*FLEN/8, x4, x1, x2)

inst_21871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:65613*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65613*0 + 3*367*FLEN/8, x4, x1, x2)

inst_21872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:65616*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65616*0 + 3*368*FLEN/8, x4, x1, x2)

inst_21873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:65619*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65619*0 + 3*369*FLEN/8, x4, x1, x2)

inst_21874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000000000; valaddr_reg:x3; val_offset:65622*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65622*0 + 3*370*FLEN/8, x4, x1, x2)

inst_21875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000000001; valaddr_reg:x3; val_offset:65625*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65625*0 + 3*371*FLEN/8, x4, x1, x2)

inst_21876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000000003; valaddr_reg:x3; val_offset:65628*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65628*0 + 3*372*FLEN/8, x4, x1, x2)

inst_21877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000000007; valaddr_reg:x3; val_offset:65631*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65631*0 + 3*373*FLEN/8, x4, x1, x2)

inst_21878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000000000f; valaddr_reg:x3; val_offset:65634*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65634*0 + 3*374*FLEN/8, x4, x1, x2)

inst_21879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000000001f; valaddr_reg:x3; val_offset:65637*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65637*0 + 3*375*FLEN/8, x4, x1, x2)

inst_21880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000000003f; valaddr_reg:x3; val_offset:65640*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65640*0 + 3*376*FLEN/8, x4, x1, x2)

inst_21881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000000007f; valaddr_reg:x3; val_offset:65643*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65643*0 + 3*377*FLEN/8, x4, x1, x2)

inst_21882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000000000ff; valaddr_reg:x3; val_offset:65646*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65646*0 + 3*378*FLEN/8, x4, x1, x2)

inst_21883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000000001ff; valaddr_reg:x3; val_offset:65649*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65649*0 + 3*379*FLEN/8, x4, x1, x2)

inst_21884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000000003ff; valaddr_reg:x3; val_offset:65652*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65652*0 + 3*380*FLEN/8, x4, x1, x2)

inst_21885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000000007ff; valaddr_reg:x3; val_offset:65655*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65655*0 + 3*381*FLEN/8, x4, x1, x2)

inst_21886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000000fff; valaddr_reg:x3; val_offset:65658*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65658*0 + 3*382*FLEN/8, x4, x1, x2)

inst_21887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000001fff; valaddr_reg:x3; val_offset:65661*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65661*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_21888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000003fff; valaddr_reg:x3; val_offset:65664*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65664*0 + 3*384*FLEN/8, x4, x1, x2)

inst_21889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000007fff; valaddr_reg:x3; val_offset:65667*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65667*0 + 3*385*FLEN/8, x4, x1, x2)

inst_21890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000000ffff; valaddr_reg:x3; val_offset:65670*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65670*0 + 3*386*FLEN/8, x4, x1, x2)

inst_21891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000001ffff; valaddr_reg:x3; val_offset:65673*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65673*0 + 3*387*FLEN/8, x4, x1, x2)

inst_21892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000003ffff; valaddr_reg:x3; val_offset:65676*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65676*0 + 3*388*FLEN/8, x4, x1, x2)

inst_21893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000007ffff; valaddr_reg:x3; val_offset:65679*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65679*0 + 3*389*FLEN/8, x4, x1, x2)

inst_21894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000000fffff; valaddr_reg:x3; val_offset:65682*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65682*0 + 3*390*FLEN/8, x4, x1, x2)

inst_21895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000001fffff; valaddr_reg:x3; val_offset:65685*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65685*0 + 3*391*FLEN/8, x4, x1, x2)

inst_21896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000003fffff; valaddr_reg:x3; val_offset:65688*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65688*0 + 3*392*FLEN/8, x4, x1, x2)

inst_21897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000007fffff; valaddr_reg:x3; val_offset:65691*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65691*0 + 3*393*FLEN/8, x4, x1, x2)

inst_21898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000000ffffff; valaddr_reg:x3; val_offset:65694*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65694*0 + 3*394*FLEN/8, x4, x1, x2)

inst_21899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000001ffffff; valaddr_reg:x3; val_offset:65697*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65697*0 + 3*395*FLEN/8, x4, x1, x2)

inst_21900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000003ffffff; valaddr_reg:x3; val_offset:65700*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65700*0 + 3*396*FLEN/8, x4, x1, x2)

inst_21901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000007ffffff; valaddr_reg:x3; val_offset:65703*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65703*0 + 3*397*FLEN/8, x4, x1, x2)

inst_21902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000000fffffff; valaddr_reg:x3; val_offset:65706*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65706*0 + 3*398*FLEN/8, x4, x1, x2)

inst_21903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000001fffffff; valaddr_reg:x3; val_offset:65709*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65709*0 + 3*399*FLEN/8, x4, x1, x2)

inst_21904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000003fffffff; valaddr_reg:x3; val_offset:65712*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65712*0 + 3*400*FLEN/8, x4, x1, x2)

inst_21905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000007fffffff; valaddr_reg:x3; val_offset:65715*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65715*0 + 3*401*FLEN/8, x4, x1, x2)

inst_21906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00000ffffffff; valaddr_reg:x3; val_offset:65718*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65718*0 + 3*402*FLEN/8, x4, x1, x2)

inst_21907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00001ffffffff; valaddr_reg:x3; val_offset:65721*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65721*0 + 3*403*FLEN/8, x4, x1, x2)

inst_21908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00003ffffffff; valaddr_reg:x3; val_offset:65724*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65724*0 + 3*404*FLEN/8, x4, x1, x2)

inst_21909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00007ffffffff; valaddr_reg:x3; val_offset:65727*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65727*0 + 3*405*FLEN/8, x4, x1, x2)

inst_21910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0000fffffffff; valaddr_reg:x3; val_offset:65730*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65730*0 + 3*406*FLEN/8, x4, x1, x2)

inst_21911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0001fffffffff; valaddr_reg:x3; val_offset:65733*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65733*0 + 3*407*FLEN/8, x4, x1, x2)

inst_21912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0003fffffffff; valaddr_reg:x3; val_offset:65736*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65736*0 + 3*408*FLEN/8, x4, x1, x2)

inst_21913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0007fffffffff; valaddr_reg:x3; val_offset:65739*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65739*0 + 3*409*FLEN/8, x4, x1, x2)

inst_21914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d000ffffffffff; valaddr_reg:x3; val_offset:65742*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65742*0 + 3*410*FLEN/8, x4, x1, x2)

inst_21915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d001ffffffffff; valaddr_reg:x3; val_offset:65745*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65745*0 + 3*411*FLEN/8, x4, x1, x2)

inst_21916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d003ffffffffff; valaddr_reg:x3; val_offset:65748*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65748*0 + 3*412*FLEN/8, x4, x1, x2)

inst_21917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d007ffffffffff; valaddr_reg:x3; val_offset:65751*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65751*0 + 3*413*FLEN/8, x4, x1, x2)

inst_21918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d00fffffffffff; valaddr_reg:x3; val_offset:65754*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65754*0 + 3*414*FLEN/8, x4, x1, x2)

inst_21919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d01fffffffffff; valaddr_reg:x3; val_offset:65757*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65757*0 + 3*415*FLEN/8, x4, x1, x2)

inst_21920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d03fffffffffff; valaddr_reg:x3; val_offset:65760*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65760*0 + 3*416*FLEN/8, x4, x1, x2)

inst_21921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d07fffffffffff; valaddr_reg:x3; val_offset:65763*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65763*0 + 3*417*FLEN/8, x4, x1, x2)

inst_21922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d0ffffffffffff; valaddr_reg:x3; val_offset:65766*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65766*0 + 3*418*FLEN/8, x4, x1, x2)

inst_21923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d1ffffffffffff; valaddr_reg:x3; val_offset:65769*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65769*0 + 3*419*FLEN/8, x4, x1, x2)

inst_21924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d3ffffffffffff; valaddr_reg:x3; val_offset:65772*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65772*0 + 3*420*FLEN/8, x4, x1, x2)

inst_21925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d7ffffffffffff; valaddr_reg:x3; val_offset:65775*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65775*0 + 3*421*FLEN/8, x4, x1, x2)

inst_21926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80d8000000000000; valaddr_reg:x3; val_offset:65778*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65778*0 + 3*422*FLEN/8, x4, x1, x2)

inst_21927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dc000000000000; valaddr_reg:x3; val_offset:65781*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65781*0 + 3*423*FLEN/8, x4, x1, x2)

inst_21928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80de000000000000; valaddr_reg:x3; val_offset:65784*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65784*0 + 3*424*FLEN/8, x4, x1, x2)

inst_21929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80df000000000000; valaddr_reg:x3; val_offset:65787*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65787*0 + 3*425*FLEN/8, x4, x1, x2)

inst_21930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80df800000000000; valaddr_reg:x3; val_offset:65790*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65790*0 + 3*426*FLEN/8, x4, x1, x2)

inst_21931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfc00000000000; valaddr_reg:x3; val_offset:65793*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65793*0 + 3*427*FLEN/8, x4, x1, x2)

inst_21932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfe00000000000; valaddr_reg:x3; val_offset:65796*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65796*0 + 3*428*FLEN/8, x4, x1, x2)

inst_21933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dff00000000000; valaddr_reg:x3; val_offset:65799*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65799*0 + 3*429*FLEN/8, x4, x1, x2)

inst_21934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dff80000000000; valaddr_reg:x3; val_offset:65802*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65802*0 + 3*430*FLEN/8, x4, x1, x2)

inst_21935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffc0000000000; valaddr_reg:x3; val_offset:65805*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65805*0 + 3*431*FLEN/8, x4, x1, x2)

inst_21936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffe0000000000; valaddr_reg:x3; val_offset:65808*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65808*0 + 3*432*FLEN/8, x4, x1, x2)

inst_21937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfff0000000000; valaddr_reg:x3; val_offset:65811*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65811*0 + 3*433*FLEN/8, x4, x1, x2)

inst_21938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfff8000000000; valaddr_reg:x3; val_offset:65814*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65814*0 + 3*434*FLEN/8, x4, x1, x2)

inst_21939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffc000000000; valaddr_reg:x3; val_offset:65817*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65817*0 + 3*435*FLEN/8, x4, x1, x2)

inst_21940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffe000000000; valaddr_reg:x3; val_offset:65820*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65820*0 + 3*436*FLEN/8, x4, x1, x2)

inst_21941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffff000000000; valaddr_reg:x3; val_offset:65823*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65823*0 + 3*437*FLEN/8, x4, x1, x2)

inst_21942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffff800000000; valaddr_reg:x3; val_offset:65826*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65826*0 + 3*438*FLEN/8, x4, x1, x2)

inst_21943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffc00000000; valaddr_reg:x3; val_offset:65829*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65829*0 + 3*439*FLEN/8, x4, x1, x2)

inst_21944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffe00000000; valaddr_reg:x3; val_offset:65832*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65832*0 + 3*440*FLEN/8, x4, x1, x2)

inst_21945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffff00000000; valaddr_reg:x3; val_offset:65835*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65835*0 + 3*441*FLEN/8, x4, x1, x2)

inst_21946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffff80000000; valaddr_reg:x3; val_offset:65838*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65838*0 + 3*442*FLEN/8, x4, x1, x2)

inst_21947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffc0000000; valaddr_reg:x3; val_offset:65841*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65841*0 + 3*443*FLEN/8, x4, x1, x2)

inst_21948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffe0000000; valaddr_reg:x3; val_offset:65844*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65844*0 + 3*444*FLEN/8, x4, x1, x2)

inst_21949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffff0000000; valaddr_reg:x3; val_offset:65847*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65847*0 + 3*445*FLEN/8, x4, x1, x2)

inst_21950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffff8000000; valaddr_reg:x3; val_offset:65850*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65850*0 + 3*446*FLEN/8, x4, x1, x2)

inst_21951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffc000000; valaddr_reg:x3; val_offset:65853*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65853*0 + 3*447*FLEN/8, x4, x1, x2)

inst_21952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffe000000; valaddr_reg:x3; val_offset:65856*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65856*0 + 3*448*FLEN/8, x4, x1, x2)

inst_21953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffff000000; valaddr_reg:x3; val_offset:65859*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65859*0 + 3*449*FLEN/8, x4, x1, x2)

inst_21954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffff800000; valaddr_reg:x3; val_offset:65862*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65862*0 + 3*450*FLEN/8, x4, x1, x2)

inst_21955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffc00000; valaddr_reg:x3; val_offset:65865*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65865*0 + 3*451*FLEN/8, x4, x1, x2)

inst_21956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffe00000; valaddr_reg:x3; val_offset:65868*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65868*0 + 3*452*FLEN/8, x4, x1, x2)

inst_21957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffff00000; valaddr_reg:x3; val_offset:65871*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65871*0 + 3*453*FLEN/8, x4, x1, x2)

inst_21958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffff80000; valaddr_reg:x3; val_offset:65874*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65874*0 + 3*454*FLEN/8, x4, x1, x2)

inst_21959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffc0000; valaddr_reg:x3; val_offset:65877*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65877*0 + 3*455*FLEN/8, x4, x1, x2)

inst_21960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffe0000; valaddr_reg:x3; val_offset:65880*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65880*0 + 3*456*FLEN/8, x4, x1, x2)

inst_21961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffff0000; valaddr_reg:x3; val_offset:65883*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65883*0 + 3*457*FLEN/8, x4, x1, x2)

inst_21962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffff8000; valaddr_reg:x3; val_offset:65886*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65886*0 + 3*458*FLEN/8, x4, x1, x2)

inst_21963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffffc000; valaddr_reg:x3; val_offset:65889*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65889*0 + 3*459*FLEN/8, x4, x1, x2)

inst_21964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffffe000; valaddr_reg:x3; val_offset:65892*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65892*0 + 3*460*FLEN/8, x4, x1, x2)

inst_21965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffff000; valaddr_reg:x3; val_offset:65895*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65895*0 + 3*461*FLEN/8, x4, x1, x2)

inst_21966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffff800; valaddr_reg:x3; val_offset:65898*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65898*0 + 3*462*FLEN/8, x4, x1, x2)

inst_21967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffffc00; valaddr_reg:x3; val_offset:65901*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65901*0 + 3*463*FLEN/8, x4, x1, x2)

inst_21968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffffe00; valaddr_reg:x3; val_offset:65904*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65904*0 + 3*464*FLEN/8, x4, x1, x2)

inst_21969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffffff00; valaddr_reg:x3; val_offset:65907*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65907*0 + 3*465*FLEN/8, x4, x1, x2)

inst_21970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffffff80; valaddr_reg:x3; val_offset:65910*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65910*0 + 3*466*FLEN/8, x4, x1, x2)

inst_21971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffffffc0; valaddr_reg:x3; val_offset:65913*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65913*0 + 3*467*FLEN/8, x4, x1, x2)

inst_21972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffffffe0; valaddr_reg:x3; val_offset:65916*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65916*0 + 3*468*FLEN/8, x4, x1, x2)

inst_21973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffffff0; valaddr_reg:x3; val_offset:65919*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65919*0 + 3*469*FLEN/8, x4, x1, x2)

inst_21974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffffff8; valaddr_reg:x3; val_offset:65922*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65922*0 + 3*470*FLEN/8, x4, x1, x2)

inst_21975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffffffc; valaddr_reg:x3; val_offset:65925*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65925*0 + 3*471*FLEN/8, x4, x1, x2)

inst_21976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dffffffffffffe; valaddr_reg:x3; val_offset:65928*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65928*0 + 3*472*FLEN/8, x4, x1, x2)

inst_21977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xdb7f28678a5a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8db7f28678a5a7; op2val:0x8000;
op3val:0x80dfffffffffffff; valaddr_reg:x3; val_offset:65931*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65931*0 + 3*473*FLEN/8, x4, x1, x2)

inst_21978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000000000; valaddr_reg:x3; val_offset:65934*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65934*0 + 3*474*FLEN/8, x4, x1, x2)

inst_21979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000000001; valaddr_reg:x3; val_offset:65937*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65937*0 + 3*475*FLEN/8, x4, x1, x2)

inst_21980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000000003; valaddr_reg:x3; val_offset:65940*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65940*0 + 3*476*FLEN/8, x4, x1, x2)

inst_21981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000000007; valaddr_reg:x3; val_offset:65943*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65943*0 + 3*477*FLEN/8, x4, x1, x2)

inst_21982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000000000f; valaddr_reg:x3; val_offset:65946*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65946*0 + 3*478*FLEN/8, x4, x1, x2)

inst_21983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000000001f; valaddr_reg:x3; val_offset:65949*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65949*0 + 3*479*FLEN/8, x4, x1, x2)

inst_21984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000000003f; valaddr_reg:x3; val_offset:65952*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65952*0 + 3*480*FLEN/8, x4, x1, x2)

inst_21985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000000007f; valaddr_reg:x3; val_offset:65955*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65955*0 + 3*481*FLEN/8, x4, x1, x2)

inst_21986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000000000ff; valaddr_reg:x3; val_offset:65958*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65958*0 + 3*482*FLEN/8, x4, x1, x2)

inst_21987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000000001ff; valaddr_reg:x3; val_offset:65961*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65961*0 + 3*483*FLEN/8, x4, x1, x2)

inst_21988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000000003ff; valaddr_reg:x3; val_offset:65964*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65964*0 + 3*484*FLEN/8, x4, x1, x2)

inst_21989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000000007ff; valaddr_reg:x3; val_offset:65967*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65967*0 + 3*485*FLEN/8, x4, x1, x2)

inst_21990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000000fff; valaddr_reg:x3; val_offset:65970*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65970*0 + 3*486*FLEN/8, x4, x1, x2)

inst_21991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000001fff; valaddr_reg:x3; val_offset:65973*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65973*0 + 3*487*FLEN/8, x4, x1, x2)

inst_21992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000003fff; valaddr_reg:x3; val_offset:65976*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65976*0 + 3*488*FLEN/8, x4, x1, x2)

inst_21993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000007fff; valaddr_reg:x3; val_offset:65979*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65979*0 + 3*489*FLEN/8, x4, x1, x2)

inst_21994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000000ffff; valaddr_reg:x3; val_offset:65982*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65982*0 + 3*490*FLEN/8, x4, x1, x2)

inst_21995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000001ffff; valaddr_reg:x3; val_offset:65985*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65985*0 + 3*491*FLEN/8, x4, x1, x2)

inst_21996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000003ffff; valaddr_reg:x3; val_offset:65988*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65988*0 + 3*492*FLEN/8, x4, x1, x2)

inst_21997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000007ffff; valaddr_reg:x3; val_offset:65991*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65991*0 + 3*493*FLEN/8, x4, x1, x2)

inst_21998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000000fffff; valaddr_reg:x3; val_offset:65994*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65994*0 + 3*494*FLEN/8, x4, x1, x2)

inst_21999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000001fffff; valaddr_reg:x3; val_offset:65997*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 65997*0 + 3*495*FLEN/8, x4, x1, x2)

inst_22000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000003fffff; valaddr_reg:x3; val_offset:66000*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66000*0 + 3*496*FLEN/8, x4, x1, x2)

inst_22001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000007fffff; valaddr_reg:x3; val_offset:66003*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66003*0 + 3*497*FLEN/8, x4, x1, x2)

inst_22002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000000ffffff; valaddr_reg:x3; val_offset:66006*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66006*0 + 3*498*FLEN/8, x4, x1, x2)

inst_22003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000001ffffff; valaddr_reg:x3; val_offset:66009*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66009*0 + 3*499*FLEN/8, x4, x1, x2)

inst_22004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000003ffffff; valaddr_reg:x3; val_offset:66012*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66012*0 + 3*500*FLEN/8, x4, x1, x2)

inst_22005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000007ffffff; valaddr_reg:x3; val_offset:66015*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66015*0 + 3*501*FLEN/8, x4, x1, x2)

inst_22006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000000fffffff; valaddr_reg:x3; val_offset:66018*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66018*0 + 3*502*FLEN/8, x4, x1, x2)

inst_22007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000001fffffff; valaddr_reg:x3; val_offset:66021*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66021*0 + 3*503*FLEN/8, x4, x1, x2)

inst_22008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000003fffffff; valaddr_reg:x3; val_offset:66024*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66024*0 + 3*504*FLEN/8, x4, x1, x2)

inst_22009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000007fffffff; valaddr_reg:x3; val_offset:66027*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66027*0 + 3*505*FLEN/8, x4, x1, x2)

inst_22010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00000ffffffff; valaddr_reg:x3; val_offset:66030*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66030*0 + 3*506*FLEN/8, x4, x1, x2)

inst_22011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00001ffffffff; valaddr_reg:x3; val_offset:66033*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66033*0 + 3*507*FLEN/8, x4, x1, x2)

inst_22012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00003ffffffff; valaddr_reg:x3; val_offset:66036*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66036*0 + 3*508*FLEN/8, x4, x1, x2)

inst_22013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00007ffffffff; valaddr_reg:x3; val_offset:66039*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66039*0 + 3*509*FLEN/8, x4, x1, x2)

inst_22014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0000fffffffff; valaddr_reg:x3; val_offset:66042*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66042*0 + 3*510*FLEN/8, x4, x1, x2)

inst_22015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0001fffffffff; valaddr_reg:x3; val_offset:66045*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66045*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_22016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0003fffffffff; valaddr_reg:x3; val_offset:66048*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66048*0 + 3*512*FLEN/8, x4, x1, x2)

inst_22017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0007fffffffff; valaddr_reg:x3; val_offset:66051*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66051*0 + 3*513*FLEN/8, x4, x1, x2)

inst_22018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec000ffffffffff; valaddr_reg:x3; val_offset:66054*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66054*0 + 3*514*FLEN/8, x4, x1, x2)

inst_22019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec001ffffffffff; valaddr_reg:x3; val_offset:66057*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66057*0 + 3*515*FLEN/8, x4, x1, x2)

inst_22020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec003ffffffffff; valaddr_reg:x3; val_offset:66060*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66060*0 + 3*516*FLEN/8, x4, x1, x2)

inst_22021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec007ffffffffff; valaddr_reg:x3; val_offset:66063*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66063*0 + 3*517*FLEN/8, x4, x1, x2)

inst_22022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec00fffffffffff; valaddr_reg:x3; val_offset:66066*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66066*0 + 3*518*FLEN/8, x4, x1, x2)

inst_22023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec01fffffffffff; valaddr_reg:x3; val_offset:66069*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66069*0 + 3*519*FLEN/8, x4, x1, x2)

inst_22024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec03fffffffffff; valaddr_reg:x3; val_offset:66072*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66072*0 + 3*520*FLEN/8, x4, x1, x2)

inst_22025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec07fffffffffff; valaddr_reg:x3; val_offset:66075*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66075*0 + 3*521*FLEN/8, x4, x1, x2)

inst_22026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec0ffffffffffff; valaddr_reg:x3; val_offset:66078*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66078*0 + 3*522*FLEN/8, x4, x1, x2)

inst_22027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec1ffffffffffff; valaddr_reg:x3; val_offset:66081*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66081*0 + 3*523*FLEN/8, x4, x1, x2)

inst_22028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec3ffffffffffff; valaddr_reg:x3; val_offset:66084*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66084*0 + 3*524*FLEN/8, x4, x1, x2)

inst_22029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec7ffffffffffff; valaddr_reg:x3; val_offset:66087*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66087*0 + 3*525*FLEN/8, x4, x1, x2)

inst_22030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbec8000000000000; valaddr_reg:x3; val_offset:66090*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66090*0 + 3*526*FLEN/8, x4, x1, x2)

inst_22031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecc000000000000; valaddr_reg:x3; val_offset:66093*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66093*0 + 3*527*FLEN/8, x4, x1, x2)

inst_22032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbece000000000000; valaddr_reg:x3; val_offset:66096*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66096*0 + 3*528*FLEN/8, x4, x1, x2)

inst_22033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecf000000000000; valaddr_reg:x3; val_offset:66099*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66099*0 + 3*529*FLEN/8, x4, x1, x2)

inst_22034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecf800000000000; valaddr_reg:x3; val_offset:66102*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66102*0 + 3*530*FLEN/8, x4, x1, x2)

inst_22035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfc00000000000; valaddr_reg:x3; val_offset:66105*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66105*0 + 3*531*FLEN/8, x4, x1, x2)

inst_22036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfe00000000000; valaddr_reg:x3; val_offset:66108*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66108*0 + 3*532*FLEN/8, x4, x1, x2)

inst_22037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecff00000000000; valaddr_reg:x3; val_offset:66111*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66111*0 + 3*533*FLEN/8, x4, x1, x2)

inst_22038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecff80000000000; valaddr_reg:x3; val_offset:66114*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66114*0 + 3*534*FLEN/8, x4, x1, x2)

inst_22039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffc0000000000; valaddr_reg:x3; val_offset:66117*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66117*0 + 3*535*FLEN/8, x4, x1, x2)

inst_22040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffe0000000000; valaddr_reg:x3; val_offset:66120*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66120*0 + 3*536*FLEN/8, x4, x1, x2)

inst_22041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfff0000000000; valaddr_reg:x3; val_offset:66123*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66123*0 + 3*537*FLEN/8, x4, x1, x2)

inst_22042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfff8000000000; valaddr_reg:x3; val_offset:66126*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66126*0 + 3*538*FLEN/8, x4, x1, x2)

inst_22043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffc000000000; valaddr_reg:x3; val_offset:66129*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66129*0 + 3*539*FLEN/8, x4, x1, x2)

inst_22044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffe000000000; valaddr_reg:x3; val_offset:66132*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66132*0 + 3*540*FLEN/8, x4, x1, x2)

inst_22045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffff000000000; valaddr_reg:x3; val_offset:66135*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66135*0 + 3*541*FLEN/8, x4, x1, x2)

inst_22046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffff800000000; valaddr_reg:x3; val_offset:66138*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66138*0 + 3*542*FLEN/8, x4, x1, x2)

inst_22047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffc00000000; valaddr_reg:x3; val_offset:66141*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66141*0 + 3*543*FLEN/8, x4, x1, x2)

inst_22048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffe00000000; valaddr_reg:x3; val_offset:66144*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66144*0 + 3*544*FLEN/8, x4, x1, x2)

inst_22049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffff00000000; valaddr_reg:x3; val_offset:66147*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66147*0 + 3*545*FLEN/8, x4, x1, x2)

inst_22050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffff80000000; valaddr_reg:x3; val_offset:66150*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66150*0 + 3*546*FLEN/8, x4, x1, x2)

inst_22051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffc0000000; valaddr_reg:x3; val_offset:66153*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66153*0 + 3*547*FLEN/8, x4, x1, x2)

inst_22052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffe0000000; valaddr_reg:x3; val_offset:66156*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66156*0 + 3*548*FLEN/8, x4, x1, x2)

inst_22053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffff0000000; valaddr_reg:x3; val_offset:66159*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66159*0 + 3*549*FLEN/8, x4, x1, x2)

inst_22054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffff8000000; valaddr_reg:x3; val_offset:66162*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66162*0 + 3*550*FLEN/8, x4, x1, x2)

inst_22055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffc000000; valaddr_reg:x3; val_offset:66165*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66165*0 + 3*551*FLEN/8, x4, x1, x2)

inst_22056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffe000000; valaddr_reg:x3; val_offset:66168*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66168*0 + 3*552*FLEN/8, x4, x1, x2)

inst_22057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffff000000; valaddr_reg:x3; val_offset:66171*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66171*0 + 3*553*FLEN/8, x4, x1, x2)

inst_22058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffff800000; valaddr_reg:x3; val_offset:66174*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66174*0 + 3*554*FLEN/8, x4, x1, x2)

inst_22059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffc00000; valaddr_reg:x3; val_offset:66177*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66177*0 + 3*555*FLEN/8, x4, x1, x2)

inst_22060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffe00000; valaddr_reg:x3; val_offset:66180*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66180*0 + 3*556*FLEN/8, x4, x1, x2)

inst_22061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffff00000; valaddr_reg:x3; val_offset:66183*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66183*0 + 3*557*FLEN/8, x4, x1, x2)

inst_22062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffff80000; valaddr_reg:x3; val_offset:66186*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66186*0 + 3*558*FLEN/8, x4, x1, x2)

inst_22063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffc0000; valaddr_reg:x3; val_offset:66189*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66189*0 + 3*559*FLEN/8, x4, x1, x2)

inst_22064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffe0000; valaddr_reg:x3; val_offset:66192*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66192*0 + 3*560*FLEN/8, x4, x1, x2)

inst_22065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffff0000; valaddr_reg:x3; val_offset:66195*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66195*0 + 3*561*FLEN/8, x4, x1, x2)

inst_22066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffff8000; valaddr_reg:x3; val_offset:66198*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66198*0 + 3*562*FLEN/8, x4, x1, x2)

inst_22067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffffc000; valaddr_reg:x3; val_offset:66201*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66201*0 + 3*563*FLEN/8, x4, x1, x2)

inst_22068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffffe000; valaddr_reg:x3; val_offset:66204*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66204*0 + 3*564*FLEN/8, x4, x1, x2)

inst_22069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffff000; valaddr_reg:x3; val_offset:66207*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66207*0 + 3*565*FLEN/8, x4, x1, x2)

inst_22070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffff800; valaddr_reg:x3; val_offset:66210*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66210*0 + 3*566*FLEN/8, x4, x1, x2)

inst_22071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffffc00; valaddr_reg:x3; val_offset:66213*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66213*0 + 3*567*FLEN/8, x4, x1, x2)

inst_22072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffffe00; valaddr_reg:x3; val_offset:66216*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66216*0 + 3*568*FLEN/8, x4, x1, x2)

inst_22073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffffff00; valaddr_reg:x3; val_offset:66219*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66219*0 + 3*569*FLEN/8, x4, x1, x2)

inst_22074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffffff80; valaddr_reg:x3; val_offset:66222*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66222*0 + 3*570*FLEN/8, x4, x1, x2)

inst_22075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffffffc0; valaddr_reg:x3; val_offset:66225*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66225*0 + 3*571*FLEN/8, x4, x1, x2)

inst_22076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffffffe0; valaddr_reg:x3; val_offset:66228*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66228*0 + 3*572*FLEN/8, x4, x1, x2)

inst_22077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffffff0; valaddr_reg:x3; val_offset:66231*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66231*0 + 3*573*FLEN/8, x4, x1, x2)

inst_22078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffffff8; valaddr_reg:x3; val_offset:66234*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66234*0 + 3*574*FLEN/8, x4, x1, x2)

inst_22079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffffffc; valaddr_reg:x3; val_offset:66237*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66237*0 + 3*575*FLEN/8, x4, x1, x2)

inst_22080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecffffffffffffe; valaddr_reg:x3; val_offset:66240*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66240*0 + 3*576*FLEN/8, x4, x1, x2)

inst_22081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3ec and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbecfffffffffffff; valaddr_reg:x3; val_offset:66243*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66243*0 + 3*577*FLEN/8, x4, x1, x2)

inst_22082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:66246*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66246*0 + 3*578*FLEN/8, x4, x1, x2)

inst_22083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:66249*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66249*0 + 3*579*FLEN/8, x4, x1, x2)

inst_22084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:66252*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66252*0 + 3*580*FLEN/8, x4, x1, x2)

inst_22085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:66255*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66255*0 + 3*581*FLEN/8, x4, x1, x2)

inst_22086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:66258*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66258*0 + 3*582*FLEN/8, x4, x1, x2)

inst_22087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:66261*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66261*0 + 3*583*FLEN/8, x4, x1, x2)

inst_22088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:66264*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66264*0 + 3*584*FLEN/8, x4, x1, x2)

inst_22089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:66267*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66267*0 + 3*585*FLEN/8, x4, x1, x2)

inst_22090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:66270*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66270*0 + 3*586*FLEN/8, x4, x1, x2)

inst_22091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:66273*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66273*0 + 3*587*FLEN/8, x4, x1, x2)

inst_22092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:66276*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66276*0 + 3*588*FLEN/8, x4, x1, x2)

inst_22093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:66279*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66279*0 + 3*589*FLEN/8, x4, x1, x2)

inst_22094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:66282*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66282*0 + 3*590*FLEN/8, x4, x1, x2)

inst_22095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:66285*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66285*0 + 3*591*FLEN/8, x4, x1, x2)

inst_22096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:66288*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66288*0 + 3*592*FLEN/8, x4, x1, x2)

inst_22097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:66291*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66291*0 + 3*593*FLEN/8, x4, x1, x2)

inst_22098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:66294*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66294*0 + 3*594*FLEN/8, x4, x1, x2)

inst_22099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:66297*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66297*0 + 3*595*FLEN/8, x4, x1, x2)

inst_22100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:66300*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66300*0 + 3*596*FLEN/8, x4, x1, x2)

inst_22101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:66303*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66303*0 + 3*597*FLEN/8, x4, x1, x2)

inst_22102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:66306*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66306*0 + 3*598*FLEN/8, x4, x1, x2)

inst_22103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xde44cb7c6a477 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x120e1d245a4f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8de44cb7c6a477; op2val:0x9fe120e1d245a4f2;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:66309*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66309*0 + 3*599*FLEN/8, x4, x1, x2)

inst_22104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000000000; valaddr_reg:x3; val_offset:66312*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66312*0 + 3*600*FLEN/8, x4, x1, x2)

inst_22105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000000001; valaddr_reg:x3; val_offset:66315*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66315*0 + 3*601*FLEN/8, x4, x1, x2)

inst_22106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000000003; valaddr_reg:x3; val_offset:66318*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66318*0 + 3*602*FLEN/8, x4, x1, x2)

inst_22107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000000007; valaddr_reg:x3; val_offset:66321*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66321*0 + 3*603*FLEN/8, x4, x1, x2)

inst_22108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000000000f; valaddr_reg:x3; val_offset:66324*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66324*0 + 3*604*FLEN/8, x4, x1, x2)

inst_22109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000000001f; valaddr_reg:x3; val_offset:66327*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66327*0 + 3*605*FLEN/8, x4, x1, x2)

inst_22110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000000003f; valaddr_reg:x3; val_offset:66330*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66330*0 + 3*606*FLEN/8, x4, x1, x2)

inst_22111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000000007f; valaddr_reg:x3; val_offset:66333*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66333*0 + 3*607*FLEN/8, x4, x1, x2)

inst_22112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000000000ff; valaddr_reg:x3; val_offset:66336*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66336*0 + 3*608*FLEN/8, x4, x1, x2)

inst_22113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000000001ff; valaddr_reg:x3; val_offset:66339*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66339*0 + 3*609*FLEN/8, x4, x1, x2)

inst_22114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000000003ff; valaddr_reg:x3; val_offset:66342*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66342*0 + 3*610*FLEN/8, x4, x1, x2)

inst_22115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000000007ff; valaddr_reg:x3; val_offset:66345*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66345*0 + 3*611*FLEN/8, x4, x1, x2)

inst_22116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000000fff; valaddr_reg:x3; val_offset:66348*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66348*0 + 3*612*FLEN/8, x4, x1, x2)

inst_22117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000001fff; valaddr_reg:x3; val_offset:66351*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66351*0 + 3*613*FLEN/8, x4, x1, x2)

inst_22118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000003fff; valaddr_reg:x3; val_offset:66354*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66354*0 + 3*614*FLEN/8, x4, x1, x2)

inst_22119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000007fff; valaddr_reg:x3; val_offset:66357*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66357*0 + 3*615*FLEN/8, x4, x1, x2)

inst_22120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000000ffff; valaddr_reg:x3; val_offset:66360*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66360*0 + 3*616*FLEN/8, x4, x1, x2)

inst_22121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000001ffff; valaddr_reg:x3; val_offset:66363*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66363*0 + 3*617*FLEN/8, x4, x1, x2)

inst_22122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000003ffff; valaddr_reg:x3; val_offset:66366*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66366*0 + 3*618*FLEN/8, x4, x1, x2)

inst_22123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000007ffff; valaddr_reg:x3; val_offset:66369*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66369*0 + 3*619*FLEN/8, x4, x1, x2)

inst_22124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000000fffff; valaddr_reg:x3; val_offset:66372*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66372*0 + 3*620*FLEN/8, x4, x1, x2)

inst_22125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000001fffff; valaddr_reg:x3; val_offset:66375*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66375*0 + 3*621*FLEN/8, x4, x1, x2)

inst_22126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000003fffff; valaddr_reg:x3; val_offset:66378*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66378*0 + 3*622*FLEN/8, x4, x1, x2)

inst_22127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000007fffff; valaddr_reg:x3; val_offset:66381*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66381*0 + 3*623*FLEN/8, x4, x1, x2)

inst_22128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000000ffffff; valaddr_reg:x3; val_offset:66384*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66384*0 + 3*624*FLEN/8, x4, x1, x2)

inst_22129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000001ffffff; valaddr_reg:x3; val_offset:66387*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66387*0 + 3*625*FLEN/8, x4, x1, x2)

inst_22130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000003ffffff; valaddr_reg:x3; val_offset:66390*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66390*0 + 3*626*FLEN/8, x4, x1, x2)

inst_22131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000007ffffff; valaddr_reg:x3; val_offset:66393*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66393*0 + 3*627*FLEN/8, x4, x1, x2)

inst_22132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000000fffffff; valaddr_reg:x3; val_offset:66396*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66396*0 + 3*628*FLEN/8, x4, x1, x2)

inst_22133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000001fffffff; valaddr_reg:x3; val_offset:66399*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66399*0 + 3*629*FLEN/8, x4, x1, x2)

inst_22134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000003fffffff; valaddr_reg:x3; val_offset:66402*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66402*0 + 3*630*FLEN/8, x4, x1, x2)

inst_22135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000007fffffff; valaddr_reg:x3; val_offset:66405*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66405*0 + 3*631*FLEN/8, x4, x1, x2)

inst_22136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00000ffffffff; valaddr_reg:x3; val_offset:66408*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66408*0 + 3*632*FLEN/8, x4, x1, x2)

inst_22137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00001ffffffff; valaddr_reg:x3; val_offset:66411*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66411*0 + 3*633*FLEN/8, x4, x1, x2)

inst_22138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00003ffffffff; valaddr_reg:x3; val_offset:66414*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66414*0 + 3*634*FLEN/8, x4, x1, x2)

inst_22139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00007ffffffff; valaddr_reg:x3; val_offset:66417*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66417*0 + 3*635*FLEN/8, x4, x1, x2)

inst_22140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0000fffffffff; valaddr_reg:x3; val_offset:66420*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66420*0 + 3*636*FLEN/8, x4, x1, x2)

inst_22141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0001fffffffff; valaddr_reg:x3; val_offset:66423*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66423*0 + 3*637*FLEN/8, x4, x1, x2)

inst_22142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0003fffffffff; valaddr_reg:x3; val_offset:66426*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66426*0 + 3*638*FLEN/8, x4, x1, x2)

inst_22143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0007fffffffff; valaddr_reg:x3; val_offset:66429*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66429*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_22144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da000ffffffffff; valaddr_reg:x3; val_offset:66432*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66432*0 + 3*640*FLEN/8, x4, x1, x2)

inst_22145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da001ffffffffff; valaddr_reg:x3; val_offset:66435*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66435*0 + 3*641*FLEN/8, x4, x1, x2)

inst_22146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da003ffffffffff; valaddr_reg:x3; val_offset:66438*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66438*0 + 3*642*FLEN/8, x4, x1, x2)

inst_22147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da007ffffffffff; valaddr_reg:x3; val_offset:66441*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66441*0 + 3*643*FLEN/8, x4, x1, x2)

inst_22148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da00fffffffffff; valaddr_reg:x3; val_offset:66444*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66444*0 + 3*644*FLEN/8, x4, x1, x2)

inst_22149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da01fffffffffff; valaddr_reg:x3; val_offset:66447*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66447*0 + 3*645*FLEN/8, x4, x1, x2)

inst_22150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da03fffffffffff; valaddr_reg:x3; val_offset:66450*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66450*0 + 3*646*FLEN/8, x4, x1, x2)

inst_22151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da07fffffffffff; valaddr_reg:x3; val_offset:66453*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66453*0 + 3*647*FLEN/8, x4, x1, x2)

inst_22152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da0ffffffffffff; valaddr_reg:x3; val_offset:66456*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66456*0 + 3*648*FLEN/8, x4, x1, x2)

inst_22153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da1ffffffffffff; valaddr_reg:x3; val_offset:66459*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66459*0 + 3*649*FLEN/8, x4, x1, x2)

inst_22154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da3ffffffffffff; valaddr_reg:x3; val_offset:66462*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66462*0 + 3*650*FLEN/8, x4, x1, x2)

inst_22155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da7ffffffffffff; valaddr_reg:x3; val_offset:66465*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66465*0 + 3*651*FLEN/8, x4, x1, x2)

inst_22156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3da8000000000000; valaddr_reg:x3; val_offset:66468*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66468*0 + 3*652*FLEN/8, x4, x1, x2)

inst_22157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dac000000000000; valaddr_reg:x3; val_offset:66471*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66471*0 + 3*653*FLEN/8, x4, x1, x2)

inst_22158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dae000000000000; valaddr_reg:x3; val_offset:66474*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66474*0 + 3*654*FLEN/8, x4, x1, x2)

inst_22159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daf000000000000; valaddr_reg:x3; val_offset:66477*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66477*0 + 3*655*FLEN/8, x4, x1, x2)

inst_22160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daf800000000000; valaddr_reg:x3; val_offset:66480*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66480*0 + 3*656*FLEN/8, x4, x1, x2)

inst_22161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafc00000000000; valaddr_reg:x3; val_offset:66483*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66483*0 + 3*657*FLEN/8, x4, x1, x2)

inst_22162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafe00000000000; valaddr_reg:x3; val_offset:66486*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66486*0 + 3*658*FLEN/8, x4, x1, x2)

inst_22163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daff00000000000; valaddr_reg:x3; val_offset:66489*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66489*0 + 3*659*FLEN/8, x4, x1, x2)

inst_22164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daff80000000000; valaddr_reg:x3; val_offset:66492*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66492*0 + 3*660*FLEN/8, x4, x1, x2)

inst_22165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffc0000000000; valaddr_reg:x3; val_offset:66495*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66495*0 + 3*661*FLEN/8, x4, x1, x2)

inst_22166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffe0000000000; valaddr_reg:x3; val_offset:66498*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66498*0 + 3*662*FLEN/8, x4, x1, x2)

inst_22167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafff0000000000; valaddr_reg:x3; val_offset:66501*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66501*0 + 3*663*FLEN/8, x4, x1, x2)

inst_22168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafff8000000000; valaddr_reg:x3; val_offset:66504*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66504*0 + 3*664*FLEN/8, x4, x1, x2)

inst_22169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffc000000000; valaddr_reg:x3; val_offset:66507*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66507*0 + 3*665*FLEN/8, x4, x1, x2)

inst_22170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffe000000000; valaddr_reg:x3; val_offset:66510*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66510*0 + 3*666*FLEN/8, x4, x1, x2)

inst_22171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffff000000000; valaddr_reg:x3; val_offset:66513*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66513*0 + 3*667*FLEN/8, x4, x1, x2)

inst_22172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffff800000000; valaddr_reg:x3; val_offset:66516*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66516*0 + 3*668*FLEN/8, x4, x1, x2)

inst_22173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffc00000000; valaddr_reg:x3; val_offset:66519*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66519*0 + 3*669*FLEN/8, x4, x1, x2)

inst_22174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffe00000000; valaddr_reg:x3; val_offset:66522*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66522*0 + 3*670*FLEN/8, x4, x1, x2)

inst_22175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffff00000000; valaddr_reg:x3; val_offset:66525*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66525*0 + 3*671*FLEN/8, x4, x1, x2)

inst_22176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffff80000000; valaddr_reg:x3; val_offset:66528*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66528*0 + 3*672*FLEN/8, x4, x1, x2)

inst_22177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffc0000000; valaddr_reg:x3; val_offset:66531*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66531*0 + 3*673*FLEN/8, x4, x1, x2)

inst_22178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffe0000000; valaddr_reg:x3; val_offset:66534*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66534*0 + 3*674*FLEN/8, x4, x1, x2)

inst_22179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffff0000000; valaddr_reg:x3; val_offset:66537*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66537*0 + 3*675*FLEN/8, x4, x1, x2)

inst_22180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffff8000000; valaddr_reg:x3; val_offset:66540*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66540*0 + 3*676*FLEN/8, x4, x1, x2)

inst_22181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffc000000; valaddr_reg:x3; val_offset:66543*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66543*0 + 3*677*FLEN/8, x4, x1, x2)

inst_22182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffe000000; valaddr_reg:x3; val_offset:66546*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66546*0 + 3*678*FLEN/8, x4, x1, x2)

inst_22183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffff000000; valaddr_reg:x3; val_offset:66549*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66549*0 + 3*679*FLEN/8, x4, x1, x2)

inst_22184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffff800000; valaddr_reg:x3; val_offset:66552*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66552*0 + 3*680*FLEN/8, x4, x1, x2)

inst_22185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffc00000; valaddr_reg:x3; val_offset:66555*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66555*0 + 3*681*FLEN/8, x4, x1, x2)

inst_22186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffe00000; valaddr_reg:x3; val_offset:66558*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66558*0 + 3*682*FLEN/8, x4, x1, x2)

inst_22187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffff00000; valaddr_reg:x3; val_offset:66561*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66561*0 + 3*683*FLEN/8, x4, x1, x2)

inst_22188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffff80000; valaddr_reg:x3; val_offset:66564*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66564*0 + 3*684*FLEN/8, x4, x1, x2)

inst_22189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffc0000; valaddr_reg:x3; val_offset:66567*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66567*0 + 3*685*FLEN/8, x4, x1, x2)

inst_22190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffe0000; valaddr_reg:x3; val_offset:66570*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66570*0 + 3*686*FLEN/8, x4, x1, x2)

inst_22191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffff0000; valaddr_reg:x3; val_offset:66573*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66573*0 + 3*687*FLEN/8, x4, x1, x2)

inst_22192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffff8000; valaddr_reg:x3; val_offset:66576*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66576*0 + 3*688*FLEN/8, x4, x1, x2)

inst_22193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffffc000; valaddr_reg:x3; val_offset:66579*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66579*0 + 3*689*FLEN/8, x4, x1, x2)

inst_22194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffffe000; valaddr_reg:x3; val_offset:66582*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66582*0 + 3*690*FLEN/8, x4, x1, x2)

inst_22195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffff000; valaddr_reg:x3; val_offset:66585*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66585*0 + 3*691*FLEN/8, x4, x1, x2)

inst_22196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffff800; valaddr_reg:x3; val_offset:66588*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66588*0 + 3*692*FLEN/8, x4, x1, x2)

inst_22197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffffc00; valaddr_reg:x3; val_offset:66591*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66591*0 + 3*693*FLEN/8, x4, x1, x2)

inst_22198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffffe00; valaddr_reg:x3; val_offset:66594*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66594*0 + 3*694*FLEN/8, x4, x1, x2)

inst_22199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffffff00; valaddr_reg:x3; val_offset:66597*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66597*0 + 3*695*FLEN/8, x4, x1, x2)

inst_22200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffffff80; valaddr_reg:x3; val_offset:66600*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66600*0 + 3*696*FLEN/8, x4, x1, x2)

inst_22201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffffffc0; valaddr_reg:x3; val_offset:66603*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66603*0 + 3*697*FLEN/8, x4, x1, x2)

inst_22202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffffffe0; valaddr_reg:x3; val_offset:66606*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66606*0 + 3*698*FLEN/8, x4, x1, x2)

inst_22203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffffff0; valaddr_reg:x3; val_offset:66609*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66609*0 + 3*699*FLEN/8, x4, x1, x2)

inst_22204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffffff8; valaddr_reg:x3; val_offset:66612*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66612*0 + 3*700*FLEN/8, x4, x1, x2)

inst_22205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffffffc; valaddr_reg:x3; val_offset:66615*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66615*0 + 3*701*FLEN/8, x4, x1, x2)

inst_22206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3daffffffffffffe; valaddr_reg:x3; val_offset:66618*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66618*0 + 3*702*FLEN/8, x4, x1, x2)

inst_22207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3dafffffffffffff; valaddr_reg:x3; val_offset:66621*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66621*0 + 3*703*FLEN/8, x4, x1, x2)

inst_22208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:66624*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66624*0 + 3*704*FLEN/8, x4, x1, x2)

inst_22209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:66627*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66627*0 + 3*705*FLEN/8, x4, x1, x2)

inst_22210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:66630*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66630*0 + 3*706*FLEN/8, x4, x1, x2)

inst_22211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:66633*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66633*0 + 3*707*FLEN/8, x4, x1, x2)

inst_22212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:66636*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66636*0 + 3*708*FLEN/8, x4, x1, x2)

inst_22213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:66639*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66639*0 + 3*709*FLEN/8, x4, x1, x2)

inst_22214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:66642*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66642*0 + 3*710*FLEN/8, x4, x1, x2)

inst_22215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:66645*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66645*0 + 3*711*FLEN/8, x4, x1, x2)

inst_22216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:66648*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66648*0 + 3*712*FLEN/8, x4, x1, x2)

inst_22217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:66651*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66651*0 + 3*713*FLEN/8, x4, x1, x2)

inst_22218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:66654*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66654*0 + 3*714*FLEN/8, x4, x1, x2)

inst_22219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:66657*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66657*0 + 3*715*FLEN/8, x4, x1, x2)

inst_22220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:66660*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66660*0 + 3*716*FLEN/8, x4, x1, x2)

inst_22221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:66663*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66663*0 + 3*717*FLEN/8, x4, x1, x2)

inst_22222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:66666*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66666*0 + 3*718*FLEN/8, x4, x1, x2)

inst_22223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:66669*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66669*0 + 3*719*FLEN/8, x4, x1, x2)

inst_22224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:66672*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66672*0 + 3*720*FLEN/8, x4, x1, x2)

inst_22225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:66675*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66675*0 + 3*721*FLEN/8, x4, x1, x2)

inst_22226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:66678*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66678*0 + 3*722*FLEN/8, x4, x1, x2)

inst_22227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:66681*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66681*0 + 3*723*FLEN/8, x4, x1, x2)

inst_22228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:66684*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66684*0 + 3*724*FLEN/8, x4, x1, x2)

inst_22229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe1ab09de0f397 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x101ef87482138 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e1ab09de0f397; op2val:0x205101ef87482138;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:66687*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66687*0 + 3*725*FLEN/8, x4, x1, x2)

inst_22230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:66690*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66690*0 + 3*726*FLEN/8, x4, x1, x2)

inst_22231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:66693*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66693*0 + 3*727*FLEN/8, x4, x1, x2)

inst_22232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:66696*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66696*0 + 3*728*FLEN/8, x4, x1, x2)

inst_22233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:66699*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66699*0 + 3*729*FLEN/8, x4, x1, x2)

inst_22234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:66702*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66702*0 + 3*730*FLEN/8, x4, x1, x2)

inst_22235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:66705*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66705*0 + 3*731*FLEN/8, x4, x1, x2)

inst_22236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:66708*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66708*0 + 3*732*FLEN/8, x4, x1, x2)

inst_22237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:66711*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66711*0 + 3*733*FLEN/8, x4, x1, x2)

inst_22238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:66714*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66714*0 + 3*734*FLEN/8, x4, x1, x2)

inst_22239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:66717*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66717*0 + 3*735*FLEN/8, x4, x1, x2)

inst_22240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:66720*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66720*0 + 3*736*FLEN/8, x4, x1, x2)

inst_22241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:66723*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66723*0 + 3*737*FLEN/8, x4, x1, x2)

inst_22242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:66726*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66726*0 + 3*738*FLEN/8, x4, x1, x2)

inst_22243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:66729*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66729*0 + 3*739*FLEN/8, x4, x1, x2)

inst_22244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:66732*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66732*0 + 3*740*FLEN/8, x4, x1, x2)

inst_22245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:66735*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66735*0 + 3*741*FLEN/8, x4, x1, x2)

inst_22246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:66738*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66738*0 + 3*742*FLEN/8, x4, x1, x2)

inst_22247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:66741*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66741*0 + 3*743*FLEN/8, x4, x1, x2)

inst_22248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:66744*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66744*0 + 3*744*FLEN/8, x4, x1, x2)

inst_22249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:66747*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66747*0 + 3*745*FLEN/8, x4, x1, x2)

inst_22250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:66750*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66750*0 + 3*746*FLEN/8, x4, x1, x2)

inst_22251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:66753*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66753*0 + 3*747*FLEN/8, x4, x1, x2)

inst_22252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000000000; valaddr_reg:x3; val_offset:66756*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66756*0 + 3*748*FLEN/8, x4, x1, x2)

inst_22253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000000001; valaddr_reg:x3; val_offset:66759*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66759*0 + 3*749*FLEN/8, x4, x1, x2)

inst_22254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000000003; valaddr_reg:x3; val_offset:66762*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66762*0 + 3*750*FLEN/8, x4, x1, x2)

inst_22255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000000007; valaddr_reg:x3; val_offset:66765*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66765*0 + 3*751*FLEN/8, x4, x1, x2)

inst_22256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000000000f; valaddr_reg:x3; val_offset:66768*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66768*0 + 3*752*FLEN/8, x4, x1, x2)

inst_22257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000000001f; valaddr_reg:x3; val_offset:66771*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66771*0 + 3*753*FLEN/8, x4, x1, x2)

inst_22258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000000003f; valaddr_reg:x3; val_offset:66774*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66774*0 + 3*754*FLEN/8, x4, x1, x2)

inst_22259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000000007f; valaddr_reg:x3; val_offset:66777*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66777*0 + 3*755*FLEN/8, x4, x1, x2)

inst_22260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x2300000000000ff; valaddr_reg:x3; val_offset:66780*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66780*0 + 3*756*FLEN/8, x4, x1, x2)

inst_22261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x2300000000001ff; valaddr_reg:x3; val_offset:66783*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66783*0 + 3*757*FLEN/8, x4, x1, x2)

inst_22262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x2300000000003ff; valaddr_reg:x3; val_offset:66786*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66786*0 + 3*758*FLEN/8, x4, x1, x2)

inst_22263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x2300000000007ff; valaddr_reg:x3; val_offset:66789*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66789*0 + 3*759*FLEN/8, x4, x1, x2)

inst_22264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000000fff; valaddr_reg:x3; val_offset:66792*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66792*0 + 3*760*FLEN/8, x4, x1, x2)

inst_22265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000001fff; valaddr_reg:x3; val_offset:66795*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66795*0 + 3*761*FLEN/8, x4, x1, x2)

inst_22266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000003fff; valaddr_reg:x3; val_offset:66798*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66798*0 + 3*762*FLEN/8, x4, x1, x2)

inst_22267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x230000000007fff; valaddr_reg:x3; val_offset:66801*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66801*0 + 3*763*FLEN/8, x4, x1, x2)

inst_22268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000000ffff; valaddr_reg:x3; val_offset:66804*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66804*0 + 3*764*FLEN/8, x4, x1, x2)

inst_22269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000001ffff; valaddr_reg:x3; val_offset:66807*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66807*0 + 3*765*FLEN/8, x4, x1, x2)

inst_22270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000003ffff; valaddr_reg:x3; val_offset:66810*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66810*0 + 3*766*FLEN/8, x4, x1, x2)

inst_22271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xe5dab0e2d28d7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8e5dab0e2d28d7; op2val:0x0;
op3val:0x23000000007ffff; valaddr_reg:x3; val_offset:66813*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 66813*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764863098781695,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764864172523519,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764866320007167,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764870614974463,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764879204909055,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764896384778239,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764930744516607,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084764999463993343,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084765136902946815,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084765411780853759,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084765961536667647,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084767061048295423,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084769260071550975,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084773658118062079,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084782454211084287,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084800046397128703,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084835230769217535,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4084905599513395199,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4085046337001750527,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4085327811978461183,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4085890761931882495,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4087016661838725119,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4087016661838725120,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4088142561745567744,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4088705511698989056,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4088986986675699712,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089127724164055040,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089198092908232704,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089233277280321536,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089250869466365952,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089259665559388160,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089264063605899264,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089266262629154816,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089267362140782592,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089267911896596480,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268186774503424,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268324213456896,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268392932933632,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268427292672000,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268444472541184,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268453062475776,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268457357443072,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268459504926720,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268460578668544,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461115539456,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461383974912,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461518192640,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461585301504,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461618855936,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461635633152,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461644021760,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461648216064,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461650313216,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461651361792,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461651886080,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652148224,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652279296,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652344832,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652377600,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652393984,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652402176,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652406272,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652408320,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652409344,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652409856,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410112,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410240,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410304,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410336,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410352,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410360,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410364,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410366,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4089268461652410367,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6885116585573952587,64,FLEN)
NAN_BOXED(2328853103057628650,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707136,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707137,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707139,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707143,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707151,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707167,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707199,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707263,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707391,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831707647,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831708159,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831709183,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831711231,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831715327,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831723519,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831739903,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831772671,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831838207,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820831969279,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832231423,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820832755711,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820833804287,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820835901439,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820840095743,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820848484351,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820865261567,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820898815999,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026820965924863,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821100142591,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821368578047,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026821905448959,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026822979190783,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026825126674431,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026829421641727,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026838011576319,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026855191445503,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026889551183871,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417026958270660607,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027095709614079,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027370587521023,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417027920343334911,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417029019854962687,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417031218878218239,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417035616924729343,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417044413017751551,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417062005203795967,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417097189575884799,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417167558320062463,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417308295808417791,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9417589770785128447,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9418152720738549759,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392383,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9419278620645392384,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420404520552235008,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9420967470505656320,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421248945482366976,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421389682970722304,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421460051714899968,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421495236086988800,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421512828273033216,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421521624366055424,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421526022412566528,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421528221435822080,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529320947449856,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421529870703263744,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530145581170688,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530283020124160,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530351739600896,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530386099339264,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530403279208448,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530411869143040,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530416164110336,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530418311593984,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419385335808,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530419922206720,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420190642176,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420324859904,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420391968768,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420425523200,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420442300416,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420450689024,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420454883328,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420456980480,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458029056,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458553344,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458815488,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420458946560,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459012096,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459044864,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459061248,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459069440,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459073536,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459075584,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459076608,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077120,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077376,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077504,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077568,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077600,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077616,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077624,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077628,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077630,64,FLEN)
NAN_BOXED(6885269024061160159,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9421530420459077631,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966144,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966145,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966147,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966151,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966159,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966175,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966207,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966271,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966399,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966655,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576967167,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576968191,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576970239,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576974335,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576982527,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576998911,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577031679,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577097215,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577228287,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577490431,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621578014719,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621579063295,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621581160447,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621585354751,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621593743359,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621610520575,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621644075007,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621711183871,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621845401599,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622113837055,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622650707967,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019623724449791,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019625871933439,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019630166900735,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019638756835327,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019655936704511,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019690296442879,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019759015919615,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019896454873087,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020171332780031,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020721088593919,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408021820600221695,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408024019623477247,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408028417669988351,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408037213763010559,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408054805949054975,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408089990321143807,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408160359065321471,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408301096553676799,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408582571530387455,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9409145521483808767,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651391,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651392,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411397321297494016,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411960271250915328,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412241746227625984,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412382483715981312,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412452852460158976,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412488036832247808,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412505629018292224,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412514425111314432,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412518823157825536,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412521022181081088,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522121692708864,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522671448522752,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522946326429696,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523083765383168,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523152484859904,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523186844598272,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523204024467456,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523212614402048,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523216909369344,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523219056852992,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220130594816,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220667465728,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220935901184,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221070118912,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221137227776,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221170782208,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221187559424,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221195948032,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221200142336,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221202239488,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203288064,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203812352,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204074496,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204205568,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204271104,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204303872,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204320256,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204328448,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204332544,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204334592,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204335616,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336128,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336384,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336512,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336576,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336608,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336624,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336632,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336636,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336638,64,FLEN)
NAN_BOXED(6885345127016272867,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336639,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592256,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592257,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592259,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592263,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592271,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592287,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592319,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592383,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592511,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592767,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010593279,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010594303,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010596351,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010600447,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010608639,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010625023,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010657791,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010723327,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010854399,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011116543,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011640831,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832012689407,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832014786559,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832018980863,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832027369471,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832044146687,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832077701119,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832144809983,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832279027711,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832547463167,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918833084334079,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918834158075903,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918836305559551,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918840600526847,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918849190461439,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918866370330623,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918900730068991,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918969449545727,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919106888499199,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919381766406143,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919931522220031,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281921031033847807,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281923230057103359,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281927628103614463,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281936424196636671,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281954016382681087,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281989200754769919,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282059569498947583,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282200306987302911,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282481781964013567,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9283044731917434879,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277503,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277504,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285296531731120128,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285859481684541440,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286140956661252096,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286281694149607424,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286352062893785088,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286387247265873920,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286404839451918336,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286413635544940544,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286418033591451648,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286420232614707200,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421332126334976,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421881882148864,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422156760055808,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422294199009280,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422362918486016,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422397278224384,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422414458093568,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422423048028160,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422427342995456,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422429490479104,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422430564220928,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431101091840,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431369527296,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431503745024,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431570853888,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431604408320,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431621185536,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431629574144,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431633768448,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431635865600,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431636914176,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637438464,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637700608,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637831680,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637897216,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637929984,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637946368,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637954560,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637958656,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637960704,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637961728,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962240,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962496,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962624,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962688,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962720,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962736,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962744,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962748,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962750,64,FLEN)
NAN_BOXED(6885361657585378727,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962751,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753792,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753793,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753795,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753799,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753807,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753823,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753855,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734753919,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734754047,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734754303,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734754815,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734755839,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734757887,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734761983,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734770175,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734786559,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734819327,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062734884863,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062735015935,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062735278079,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062735802367,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062736850943,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062738948095,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062743142399,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062751531007,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062768308223,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062801862655,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986062868971519,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986063003189247,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986063271624703,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986063808495615,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986064882237439,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986067029721087,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986071324688383,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986079914622975,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986097094492159,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986131454230527,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986200173707263,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986337612660735,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744986612490567679,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744987162246381567,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744988261758009343,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744990460781264895,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13744994858827775999,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13745003654920798207,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13745021247106842623,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13745056431478931455,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13745126800223109119,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13745267537711464447,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13745549012688175103,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13746111962641596415,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13747237862548439039,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13747237862548439040,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13748363762455281664,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13748926712408702976,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749208187385413632,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749348924873768960,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749419293617946624,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749454477990035456,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749472070176079872,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749480866269102080,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749485264315613184,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749487463338868736,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749488562850496512,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489112606310400,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489387484217344,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489524923170816,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489593642647552,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489628002385920,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489645182255104,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489653772189696,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489658067156992,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489660214640640,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489661288382464,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489661825253376,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662093688832,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662227906560,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662295015424,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662328569856,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662345347072,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662353735680,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662357929984,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662360027136,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662361075712,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662361600000,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662361862144,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662361993216,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362058752,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362091520,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362107904,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362116096,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362120192,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362122240,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362123264,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362123776,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124032,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124160,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124224,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124256,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124272,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124280,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124284,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124286,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13749489662362124287,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6885410423471252599,64,FLEN)
NAN_BOXED(11520525476057949426,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309056,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309057,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309059,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309063,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309071,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309087,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309119,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309183,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309311,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587309567,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587310079,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587311103,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587313151,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587317247,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587325439,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587341823,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587374591,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587440127,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587571199,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232587833343,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232588357631,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232589406207,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232591503359,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232595697663,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232604086271,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232620863487,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232654417919,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232721526783,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549232855744511,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549233124179967,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549233661050879,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549234734792703,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549236882276351,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549241177243647,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549249767178239,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549266947047423,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549301306785791,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549370026262527,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549507465215999,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440549782343122943,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440550332098936831,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440551431610564607,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440553630633820159,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440558028680331263,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440566824773353471,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440584416959397887,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440619601331486719,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440689970075664383,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4440830707564019711,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4441112182540730367,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4441675132494151679,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4442801032400994303,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4442801032400994304,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4443926932307836928,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4444489882261258240,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4444771357237968896,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4444912094726324224,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4444982463470501888,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445017647842590720,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445035240028635136,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445044036121657344,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445048434168168448,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445050633191424000,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445051732703051776,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052282458865664,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052557336772608,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052694775726080,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052763495202816,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052797854941184,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052815034810368,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052823624744960,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052827919712256,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052830067195904,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052831140937728,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052831677808640,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052831946244096,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832080461824,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832147570688,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832181125120,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832197902336,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832206290944,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832210485248,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832212582400,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832213630976,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214155264,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214417408,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214548480,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214614016,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214646784,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214663168,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214671360,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214675456,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214677504,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214678528,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679040,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679296,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679424,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679488,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679520,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679536,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679544,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679548,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679550,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4445052832214679551,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6885470226161398679,64,FLEN)
NAN_BOXED(2328644610605719864,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967360,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967361,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967363,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967367,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967375,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967391,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967423,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967487,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967615,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967871,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957968383,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957969407,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957971455,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957975551,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957983743,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958000127,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958032895,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958098431,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958229503,64,FLEN)
NAN_BOXED(6885543869554698455,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986958491647,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
