
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_1536:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000000000003; valaddr_reg:x3; val_offset:4608*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4608*0 + 3*0*FLEN/8, x4, x1, x2)

inst_1537:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000000000007; valaddr_reg:x3; val_offset:4611*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4611*0 + 3*1*FLEN/8, x4, x1, x2)

inst_1538:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000000000f; valaddr_reg:x3; val_offset:4614*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4614*0 + 3*2*FLEN/8, x4, x1, x2)

inst_1539:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000000001f; valaddr_reg:x3; val_offset:4617*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4617*0 + 3*3*FLEN/8, x4, x1, x2)

inst_1540:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000000003f; valaddr_reg:x3; val_offset:4620*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4620*0 + 3*4*FLEN/8, x4, x1, x2)

inst_1541:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000000007f; valaddr_reg:x3; val_offset:4623*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4623*0 + 3*5*FLEN/8, x4, x1, x2)

inst_1542:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000000000ff; valaddr_reg:x3; val_offset:4626*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4626*0 + 3*6*FLEN/8, x4, x1, x2)

inst_1543:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000000001ff; valaddr_reg:x3; val_offset:4629*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4629*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1544:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000000003ff; valaddr_reg:x3; val_offset:4632*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4632*0 + 3*8*FLEN/8, x4, x1, x2)

inst_1545:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000000007ff; valaddr_reg:x3; val_offset:4635*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4635*0 + 3*9*FLEN/8, x4, x1, x2)

inst_1546:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000000000fff; valaddr_reg:x3; val_offset:4638*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4638*0 + 3*10*FLEN/8, x4, x1, x2)

inst_1547:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000000001fff; valaddr_reg:x3; val_offset:4641*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4641*0 + 3*11*FLEN/8, x4, x1, x2)

inst_1548:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000000003fff; valaddr_reg:x3; val_offset:4644*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4644*0 + 3*12*FLEN/8, x4, x1, x2)

inst_1549:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000000007fff; valaddr_reg:x3; val_offset:4647*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4647*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1550:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000000ffff; valaddr_reg:x3; val_offset:4650*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4650*0 + 3*14*FLEN/8, x4, x1, x2)

inst_1551:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000001ffff; valaddr_reg:x3; val_offset:4653*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4653*0 + 3*15*FLEN/8, x4, x1, x2)

inst_1552:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000003ffff; valaddr_reg:x3; val_offset:4656*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4656*0 + 3*16*FLEN/8, x4, x1, x2)

inst_1553:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000007ffff; valaddr_reg:x3; val_offset:4659*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4659*0 + 3*17*FLEN/8, x4, x1, x2)

inst_1554:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000000fffff; valaddr_reg:x3; val_offset:4662*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4662*0 + 3*18*FLEN/8, x4, x1, x2)

inst_1555:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000001fffff; valaddr_reg:x3; val_offset:4665*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4665*0 + 3*19*FLEN/8, x4, x1, x2)

inst_1556:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000003fffff; valaddr_reg:x3; val_offset:4668*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4668*0 + 3*20*FLEN/8, x4, x1, x2)

inst_1557:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000007fffff; valaddr_reg:x3; val_offset:4671*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4671*0 + 3*21*FLEN/8, x4, x1, x2)

inst_1558:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000000ffffff; valaddr_reg:x3; val_offset:4674*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4674*0 + 3*22*FLEN/8, x4, x1, x2)

inst_1559:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000001ffffff; valaddr_reg:x3; val_offset:4677*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4677*0 + 3*23*FLEN/8, x4, x1, x2)

inst_1560:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000003ffffff; valaddr_reg:x3; val_offset:4680*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4680*0 + 3*24*FLEN/8, x4, x1, x2)

inst_1561:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000007ffffff; valaddr_reg:x3; val_offset:4683*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4683*0 + 3*25*FLEN/8, x4, x1, x2)

inst_1562:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000000fffffff; valaddr_reg:x3; val_offset:4686*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4686*0 + 3*26*FLEN/8, x4, x1, x2)

inst_1563:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000001fffffff; valaddr_reg:x3; val_offset:4689*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4689*0 + 3*27*FLEN/8, x4, x1, x2)

inst_1564:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000003fffffff; valaddr_reg:x3; val_offset:4692*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4692*0 + 3*28*FLEN/8, x4, x1, x2)

inst_1565:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000007fffffff; valaddr_reg:x3; val_offset:4695*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4695*0 + 3*29*FLEN/8, x4, x1, x2)

inst_1566:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600000ffffffff; valaddr_reg:x3; val_offset:4698*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4698*0 + 3*30*FLEN/8, x4, x1, x2)

inst_1567:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600001ffffffff; valaddr_reg:x3; val_offset:4701*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4701*0 + 3*31*FLEN/8, x4, x1, x2)

inst_1568:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600003ffffffff; valaddr_reg:x3; val_offset:4704*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4704*0 + 3*32*FLEN/8, x4, x1, x2)

inst_1569:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600007ffffffff; valaddr_reg:x3; val_offset:4707*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4707*0 + 3*33*FLEN/8, x4, x1, x2)

inst_1570:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360000fffffffff; valaddr_reg:x3; val_offset:4710*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4710*0 + 3*34*FLEN/8, x4, x1, x2)

inst_1571:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360001fffffffff; valaddr_reg:x3; val_offset:4713*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4713*0 + 3*35*FLEN/8, x4, x1, x2)

inst_1572:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360003fffffffff; valaddr_reg:x3; val_offset:4716*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4716*0 + 3*36*FLEN/8, x4, x1, x2)

inst_1573:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360007fffffffff; valaddr_reg:x3; val_offset:4719*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4719*0 + 3*37*FLEN/8, x4, x1, x2)

inst_1574:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836000ffffffffff; valaddr_reg:x3; val_offset:4722*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4722*0 + 3*38*FLEN/8, x4, x1, x2)

inst_1575:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836001ffffffffff; valaddr_reg:x3; val_offset:4725*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4725*0 + 3*39*FLEN/8, x4, x1, x2)

inst_1576:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836003ffffffffff; valaddr_reg:x3; val_offset:4728*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4728*0 + 3*40*FLEN/8, x4, x1, x2)

inst_1577:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836007ffffffffff; valaddr_reg:x3; val_offset:4731*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4731*0 + 3*41*FLEN/8, x4, x1, x2)

inst_1578:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83600fffffffffff; valaddr_reg:x3; val_offset:4734*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4734*0 + 3*42*FLEN/8, x4, x1, x2)

inst_1579:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83601fffffffffff; valaddr_reg:x3; val_offset:4737*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4737*0 + 3*43*FLEN/8, x4, x1, x2)

inst_1580:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83603fffffffffff; valaddr_reg:x3; val_offset:4740*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4740*0 + 3*44*FLEN/8, x4, x1, x2)

inst_1581:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x83607fffffffffff; valaddr_reg:x3; val_offset:4743*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4743*0 + 3*45*FLEN/8, x4, x1, x2)

inst_1582:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8360ffffffffffff; valaddr_reg:x3; val_offset:4746*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4746*0 + 3*46*FLEN/8, x4, x1, x2)

inst_1583:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8361ffffffffffff; valaddr_reg:x3; val_offset:4749*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4749*0 + 3*47*FLEN/8, x4, x1, x2)

inst_1584:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8363ffffffffffff; valaddr_reg:x3; val_offset:4752*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4752*0 + 3*48*FLEN/8, x4, x1, x2)

inst_1585:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8367ffffffffffff; valaddr_reg:x3; val_offset:4755*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4755*0 + 3*49*FLEN/8, x4, x1, x2)

inst_1586:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x8368000000000000; valaddr_reg:x3; val_offset:4758*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4758*0 + 3*50*FLEN/8, x4, x1, x2)

inst_1587:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836c000000000000; valaddr_reg:x3; val_offset:4761*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4761*0 + 3*51*FLEN/8, x4, x1, x2)

inst_1588:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836e000000000000; valaddr_reg:x3; val_offset:4764*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4764*0 + 3*52*FLEN/8, x4, x1, x2)

inst_1589:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836f000000000000; valaddr_reg:x3; val_offset:4767*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4767*0 + 3*53*FLEN/8, x4, x1, x2)

inst_1590:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836f800000000000; valaddr_reg:x3; val_offset:4770*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4770*0 + 3*54*FLEN/8, x4, x1, x2)

inst_1591:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fc00000000000; valaddr_reg:x3; val_offset:4773*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4773*0 + 3*55*FLEN/8, x4, x1, x2)

inst_1592:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fe00000000000; valaddr_reg:x3; val_offset:4776*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4776*0 + 3*56*FLEN/8, x4, x1, x2)

inst_1593:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ff00000000000; valaddr_reg:x3; val_offset:4779*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4779*0 + 3*57*FLEN/8, x4, x1, x2)

inst_1594:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ff80000000000; valaddr_reg:x3; val_offset:4782*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4782*0 + 3*58*FLEN/8, x4, x1, x2)

inst_1595:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffc0000000000; valaddr_reg:x3; val_offset:4785*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4785*0 + 3*59*FLEN/8, x4, x1, x2)

inst_1596:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffe0000000000; valaddr_reg:x3; val_offset:4788*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4788*0 + 3*60*FLEN/8, x4, x1, x2)

inst_1597:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fff0000000000; valaddr_reg:x3; val_offset:4791*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4791*0 + 3*61*FLEN/8, x4, x1, x2)

inst_1598:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fff8000000000; valaddr_reg:x3; val_offset:4794*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4794*0 + 3*62*FLEN/8, x4, x1, x2)

inst_1599:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffc000000000; valaddr_reg:x3; val_offset:4797*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4797*0 + 3*63*FLEN/8, x4, x1, x2)

inst_1600:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffe000000000; valaddr_reg:x3; val_offset:4800*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4800*0 + 3*64*FLEN/8, x4, x1, x2)

inst_1601:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffff000000000; valaddr_reg:x3; val_offset:4803*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4803*0 + 3*65*FLEN/8, x4, x1, x2)

inst_1602:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffff800000000; valaddr_reg:x3; val_offset:4806*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4806*0 + 3*66*FLEN/8, x4, x1, x2)

inst_1603:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffc00000000; valaddr_reg:x3; val_offset:4809*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4809*0 + 3*67*FLEN/8, x4, x1, x2)

inst_1604:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffe00000000; valaddr_reg:x3; val_offset:4812*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4812*0 + 3*68*FLEN/8, x4, x1, x2)

inst_1605:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffff00000000; valaddr_reg:x3; val_offset:4815*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4815*0 + 3*69*FLEN/8, x4, x1, x2)

inst_1606:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffff80000000; valaddr_reg:x3; val_offset:4818*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4818*0 + 3*70*FLEN/8, x4, x1, x2)

inst_1607:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffc0000000; valaddr_reg:x3; val_offset:4821*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4821*0 + 3*71*FLEN/8, x4, x1, x2)

inst_1608:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffe0000000; valaddr_reg:x3; val_offset:4824*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4824*0 + 3*72*FLEN/8, x4, x1, x2)

inst_1609:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffff0000000; valaddr_reg:x3; val_offset:4827*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4827*0 + 3*73*FLEN/8, x4, x1, x2)

inst_1610:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffff8000000; valaddr_reg:x3; val_offset:4830*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4830*0 + 3*74*FLEN/8, x4, x1, x2)

inst_1611:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffc000000; valaddr_reg:x3; val_offset:4833*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4833*0 + 3*75*FLEN/8, x4, x1, x2)

inst_1612:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffe000000; valaddr_reg:x3; val_offset:4836*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4836*0 + 3*76*FLEN/8, x4, x1, x2)

inst_1613:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffff000000; valaddr_reg:x3; val_offset:4839*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4839*0 + 3*77*FLEN/8, x4, x1, x2)

inst_1614:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffff800000; valaddr_reg:x3; val_offset:4842*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4842*0 + 3*78*FLEN/8, x4, x1, x2)

inst_1615:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffc00000; valaddr_reg:x3; val_offset:4845*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4845*0 + 3*79*FLEN/8, x4, x1, x2)

inst_1616:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffe00000; valaddr_reg:x3; val_offset:4848*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4848*0 + 3*80*FLEN/8, x4, x1, x2)

inst_1617:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffff00000; valaddr_reg:x3; val_offset:4851*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4851*0 + 3*81*FLEN/8, x4, x1, x2)

inst_1618:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffff80000; valaddr_reg:x3; val_offset:4854*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4854*0 + 3*82*FLEN/8, x4, x1, x2)

inst_1619:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffc0000; valaddr_reg:x3; val_offset:4857*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4857*0 + 3*83*FLEN/8, x4, x1, x2)

inst_1620:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffe0000; valaddr_reg:x3; val_offset:4860*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4860*0 + 3*84*FLEN/8, x4, x1, x2)

inst_1621:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffff0000; valaddr_reg:x3; val_offset:4863*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4863*0 + 3*85*FLEN/8, x4, x1, x2)

inst_1622:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffff8000; valaddr_reg:x3; val_offset:4866*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4866*0 + 3*86*FLEN/8, x4, x1, x2)

inst_1623:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffffc000; valaddr_reg:x3; val_offset:4869*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4869*0 + 3*87*FLEN/8, x4, x1, x2)

inst_1624:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffffe000; valaddr_reg:x3; val_offset:4872*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4872*0 + 3*88*FLEN/8, x4, x1, x2)

inst_1625:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffff000; valaddr_reg:x3; val_offset:4875*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4875*0 + 3*89*FLEN/8, x4, x1, x2)

inst_1626:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffff800; valaddr_reg:x3; val_offset:4878*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4878*0 + 3*90*FLEN/8, x4, x1, x2)

inst_1627:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffffc00; valaddr_reg:x3; val_offset:4881*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4881*0 + 3*91*FLEN/8, x4, x1, x2)

inst_1628:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffffe00; valaddr_reg:x3; val_offset:4884*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4884*0 + 3*92*FLEN/8, x4, x1, x2)

inst_1629:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffffff00; valaddr_reg:x3; val_offset:4887*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4887*0 + 3*93*FLEN/8, x4, x1, x2)

inst_1630:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffffff80; valaddr_reg:x3; val_offset:4890*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4890*0 + 3*94*FLEN/8, x4, x1, x2)

inst_1631:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffffffc0; valaddr_reg:x3; val_offset:4893*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4893*0 + 3*95*FLEN/8, x4, x1, x2)

inst_1632:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffffffe0; valaddr_reg:x3; val_offset:4896*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4896*0 + 3*96*FLEN/8, x4, x1, x2)

inst_1633:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffffff0; valaddr_reg:x3; val_offset:4899*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4899*0 + 3*97*FLEN/8, x4, x1, x2)

inst_1634:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffffff8; valaddr_reg:x3; val_offset:4902*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4902*0 + 3*98*FLEN/8, x4, x1, x2)

inst_1635:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffffffc; valaddr_reg:x3; val_offset:4905*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4905*0 + 3*99*FLEN/8, x4, x1, x2)

inst_1636:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836ffffffffffffe; valaddr_reg:x3; val_offset:4908*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4908*0 + 3*100*FLEN/8, x4, x1, x2)

inst_1637:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x1175939fbdd3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f51175939fbdd3f; op2val:0x8000;
op3val:0x836fffffffffffff; valaddr_reg:x3; val_offset:4911*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4911*0 + 3*101*FLEN/8, x4, x1, x2)

inst_1638:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000000000; valaddr_reg:x3; val_offset:4914*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4914*0 + 3*102*FLEN/8, x4, x1, x2)

inst_1639:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000000001; valaddr_reg:x3; val_offset:4917*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4917*0 + 3*103*FLEN/8, x4, x1, x2)

inst_1640:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000000003; valaddr_reg:x3; val_offset:4920*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4920*0 + 3*104*FLEN/8, x4, x1, x2)

inst_1641:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000000007; valaddr_reg:x3; val_offset:4923*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4923*0 + 3*105*FLEN/8, x4, x1, x2)

inst_1642:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000000000f; valaddr_reg:x3; val_offset:4926*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4926*0 + 3*106*FLEN/8, x4, x1, x2)

inst_1643:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000000001f; valaddr_reg:x3; val_offset:4929*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4929*0 + 3*107*FLEN/8, x4, x1, x2)

inst_1644:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000000003f; valaddr_reg:x3; val_offset:4932*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4932*0 + 3*108*FLEN/8, x4, x1, x2)

inst_1645:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000000007f; valaddr_reg:x3; val_offset:4935*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4935*0 + 3*109*FLEN/8, x4, x1, x2)

inst_1646:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000000000ff; valaddr_reg:x3; val_offset:4938*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4938*0 + 3*110*FLEN/8, x4, x1, x2)

inst_1647:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000000001ff; valaddr_reg:x3; val_offset:4941*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4941*0 + 3*111*FLEN/8, x4, x1, x2)

inst_1648:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000000003ff; valaddr_reg:x3; val_offset:4944*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4944*0 + 3*112*FLEN/8, x4, x1, x2)

inst_1649:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000000007ff; valaddr_reg:x3; val_offset:4947*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4947*0 + 3*113*FLEN/8, x4, x1, x2)

inst_1650:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000000fff; valaddr_reg:x3; val_offset:4950*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4950*0 + 3*114*FLEN/8, x4, x1, x2)

inst_1651:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000001fff; valaddr_reg:x3; val_offset:4953*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4953*0 + 3*115*FLEN/8, x4, x1, x2)

inst_1652:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000003fff; valaddr_reg:x3; val_offset:4956*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4956*0 + 3*116*FLEN/8, x4, x1, x2)

inst_1653:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000007fff; valaddr_reg:x3; val_offset:4959*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4959*0 + 3*117*FLEN/8, x4, x1, x2)

inst_1654:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000000ffff; valaddr_reg:x3; val_offset:4962*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4962*0 + 3*118*FLEN/8, x4, x1, x2)

inst_1655:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000001ffff; valaddr_reg:x3; val_offset:4965*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4965*0 + 3*119*FLEN/8, x4, x1, x2)

inst_1656:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000003ffff; valaddr_reg:x3; val_offset:4968*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4968*0 + 3*120*FLEN/8, x4, x1, x2)

inst_1657:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000007ffff; valaddr_reg:x3; val_offset:4971*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4971*0 + 3*121*FLEN/8, x4, x1, x2)

inst_1658:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000000fffff; valaddr_reg:x3; val_offset:4974*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4974*0 + 3*122*FLEN/8, x4, x1, x2)

inst_1659:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000001fffff; valaddr_reg:x3; val_offset:4977*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4977*0 + 3*123*FLEN/8, x4, x1, x2)

inst_1660:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000003fffff; valaddr_reg:x3; val_offset:4980*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4980*0 + 3*124*FLEN/8, x4, x1, x2)

inst_1661:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000007fffff; valaddr_reg:x3; val_offset:4983*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4983*0 + 3*125*FLEN/8, x4, x1, x2)

inst_1662:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000000ffffff; valaddr_reg:x3; val_offset:4986*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4986*0 + 3*126*FLEN/8, x4, x1, x2)

inst_1663:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000001ffffff; valaddr_reg:x3; val_offset:4989*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4989*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_1664:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000003ffffff; valaddr_reg:x3; val_offset:4992*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4992*0 + 3*128*FLEN/8, x4, x1, x2)

inst_1665:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000007ffffff; valaddr_reg:x3; val_offset:4995*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4995*0 + 3*129*FLEN/8, x4, x1, x2)

inst_1666:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000000fffffff; valaddr_reg:x3; val_offset:4998*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4998*0 + 3*130*FLEN/8, x4, x1, x2)

inst_1667:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000001fffffff; valaddr_reg:x3; val_offset:5001*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5001*0 + 3*131*FLEN/8, x4, x1, x2)

inst_1668:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000003fffffff; valaddr_reg:x3; val_offset:5004*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5004*0 + 3*132*FLEN/8, x4, x1, x2)

inst_1669:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000007fffffff; valaddr_reg:x3; val_offset:5007*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5007*0 + 3*133*FLEN/8, x4, x1, x2)

inst_1670:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00000ffffffff; valaddr_reg:x3; val_offset:5010*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5010*0 + 3*134*FLEN/8, x4, x1, x2)

inst_1671:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00001ffffffff; valaddr_reg:x3; val_offset:5013*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5013*0 + 3*135*FLEN/8, x4, x1, x2)

inst_1672:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00003ffffffff; valaddr_reg:x3; val_offset:5016*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5016*0 + 3*136*FLEN/8, x4, x1, x2)

inst_1673:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00007ffffffff; valaddr_reg:x3; val_offset:5019*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5019*0 + 3*137*FLEN/8, x4, x1, x2)

inst_1674:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0000fffffffff; valaddr_reg:x3; val_offset:5022*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5022*0 + 3*138*FLEN/8, x4, x1, x2)

inst_1675:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0001fffffffff; valaddr_reg:x3; val_offset:5025*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5025*0 + 3*139*FLEN/8, x4, x1, x2)

inst_1676:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0003fffffffff; valaddr_reg:x3; val_offset:5028*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5028*0 + 3*140*FLEN/8, x4, x1, x2)

inst_1677:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0007fffffffff; valaddr_reg:x3; val_offset:5031*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5031*0 + 3*141*FLEN/8, x4, x1, x2)

inst_1678:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc000ffffffffff; valaddr_reg:x3; val_offset:5034*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5034*0 + 3*142*FLEN/8, x4, x1, x2)

inst_1679:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc001ffffffffff; valaddr_reg:x3; val_offset:5037*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5037*0 + 3*143*FLEN/8, x4, x1, x2)

inst_1680:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc003ffffffffff; valaddr_reg:x3; val_offset:5040*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5040*0 + 3*144*FLEN/8, x4, x1, x2)

inst_1681:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc007ffffffffff; valaddr_reg:x3; val_offset:5043*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5043*0 + 3*145*FLEN/8, x4, x1, x2)

inst_1682:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc00fffffffffff; valaddr_reg:x3; val_offset:5046*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5046*0 + 3*146*FLEN/8, x4, x1, x2)

inst_1683:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc01fffffffffff; valaddr_reg:x3; val_offset:5049*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5049*0 + 3*147*FLEN/8, x4, x1, x2)

inst_1684:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc03fffffffffff; valaddr_reg:x3; val_offset:5052*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5052*0 + 3*148*FLEN/8, x4, x1, x2)

inst_1685:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc07fffffffffff; valaddr_reg:x3; val_offset:5055*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5055*0 + 3*149*FLEN/8, x4, x1, x2)

inst_1686:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc0ffffffffffff; valaddr_reg:x3; val_offset:5058*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5058*0 + 3*150*FLEN/8, x4, x1, x2)

inst_1687:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc1ffffffffffff; valaddr_reg:x3; val_offset:5061*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5061*0 + 3*151*FLEN/8, x4, x1, x2)

inst_1688:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc3ffffffffffff; valaddr_reg:x3; val_offset:5064*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5064*0 + 3*152*FLEN/8, x4, x1, x2)

inst_1689:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc7ffffffffffff; valaddr_reg:x3; val_offset:5067*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5067*0 + 3*153*FLEN/8, x4, x1, x2)

inst_1690:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bc8000000000000; valaddr_reg:x3; val_offset:5070*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5070*0 + 3*154*FLEN/8, x4, x1, x2)

inst_1691:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcc000000000000; valaddr_reg:x3; val_offset:5073*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5073*0 + 3*155*FLEN/8, x4, x1, x2)

inst_1692:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bce000000000000; valaddr_reg:x3; val_offset:5076*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5076*0 + 3*156*FLEN/8, x4, x1, x2)

inst_1693:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcf000000000000; valaddr_reg:x3; val_offset:5079*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5079*0 + 3*157*FLEN/8, x4, x1, x2)

inst_1694:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcf800000000000; valaddr_reg:x3; val_offset:5082*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5082*0 + 3*158*FLEN/8, x4, x1, x2)

inst_1695:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfc00000000000; valaddr_reg:x3; val_offset:5085*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5085*0 + 3*159*FLEN/8, x4, x1, x2)

inst_1696:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfe00000000000; valaddr_reg:x3; val_offset:5088*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5088*0 + 3*160*FLEN/8, x4, x1, x2)

inst_1697:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcff00000000000; valaddr_reg:x3; val_offset:5091*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5091*0 + 3*161*FLEN/8, x4, x1, x2)

inst_1698:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcff80000000000; valaddr_reg:x3; val_offset:5094*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5094*0 + 3*162*FLEN/8, x4, x1, x2)

inst_1699:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffc0000000000; valaddr_reg:x3; val_offset:5097*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5097*0 + 3*163*FLEN/8, x4, x1, x2)

inst_1700:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffe0000000000; valaddr_reg:x3; val_offset:5100*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5100*0 + 3*164*FLEN/8, x4, x1, x2)

inst_1701:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfff0000000000; valaddr_reg:x3; val_offset:5103*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5103*0 + 3*165*FLEN/8, x4, x1, x2)

inst_1702:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfff8000000000; valaddr_reg:x3; val_offset:5106*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5106*0 + 3*166*FLEN/8, x4, x1, x2)

inst_1703:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffc000000000; valaddr_reg:x3; val_offset:5109*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5109*0 + 3*167*FLEN/8, x4, x1, x2)

inst_1704:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffe000000000; valaddr_reg:x3; val_offset:5112*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5112*0 + 3*168*FLEN/8, x4, x1, x2)

inst_1705:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffff000000000; valaddr_reg:x3; val_offset:5115*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5115*0 + 3*169*FLEN/8, x4, x1, x2)

inst_1706:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffff800000000; valaddr_reg:x3; val_offset:5118*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5118*0 + 3*170*FLEN/8, x4, x1, x2)

inst_1707:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffc00000000; valaddr_reg:x3; val_offset:5121*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5121*0 + 3*171*FLEN/8, x4, x1, x2)

inst_1708:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffe00000000; valaddr_reg:x3; val_offset:5124*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5124*0 + 3*172*FLEN/8, x4, x1, x2)

inst_1709:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffff00000000; valaddr_reg:x3; val_offset:5127*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5127*0 + 3*173*FLEN/8, x4, x1, x2)

inst_1710:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffff80000000; valaddr_reg:x3; val_offset:5130*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5130*0 + 3*174*FLEN/8, x4, x1, x2)

inst_1711:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffc0000000; valaddr_reg:x3; val_offset:5133*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5133*0 + 3*175*FLEN/8, x4, x1, x2)

inst_1712:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffe0000000; valaddr_reg:x3; val_offset:5136*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5136*0 + 3*176*FLEN/8, x4, x1, x2)

inst_1713:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffff0000000; valaddr_reg:x3; val_offset:5139*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5139*0 + 3*177*FLEN/8, x4, x1, x2)

inst_1714:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffff8000000; valaddr_reg:x3; val_offset:5142*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5142*0 + 3*178*FLEN/8, x4, x1, x2)

inst_1715:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffc000000; valaddr_reg:x3; val_offset:5145*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5145*0 + 3*179*FLEN/8, x4, x1, x2)

inst_1716:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffe000000; valaddr_reg:x3; val_offset:5148*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5148*0 + 3*180*FLEN/8, x4, x1, x2)

inst_1717:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffff000000; valaddr_reg:x3; val_offset:5151*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5151*0 + 3*181*FLEN/8, x4, x1, x2)

inst_1718:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffff800000; valaddr_reg:x3; val_offset:5154*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5154*0 + 3*182*FLEN/8, x4, x1, x2)

inst_1719:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffc00000; valaddr_reg:x3; val_offset:5157*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5157*0 + 3*183*FLEN/8, x4, x1, x2)

inst_1720:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffe00000; valaddr_reg:x3; val_offset:5160*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5160*0 + 3*184*FLEN/8, x4, x1, x2)

inst_1721:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffff00000; valaddr_reg:x3; val_offset:5163*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5163*0 + 3*185*FLEN/8, x4, x1, x2)

inst_1722:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffff80000; valaddr_reg:x3; val_offset:5166*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5166*0 + 3*186*FLEN/8, x4, x1, x2)

inst_1723:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffc0000; valaddr_reg:x3; val_offset:5169*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5169*0 + 3*187*FLEN/8, x4, x1, x2)

inst_1724:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffe0000; valaddr_reg:x3; val_offset:5172*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5172*0 + 3*188*FLEN/8, x4, x1, x2)

inst_1725:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffff0000; valaddr_reg:x3; val_offset:5175*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5175*0 + 3*189*FLEN/8, x4, x1, x2)

inst_1726:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffff8000; valaddr_reg:x3; val_offset:5178*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5178*0 + 3*190*FLEN/8, x4, x1, x2)

inst_1727:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffffc000; valaddr_reg:x3; val_offset:5181*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5181*0 + 3*191*FLEN/8, x4, x1, x2)

inst_1728:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffffe000; valaddr_reg:x3; val_offset:5184*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5184*0 + 3*192*FLEN/8, x4, x1, x2)

inst_1729:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffff000; valaddr_reg:x3; val_offset:5187*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5187*0 + 3*193*FLEN/8, x4, x1, x2)

inst_1730:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffff800; valaddr_reg:x3; val_offset:5190*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5190*0 + 3*194*FLEN/8, x4, x1, x2)

inst_1731:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffffc00; valaddr_reg:x3; val_offset:5193*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5193*0 + 3*195*FLEN/8, x4, x1, x2)

inst_1732:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffffe00; valaddr_reg:x3; val_offset:5196*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5196*0 + 3*196*FLEN/8, x4, x1, x2)

inst_1733:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffffff00; valaddr_reg:x3; val_offset:5199*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5199*0 + 3*197*FLEN/8, x4, x1, x2)

inst_1734:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffffff80; valaddr_reg:x3; val_offset:5202*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5202*0 + 3*198*FLEN/8, x4, x1, x2)

inst_1735:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffffffc0; valaddr_reg:x3; val_offset:5205*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5205*0 + 3*199*FLEN/8, x4, x1, x2)

inst_1736:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffffffe0; valaddr_reg:x3; val_offset:5208*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5208*0 + 3*200*FLEN/8, x4, x1, x2)

inst_1737:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffffff0; valaddr_reg:x3; val_offset:5211*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5211*0 + 3*201*FLEN/8, x4, x1, x2)

inst_1738:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffffff8; valaddr_reg:x3; val_offset:5214*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5214*0 + 3*202*FLEN/8, x4, x1, x2)

inst_1739:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffffffc; valaddr_reg:x3; val_offset:5217*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5217*0 + 3*203*FLEN/8, x4, x1, x2)

inst_1740:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcffffffffffffe; valaddr_reg:x3; val_offset:5220*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5220*0 + 3*204*FLEN/8, x4, x1, x2)

inst_1741:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3bc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3bcfffffffffffff; valaddr_reg:x3; val_offset:5223*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5223*0 + 3*205*FLEN/8, x4, x1, x2)

inst_1742:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:5226*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5226*0 + 3*206*FLEN/8, x4, x1, x2)

inst_1743:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:5229*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5229*0 + 3*207*FLEN/8, x4, x1, x2)

inst_1744:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:5232*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5232*0 + 3*208*FLEN/8, x4, x1, x2)

inst_1745:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:5235*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5235*0 + 3*209*FLEN/8, x4, x1, x2)

inst_1746:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:5238*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5238*0 + 3*210*FLEN/8, x4, x1, x2)

inst_1747:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:5241*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5241*0 + 3*211*FLEN/8, x4, x1, x2)

inst_1748:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:5244*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5244*0 + 3*212*FLEN/8, x4, x1, x2)

inst_1749:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:5247*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5247*0 + 3*213*FLEN/8, x4, x1, x2)

inst_1750:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:5250*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5250*0 + 3*214*FLEN/8, x4, x1, x2)

inst_1751:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:5253*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5253*0 + 3*215*FLEN/8, x4, x1, x2)

inst_1752:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:5256*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5256*0 + 3*216*FLEN/8, x4, x1, x2)

inst_1753:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:5259*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5259*0 + 3*217*FLEN/8, x4, x1, x2)

inst_1754:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:5262*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5262*0 + 3*218*FLEN/8, x4, x1, x2)

inst_1755:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:5265*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5265*0 + 3*219*FLEN/8, x4, x1, x2)

inst_1756:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:5268*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5268*0 + 3*220*FLEN/8, x4, x1, x2)

inst_1757:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:5271*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5271*0 + 3*221*FLEN/8, x4, x1, x2)

inst_1758:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:5274*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5274*0 + 3*222*FLEN/8, x4, x1, x2)

inst_1759:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:5277*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5277*0 + 3*223*FLEN/8, x4, x1, x2)

inst_1760:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:5280*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5280*0 + 3*224*FLEN/8, x4, x1, x2)

inst_1761:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:5283*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5283*0 + 3*225*FLEN/8, x4, x1, x2)

inst_1762:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:5286*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5286*0 + 3*226*FLEN/8, x4, x1, x2)

inst_1763:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x19ceda9a4ed1f and fs2 == 0 and fe2 == 0x208 and fm2 == 0xd11c67d600fbd and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f519ceda9a4ed1f; op2val:0x208d11c67d600fbd;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:5289*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5289*0 + 3*227*FLEN/8, x4, x1, x2)

inst_1764:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000000000; valaddr_reg:x3; val_offset:5292*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5292*0 + 3*228*FLEN/8, x4, x1, x2)

inst_1765:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000000001; valaddr_reg:x3; val_offset:5295*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5295*0 + 3*229*FLEN/8, x4, x1, x2)

inst_1766:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000000003; valaddr_reg:x3; val_offset:5298*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5298*0 + 3*230*FLEN/8, x4, x1, x2)

inst_1767:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000000007; valaddr_reg:x3; val_offset:5301*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5301*0 + 3*231*FLEN/8, x4, x1, x2)

inst_1768:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000000000f; valaddr_reg:x3; val_offset:5304*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5304*0 + 3*232*FLEN/8, x4, x1, x2)

inst_1769:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000000001f; valaddr_reg:x3; val_offset:5307*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5307*0 + 3*233*FLEN/8, x4, x1, x2)

inst_1770:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000000003f; valaddr_reg:x3; val_offset:5310*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5310*0 + 3*234*FLEN/8, x4, x1, x2)

inst_1771:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000000007f; valaddr_reg:x3; val_offset:5313*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5313*0 + 3*235*FLEN/8, x4, x1, x2)

inst_1772:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000000000ff; valaddr_reg:x3; val_offset:5316*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5316*0 + 3*236*FLEN/8, x4, x1, x2)

inst_1773:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000000001ff; valaddr_reg:x3; val_offset:5319*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5319*0 + 3*237*FLEN/8, x4, x1, x2)

inst_1774:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000000003ff; valaddr_reg:x3; val_offset:5322*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5322*0 + 3*238*FLEN/8, x4, x1, x2)

inst_1775:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000000007ff; valaddr_reg:x3; val_offset:5325*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5325*0 + 3*239*FLEN/8, x4, x1, x2)

inst_1776:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000000fff; valaddr_reg:x3; val_offset:5328*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5328*0 + 3*240*FLEN/8, x4, x1, x2)

inst_1777:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000001fff; valaddr_reg:x3; val_offset:5331*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5331*0 + 3*241*FLEN/8, x4, x1, x2)

inst_1778:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000003fff; valaddr_reg:x3; val_offset:5334*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5334*0 + 3*242*FLEN/8, x4, x1, x2)

inst_1779:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000007fff; valaddr_reg:x3; val_offset:5337*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5337*0 + 3*243*FLEN/8, x4, x1, x2)

inst_1780:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000000ffff; valaddr_reg:x3; val_offset:5340*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5340*0 + 3*244*FLEN/8, x4, x1, x2)

inst_1781:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000001ffff; valaddr_reg:x3; val_offset:5343*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5343*0 + 3*245*FLEN/8, x4, x1, x2)

inst_1782:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000003ffff; valaddr_reg:x3; val_offset:5346*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5346*0 + 3*246*FLEN/8, x4, x1, x2)

inst_1783:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000007ffff; valaddr_reg:x3; val_offset:5349*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5349*0 + 3*247*FLEN/8, x4, x1, x2)

inst_1784:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000000fffff; valaddr_reg:x3; val_offset:5352*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5352*0 + 3*248*FLEN/8, x4, x1, x2)

inst_1785:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000001fffff; valaddr_reg:x3; val_offset:5355*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5355*0 + 3*249*FLEN/8, x4, x1, x2)

inst_1786:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000003fffff; valaddr_reg:x3; val_offset:5358*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5358*0 + 3*250*FLEN/8, x4, x1, x2)

inst_1787:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000007fffff; valaddr_reg:x3; val_offset:5361*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5361*0 + 3*251*FLEN/8, x4, x1, x2)

inst_1788:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000000ffffff; valaddr_reg:x3; val_offset:5364*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5364*0 + 3*252*FLEN/8, x4, x1, x2)

inst_1789:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000001ffffff; valaddr_reg:x3; val_offset:5367*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5367*0 + 3*253*FLEN/8, x4, x1, x2)

inst_1790:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000003ffffff; valaddr_reg:x3; val_offset:5370*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5370*0 + 3*254*FLEN/8, x4, x1, x2)

inst_1791:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000007ffffff; valaddr_reg:x3; val_offset:5373*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5373*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_1792:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000000fffffff; valaddr_reg:x3; val_offset:5376*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5376*0 + 3*256*FLEN/8, x4, x1, x2)

inst_1793:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000001fffffff; valaddr_reg:x3; val_offset:5379*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5379*0 + 3*257*FLEN/8, x4, x1, x2)

inst_1794:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000003fffffff; valaddr_reg:x3; val_offset:5382*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5382*0 + 3*258*FLEN/8, x4, x1, x2)

inst_1795:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000007fffffff; valaddr_reg:x3; val_offset:5385*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5385*0 + 3*259*FLEN/8, x4, x1, x2)

inst_1796:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00000ffffffff; valaddr_reg:x3; val_offset:5388*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5388*0 + 3*260*FLEN/8, x4, x1, x2)

inst_1797:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00001ffffffff; valaddr_reg:x3; val_offset:5391*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5391*0 + 3*261*FLEN/8, x4, x1, x2)

inst_1798:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00003ffffffff; valaddr_reg:x3; val_offset:5394*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5394*0 + 3*262*FLEN/8, x4, x1, x2)

inst_1799:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00007ffffffff; valaddr_reg:x3; val_offset:5397*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5397*0 + 3*263*FLEN/8, x4, x1, x2)

inst_1800:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0000fffffffff; valaddr_reg:x3; val_offset:5400*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5400*0 + 3*264*FLEN/8, x4, x1, x2)

inst_1801:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0001fffffffff; valaddr_reg:x3; val_offset:5403*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5403*0 + 3*265*FLEN/8, x4, x1, x2)

inst_1802:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0003fffffffff; valaddr_reg:x3; val_offset:5406*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5406*0 + 3*266*FLEN/8, x4, x1, x2)

inst_1803:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0007fffffffff; valaddr_reg:x3; val_offset:5409*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5409*0 + 3*267*FLEN/8, x4, x1, x2)

inst_1804:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab000ffffffffff; valaddr_reg:x3; val_offset:5412*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5412*0 + 3*268*FLEN/8, x4, x1, x2)

inst_1805:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab001ffffffffff; valaddr_reg:x3; val_offset:5415*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5415*0 + 3*269*FLEN/8, x4, x1, x2)

inst_1806:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab003ffffffffff; valaddr_reg:x3; val_offset:5418*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5418*0 + 3*270*FLEN/8, x4, x1, x2)

inst_1807:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab007ffffffffff; valaddr_reg:x3; val_offset:5421*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5421*0 + 3*271*FLEN/8, x4, x1, x2)

inst_1808:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab00fffffffffff; valaddr_reg:x3; val_offset:5424*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5424*0 + 3*272*FLEN/8, x4, x1, x2)

inst_1809:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab01fffffffffff; valaddr_reg:x3; val_offset:5427*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5427*0 + 3*273*FLEN/8, x4, x1, x2)

inst_1810:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab03fffffffffff; valaddr_reg:x3; val_offset:5430*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5430*0 + 3*274*FLEN/8, x4, x1, x2)

inst_1811:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab07fffffffffff; valaddr_reg:x3; val_offset:5433*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5433*0 + 3*275*FLEN/8, x4, x1, x2)

inst_1812:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab0ffffffffffff; valaddr_reg:x3; val_offset:5436*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5436*0 + 3*276*FLEN/8, x4, x1, x2)

inst_1813:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab1ffffffffffff; valaddr_reg:x3; val_offset:5439*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5439*0 + 3*277*FLEN/8, x4, x1, x2)

inst_1814:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab3ffffffffffff; valaddr_reg:x3; val_offset:5442*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5442*0 + 3*278*FLEN/8, x4, x1, x2)

inst_1815:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab7ffffffffffff; valaddr_reg:x3; val_offset:5445*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5445*0 + 3*279*FLEN/8, x4, x1, x2)

inst_1816:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbab8000000000000; valaddr_reg:x3; val_offset:5448*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5448*0 + 3*280*FLEN/8, x4, x1, x2)

inst_1817:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabc000000000000; valaddr_reg:x3; val_offset:5451*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5451*0 + 3*281*FLEN/8, x4, x1, x2)

inst_1818:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabe000000000000; valaddr_reg:x3; val_offset:5454*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5454*0 + 3*282*FLEN/8, x4, x1, x2)

inst_1819:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabf000000000000; valaddr_reg:x3; val_offset:5457*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5457*0 + 3*283*FLEN/8, x4, x1, x2)

inst_1820:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabf800000000000; valaddr_reg:x3; val_offset:5460*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5460*0 + 3*284*FLEN/8, x4, x1, x2)

inst_1821:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfc00000000000; valaddr_reg:x3; val_offset:5463*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5463*0 + 3*285*FLEN/8, x4, x1, x2)

inst_1822:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfe00000000000; valaddr_reg:x3; val_offset:5466*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5466*0 + 3*286*FLEN/8, x4, x1, x2)

inst_1823:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabff00000000000; valaddr_reg:x3; val_offset:5469*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5469*0 + 3*287*FLEN/8, x4, x1, x2)

inst_1824:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabff80000000000; valaddr_reg:x3; val_offset:5472*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5472*0 + 3*288*FLEN/8, x4, x1, x2)

inst_1825:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffc0000000000; valaddr_reg:x3; val_offset:5475*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5475*0 + 3*289*FLEN/8, x4, x1, x2)

inst_1826:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffe0000000000; valaddr_reg:x3; val_offset:5478*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5478*0 + 3*290*FLEN/8, x4, x1, x2)

inst_1827:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfff0000000000; valaddr_reg:x3; val_offset:5481*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5481*0 + 3*291*FLEN/8, x4, x1, x2)

inst_1828:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfff8000000000; valaddr_reg:x3; val_offset:5484*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5484*0 + 3*292*FLEN/8, x4, x1, x2)

inst_1829:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffc000000000; valaddr_reg:x3; val_offset:5487*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5487*0 + 3*293*FLEN/8, x4, x1, x2)

inst_1830:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffe000000000; valaddr_reg:x3; val_offset:5490*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5490*0 + 3*294*FLEN/8, x4, x1, x2)

inst_1831:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffff000000000; valaddr_reg:x3; val_offset:5493*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5493*0 + 3*295*FLEN/8, x4, x1, x2)

inst_1832:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffff800000000; valaddr_reg:x3; val_offset:5496*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5496*0 + 3*296*FLEN/8, x4, x1, x2)

inst_1833:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffc00000000; valaddr_reg:x3; val_offset:5499*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5499*0 + 3*297*FLEN/8, x4, x1, x2)

inst_1834:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffe00000000; valaddr_reg:x3; val_offset:5502*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5502*0 + 3*298*FLEN/8, x4, x1, x2)

inst_1835:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffff00000000; valaddr_reg:x3; val_offset:5505*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5505*0 + 3*299*FLEN/8, x4, x1, x2)

inst_1836:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffff80000000; valaddr_reg:x3; val_offset:5508*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5508*0 + 3*300*FLEN/8, x4, x1, x2)

inst_1837:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffc0000000; valaddr_reg:x3; val_offset:5511*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5511*0 + 3*301*FLEN/8, x4, x1, x2)

inst_1838:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffe0000000; valaddr_reg:x3; val_offset:5514*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5514*0 + 3*302*FLEN/8, x4, x1, x2)

inst_1839:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffff0000000; valaddr_reg:x3; val_offset:5517*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5517*0 + 3*303*FLEN/8, x4, x1, x2)

inst_1840:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffff8000000; valaddr_reg:x3; val_offset:5520*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5520*0 + 3*304*FLEN/8, x4, x1, x2)

inst_1841:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffc000000; valaddr_reg:x3; val_offset:5523*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5523*0 + 3*305*FLEN/8, x4, x1, x2)

inst_1842:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffe000000; valaddr_reg:x3; val_offset:5526*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5526*0 + 3*306*FLEN/8, x4, x1, x2)

inst_1843:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffff000000; valaddr_reg:x3; val_offset:5529*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5529*0 + 3*307*FLEN/8, x4, x1, x2)

inst_1844:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffff800000; valaddr_reg:x3; val_offset:5532*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5532*0 + 3*308*FLEN/8, x4, x1, x2)

inst_1845:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffc00000; valaddr_reg:x3; val_offset:5535*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5535*0 + 3*309*FLEN/8, x4, x1, x2)

inst_1846:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffe00000; valaddr_reg:x3; val_offset:5538*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5538*0 + 3*310*FLEN/8, x4, x1, x2)

inst_1847:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffff00000; valaddr_reg:x3; val_offset:5541*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5541*0 + 3*311*FLEN/8, x4, x1, x2)

inst_1848:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffff80000; valaddr_reg:x3; val_offset:5544*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5544*0 + 3*312*FLEN/8, x4, x1, x2)

inst_1849:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffc0000; valaddr_reg:x3; val_offset:5547*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5547*0 + 3*313*FLEN/8, x4, x1, x2)

inst_1850:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffe0000; valaddr_reg:x3; val_offset:5550*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5550*0 + 3*314*FLEN/8, x4, x1, x2)

inst_1851:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffff0000; valaddr_reg:x3; val_offset:5553*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5553*0 + 3*315*FLEN/8, x4, x1, x2)

inst_1852:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffff8000; valaddr_reg:x3; val_offset:5556*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5556*0 + 3*316*FLEN/8, x4, x1, x2)

inst_1853:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffffc000; valaddr_reg:x3; val_offset:5559*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5559*0 + 3*317*FLEN/8, x4, x1, x2)

inst_1854:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffffe000; valaddr_reg:x3; val_offset:5562*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5562*0 + 3*318*FLEN/8, x4, x1, x2)

inst_1855:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffff000; valaddr_reg:x3; val_offset:5565*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5565*0 + 3*319*FLEN/8, x4, x1, x2)

inst_1856:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffff800; valaddr_reg:x3; val_offset:5568*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5568*0 + 3*320*FLEN/8, x4, x1, x2)

inst_1857:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffffc00; valaddr_reg:x3; val_offset:5571*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5571*0 + 3*321*FLEN/8, x4, x1, x2)

inst_1858:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffffe00; valaddr_reg:x3; val_offset:5574*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5574*0 + 3*322*FLEN/8, x4, x1, x2)

inst_1859:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffffff00; valaddr_reg:x3; val_offset:5577*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5577*0 + 3*323*FLEN/8, x4, x1, x2)

inst_1860:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffffff80; valaddr_reg:x3; val_offset:5580*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5580*0 + 3*324*FLEN/8, x4, x1, x2)

inst_1861:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffffffc0; valaddr_reg:x3; val_offset:5583*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5583*0 + 3*325*FLEN/8, x4, x1, x2)

inst_1862:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffffffe0; valaddr_reg:x3; val_offset:5586*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5586*0 + 3*326*FLEN/8, x4, x1, x2)

inst_1863:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffffff0; valaddr_reg:x3; val_offset:5589*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5589*0 + 3*327*FLEN/8, x4, x1, x2)

inst_1864:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffffff8; valaddr_reg:x3; val_offset:5592*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5592*0 + 3*328*FLEN/8, x4, x1, x2)

inst_1865:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffffffc; valaddr_reg:x3; val_offset:5595*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5595*0 + 3*329*FLEN/8, x4, x1, x2)

inst_1866:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabffffffffffffe; valaddr_reg:x3; val_offset:5598*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5598*0 + 3*330*FLEN/8, x4, x1, x2)

inst_1867:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbabfffffffffffff; valaddr_reg:x3; val_offset:5601*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5601*0 + 3*331*FLEN/8, x4, x1, x2)

inst_1868:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:5604*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5604*0 + 3*332*FLEN/8, x4, x1, x2)

inst_1869:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:5607*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5607*0 + 3*333*FLEN/8, x4, x1, x2)

inst_1870:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:5610*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5610*0 + 3*334*FLEN/8, x4, x1, x2)

inst_1871:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:5613*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5613*0 + 3*335*FLEN/8, x4, x1, x2)

inst_1872:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:5616*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5616*0 + 3*336*FLEN/8, x4, x1, x2)

inst_1873:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:5619*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5619*0 + 3*337*FLEN/8, x4, x1, x2)

inst_1874:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:5622*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5622*0 + 3*338*FLEN/8, x4, x1, x2)

inst_1875:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:5625*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5625*0 + 3*339*FLEN/8, x4, x1, x2)

inst_1876:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:5628*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5628*0 + 3*340*FLEN/8, x4, x1, x2)

inst_1877:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:5631*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5631*0 + 3*341*FLEN/8, x4, x1, x2)

inst_1878:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:5634*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5634*0 + 3*342*FLEN/8, x4, x1, x2)

inst_1879:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:5637*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5637*0 + 3*343*FLEN/8, x4, x1, x2)

inst_1880:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:5640*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5640*0 + 3*344*FLEN/8, x4, x1, x2)

inst_1881:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:5643*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5643*0 + 3*345*FLEN/8, x4, x1, x2)

inst_1882:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:5646*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5646*0 + 3*346*FLEN/8, x4, x1, x2)

inst_1883:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:5649*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5649*0 + 3*347*FLEN/8, x4, x1, x2)

inst_1884:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:5652*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5652*0 + 3*348*FLEN/8, x4, x1, x2)

inst_1885:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:5655*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5655*0 + 3*349*FLEN/8, x4, x1, x2)

inst_1886:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:5658*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5658*0 + 3*350*FLEN/8, x4, x1, x2)

inst_1887:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:5661*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5661*0 + 3*351*FLEN/8, x4, x1, x2)

inst_1888:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:5664*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5664*0 + 3*352*FLEN/8, x4, x1, x2)

inst_1889:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x4dcede7752c7f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x88a8216e25dca and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f54dcede7752c7f; op2val:0xa0188a8216e25dca;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:5667*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5667*0 + 3*353*FLEN/8, x4, x1, x2)

inst_1890:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:5670*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5670*0 + 3*354*FLEN/8, x4, x1, x2)

inst_1891:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:5673*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5673*0 + 3*355*FLEN/8, x4, x1, x2)

inst_1892:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:5676*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5676*0 + 3*356*FLEN/8, x4, x1, x2)

inst_1893:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:5679*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5679*0 + 3*357*FLEN/8, x4, x1, x2)

inst_1894:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:5682*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5682*0 + 3*358*FLEN/8, x4, x1, x2)

inst_1895:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:5685*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5685*0 + 3*359*FLEN/8, x4, x1, x2)

inst_1896:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:5688*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5688*0 + 3*360*FLEN/8, x4, x1, x2)

inst_1897:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:5691*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5691*0 + 3*361*FLEN/8, x4, x1, x2)

inst_1898:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:5694*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5694*0 + 3*362*FLEN/8, x4, x1, x2)

inst_1899:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:5697*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5697*0 + 3*363*FLEN/8, x4, x1, x2)

inst_1900:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:5700*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5700*0 + 3*364*FLEN/8, x4, x1, x2)

inst_1901:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:5703*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5703*0 + 3*365*FLEN/8, x4, x1, x2)

inst_1902:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:5706*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5706*0 + 3*366*FLEN/8, x4, x1, x2)

inst_1903:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:5709*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5709*0 + 3*367*FLEN/8, x4, x1, x2)

inst_1904:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:5712*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5712*0 + 3*368*FLEN/8, x4, x1, x2)

inst_1905:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:5715*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5715*0 + 3*369*FLEN/8, x4, x1, x2)

inst_1906:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:5718*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5718*0 + 3*370*FLEN/8, x4, x1, x2)

inst_1907:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:5721*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5721*0 + 3*371*FLEN/8, x4, x1, x2)

inst_1908:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:5724*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5724*0 + 3*372*FLEN/8, x4, x1, x2)

inst_1909:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:5727*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5727*0 + 3*373*FLEN/8, x4, x1, x2)

inst_1910:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:5730*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5730*0 + 3*374*FLEN/8, x4, x1, x2)

inst_1911:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:5733*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5733*0 + 3*375*FLEN/8, x4, x1, x2)

inst_1912:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000000000; valaddr_reg:x3; val_offset:5736*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5736*0 + 3*376*FLEN/8, x4, x1, x2)

inst_1913:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000000001; valaddr_reg:x3; val_offset:5739*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5739*0 + 3*377*FLEN/8, x4, x1, x2)

inst_1914:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000000003; valaddr_reg:x3; val_offset:5742*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5742*0 + 3*378*FLEN/8, x4, x1, x2)

inst_1915:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000000007; valaddr_reg:x3; val_offset:5745*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5745*0 + 3*379*FLEN/8, x4, x1, x2)

inst_1916:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000000000f; valaddr_reg:x3; val_offset:5748*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5748*0 + 3*380*FLEN/8, x4, x1, x2)

inst_1917:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000000001f; valaddr_reg:x3; val_offset:5751*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5751*0 + 3*381*FLEN/8, x4, x1, x2)

inst_1918:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000000003f; valaddr_reg:x3; val_offset:5754*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5754*0 + 3*382*FLEN/8, x4, x1, x2)

inst_1919:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000000007f; valaddr_reg:x3; val_offset:5757*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5757*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_1920:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000000000ff; valaddr_reg:x3; val_offset:5760*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5760*0 + 3*384*FLEN/8, x4, x1, x2)

inst_1921:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000000001ff; valaddr_reg:x3; val_offset:5763*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5763*0 + 3*385*FLEN/8, x4, x1, x2)

inst_1922:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000000003ff; valaddr_reg:x3; val_offset:5766*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5766*0 + 3*386*FLEN/8, x4, x1, x2)

inst_1923:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000000007ff; valaddr_reg:x3; val_offset:5769*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5769*0 + 3*387*FLEN/8, x4, x1, x2)

inst_1924:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000000fff; valaddr_reg:x3; val_offset:5772*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5772*0 + 3*388*FLEN/8, x4, x1, x2)

inst_1925:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000001fff; valaddr_reg:x3; val_offset:5775*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5775*0 + 3*389*FLEN/8, x4, x1, x2)

inst_1926:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000003fff; valaddr_reg:x3; val_offset:5778*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5778*0 + 3*390*FLEN/8, x4, x1, x2)

inst_1927:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000007fff; valaddr_reg:x3; val_offset:5781*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5781*0 + 3*391*FLEN/8, x4, x1, x2)

inst_1928:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000000ffff; valaddr_reg:x3; val_offset:5784*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5784*0 + 3*392*FLEN/8, x4, x1, x2)

inst_1929:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000001ffff; valaddr_reg:x3; val_offset:5787*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5787*0 + 3*393*FLEN/8, x4, x1, x2)

inst_1930:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000003ffff; valaddr_reg:x3; val_offset:5790*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5790*0 + 3*394*FLEN/8, x4, x1, x2)

inst_1931:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000007ffff; valaddr_reg:x3; val_offset:5793*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5793*0 + 3*395*FLEN/8, x4, x1, x2)

inst_1932:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000000fffff; valaddr_reg:x3; val_offset:5796*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5796*0 + 3*396*FLEN/8, x4, x1, x2)

inst_1933:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000001fffff; valaddr_reg:x3; val_offset:5799*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5799*0 + 3*397*FLEN/8, x4, x1, x2)

inst_1934:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000003fffff; valaddr_reg:x3; val_offset:5802*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5802*0 + 3*398*FLEN/8, x4, x1, x2)

inst_1935:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000007fffff; valaddr_reg:x3; val_offset:5805*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5805*0 + 3*399*FLEN/8, x4, x1, x2)

inst_1936:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000000ffffff; valaddr_reg:x3; val_offset:5808*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5808*0 + 3*400*FLEN/8, x4, x1, x2)

inst_1937:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000001ffffff; valaddr_reg:x3; val_offset:5811*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5811*0 + 3*401*FLEN/8, x4, x1, x2)

inst_1938:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000003ffffff; valaddr_reg:x3; val_offset:5814*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5814*0 + 3*402*FLEN/8, x4, x1, x2)

inst_1939:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000007ffffff; valaddr_reg:x3; val_offset:5817*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5817*0 + 3*403*FLEN/8, x4, x1, x2)

inst_1940:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000000fffffff; valaddr_reg:x3; val_offset:5820*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5820*0 + 3*404*FLEN/8, x4, x1, x2)

inst_1941:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000001fffffff; valaddr_reg:x3; val_offset:5823*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5823*0 + 3*405*FLEN/8, x4, x1, x2)

inst_1942:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000003fffffff; valaddr_reg:x3; val_offset:5826*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5826*0 + 3*406*FLEN/8, x4, x1, x2)

inst_1943:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000007fffffff; valaddr_reg:x3; val_offset:5829*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5829*0 + 3*407*FLEN/8, x4, x1, x2)

inst_1944:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200000ffffffff; valaddr_reg:x3; val_offset:5832*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5832*0 + 3*408*FLEN/8, x4, x1, x2)

inst_1945:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200001ffffffff; valaddr_reg:x3; val_offset:5835*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5835*0 + 3*409*FLEN/8, x4, x1, x2)

inst_1946:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200003ffffffff; valaddr_reg:x3; val_offset:5838*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5838*0 + 3*410*FLEN/8, x4, x1, x2)

inst_1947:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200007ffffffff; valaddr_reg:x3; val_offset:5841*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5841*0 + 3*411*FLEN/8, x4, x1, x2)

inst_1948:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20000fffffffff; valaddr_reg:x3; val_offset:5844*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5844*0 + 3*412*FLEN/8, x4, x1, x2)

inst_1949:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20001fffffffff; valaddr_reg:x3; val_offset:5847*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5847*0 + 3*413*FLEN/8, x4, x1, x2)

inst_1950:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20003fffffffff; valaddr_reg:x3; val_offset:5850*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5850*0 + 3*414*FLEN/8, x4, x1, x2)

inst_1951:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20007fffffffff; valaddr_reg:x3; val_offset:5853*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5853*0 + 3*415*FLEN/8, x4, x1, x2)

inst_1952:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2000ffffffffff; valaddr_reg:x3; val_offset:5856*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5856*0 + 3*416*FLEN/8, x4, x1, x2)

inst_1953:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2001ffffffffff; valaddr_reg:x3; val_offset:5859*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5859*0 + 3*417*FLEN/8, x4, x1, x2)

inst_1954:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2003ffffffffff; valaddr_reg:x3; val_offset:5862*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5862*0 + 3*418*FLEN/8, x4, x1, x2)

inst_1955:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2007ffffffffff; valaddr_reg:x3; val_offset:5865*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5865*0 + 3*419*FLEN/8, x4, x1, x2)

inst_1956:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x200fffffffffff; valaddr_reg:x3; val_offset:5868*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5868*0 + 3*420*FLEN/8, x4, x1, x2)

inst_1957:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x201fffffffffff; valaddr_reg:x3; val_offset:5871*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5871*0 + 3*421*FLEN/8, x4, x1, x2)

inst_1958:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x203fffffffffff; valaddr_reg:x3; val_offset:5874*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5874*0 + 3*422*FLEN/8, x4, x1, x2)

inst_1959:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x207fffffffffff; valaddr_reg:x3; val_offset:5877*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5877*0 + 3*423*FLEN/8, x4, x1, x2)

inst_1960:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x20ffffffffffff; valaddr_reg:x3; val_offset:5880*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5880*0 + 3*424*FLEN/8, x4, x1, x2)

inst_1961:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x21ffffffffffff; valaddr_reg:x3; val_offset:5883*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5883*0 + 3*425*FLEN/8, x4, x1, x2)

inst_1962:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x23ffffffffffff; valaddr_reg:x3; val_offset:5886*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5886*0 + 3*426*FLEN/8, x4, x1, x2)

inst_1963:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x27ffffffffffff; valaddr_reg:x3; val_offset:5889*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5889*0 + 3*427*FLEN/8, x4, x1, x2)

inst_1964:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x28000000000000; valaddr_reg:x3; val_offset:5892*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5892*0 + 3*428*FLEN/8, x4, x1, x2)

inst_1965:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2c000000000000; valaddr_reg:x3; val_offset:5895*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5895*0 + 3*429*FLEN/8, x4, x1, x2)

inst_1966:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2e000000000000; valaddr_reg:x3; val_offset:5898*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5898*0 + 3*430*FLEN/8, x4, x1, x2)

inst_1967:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2f000000000000; valaddr_reg:x3; val_offset:5901*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5901*0 + 3*431*FLEN/8, x4, x1, x2)

inst_1968:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2f800000000000; valaddr_reg:x3; val_offset:5904*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5904*0 + 3*432*FLEN/8, x4, x1, x2)

inst_1969:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fc00000000000; valaddr_reg:x3; val_offset:5907*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5907*0 + 3*433*FLEN/8, x4, x1, x2)

inst_1970:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fe00000000000; valaddr_reg:x3; val_offset:5910*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5910*0 + 3*434*FLEN/8, x4, x1, x2)

inst_1971:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ff00000000000; valaddr_reg:x3; val_offset:5913*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5913*0 + 3*435*FLEN/8, x4, x1, x2)

inst_1972:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ff80000000000; valaddr_reg:x3; val_offset:5916*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5916*0 + 3*436*FLEN/8, x4, x1, x2)

inst_1973:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffc0000000000; valaddr_reg:x3; val_offset:5919*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5919*0 + 3*437*FLEN/8, x4, x1, x2)

inst_1974:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffe0000000000; valaddr_reg:x3; val_offset:5922*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5922*0 + 3*438*FLEN/8, x4, x1, x2)

inst_1975:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fff0000000000; valaddr_reg:x3; val_offset:5925*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5925*0 + 3*439*FLEN/8, x4, x1, x2)

inst_1976:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fff8000000000; valaddr_reg:x3; val_offset:5928*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5928*0 + 3*440*FLEN/8, x4, x1, x2)

inst_1977:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffc000000000; valaddr_reg:x3; val_offset:5931*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5931*0 + 3*441*FLEN/8, x4, x1, x2)

inst_1978:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffe000000000; valaddr_reg:x3; val_offset:5934*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5934*0 + 3*442*FLEN/8, x4, x1, x2)

inst_1979:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffff000000000; valaddr_reg:x3; val_offset:5937*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5937*0 + 3*443*FLEN/8, x4, x1, x2)

inst_1980:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffff800000000; valaddr_reg:x3; val_offset:5940*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5940*0 + 3*444*FLEN/8, x4, x1, x2)

inst_1981:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffc00000000; valaddr_reg:x3; val_offset:5943*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5943*0 + 3*445*FLEN/8, x4, x1, x2)

inst_1982:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffe00000000; valaddr_reg:x3; val_offset:5946*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5946*0 + 3*446*FLEN/8, x4, x1, x2)

inst_1983:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffff00000000; valaddr_reg:x3; val_offset:5949*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5949*0 + 3*447*FLEN/8, x4, x1, x2)

inst_1984:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffff80000000; valaddr_reg:x3; val_offset:5952*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5952*0 + 3*448*FLEN/8, x4, x1, x2)

inst_1985:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffc0000000; valaddr_reg:x3; val_offset:5955*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5955*0 + 3*449*FLEN/8, x4, x1, x2)

inst_1986:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffe0000000; valaddr_reg:x3; val_offset:5958*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5958*0 + 3*450*FLEN/8, x4, x1, x2)

inst_1987:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffff0000000; valaddr_reg:x3; val_offset:5961*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5961*0 + 3*451*FLEN/8, x4, x1, x2)

inst_1988:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffff8000000; valaddr_reg:x3; val_offset:5964*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5964*0 + 3*452*FLEN/8, x4, x1, x2)

inst_1989:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffc000000; valaddr_reg:x3; val_offset:5967*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5967*0 + 3*453*FLEN/8, x4, x1, x2)

inst_1990:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffe000000; valaddr_reg:x3; val_offset:5970*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5970*0 + 3*454*FLEN/8, x4, x1, x2)

inst_1991:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffff000000; valaddr_reg:x3; val_offset:5973*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5973*0 + 3*455*FLEN/8, x4, x1, x2)

inst_1992:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffff800000; valaddr_reg:x3; val_offset:5976*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5976*0 + 3*456*FLEN/8, x4, x1, x2)

inst_1993:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffc00000; valaddr_reg:x3; val_offset:5979*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5979*0 + 3*457*FLEN/8, x4, x1, x2)

inst_1994:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffe00000; valaddr_reg:x3; val_offset:5982*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5982*0 + 3*458*FLEN/8, x4, x1, x2)

inst_1995:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffff00000; valaddr_reg:x3; val_offset:5985*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5985*0 + 3*459*FLEN/8, x4, x1, x2)

inst_1996:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffff80000; valaddr_reg:x3; val_offset:5988*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5988*0 + 3*460*FLEN/8, x4, x1, x2)

inst_1997:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffc0000; valaddr_reg:x3; val_offset:5991*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5991*0 + 3*461*FLEN/8, x4, x1, x2)

inst_1998:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffe0000; valaddr_reg:x3; val_offset:5994*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5994*0 + 3*462*FLEN/8, x4, x1, x2)

inst_1999:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffff0000; valaddr_reg:x3; val_offset:5997*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5997*0 + 3*463*FLEN/8, x4, x1, x2)

inst_2000:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffff8000; valaddr_reg:x3; val_offset:6000*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6000*0 + 3*464*FLEN/8, x4, x1, x2)

inst_2001:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffffc000; valaddr_reg:x3; val_offset:6003*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6003*0 + 3*465*FLEN/8, x4, x1, x2)

inst_2002:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffffe000; valaddr_reg:x3; val_offset:6006*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6006*0 + 3*466*FLEN/8, x4, x1, x2)

inst_2003:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffff000; valaddr_reg:x3; val_offset:6009*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6009*0 + 3*467*FLEN/8, x4, x1, x2)

inst_2004:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffff800; valaddr_reg:x3; val_offset:6012*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6012*0 + 3*468*FLEN/8, x4, x1, x2)

inst_2005:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffffc00; valaddr_reg:x3; val_offset:6015*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6015*0 + 3*469*FLEN/8, x4, x1, x2)

inst_2006:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffffe00; valaddr_reg:x3; val_offset:6018*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6018*0 + 3*470*FLEN/8, x4, x1, x2)

inst_2007:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffffff00; valaddr_reg:x3; val_offset:6021*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6021*0 + 3*471*FLEN/8, x4, x1, x2)

inst_2008:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffffff80; valaddr_reg:x3; val_offset:6024*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6024*0 + 3*472*FLEN/8, x4, x1, x2)

inst_2009:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffffffc0; valaddr_reg:x3; val_offset:6027*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6027*0 + 3*473*FLEN/8, x4, x1, x2)

inst_2010:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffffffe0; valaddr_reg:x3; val_offset:6030*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6030*0 + 3*474*FLEN/8, x4, x1, x2)

inst_2011:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffffff0; valaddr_reg:x3; val_offset:6033*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6033*0 + 3*475*FLEN/8, x4, x1, x2)

inst_2012:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffffff8; valaddr_reg:x3; val_offset:6036*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6036*0 + 3*476*FLEN/8, x4, x1, x2)

inst_2013:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffffffc; valaddr_reg:x3; val_offset:6039*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6039*0 + 3*477*FLEN/8, x4, x1, x2)

inst_2014:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2ffffffffffffe; valaddr_reg:x3; val_offset:6042*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6042*0 + 3*478*FLEN/8, x4, x1, x2)

inst_2015:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x5466334188abf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f55466334188abf; op2val:0x0;
op3val:0x2fffffffffffff; valaddr_reg:x3; val_offset:6045*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6045*0 + 3*479*FLEN/8, x4, x1, x2)

inst_2016:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:6048*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6048*0 + 3*480*FLEN/8, x4, x1, x2)

inst_2017:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:6051*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6051*0 + 3*481*FLEN/8, x4, x1, x2)

inst_2018:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:6054*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6054*0 + 3*482*FLEN/8, x4, x1, x2)

inst_2019:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:6057*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6057*0 + 3*483*FLEN/8, x4, x1, x2)

inst_2020:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:6060*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6060*0 + 3*484*FLEN/8, x4, x1, x2)

inst_2021:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:6063*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6063*0 + 3*485*FLEN/8, x4, x1, x2)

inst_2022:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:6066*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6066*0 + 3*486*FLEN/8, x4, x1, x2)

inst_2023:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:6069*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6069*0 + 3*487*FLEN/8, x4, x1, x2)

inst_2024:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:6072*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6072*0 + 3*488*FLEN/8, x4, x1, x2)

inst_2025:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:6075*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6075*0 + 3*489*FLEN/8, x4, x1, x2)

inst_2026:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:6078*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6078*0 + 3*490*FLEN/8, x4, x1, x2)

inst_2027:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:6081*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6081*0 + 3*491*FLEN/8, x4, x1, x2)

inst_2028:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:6084*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6084*0 + 3*492*FLEN/8, x4, x1, x2)

inst_2029:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:6087*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6087*0 + 3*493*FLEN/8, x4, x1, x2)

inst_2030:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:6090*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6090*0 + 3*494*FLEN/8, x4, x1, x2)

inst_2031:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:6093*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6093*0 + 3*495*FLEN/8, x4, x1, x2)

inst_2032:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:6096*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6096*0 + 3*496*FLEN/8, x4, x1, x2)

inst_2033:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:6099*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6099*0 + 3*497*FLEN/8, x4, x1, x2)

inst_2034:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:6102*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6102*0 + 3*498*FLEN/8, x4, x1, x2)

inst_2035:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:6105*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6105*0 + 3*499*FLEN/8, x4, x1, x2)

inst_2036:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:6108*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6108*0 + 3*500*FLEN/8, x4, x1, x2)

inst_2037:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:6111*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6111*0 + 3*501*FLEN/8, x4, x1, x2)

inst_2038:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000000000; valaddr_reg:x3; val_offset:6114*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6114*0 + 3*502*FLEN/8, x4, x1, x2)

inst_2039:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000000001; valaddr_reg:x3; val_offset:6117*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6117*0 + 3*503*FLEN/8, x4, x1, x2)

inst_2040:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000000003; valaddr_reg:x3; val_offset:6120*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6120*0 + 3*504*FLEN/8, x4, x1, x2)

inst_2041:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000000007; valaddr_reg:x3; val_offset:6123*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6123*0 + 3*505*FLEN/8, x4, x1, x2)

inst_2042:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000000000f; valaddr_reg:x3; val_offset:6126*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6126*0 + 3*506*FLEN/8, x4, x1, x2)

inst_2043:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000000001f; valaddr_reg:x3; val_offset:6129*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6129*0 + 3*507*FLEN/8, x4, x1, x2)

inst_2044:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000000003f; valaddr_reg:x3; val_offset:6132*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6132*0 + 3*508*FLEN/8, x4, x1, x2)

inst_2045:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000000007f; valaddr_reg:x3; val_offset:6135*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6135*0 + 3*509*FLEN/8, x4, x1, x2)

inst_2046:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000000000ff; valaddr_reg:x3; val_offset:6138*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6138*0 + 3*510*FLEN/8, x4, x1, x2)

inst_2047:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000000001ff; valaddr_reg:x3; val_offset:6141*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6141*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_2048:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000000003ff; valaddr_reg:x3; val_offset:6144*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6144*0 + 3*512*FLEN/8, x4, x1, x2)

inst_2049:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000000007ff; valaddr_reg:x3; val_offset:6147*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6147*0 + 3*513*FLEN/8, x4, x1, x2)

inst_2050:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000000fff; valaddr_reg:x3; val_offset:6150*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6150*0 + 3*514*FLEN/8, x4, x1, x2)

inst_2051:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000001fff; valaddr_reg:x3; val_offset:6153*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6153*0 + 3*515*FLEN/8, x4, x1, x2)

inst_2052:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000003fff; valaddr_reg:x3; val_offset:6156*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6156*0 + 3*516*FLEN/8, x4, x1, x2)

inst_2053:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000007fff; valaddr_reg:x3; val_offset:6159*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6159*0 + 3*517*FLEN/8, x4, x1, x2)

inst_2054:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000000ffff; valaddr_reg:x3; val_offset:6162*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6162*0 + 3*518*FLEN/8, x4, x1, x2)

inst_2055:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000001ffff; valaddr_reg:x3; val_offset:6165*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6165*0 + 3*519*FLEN/8, x4, x1, x2)

inst_2056:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000003ffff; valaddr_reg:x3; val_offset:6168*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6168*0 + 3*520*FLEN/8, x4, x1, x2)

inst_2057:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000007ffff; valaddr_reg:x3; val_offset:6171*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6171*0 + 3*521*FLEN/8, x4, x1, x2)

inst_2058:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000000fffff; valaddr_reg:x3; val_offset:6174*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6174*0 + 3*522*FLEN/8, x4, x1, x2)

inst_2059:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000001fffff; valaddr_reg:x3; val_offset:6177*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6177*0 + 3*523*FLEN/8, x4, x1, x2)

inst_2060:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000003fffff; valaddr_reg:x3; val_offset:6180*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6180*0 + 3*524*FLEN/8, x4, x1, x2)

inst_2061:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000007fffff; valaddr_reg:x3; val_offset:6183*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6183*0 + 3*525*FLEN/8, x4, x1, x2)

inst_2062:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000000ffffff; valaddr_reg:x3; val_offset:6186*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6186*0 + 3*526*FLEN/8, x4, x1, x2)

inst_2063:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000001ffffff; valaddr_reg:x3; val_offset:6189*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6189*0 + 3*527*FLEN/8, x4, x1, x2)

inst_2064:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000003ffffff; valaddr_reg:x3; val_offset:6192*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6192*0 + 3*528*FLEN/8, x4, x1, x2)

inst_2065:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000007ffffff; valaddr_reg:x3; val_offset:6195*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6195*0 + 3*529*FLEN/8, x4, x1, x2)

inst_2066:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000000fffffff; valaddr_reg:x3; val_offset:6198*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6198*0 + 3*530*FLEN/8, x4, x1, x2)

inst_2067:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000001fffffff; valaddr_reg:x3; val_offset:6201*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6201*0 + 3*531*FLEN/8, x4, x1, x2)

inst_2068:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000003fffffff; valaddr_reg:x3; val_offset:6204*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6204*0 + 3*532*FLEN/8, x4, x1, x2)

inst_2069:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000007fffffff; valaddr_reg:x3; val_offset:6207*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6207*0 + 3*533*FLEN/8, x4, x1, x2)

inst_2070:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100000ffffffff; valaddr_reg:x3; val_offset:6210*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6210*0 + 3*534*FLEN/8, x4, x1, x2)

inst_2071:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100001ffffffff; valaddr_reg:x3; val_offset:6213*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6213*0 + 3*535*FLEN/8, x4, x1, x2)

inst_2072:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100003ffffffff; valaddr_reg:x3; val_offset:6216*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6216*0 + 3*536*FLEN/8, x4, x1, x2)

inst_2073:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100007ffffffff; valaddr_reg:x3; val_offset:6219*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6219*0 + 3*537*FLEN/8, x4, x1, x2)

inst_2074:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110000fffffffff; valaddr_reg:x3; val_offset:6222*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6222*0 + 3*538*FLEN/8, x4, x1, x2)

inst_2075:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110001fffffffff; valaddr_reg:x3; val_offset:6225*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6225*0 + 3*539*FLEN/8, x4, x1, x2)

inst_2076:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110003fffffffff; valaddr_reg:x3; val_offset:6228*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6228*0 + 3*540*FLEN/8, x4, x1, x2)

inst_2077:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110007fffffffff; valaddr_reg:x3; val_offset:6231*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6231*0 + 3*541*FLEN/8, x4, x1, x2)

inst_2078:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11000ffffffffff; valaddr_reg:x3; val_offset:6234*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6234*0 + 3*542*FLEN/8, x4, x1, x2)

inst_2079:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11001ffffffffff; valaddr_reg:x3; val_offset:6237*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6237*0 + 3*543*FLEN/8, x4, x1, x2)

inst_2080:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11003ffffffffff; valaddr_reg:x3; val_offset:6240*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6240*0 + 3*544*FLEN/8, x4, x1, x2)

inst_2081:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11007ffffffffff; valaddr_reg:x3; val_offset:6243*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6243*0 + 3*545*FLEN/8, x4, x1, x2)

inst_2082:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1100fffffffffff; valaddr_reg:x3; val_offset:6246*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6246*0 + 3*546*FLEN/8, x4, x1, x2)

inst_2083:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1101fffffffffff; valaddr_reg:x3; val_offset:6249*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6249*0 + 3*547*FLEN/8, x4, x1, x2)

inst_2084:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1103fffffffffff; valaddr_reg:x3; val_offset:6252*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6252*0 + 3*548*FLEN/8, x4, x1, x2)

inst_2085:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x1107fffffffffff; valaddr_reg:x3; val_offset:6255*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6255*0 + 3*549*FLEN/8, x4, x1, x2)

inst_2086:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x110ffffffffffff; valaddr_reg:x3; val_offset:6258*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6258*0 + 3*550*FLEN/8, x4, x1, x2)

inst_2087:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x111ffffffffffff; valaddr_reg:x3; val_offset:6261*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6261*0 + 3*551*FLEN/8, x4, x1, x2)

inst_2088:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x113ffffffffffff; valaddr_reg:x3; val_offset:6264*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6264*0 + 3*552*FLEN/8, x4, x1, x2)

inst_2089:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x117ffffffffffff; valaddr_reg:x3; val_offset:6267*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6267*0 + 3*553*FLEN/8, x4, x1, x2)

inst_2090:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x118000000000000; valaddr_reg:x3; val_offset:6270*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6270*0 + 3*554*FLEN/8, x4, x1, x2)

inst_2091:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11c000000000000; valaddr_reg:x3; val_offset:6273*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6273*0 + 3*555*FLEN/8, x4, x1, x2)

inst_2092:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11e000000000000; valaddr_reg:x3; val_offset:6276*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6276*0 + 3*556*FLEN/8, x4, x1, x2)

inst_2093:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11f000000000000; valaddr_reg:x3; val_offset:6279*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6279*0 + 3*557*FLEN/8, x4, x1, x2)

inst_2094:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11f800000000000; valaddr_reg:x3; val_offset:6282*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6282*0 + 3*558*FLEN/8, x4, x1, x2)

inst_2095:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fc00000000000; valaddr_reg:x3; val_offset:6285*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6285*0 + 3*559*FLEN/8, x4, x1, x2)

inst_2096:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fe00000000000; valaddr_reg:x3; val_offset:6288*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6288*0 + 3*560*FLEN/8, x4, x1, x2)

inst_2097:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ff00000000000; valaddr_reg:x3; val_offset:6291*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6291*0 + 3*561*FLEN/8, x4, x1, x2)

inst_2098:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ff80000000000; valaddr_reg:x3; val_offset:6294*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6294*0 + 3*562*FLEN/8, x4, x1, x2)

inst_2099:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffc0000000000; valaddr_reg:x3; val_offset:6297*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6297*0 + 3*563*FLEN/8, x4, x1, x2)

inst_2100:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffe0000000000; valaddr_reg:x3; val_offset:6300*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6300*0 + 3*564*FLEN/8, x4, x1, x2)

inst_2101:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fff0000000000; valaddr_reg:x3; val_offset:6303*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6303*0 + 3*565*FLEN/8, x4, x1, x2)

inst_2102:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fff8000000000; valaddr_reg:x3; val_offset:6306*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6306*0 + 3*566*FLEN/8, x4, x1, x2)

inst_2103:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffc000000000; valaddr_reg:x3; val_offset:6309*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6309*0 + 3*567*FLEN/8, x4, x1, x2)

inst_2104:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffe000000000; valaddr_reg:x3; val_offset:6312*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6312*0 + 3*568*FLEN/8, x4, x1, x2)

inst_2105:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffff000000000; valaddr_reg:x3; val_offset:6315*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6315*0 + 3*569*FLEN/8, x4, x1, x2)

inst_2106:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffff800000000; valaddr_reg:x3; val_offset:6318*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6318*0 + 3*570*FLEN/8, x4, x1, x2)

inst_2107:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffc00000000; valaddr_reg:x3; val_offset:6321*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6321*0 + 3*571*FLEN/8, x4, x1, x2)

inst_2108:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffe00000000; valaddr_reg:x3; val_offset:6324*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6324*0 + 3*572*FLEN/8, x4, x1, x2)

inst_2109:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffff00000000; valaddr_reg:x3; val_offset:6327*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6327*0 + 3*573*FLEN/8, x4, x1, x2)

inst_2110:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffff80000000; valaddr_reg:x3; val_offset:6330*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6330*0 + 3*574*FLEN/8, x4, x1, x2)

inst_2111:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffc0000000; valaddr_reg:x3; val_offset:6333*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6333*0 + 3*575*FLEN/8, x4, x1, x2)

inst_2112:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffe0000000; valaddr_reg:x3; val_offset:6336*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6336*0 + 3*576*FLEN/8, x4, x1, x2)

inst_2113:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffff0000000; valaddr_reg:x3; val_offset:6339*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6339*0 + 3*577*FLEN/8, x4, x1, x2)

inst_2114:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffff8000000; valaddr_reg:x3; val_offset:6342*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6342*0 + 3*578*FLEN/8, x4, x1, x2)

inst_2115:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffc000000; valaddr_reg:x3; val_offset:6345*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6345*0 + 3*579*FLEN/8, x4, x1, x2)

inst_2116:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffe000000; valaddr_reg:x3; val_offset:6348*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6348*0 + 3*580*FLEN/8, x4, x1, x2)

inst_2117:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffff000000; valaddr_reg:x3; val_offset:6351*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6351*0 + 3*581*FLEN/8, x4, x1, x2)

inst_2118:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffff800000; valaddr_reg:x3; val_offset:6354*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6354*0 + 3*582*FLEN/8, x4, x1, x2)

inst_2119:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffc00000; valaddr_reg:x3; val_offset:6357*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6357*0 + 3*583*FLEN/8, x4, x1, x2)

inst_2120:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffe00000; valaddr_reg:x3; val_offset:6360*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6360*0 + 3*584*FLEN/8, x4, x1, x2)

inst_2121:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffff00000; valaddr_reg:x3; val_offset:6363*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6363*0 + 3*585*FLEN/8, x4, x1, x2)

inst_2122:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffff80000; valaddr_reg:x3; val_offset:6366*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6366*0 + 3*586*FLEN/8, x4, x1, x2)

inst_2123:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffc0000; valaddr_reg:x3; val_offset:6369*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6369*0 + 3*587*FLEN/8, x4, x1, x2)

inst_2124:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffe0000; valaddr_reg:x3; val_offset:6372*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6372*0 + 3*588*FLEN/8, x4, x1, x2)

inst_2125:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffff0000; valaddr_reg:x3; val_offset:6375*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6375*0 + 3*589*FLEN/8, x4, x1, x2)

inst_2126:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffff8000; valaddr_reg:x3; val_offset:6378*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6378*0 + 3*590*FLEN/8, x4, x1, x2)

inst_2127:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffffc000; valaddr_reg:x3; val_offset:6381*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6381*0 + 3*591*FLEN/8, x4, x1, x2)

inst_2128:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffffe000; valaddr_reg:x3; val_offset:6384*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6384*0 + 3*592*FLEN/8, x4, x1, x2)

inst_2129:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffff000; valaddr_reg:x3; val_offset:6387*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6387*0 + 3*593*FLEN/8, x4, x1, x2)

inst_2130:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffff800; valaddr_reg:x3; val_offset:6390*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6390*0 + 3*594*FLEN/8, x4, x1, x2)

inst_2131:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffffc00; valaddr_reg:x3; val_offset:6393*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6393*0 + 3*595*FLEN/8, x4, x1, x2)

inst_2132:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffffe00; valaddr_reg:x3; val_offset:6396*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6396*0 + 3*596*FLEN/8, x4, x1, x2)

inst_2133:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffffff00; valaddr_reg:x3; val_offset:6399*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6399*0 + 3*597*FLEN/8, x4, x1, x2)

inst_2134:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffffff80; valaddr_reg:x3; val_offset:6402*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6402*0 + 3*598*FLEN/8, x4, x1, x2)

inst_2135:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffffffc0; valaddr_reg:x3; val_offset:6405*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6405*0 + 3*599*FLEN/8, x4, x1, x2)

inst_2136:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffffffe0; valaddr_reg:x3; val_offset:6408*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6408*0 + 3*600*FLEN/8, x4, x1, x2)

inst_2137:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffffff0; valaddr_reg:x3; val_offset:6411*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6411*0 + 3*601*FLEN/8, x4, x1, x2)

inst_2138:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffffff8; valaddr_reg:x3; val_offset:6414*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6414*0 + 3*602*FLEN/8, x4, x1, x2)

inst_2139:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffffffc; valaddr_reg:x3; val_offset:6417*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6417*0 + 3*603*FLEN/8, x4, x1, x2)

inst_2140:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11ffffffffffffe; valaddr_reg:x3; val_offset:6420*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6420*0 + 3*604*FLEN/8, x4, x1, x2)

inst_2141:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6db9b8341cf3f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56db9b8341cf3f; op2val:0x0;
op3val:0x11fffffffffffff; valaddr_reg:x3; val_offset:6423*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6423*0 + 3*605*FLEN/8, x4, x1, x2)

inst_2142:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000000000; valaddr_reg:x3; val_offset:6426*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6426*0 + 3*606*FLEN/8, x4, x1, x2)

inst_2143:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000000001; valaddr_reg:x3; val_offset:6429*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6429*0 + 3*607*FLEN/8, x4, x1, x2)

inst_2144:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000000003; valaddr_reg:x3; val_offset:6432*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6432*0 + 3*608*FLEN/8, x4, x1, x2)

inst_2145:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000000007; valaddr_reg:x3; val_offset:6435*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6435*0 + 3*609*FLEN/8, x4, x1, x2)

inst_2146:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000000000f; valaddr_reg:x3; val_offset:6438*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6438*0 + 3*610*FLEN/8, x4, x1, x2)

inst_2147:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000000001f; valaddr_reg:x3; val_offset:6441*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6441*0 + 3*611*FLEN/8, x4, x1, x2)

inst_2148:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000000003f; valaddr_reg:x3; val_offset:6444*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6444*0 + 3*612*FLEN/8, x4, x1, x2)

inst_2149:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000000007f; valaddr_reg:x3; val_offset:6447*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6447*0 + 3*613*FLEN/8, x4, x1, x2)

inst_2150:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000000000ff; valaddr_reg:x3; val_offset:6450*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6450*0 + 3*614*FLEN/8, x4, x1, x2)

inst_2151:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000000001ff; valaddr_reg:x3; val_offset:6453*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6453*0 + 3*615*FLEN/8, x4, x1, x2)

inst_2152:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000000003ff; valaddr_reg:x3; val_offset:6456*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6456*0 + 3*616*FLEN/8, x4, x1, x2)

inst_2153:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000000007ff; valaddr_reg:x3; val_offset:6459*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6459*0 + 3*617*FLEN/8, x4, x1, x2)

inst_2154:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000000fff; valaddr_reg:x3; val_offset:6462*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6462*0 + 3*618*FLEN/8, x4, x1, x2)

inst_2155:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000001fff; valaddr_reg:x3; val_offset:6465*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6465*0 + 3*619*FLEN/8, x4, x1, x2)

inst_2156:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000003fff; valaddr_reg:x3; val_offset:6468*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6468*0 + 3*620*FLEN/8, x4, x1, x2)

inst_2157:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000007fff; valaddr_reg:x3; val_offset:6471*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6471*0 + 3*621*FLEN/8, x4, x1, x2)

inst_2158:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000000ffff; valaddr_reg:x3; val_offset:6474*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6474*0 + 3*622*FLEN/8, x4, x1, x2)

inst_2159:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000001ffff; valaddr_reg:x3; val_offset:6477*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6477*0 + 3*623*FLEN/8, x4, x1, x2)

inst_2160:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000003ffff; valaddr_reg:x3; val_offset:6480*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6480*0 + 3*624*FLEN/8, x4, x1, x2)

inst_2161:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000007ffff; valaddr_reg:x3; val_offset:6483*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6483*0 + 3*625*FLEN/8, x4, x1, x2)

inst_2162:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000000fffff; valaddr_reg:x3; val_offset:6486*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6486*0 + 3*626*FLEN/8, x4, x1, x2)

inst_2163:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000001fffff; valaddr_reg:x3; val_offset:6489*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6489*0 + 3*627*FLEN/8, x4, x1, x2)

inst_2164:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000003fffff; valaddr_reg:x3; val_offset:6492*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6492*0 + 3*628*FLEN/8, x4, x1, x2)

inst_2165:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000007fffff; valaddr_reg:x3; val_offset:6495*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6495*0 + 3*629*FLEN/8, x4, x1, x2)

inst_2166:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000000ffffff; valaddr_reg:x3; val_offset:6498*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6498*0 + 3*630*FLEN/8, x4, x1, x2)

inst_2167:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000001ffffff; valaddr_reg:x3; val_offset:6501*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6501*0 + 3*631*FLEN/8, x4, x1, x2)

inst_2168:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000003ffffff; valaddr_reg:x3; val_offset:6504*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6504*0 + 3*632*FLEN/8, x4, x1, x2)

inst_2169:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000007ffffff; valaddr_reg:x3; val_offset:6507*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6507*0 + 3*633*FLEN/8, x4, x1, x2)

inst_2170:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000000fffffff; valaddr_reg:x3; val_offset:6510*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6510*0 + 3*634*FLEN/8, x4, x1, x2)

inst_2171:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000001fffffff; valaddr_reg:x3; val_offset:6513*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6513*0 + 3*635*FLEN/8, x4, x1, x2)

inst_2172:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000003fffffff; valaddr_reg:x3; val_offset:6516*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6516*0 + 3*636*FLEN/8, x4, x1, x2)

inst_2173:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000007fffffff; valaddr_reg:x3; val_offset:6519*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6519*0 + 3*637*FLEN/8, x4, x1, x2)

inst_2174:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00000ffffffff; valaddr_reg:x3; val_offset:6522*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6522*0 + 3*638*FLEN/8, x4, x1, x2)

inst_2175:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00001ffffffff; valaddr_reg:x3; val_offset:6525*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6525*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_2176:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00003ffffffff; valaddr_reg:x3; val_offset:6528*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6528*0 + 3*640*FLEN/8, x4, x1, x2)

inst_2177:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00007ffffffff; valaddr_reg:x3; val_offset:6531*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6531*0 + 3*641*FLEN/8, x4, x1, x2)

inst_2178:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0000fffffffff; valaddr_reg:x3; val_offset:6534*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6534*0 + 3*642*FLEN/8, x4, x1, x2)

inst_2179:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0001fffffffff; valaddr_reg:x3; val_offset:6537*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6537*0 + 3*643*FLEN/8, x4, x1, x2)

inst_2180:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0003fffffffff; valaddr_reg:x3; val_offset:6540*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6540*0 + 3*644*FLEN/8, x4, x1, x2)

inst_2181:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0007fffffffff; valaddr_reg:x3; val_offset:6543*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6543*0 + 3*645*FLEN/8, x4, x1, x2)

inst_2182:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf000ffffffffff; valaddr_reg:x3; val_offset:6546*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6546*0 + 3*646*FLEN/8, x4, x1, x2)

inst_2183:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf001ffffffffff; valaddr_reg:x3; val_offset:6549*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6549*0 + 3*647*FLEN/8, x4, x1, x2)

inst_2184:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf003ffffffffff; valaddr_reg:x3; val_offset:6552*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6552*0 + 3*648*FLEN/8, x4, x1, x2)

inst_2185:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf007ffffffffff; valaddr_reg:x3; val_offset:6555*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6555*0 + 3*649*FLEN/8, x4, x1, x2)

inst_2186:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf00fffffffffff; valaddr_reg:x3; val_offset:6558*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6558*0 + 3*650*FLEN/8, x4, x1, x2)

inst_2187:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf01fffffffffff; valaddr_reg:x3; val_offset:6561*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6561*0 + 3*651*FLEN/8, x4, x1, x2)

inst_2188:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf03fffffffffff; valaddr_reg:x3; val_offset:6564*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6564*0 + 3*652*FLEN/8, x4, x1, x2)

inst_2189:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf07fffffffffff; valaddr_reg:x3; val_offset:6567*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6567*0 + 3*653*FLEN/8, x4, x1, x2)

inst_2190:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf0ffffffffffff; valaddr_reg:x3; val_offset:6570*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6570*0 + 3*654*FLEN/8, x4, x1, x2)

inst_2191:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf1ffffffffffff; valaddr_reg:x3; val_offset:6573*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6573*0 + 3*655*FLEN/8, x4, x1, x2)

inst_2192:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf3ffffffffffff; valaddr_reg:x3; val_offset:6576*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6576*0 + 3*656*FLEN/8, x4, x1, x2)

inst_2193:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf7ffffffffffff; valaddr_reg:x3; val_offset:6579*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6579*0 + 3*657*FLEN/8, x4, x1, x2)

inst_2194:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdf8000000000000; valaddr_reg:x3; val_offset:6582*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6582*0 + 3*658*FLEN/8, x4, x1, x2)

inst_2195:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfc000000000000; valaddr_reg:x3; val_offset:6585*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6585*0 + 3*659*FLEN/8, x4, x1, x2)

inst_2196:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfe000000000000; valaddr_reg:x3; val_offset:6588*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6588*0 + 3*660*FLEN/8, x4, x1, x2)

inst_2197:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdff000000000000; valaddr_reg:x3; val_offset:6591*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6591*0 + 3*661*FLEN/8, x4, x1, x2)

inst_2198:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdff800000000000; valaddr_reg:x3; val_offset:6594*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6594*0 + 3*662*FLEN/8, x4, x1, x2)

inst_2199:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffc00000000000; valaddr_reg:x3; val_offset:6597*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6597*0 + 3*663*FLEN/8, x4, x1, x2)

inst_2200:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffe00000000000; valaddr_reg:x3; val_offset:6600*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6600*0 + 3*664*FLEN/8, x4, x1, x2)

inst_2201:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfff00000000000; valaddr_reg:x3; val_offset:6603*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6603*0 + 3*665*FLEN/8, x4, x1, x2)

inst_2202:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfff80000000000; valaddr_reg:x3; val_offset:6606*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6606*0 + 3*666*FLEN/8, x4, x1, x2)

inst_2203:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffc0000000000; valaddr_reg:x3; val_offset:6609*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6609*0 + 3*667*FLEN/8, x4, x1, x2)

inst_2204:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffe0000000000; valaddr_reg:x3; val_offset:6612*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6612*0 + 3*668*FLEN/8, x4, x1, x2)

inst_2205:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffff0000000000; valaddr_reg:x3; val_offset:6615*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6615*0 + 3*669*FLEN/8, x4, x1, x2)

inst_2206:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffff8000000000; valaddr_reg:x3; val_offset:6618*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6618*0 + 3*670*FLEN/8, x4, x1, x2)

inst_2207:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffc000000000; valaddr_reg:x3; val_offset:6621*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6621*0 + 3*671*FLEN/8, x4, x1, x2)

inst_2208:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffe000000000; valaddr_reg:x3; val_offset:6624*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6624*0 + 3*672*FLEN/8, x4, x1, x2)

inst_2209:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffff000000000; valaddr_reg:x3; val_offset:6627*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6627*0 + 3*673*FLEN/8, x4, x1, x2)

inst_2210:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffff800000000; valaddr_reg:x3; val_offset:6630*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6630*0 + 3*674*FLEN/8, x4, x1, x2)

inst_2211:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffc00000000; valaddr_reg:x3; val_offset:6633*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6633*0 + 3*675*FLEN/8, x4, x1, x2)

inst_2212:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffe00000000; valaddr_reg:x3; val_offset:6636*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6636*0 + 3*676*FLEN/8, x4, x1, x2)

inst_2213:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffff00000000; valaddr_reg:x3; val_offset:6639*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6639*0 + 3*677*FLEN/8, x4, x1, x2)

inst_2214:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffff80000000; valaddr_reg:x3; val_offset:6642*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6642*0 + 3*678*FLEN/8, x4, x1, x2)

inst_2215:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffc0000000; valaddr_reg:x3; val_offset:6645*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6645*0 + 3*679*FLEN/8, x4, x1, x2)

inst_2216:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffe0000000; valaddr_reg:x3; val_offset:6648*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6648*0 + 3*680*FLEN/8, x4, x1, x2)

inst_2217:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffff0000000; valaddr_reg:x3; val_offset:6651*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6651*0 + 3*681*FLEN/8, x4, x1, x2)

inst_2218:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffff8000000; valaddr_reg:x3; val_offset:6654*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6654*0 + 3*682*FLEN/8, x4, x1, x2)

inst_2219:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffc000000; valaddr_reg:x3; val_offset:6657*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6657*0 + 3*683*FLEN/8, x4, x1, x2)

inst_2220:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffe000000; valaddr_reg:x3; val_offset:6660*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6660*0 + 3*684*FLEN/8, x4, x1, x2)

inst_2221:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffff000000; valaddr_reg:x3; val_offset:6663*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6663*0 + 3*685*FLEN/8, x4, x1, x2)

inst_2222:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffff800000; valaddr_reg:x3; val_offset:6666*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6666*0 + 3*686*FLEN/8, x4, x1, x2)

inst_2223:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffc00000; valaddr_reg:x3; val_offset:6669*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6669*0 + 3*687*FLEN/8, x4, x1, x2)

inst_2224:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffe00000; valaddr_reg:x3; val_offset:6672*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6672*0 + 3*688*FLEN/8, x4, x1, x2)

inst_2225:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffff00000; valaddr_reg:x3; val_offset:6675*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6675*0 + 3*689*FLEN/8, x4, x1, x2)

inst_2226:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffff80000; valaddr_reg:x3; val_offset:6678*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6678*0 + 3*690*FLEN/8, x4, x1, x2)

inst_2227:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffc0000; valaddr_reg:x3; val_offset:6681*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6681*0 + 3*691*FLEN/8, x4, x1, x2)

inst_2228:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffe0000; valaddr_reg:x3; val_offset:6684*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6684*0 + 3*692*FLEN/8, x4, x1, x2)

inst_2229:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffff0000; valaddr_reg:x3; val_offset:6687*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6687*0 + 3*693*FLEN/8, x4, x1, x2)

inst_2230:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffff8000; valaddr_reg:x3; val_offset:6690*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6690*0 + 3*694*FLEN/8, x4, x1, x2)

inst_2231:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffffc000; valaddr_reg:x3; val_offset:6693*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6693*0 + 3*695*FLEN/8, x4, x1, x2)

inst_2232:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffffe000; valaddr_reg:x3; val_offset:6696*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6696*0 + 3*696*FLEN/8, x4, x1, x2)

inst_2233:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffff000; valaddr_reg:x3; val_offset:6699*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6699*0 + 3*697*FLEN/8, x4, x1, x2)

inst_2234:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffff800; valaddr_reg:x3; val_offset:6702*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6702*0 + 3*698*FLEN/8, x4, x1, x2)

inst_2235:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffffc00; valaddr_reg:x3; val_offset:6705*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6705*0 + 3*699*FLEN/8, x4, x1, x2)

inst_2236:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffffe00; valaddr_reg:x3; val_offset:6708*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6708*0 + 3*700*FLEN/8, x4, x1, x2)

inst_2237:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffffff00; valaddr_reg:x3; val_offset:6711*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6711*0 + 3*701*FLEN/8, x4, x1, x2)

inst_2238:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffffff80; valaddr_reg:x3; val_offset:6714*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6714*0 + 3*702*FLEN/8, x4, x1, x2)

inst_2239:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffffffc0; valaddr_reg:x3; val_offset:6717*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6717*0 + 3*703*FLEN/8, x4, x1, x2)

inst_2240:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffffffe0; valaddr_reg:x3; val_offset:6720*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6720*0 + 3*704*FLEN/8, x4, x1, x2)

inst_2241:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffffff0; valaddr_reg:x3; val_offset:6723*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6723*0 + 3*705*FLEN/8, x4, x1, x2)

inst_2242:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffffff8; valaddr_reg:x3; val_offset:6726*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6726*0 + 3*706*FLEN/8, x4, x1, x2)

inst_2243:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffffffc; valaddr_reg:x3; val_offset:6729*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6729*0 + 3*707*FLEN/8, x4, x1, x2)

inst_2244:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdfffffffffffffe; valaddr_reg:x3; val_offset:6732*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6732*0 + 3*708*FLEN/8, x4, x1, x2)

inst_2245:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3df and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbdffffffffffffff; valaddr_reg:x3; val_offset:6735*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6735*0 + 3*709*FLEN/8, x4, x1, x2)

inst_2246:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:6738*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6738*0 + 3*710*FLEN/8, x4, x1, x2)

inst_2247:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:6741*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6741*0 + 3*711*FLEN/8, x4, x1, x2)

inst_2248:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:6744*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6744*0 + 3*712*FLEN/8, x4, x1, x2)

inst_2249:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:6747*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6747*0 + 3*713*FLEN/8, x4, x1, x2)

inst_2250:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:6750*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6750*0 + 3*714*FLEN/8, x4, x1, x2)

inst_2251:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:6753*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6753*0 + 3*715*FLEN/8, x4, x1, x2)

inst_2252:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:6756*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6756*0 + 3*716*FLEN/8, x4, x1, x2)

inst_2253:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:6759*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6759*0 + 3*717*FLEN/8, x4, x1, x2)

inst_2254:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:6762*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6762*0 + 3*718*FLEN/8, x4, x1, x2)

inst_2255:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:6765*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6765*0 + 3*719*FLEN/8, x4, x1, x2)

inst_2256:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:6768*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6768*0 + 3*720*FLEN/8, x4, x1, x2)

inst_2257:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:6771*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6771*0 + 3*721*FLEN/8, x4, x1, x2)

inst_2258:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:6774*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6774*0 + 3*722*FLEN/8, x4, x1, x2)

inst_2259:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:6777*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6777*0 + 3*723*FLEN/8, x4, x1, x2)

inst_2260:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:6780*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6780*0 + 3*724*FLEN/8, x4, x1, x2)

inst_2261:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:6783*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6783*0 + 3*725*FLEN/8, x4, x1, x2)

inst_2262:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:6786*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6786*0 + 3*726*FLEN/8, x4, x1, x2)

inst_2263:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:6789*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6789*0 + 3*727*FLEN/8, x4, x1, x2)

inst_2264:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:6792*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6792*0 + 3*728*FLEN/8, x4, x1, x2)

inst_2265:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:6795*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6795*0 + 3*729*FLEN/8, x4, x1, x2)

inst_2266:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:6798*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6798*0 + 3*730*FLEN/8, x4, x1, x2)

inst_2267:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x8fe8ae58338bf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x47c12fef87578 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f58fe8ae58338bf; op2val:0xa0147c12fef87578;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:6801*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6801*0 + 3*731*FLEN/8, x4, x1, x2)

inst_2268:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:6804*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6804*0 + 3*732*FLEN/8, x4, x1, x2)

inst_2269:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:6807*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6807*0 + 3*733*FLEN/8, x4, x1, x2)

inst_2270:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:6810*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6810*0 + 3*734*FLEN/8, x4, x1, x2)

inst_2271:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:6813*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6813*0 + 3*735*FLEN/8, x4, x1, x2)

inst_2272:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:6816*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6816*0 + 3*736*FLEN/8, x4, x1, x2)

inst_2273:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:6819*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6819*0 + 3*737*FLEN/8, x4, x1, x2)

inst_2274:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:6822*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6822*0 + 3*738*FLEN/8, x4, x1, x2)

inst_2275:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:6825*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6825*0 + 3*739*FLEN/8, x4, x1, x2)

inst_2276:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:6828*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6828*0 + 3*740*FLEN/8, x4, x1, x2)

inst_2277:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:6831*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6831*0 + 3*741*FLEN/8, x4, x1, x2)

inst_2278:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:6834*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6834*0 + 3*742*FLEN/8, x4, x1, x2)

inst_2279:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:6837*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6837*0 + 3*743*FLEN/8, x4, x1, x2)

inst_2280:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:6840*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6840*0 + 3*744*FLEN/8, x4, x1, x2)

inst_2281:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:6843*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6843*0 + 3*745*FLEN/8, x4, x1, x2)

inst_2282:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:6846*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6846*0 + 3*746*FLEN/8, x4, x1, x2)

inst_2283:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:6849*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6849*0 + 3*747*FLEN/8, x4, x1, x2)

inst_2284:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:6852*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6852*0 + 3*748*FLEN/8, x4, x1, x2)

inst_2285:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:6855*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6855*0 + 3*749*FLEN/8, x4, x1, x2)

inst_2286:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:6858*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6858*0 + 3*750*FLEN/8, x4, x1, x2)

inst_2287:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:6861*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6861*0 + 3*751*FLEN/8, x4, x1, x2)

inst_2288:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:6864*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6864*0 + 3*752*FLEN/8, x4, x1, x2)

inst_2289:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:6867*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6867*0 + 3*753*FLEN/8, x4, x1, x2)

inst_2290:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a0000000000000; valaddr_reg:x3; val_offset:6870*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6870*0 + 3*754*FLEN/8, x4, x1, x2)

inst_2291:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a0000000000001; valaddr_reg:x3; val_offset:6873*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6873*0 + 3*755*FLEN/8, x4, x1, x2)

inst_2292:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a0000000000003; valaddr_reg:x3; val_offset:6876*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6876*0 + 3*756*FLEN/8, x4, x1, x2)

inst_2293:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a0000000000007; valaddr_reg:x3; val_offset:6879*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6879*0 + 3*757*FLEN/8, x4, x1, x2)

inst_2294:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a000000000000f; valaddr_reg:x3; val_offset:6882*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6882*0 + 3*758*FLEN/8, x4, x1, x2)

inst_2295:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a000000000001f; valaddr_reg:x3; val_offset:6885*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6885*0 + 3*759*FLEN/8, x4, x1, x2)

inst_2296:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a000000000003f; valaddr_reg:x3; val_offset:6888*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6888*0 + 3*760*FLEN/8, x4, x1, x2)

inst_2297:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a000000000007f; valaddr_reg:x3; val_offset:6891*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6891*0 + 3*761*FLEN/8, x4, x1, x2)

inst_2298:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a00000000000ff; valaddr_reg:x3; val_offset:6894*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6894*0 + 3*762*FLEN/8, x4, x1, x2)

inst_2299:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a00000000001ff; valaddr_reg:x3; val_offset:6897*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6897*0 + 3*763*FLEN/8, x4, x1, x2)

inst_2300:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a00000000003ff; valaddr_reg:x3; val_offset:6900*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6900*0 + 3*764*FLEN/8, x4, x1, x2)

inst_2301:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a00000000007ff; valaddr_reg:x3; val_offset:6903*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6903*0 + 3*765*FLEN/8, x4, x1, x2)

inst_2302:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a0000000000fff; valaddr_reg:x3; val_offset:6906*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6906*0 + 3*766*FLEN/8, x4, x1, x2)

inst_2303:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xca57966fc21ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5ca57966fc21ff; op2val:0x8000;
op3val:0x82a0000000001fff; valaddr_reg:x3; val_offset:6909*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6909*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782595,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782599,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782607,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782623,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782655,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782719,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782847,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783103,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783615,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732784639,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732786687,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732790783,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732798975,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732815359,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732848127,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732913663,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733044735,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733306879,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733831167,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416734879743,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416736976895,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416741171199,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416749559807,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416766337023,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416799891455,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416867000319,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417001218047,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417269653503,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417806524415,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566418880266239,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566421027749887,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566425322717183,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566433912651775,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566451092520959,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566485452259327,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566554171736063,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566691610689535,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566966488596479,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466567516244410367,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466568615756038143,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466570814779293695,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466575212825804799,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466584008918827007,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466601601104871423,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466636785476960255,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466707154221137919,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466847891709493247,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467129366686203903,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467692316639625215,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467839,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467840,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9469944116453310464,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470507066406731776,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470788541383442432,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470929278871797760,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470999647615975424,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471034831988064256,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471052424174108672,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471061220267130880,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471065618313641984,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471067817336897536,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471068916848525312,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069466604339200,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069741482246144,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069878921199616,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069947640676352,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069982000414720,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069999180283904,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070007770218496,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070012065185792,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070014212669440,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070015286411264,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070015823282176,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016091717632,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016225935360,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016293044224,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016326598656,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016343375872,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016351764480,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016355958784,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016358055936,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359104512,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359628800,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359890944,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360022016,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360087552,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360120320,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360136704,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360144896,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360148992,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360151040,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152064,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152576,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152832,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152960,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153024,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153056,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153072,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153080,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153084,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153086,64,FLEN)
NAN_BOXED(6868296578709052735,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153087,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194176,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194177,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194179,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194183,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194191,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194207,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194239,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194303,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194431,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766194687,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766195199,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766196223,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766198271,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766202367,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766210559,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766226943,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766259711,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766325247,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766456319,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243766718463,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243767242751,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243768291327,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243770388479,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243774582783,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243782971391,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243799748607,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243833303039,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441243900411903,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441244034629631,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441244303065087,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441244839935999,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441245913677823,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441248061161471,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441252356128767,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441260946063359,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441278125932543,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441312485670911,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441381205147647,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441518644101119,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305441793522008063,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305442343277821951,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305443442789449727,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305445641812705279,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305450039859216383,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305458835952238591,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305476428138283007,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305511612510371839,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305581981254549503,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4305722718742904831,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4306004193719615487,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4306567143673036799,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4307693043579879423,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4307693043579879424,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4308818943486722048,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309381893440143360,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309663368416854016,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309804105905209344,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309874474649387008,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309909659021475840,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309927251207520256,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309936047300542464,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309940445347053568,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309942644370309120,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309943743881936896,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944293637750784,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944568515657728,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944705954611200,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944774674087936,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944809033826304,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944826213695488,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944834803630080,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944839098597376,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944841246081024,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944842319822848,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944842856693760,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843125129216,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843259346944,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843326455808,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843360010240,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843376787456,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843385176064,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843389370368,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843391467520,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843392516096,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393040384,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393302528,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393433600,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393499136,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393531904,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393548288,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393556480,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393560576,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393562624,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393563648,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564160,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564416,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564544,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564608,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564640,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564656,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564664,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564668,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564670,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4309944843393564671,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6868443451284057375,64,FLEN)
NAN_BOXED(2345550525134540733,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671552,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671553,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671555,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671559,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671567,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671583,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671615,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671679,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955671807,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955672063,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955672575,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955673599,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955675647,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955679743,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955687935,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955704319,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955737087,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955802623,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086955933695,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086956195839,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086956720127,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086957768703,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086959865855,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086964060159,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086972448767,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252086989225983,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252087022780415,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252087089889279,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252087224107007,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252087492542463,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252088029413375,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252089103155199,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252091250638847,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252095545606143,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252104135540735,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252121315409919,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252155675148287,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252224394625023,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252361833578495,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452252636711485439,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452253186467299327,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452254285978927103,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452256485002182655,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452260883048693759,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452269679141715967,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452287271327760383,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452322455699849215,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452392824444026879,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452533561932382207,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13452815036909092863,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13453377986862514175,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13454503886769356799,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13454503886769356800,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13455629786676199424,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456192736629620736,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456474211606331392,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456614949094686720,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456685317838864384,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456720502210953216,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456738094396997632,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456746890490019840,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456751288536530944,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456753487559786496,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456754587071414272,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755136827228160,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755411705135104,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755549144088576,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755617863565312,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755652223303680,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755669403172864,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755677993107456,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755682288074752,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755684435558400,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755685509300224,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686046171136,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686314606592,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686448824320,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686515933184,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686549487616,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686566264832,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686574653440,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686578847744,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686580944896,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686581993472,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686582517760,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686582779904,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686582910976,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686582976512,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583009280,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583025664,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583033856,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583037952,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583040000,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583041024,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583041536,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583041792,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583041920,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583041984,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583042016,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583042032,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583042040,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583042044,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583042046,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13456755686583042047,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6869358245995424895,64,FLEN)
NAN_BOXED(11536122736843840970,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740992,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740993,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740995,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740999,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741007,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741023,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741055,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741119,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741247,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741503,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254742015,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254743039,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254745087,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254749183,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254757375,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254773759,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254806527,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254872063,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255003135,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255265279,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255789567,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199256838143,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199258935295,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199263129599,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199271518207,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199288295423,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199321849855,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199388958719,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199523176447,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199791611903,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007200328482815,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007201402224639,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007203549708287,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007207844675583,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007216434610175,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007233614479359,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007267974217727,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007336693694463,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007474132647935,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007749010554879,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9008298766368767,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9009398277996543,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9011597301252095,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9015995347763199,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9024791440785407,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9042383626829823,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9077567998918655,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9147936743096319,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9288674231451647,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9570149208162303,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(10133099161583615,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426239,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426240,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12384898975268864,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12947848928690176,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13229323905400832,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13370061393756160,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13440430137933824,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13475614510022656,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13493206696067072,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13502002789089280,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13506400835600384,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13508599858855936,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13509699370483712,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510249126297600,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510524004204544,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510661443158016,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510730162634752,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510764522373120,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510781702242304,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510790292176896,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510794587144192,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510796734627840,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510797808369664,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798345240576,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798613676032,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798747893760,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798815002624,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798848557056,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798865334272,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798873722880,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798877917184,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798880014336,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881062912,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881587200,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881849344,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881980416,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882045952,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882078720,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882095104,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882103296,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882107392,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882109440,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110464,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110976,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111232,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111360,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111424,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111456,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111472,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111480,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111484,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111486,64,FLEN)
NAN_BOXED(6869474198513289919,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111487,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298432,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298433,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298435,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298439,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298447,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298463,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298495,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298559,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298687,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665298943,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665299455,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665300479,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665302527,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665306623,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665314815,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665331199,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665363967,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665429503,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665560575,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193665822719,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193666347007,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193667395583,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193669492735,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193673687039,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193682075647,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193698852863,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193732407295,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193799516159,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561193933733887,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194202169343,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561194739040255,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561195812782079,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561197960265727,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561202255233023,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561210845167615,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561228025036799,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561262384775167,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561331104251903,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561468543205375,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76561743421112319,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76562293176926207,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76563392688553983,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76565591711809535,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76569989758320639,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76578785851342847,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76596378037387263,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76631562409476095,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76701931153653759,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(76842668642009087,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77124143618719743,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(77687093572141055,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983679,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(78812993478983680,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(79938893385826304,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80501843339247616,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80783318315958272,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80924055804313600,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(80994424548491264,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81029608920580096,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81047201106624512,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81055997199646720,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81060395246157824,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81062594269413376,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81063693781041152,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064243536855040,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064518414761984,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064655853715456,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064724573192192,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064758932930560,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064776112799744,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064784702734336,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064788997701632,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064791145185280,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792218927104,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064792755798016,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793024233472,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793158451200,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793225560064,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793259114496,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793275891712,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793284280320,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793288474624,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793290571776,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793291620352,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292144640,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292406784,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292537856,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292603392,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292636160,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292652544,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292660736,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292664832,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292666880,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292667904,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668416,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668672,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668800,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668864,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668896,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668912,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668920,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668924,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668926,64,FLEN)
NAN_BOXED(6869919742568812351,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668927,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937344,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937345,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937347,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937351,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937359,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937375,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937407,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937471,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937599,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578937855,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578938367,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578939391,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578941439,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578945535,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578953727,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267578970111,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267579002879,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267579068415,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267579199487,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267579461631,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267579985919,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267581034495,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267583131647,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267587325951,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267595714559,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267612491775,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267646046207,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267713155071,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439267847372799,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439268115808255,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439268652679167,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439269726420991,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439271873904639,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439276168871935,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439284758806527,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439301938675711,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439336298414079,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439405017890815,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439542456844287,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686439817334751231,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686440367090565119,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686441466602192895,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686443665625448447,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686448063671959551,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686456859764981759,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686474451951026175,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686509636323115007,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686580005067292671,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13686720742555647999,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13687002217532358655,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13687565167485779967,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13688691067392622591,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13688691067392622592,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13689816967299465216,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690379917252886528,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690661392229597184,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690802129717952512,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690872498462130176,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690907682834219008,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690925275020263424,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690934071113285632,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690938469159796736,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690940668183052288,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690941767694680064,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942317450493952,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942592328400896,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942729767354368,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942798486831104,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942832846569472,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942850026438656,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942858616373248,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942862911340544,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942865058824192,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942866132566016,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942866669436928,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942866937872384,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867072090112,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867139198976,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867172753408,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867189530624,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867197919232,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867202113536,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867204210688,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867205259264,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867205783552,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206045696,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206176768,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206242304,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206275072,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206291456,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206299648,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206303744,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206305792,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206306816,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307328,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307584,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307712,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307776,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307808,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307824,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307832,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307836,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307838,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13690942867206307839,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6870521104063215807,64,FLEN)
NAN_BOXED(11534980966631634296,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336640,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336641,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336643,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336647,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336655,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336671,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336703,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336767,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336895,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204337151,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204337663,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204338687,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204340735,64,FLEN)
NAN_BOXED(6871549072297959935,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204344831,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
