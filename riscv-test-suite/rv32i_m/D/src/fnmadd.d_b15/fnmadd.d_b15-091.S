
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_69120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35ffffffffff800; valaddr_reg:x3; val_offset:207360*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207360*0 + 3*0*FLEN/8, x4, x1, x2)

inst_69121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35ffffffffffc00; valaddr_reg:x3; val_offset:207363*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207363*0 + 3*1*FLEN/8, x4, x1, x2)

inst_69122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35ffffffffffe00; valaddr_reg:x3; val_offset:207366*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207366*0 + 3*2*FLEN/8, x4, x1, x2)

inst_69123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35fffffffffff00; valaddr_reg:x3; val_offset:207369*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207369*0 + 3*3*FLEN/8, x4, x1, x2)

inst_69124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35fffffffffff80; valaddr_reg:x3; val_offset:207372*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207372*0 + 3*4*FLEN/8, x4, x1, x2)

inst_69125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35fffffffffffc0; valaddr_reg:x3; val_offset:207375*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207375*0 + 3*5*FLEN/8, x4, x1, x2)

inst_69126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35fffffffffffe0; valaddr_reg:x3; val_offset:207378*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207378*0 + 3*6*FLEN/8, x4, x1, x2)

inst_69127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35ffffffffffff0; valaddr_reg:x3; val_offset:207381*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207381*0 + 3*7*FLEN/8, x4, x1, x2)

inst_69128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35ffffffffffff8; valaddr_reg:x3; val_offset:207384*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207384*0 + 3*8*FLEN/8, x4, x1, x2)

inst_69129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35ffffffffffffc; valaddr_reg:x3; val_offset:207387*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207387*0 + 3*9*FLEN/8, x4, x1, x2)

inst_69130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35ffffffffffffe; valaddr_reg:x3; val_offset:207390*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207390*0 + 3*10*FLEN/8, x4, x1, x2)

inst_69131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x522e5412e9121 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa522e5412e9121; op2val:0x0;
op3val:0x35fffffffffffff; valaddr_reg:x3; val_offset:207393*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207393*0 + 3*11*FLEN/8, x4, x1, x2)

inst_69132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:207396*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207396*0 + 3*12*FLEN/8, x4, x1, x2)

inst_69133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:207399*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207399*0 + 3*13*FLEN/8, x4, x1, x2)

inst_69134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:207402*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207402*0 + 3*14*FLEN/8, x4, x1, x2)

inst_69135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:207405*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207405*0 + 3*15*FLEN/8, x4, x1, x2)

inst_69136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:207408*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207408*0 + 3*16*FLEN/8, x4, x1, x2)

inst_69137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:207411*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207411*0 + 3*17*FLEN/8, x4, x1, x2)

inst_69138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:207414*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207414*0 + 3*18*FLEN/8, x4, x1, x2)

inst_69139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:207417*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207417*0 + 3*19*FLEN/8, x4, x1, x2)

inst_69140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:207420*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207420*0 + 3*20*FLEN/8, x4, x1, x2)

inst_69141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:207423*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207423*0 + 3*21*FLEN/8, x4, x1, x2)

inst_69142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:207426*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207426*0 + 3*22*FLEN/8, x4, x1, x2)

inst_69143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:207429*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207429*0 + 3*23*FLEN/8, x4, x1, x2)

inst_69144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:207432*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207432*0 + 3*24*FLEN/8, x4, x1, x2)

inst_69145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:207435*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207435*0 + 3*25*FLEN/8, x4, x1, x2)

inst_69146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:207438*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207438*0 + 3*26*FLEN/8, x4, x1, x2)

inst_69147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:207441*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207441*0 + 3*27*FLEN/8, x4, x1, x2)

inst_69148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:207444*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207444*0 + 3*28*FLEN/8, x4, x1, x2)

inst_69149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:207447*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207447*0 + 3*29*FLEN/8, x4, x1, x2)

inst_69150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:207450*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207450*0 + 3*30*FLEN/8, x4, x1, x2)

inst_69151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:207453*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207453*0 + 3*31*FLEN/8, x4, x1, x2)

inst_69152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:207456*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207456*0 + 3*32*FLEN/8, x4, x1, x2)

inst_69153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:207459*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207459*0 + 3*33*FLEN/8, x4, x1, x2)

inst_69154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000000000; valaddr_reg:x3; val_offset:207462*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207462*0 + 3*34*FLEN/8, x4, x1, x2)

inst_69155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000000001; valaddr_reg:x3; val_offset:207465*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207465*0 + 3*35*FLEN/8, x4, x1, x2)

inst_69156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000000003; valaddr_reg:x3; val_offset:207468*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207468*0 + 3*36*FLEN/8, x4, x1, x2)

inst_69157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000000007; valaddr_reg:x3; val_offset:207471*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207471*0 + 3*37*FLEN/8, x4, x1, x2)

inst_69158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000000000f; valaddr_reg:x3; val_offset:207474*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207474*0 + 3*38*FLEN/8, x4, x1, x2)

inst_69159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000000001f; valaddr_reg:x3; val_offset:207477*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207477*0 + 3*39*FLEN/8, x4, x1, x2)

inst_69160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000000003f; valaddr_reg:x3; val_offset:207480*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207480*0 + 3*40*FLEN/8, x4, x1, x2)

inst_69161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000000007f; valaddr_reg:x3; val_offset:207483*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207483*0 + 3*41*FLEN/8, x4, x1, x2)

inst_69162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000000000ff; valaddr_reg:x3; val_offset:207486*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207486*0 + 3*42*FLEN/8, x4, x1, x2)

inst_69163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000000001ff; valaddr_reg:x3; val_offset:207489*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207489*0 + 3*43*FLEN/8, x4, x1, x2)

inst_69164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000000003ff; valaddr_reg:x3; val_offset:207492*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207492*0 + 3*44*FLEN/8, x4, x1, x2)

inst_69165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000000007ff; valaddr_reg:x3; val_offset:207495*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207495*0 + 3*45*FLEN/8, x4, x1, x2)

inst_69166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000000fff; valaddr_reg:x3; val_offset:207498*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207498*0 + 3*46*FLEN/8, x4, x1, x2)

inst_69167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000001fff; valaddr_reg:x3; val_offset:207501*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207501*0 + 3*47*FLEN/8, x4, x1, x2)

inst_69168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000003fff; valaddr_reg:x3; val_offset:207504*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207504*0 + 3*48*FLEN/8, x4, x1, x2)

inst_69169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000007fff; valaddr_reg:x3; val_offset:207507*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207507*0 + 3*49*FLEN/8, x4, x1, x2)

inst_69170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000000ffff; valaddr_reg:x3; val_offset:207510*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207510*0 + 3*50*FLEN/8, x4, x1, x2)

inst_69171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000001ffff; valaddr_reg:x3; val_offset:207513*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207513*0 + 3*51*FLEN/8, x4, x1, x2)

inst_69172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000003ffff; valaddr_reg:x3; val_offset:207516*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207516*0 + 3*52*FLEN/8, x4, x1, x2)

inst_69173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000007ffff; valaddr_reg:x3; val_offset:207519*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207519*0 + 3*53*FLEN/8, x4, x1, x2)

inst_69174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000000fffff; valaddr_reg:x3; val_offset:207522*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207522*0 + 3*54*FLEN/8, x4, x1, x2)

inst_69175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000001fffff; valaddr_reg:x3; val_offset:207525*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207525*0 + 3*55*FLEN/8, x4, x1, x2)

inst_69176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000003fffff; valaddr_reg:x3; val_offset:207528*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207528*0 + 3*56*FLEN/8, x4, x1, x2)

inst_69177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000007fffff; valaddr_reg:x3; val_offset:207531*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207531*0 + 3*57*FLEN/8, x4, x1, x2)

inst_69178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000000ffffff; valaddr_reg:x3; val_offset:207534*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207534*0 + 3*58*FLEN/8, x4, x1, x2)

inst_69179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000001ffffff; valaddr_reg:x3; val_offset:207537*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207537*0 + 3*59*FLEN/8, x4, x1, x2)

inst_69180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000003ffffff; valaddr_reg:x3; val_offset:207540*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207540*0 + 3*60*FLEN/8, x4, x1, x2)

inst_69181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000007ffffff; valaddr_reg:x3; val_offset:207543*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207543*0 + 3*61*FLEN/8, x4, x1, x2)

inst_69182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000000fffffff; valaddr_reg:x3; val_offset:207546*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207546*0 + 3*62*FLEN/8, x4, x1, x2)

inst_69183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000001fffffff; valaddr_reg:x3; val_offset:207549*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207549*0 + 3*63*FLEN/8, x4, x1, x2)

inst_69184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000003fffffff; valaddr_reg:x3; val_offset:207552*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207552*0 + 3*64*FLEN/8, x4, x1, x2)

inst_69185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000007fffffff; valaddr_reg:x3; val_offset:207555*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207555*0 + 3*65*FLEN/8, x4, x1, x2)

inst_69186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00000ffffffff; valaddr_reg:x3; val_offset:207558*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207558*0 + 3*66*FLEN/8, x4, x1, x2)

inst_69187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00001ffffffff; valaddr_reg:x3; val_offset:207561*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207561*0 + 3*67*FLEN/8, x4, x1, x2)

inst_69188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00003ffffffff; valaddr_reg:x3; val_offset:207564*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207564*0 + 3*68*FLEN/8, x4, x1, x2)

inst_69189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00007ffffffff; valaddr_reg:x3; val_offset:207567*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207567*0 + 3*69*FLEN/8, x4, x1, x2)

inst_69190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0000fffffffff; valaddr_reg:x3; val_offset:207570*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207570*0 + 3*70*FLEN/8, x4, x1, x2)

inst_69191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0001fffffffff; valaddr_reg:x3; val_offset:207573*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207573*0 + 3*71*FLEN/8, x4, x1, x2)

inst_69192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0003fffffffff; valaddr_reg:x3; val_offset:207576*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207576*0 + 3*72*FLEN/8, x4, x1, x2)

inst_69193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0007fffffffff; valaddr_reg:x3; val_offset:207579*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207579*0 + 3*73*FLEN/8, x4, x1, x2)

inst_69194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b000ffffffffff; valaddr_reg:x3; val_offset:207582*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207582*0 + 3*74*FLEN/8, x4, x1, x2)

inst_69195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b001ffffffffff; valaddr_reg:x3; val_offset:207585*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207585*0 + 3*75*FLEN/8, x4, x1, x2)

inst_69196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b003ffffffffff; valaddr_reg:x3; val_offset:207588*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207588*0 + 3*76*FLEN/8, x4, x1, x2)

inst_69197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b007ffffffffff; valaddr_reg:x3; val_offset:207591*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207591*0 + 3*77*FLEN/8, x4, x1, x2)

inst_69198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b00fffffffffff; valaddr_reg:x3; val_offset:207594*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207594*0 + 3*78*FLEN/8, x4, x1, x2)

inst_69199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b01fffffffffff; valaddr_reg:x3; val_offset:207597*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207597*0 + 3*79*FLEN/8, x4, x1, x2)

inst_69200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b03fffffffffff; valaddr_reg:x3; val_offset:207600*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207600*0 + 3*80*FLEN/8, x4, x1, x2)

inst_69201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b07fffffffffff; valaddr_reg:x3; val_offset:207603*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207603*0 + 3*81*FLEN/8, x4, x1, x2)

inst_69202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b0ffffffffffff; valaddr_reg:x3; val_offset:207606*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207606*0 + 3*82*FLEN/8, x4, x1, x2)

inst_69203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b1ffffffffffff; valaddr_reg:x3; val_offset:207609*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207609*0 + 3*83*FLEN/8, x4, x1, x2)

inst_69204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b3ffffffffffff; valaddr_reg:x3; val_offset:207612*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207612*0 + 3*84*FLEN/8, x4, x1, x2)

inst_69205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b7ffffffffffff; valaddr_reg:x3; val_offset:207615*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207615*0 + 3*85*FLEN/8, x4, x1, x2)

inst_69206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3b8000000000000; valaddr_reg:x3; val_offset:207618*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207618*0 + 3*86*FLEN/8, x4, x1, x2)

inst_69207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bc000000000000; valaddr_reg:x3; val_offset:207621*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207621*0 + 3*87*FLEN/8, x4, x1, x2)

inst_69208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3be000000000000; valaddr_reg:x3; val_offset:207624*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207624*0 + 3*88*FLEN/8, x4, x1, x2)

inst_69209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bf000000000000; valaddr_reg:x3; val_offset:207627*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207627*0 + 3*89*FLEN/8, x4, x1, x2)

inst_69210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bf800000000000; valaddr_reg:x3; val_offset:207630*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207630*0 + 3*90*FLEN/8, x4, x1, x2)

inst_69211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfc00000000000; valaddr_reg:x3; val_offset:207633*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207633*0 + 3*91*FLEN/8, x4, x1, x2)

inst_69212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfe00000000000; valaddr_reg:x3; val_offset:207636*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207636*0 + 3*92*FLEN/8, x4, x1, x2)

inst_69213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bff00000000000; valaddr_reg:x3; val_offset:207639*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207639*0 + 3*93*FLEN/8, x4, x1, x2)

inst_69214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bff80000000000; valaddr_reg:x3; val_offset:207642*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207642*0 + 3*94*FLEN/8, x4, x1, x2)

inst_69215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffc0000000000; valaddr_reg:x3; val_offset:207645*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207645*0 + 3*95*FLEN/8, x4, x1, x2)

inst_69216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffe0000000000; valaddr_reg:x3; val_offset:207648*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207648*0 + 3*96*FLEN/8, x4, x1, x2)

inst_69217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfff0000000000; valaddr_reg:x3; val_offset:207651*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207651*0 + 3*97*FLEN/8, x4, x1, x2)

inst_69218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfff8000000000; valaddr_reg:x3; val_offset:207654*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207654*0 + 3*98*FLEN/8, x4, x1, x2)

inst_69219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffc000000000; valaddr_reg:x3; val_offset:207657*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207657*0 + 3*99*FLEN/8, x4, x1, x2)

inst_69220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffe000000000; valaddr_reg:x3; val_offset:207660*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207660*0 + 3*100*FLEN/8, x4, x1, x2)

inst_69221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffff000000000; valaddr_reg:x3; val_offset:207663*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207663*0 + 3*101*FLEN/8, x4, x1, x2)

inst_69222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffff800000000; valaddr_reg:x3; val_offset:207666*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207666*0 + 3*102*FLEN/8, x4, x1, x2)

inst_69223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffc00000000; valaddr_reg:x3; val_offset:207669*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207669*0 + 3*103*FLEN/8, x4, x1, x2)

inst_69224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffe00000000; valaddr_reg:x3; val_offset:207672*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207672*0 + 3*104*FLEN/8, x4, x1, x2)

inst_69225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffff00000000; valaddr_reg:x3; val_offset:207675*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207675*0 + 3*105*FLEN/8, x4, x1, x2)

inst_69226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffff80000000; valaddr_reg:x3; val_offset:207678*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207678*0 + 3*106*FLEN/8, x4, x1, x2)

inst_69227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffc0000000; valaddr_reg:x3; val_offset:207681*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207681*0 + 3*107*FLEN/8, x4, x1, x2)

inst_69228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffe0000000; valaddr_reg:x3; val_offset:207684*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207684*0 + 3*108*FLEN/8, x4, x1, x2)

inst_69229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffff0000000; valaddr_reg:x3; val_offset:207687*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207687*0 + 3*109*FLEN/8, x4, x1, x2)

inst_69230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffff8000000; valaddr_reg:x3; val_offset:207690*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207690*0 + 3*110*FLEN/8, x4, x1, x2)

inst_69231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffc000000; valaddr_reg:x3; val_offset:207693*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207693*0 + 3*111*FLEN/8, x4, x1, x2)

inst_69232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffe000000; valaddr_reg:x3; val_offset:207696*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207696*0 + 3*112*FLEN/8, x4, x1, x2)

inst_69233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffff000000; valaddr_reg:x3; val_offset:207699*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207699*0 + 3*113*FLEN/8, x4, x1, x2)

inst_69234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffff800000; valaddr_reg:x3; val_offset:207702*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207702*0 + 3*114*FLEN/8, x4, x1, x2)

inst_69235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffc00000; valaddr_reg:x3; val_offset:207705*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207705*0 + 3*115*FLEN/8, x4, x1, x2)

inst_69236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffe00000; valaddr_reg:x3; val_offset:207708*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207708*0 + 3*116*FLEN/8, x4, x1, x2)

inst_69237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffff00000; valaddr_reg:x3; val_offset:207711*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207711*0 + 3*117*FLEN/8, x4, x1, x2)

inst_69238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffff80000; valaddr_reg:x3; val_offset:207714*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207714*0 + 3*118*FLEN/8, x4, x1, x2)

inst_69239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffc0000; valaddr_reg:x3; val_offset:207717*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207717*0 + 3*119*FLEN/8, x4, x1, x2)

inst_69240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffe0000; valaddr_reg:x3; val_offset:207720*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207720*0 + 3*120*FLEN/8, x4, x1, x2)

inst_69241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffff0000; valaddr_reg:x3; val_offset:207723*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207723*0 + 3*121*FLEN/8, x4, x1, x2)

inst_69242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffff8000; valaddr_reg:x3; val_offset:207726*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207726*0 + 3*122*FLEN/8, x4, x1, x2)

inst_69243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffffc000; valaddr_reg:x3; val_offset:207729*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207729*0 + 3*123*FLEN/8, x4, x1, x2)

inst_69244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffffe000; valaddr_reg:x3; val_offset:207732*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207732*0 + 3*124*FLEN/8, x4, x1, x2)

inst_69245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffff000; valaddr_reg:x3; val_offset:207735*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207735*0 + 3*125*FLEN/8, x4, x1, x2)

inst_69246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffff800; valaddr_reg:x3; val_offset:207738*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207738*0 + 3*126*FLEN/8, x4, x1, x2)

inst_69247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffffc00; valaddr_reg:x3; val_offset:207741*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207741*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_69248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffffe00; valaddr_reg:x3; val_offset:207744*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207744*0 + 3*128*FLEN/8, x4, x1, x2)

inst_69249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffffff00; valaddr_reg:x3; val_offset:207747*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207747*0 + 3*129*FLEN/8, x4, x1, x2)

inst_69250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffffff80; valaddr_reg:x3; val_offset:207750*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207750*0 + 3*130*FLEN/8, x4, x1, x2)

inst_69251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffffffc0; valaddr_reg:x3; val_offset:207753*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207753*0 + 3*131*FLEN/8, x4, x1, x2)

inst_69252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffffffe0; valaddr_reg:x3; val_offset:207756*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207756*0 + 3*132*FLEN/8, x4, x1, x2)

inst_69253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffffff0; valaddr_reg:x3; val_offset:207759*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207759*0 + 3*133*FLEN/8, x4, x1, x2)

inst_69254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffffff8; valaddr_reg:x3; val_offset:207762*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207762*0 + 3*134*FLEN/8, x4, x1, x2)

inst_69255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffffffc; valaddr_reg:x3; val_offset:207765*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207765*0 + 3*135*FLEN/8, x4, x1, x2)

inst_69256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bffffffffffffe; valaddr_reg:x3; val_offset:207768*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207768*0 + 3*136*FLEN/8, x4, x1, x2)

inst_69257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5259a581f446c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5259a581f446c; op2val:0x0;
op3val:0x3bfffffffffffff; valaddr_reg:x3; val_offset:207771*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207771*0 + 3*137*FLEN/8, x4, x1, x2)

inst_69258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000000000; valaddr_reg:x3; val_offset:207774*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207774*0 + 3*138*FLEN/8, x4, x1, x2)

inst_69259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000000001; valaddr_reg:x3; val_offset:207777*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207777*0 + 3*139*FLEN/8, x4, x1, x2)

inst_69260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000000003; valaddr_reg:x3; val_offset:207780*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207780*0 + 3*140*FLEN/8, x4, x1, x2)

inst_69261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000000007; valaddr_reg:x3; val_offset:207783*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207783*0 + 3*141*FLEN/8, x4, x1, x2)

inst_69262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000000000f; valaddr_reg:x3; val_offset:207786*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207786*0 + 3*142*FLEN/8, x4, x1, x2)

inst_69263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000000001f; valaddr_reg:x3; val_offset:207789*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207789*0 + 3*143*FLEN/8, x4, x1, x2)

inst_69264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000000003f; valaddr_reg:x3; val_offset:207792*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207792*0 + 3*144*FLEN/8, x4, x1, x2)

inst_69265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000000007f; valaddr_reg:x3; val_offset:207795*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207795*0 + 3*145*FLEN/8, x4, x1, x2)

inst_69266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000000000ff; valaddr_reg:x3; val_offset:207798*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207798*0 + 3*146*FLEN/8, x4, x1, x2)

inst_69267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000000001ff; valaddr_reg:x3; val_offset:207801*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207801*0 + 3*147*FLEN/8, x4, x1, x2)

inst_69268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000000003ff; valaddr_reg:x3; val_offset:207804*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207804*0 + 3*148*FLEN/8, x4, x1, x2)

inst_69269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000000007ff; valaddr_reg:x3; val_offset:207807*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207807*0 + 3*149*FLEN/8, x4, x1, x2)

inst_69270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000000fff; valaddr_reg:x3; val_offset:207810*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207810*0 + 3*150*FLEN/8, x4, x1, x2)

inst_69271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000001fff; valaddr_reg:x3; val_offset:207813*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207813*0 + 3*151*FLEN/8, x4, x1, x2)

inst_69272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000003fff; valaddr_reg:x3; val_offset:207816*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207816*0 + 3*152*FLEN/8, x4, x1, x2)

inst_69273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000007fff; valaddr_reg:x3; val_offset:207819*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207819*0 + 3*153*FLEN/8, x4, x1, x2)

inst_69274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000000ffff; valaddr_reg:x3; val_offset:207822*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207822*0 + 3*154*FLEN/8, x4, x1, x2)

inst_69275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000001ffff; valaddr_reg:x3; val_offset:207825*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207825*0 + 3*155*FLEN/8, x4, x1, x2)

inst_69276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000003ffff; valaddr_reg:x3; val_offset:207828*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207828*0 + 3*156*FLEN/8, x4, x1, x2)

inst_69277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000007ffff; valaddr_reg:x3; val_offset:207831*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207831*0 + 3*157*FLEN/8, x4, x1, x2)

inst_69278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000000fffff; valaddr_reg:x3; val_offset:207834*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207834*0 + 3*158*FLEN/8, x4, x1, x2)

inst_69279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000001fffff; valaddr_reg:x3; val_offset:207837*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207837*0 + 3*159*FLEN/8, x4, x1, x2)

inst_69280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000003fffff; valaddr_reg:x3; val_offset:207840*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207840*0 + 3*160*FLEN/8, x4, x1, x2)

inst_69281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000007fffff; valaddr_reg:x3; val_offset:207843*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207843*0 + 3*161*FLEN/8, x4, x1, x2)

inst_69282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000000ffffff; valaddr_reg:x3; val_offset:207846*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207846*0 + 3*162*FLEN/8, x4, x1, x2)

inst_69283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000001ffffff; valaddr_reg:x3; val_offset:207849*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207849*0 + 3*163*FLEN/8, x4, x1, x2)

inst_69284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000003ffffff; valaddr_reg:x3; val_offset:207852*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207852*0 + 3*164*FLEN/8, x4, x1, x2)

inst_69285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000007ffffff; valaddr_reg:x3; val_offset:207855*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207855*0 + 3*165*FLEN/8, x4, x1, x2)

inst_69286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000000fffffff; valaddr_reg:x3; val_offset:207858*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207858*0 + 3*166*FLEN/8, x4, x1, x2)

inst_69287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000001fffffff; valaddr_reg:x3; val_offset:207861*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207861*0 + 3*167*FLEN/8, x4, x1, x2)

inst_69288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000003fffffff; valaddr_reg:x3; val_offset:207864*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207864*0 + 3*168*FLEN/8, x4, x1, x2)

inst_69289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000007fffffff; valaddr_reg:x3; val_offset:207867*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207867*0 + 3*169*FLEN/8, x4, x1, x2)

inst_69290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300000ffffffff; valaddr_reg:x3; val_offset:207870*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207870*0 + 3*170*FLEN/8, x4, x1, x2)

inst_69291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300001ffffffff; valaddr_reg:x3; val_offset:207873*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207873*0 + 3*171*FLEN/8, x4, x1, x2)

inst_69292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300003ffffffff; valaddr_reg:x3; val_offset:207876*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207876*0 + 3*172*FLEN/8, x4, x1, x2)

inst_69293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300007ffffffff; valaddr_reg:x3; val_offset:207879*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207879*0 + 3*173*FLEN/8, x4, x1, x2)

inst_69294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930000fffffffff; valaddr_reg:x3; val_offset:207882*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207882*0 + 3*174*FLEN/8, x4, x1, x2)

inst_69295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930001fffffffff; valaddr_reg:x3; val_offset:207885*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207885*0 + 3*175*FLEN/8, x4, x1, x2)

inst_69296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930003fffffffff; valaddr_reg:x3; val_offset:207888*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207888*0 + 3*176*FLEN/8, x4, x1, x2)

inst_69297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930007fffffffff; valaddr_reg:x3; val_offset:207891*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207891*0 + 3*177*FLEN/8, x4, x1, x2)

inst_69298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93000ffffffffff; valaddr_reg:x3; val_offset:207894*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207894*0 + 3*178*FLEN/8, x4, x1, x2)

inst_69299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93001ffffffffff; valaddr_reg:x3; val_offset:207897*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207897*0 + 3*179*FLEN/8, x4, x1, x2)

inst_69300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93003ffffffffff; valaddr_reg:x3; val_offset:207900*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207900*0 + 3*180*FLEN/8, x4, x1, x2)

inst_69301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93007ffffffffff; valaddr_reg:x3; val_offset:207903*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207903*0 + 3*181*FLEN/8, x4, x1, x2)

inst_69302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9300fffffffffff; valaddr_reg:x3; val_offset:207906*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207906*0 + 3*182*FLEN/8, x4, x1, x2)

inst_69303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9301fffffffffff; valaddr_reg:x3; val_offset:207909*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207909*0 + 3*183*FLEN/8, x4, x1, x2)

inst_69304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9303fffffffffff; valaddr_reg:x3; val_offset:207912*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207912*0 + 3*184*FLEN/8, x4, x1, x2)

inst_69305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb9307fffffffffff; valaddr_reg:x3; val_offset:207915*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207915*0 + 3*185*FLEN/8, x4, x1, x2)

inst_69306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb930ffffffffffff; valaddr_reg:x3; val_offset:207918*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207918*0 + 3*186*FLEN/8, x4, x1, x2)

inst_69307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb931ffffffffffff; valaddr_reg:x3; val_offset:207921*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207921*0 + 3*187*FLEN/8, x4, x1, x2)

inst_69308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb933ffffffffffff; valaddr_reg:x3; val_offset:207924*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207924*0 + 3*188*FLEN/8, x4, x1, x2)

inst_69309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb937ffffffffffff; valaddr_reg:x3; val_offset:207927*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207927*0 + 3*189*FLEN/8, x4, x1, x2)

inst_69310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb938000000000000; valaddr_reg:x3; val_offset:207930*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207930*0 + 3*190*FLEN/8, x4, x1, x2)

inst_69311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93c000000000000; valaddr_reg:x3; val_offset:207933*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207933*0 + 3*191*FLEN/8, x4, x1, x2)

inst_69312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93e000000000000; valaddr_reg:x3; val_offset:207936*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207936*0 + 3*192*FLEN/8, x4, x1, x2)

inst_69313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93f000000000000; valaddr_reg:x3; val_offset:207939*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207939*0 + 3*193*FLEN/8, x4, x1, x2)

inst_69314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93f800000000000; valaddr_reg:x3; val_offset:207942*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207942*0 + 3*194*FLEN/8, x4, x1, x2)

inst_69315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fc00000000000; valaddr_reg:x3; val_offset:207945*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207945*0 + 3*195*FLEN/8, x4, x1, x2)

inst_69316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fe00000000000; valaddr_reg:x3; val_offset:207948*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207948*0 + 3*196*FLEN/8, x4, x1, x2)

inst_69317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ff00000000000; valaddr_reg:x3; val_offset:207951*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207951*0 + 3*197*FLEN/8, x4, x1, x2)

inst_69318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ff80000000000; valaddr_reg:x3; val_offset:207954*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207954*0 + 3*198*FLEN/8, x4, x1, x2)

inst_69319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffc0000000000; valaddr_reg:x3; val_offset:207957*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207957*0 + 3*199*FLEN/8, x4, x1, x2)

inst_69320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffe0000000000; valaddr_reg:x3; val_offset:207960*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207960*0 + 3*200*FLEN/8, x4, x1, x2)

inst_69321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fff0000000000; valaddr_reg:x3; val_offset:207963*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207963*0 + 3*201*FLEN/8, x4, x1, x2)

inst_69322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fff8000000000; valaddr_reg:x3; val_offset:207966*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207966*0 + 3*202*FLEN/8, x4, x1, x2)

inst_69323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffc000000000; valaddr_reg:x3; val_offset:207969*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207969*0 + 3*203*FLEN/8, x4, x1, x2)

inst_69324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffe000000000; valaddr_reg:x3; val_offset:207972*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207972*0 + 3*204*FLEN/8, x4, x1, x2)

inst_69325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffff000000000; valaddr_reg:x3; val_offset:207975*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207975*0 + 3*205*FLEN/8, x4, x1, x2)

inst_69326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffff800000000; valaddr_reg:x3; val_offset:207978*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207978*0 + 3*206*FLEN/8, x4, x1, x2)

inst_69327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffc00000000; valaddr_reg:x3; val_offset:207981*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207981*0 + 3*207*FLEN/8, x4, x1, x2)

inst_69328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffe00000000; valaddr_reg:x3; val_offset:207984*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207984*0 + 3*208*FLEN/8, x4, x1, x2)

inst_69329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffff00000000; valaddr_reg:x3; val_offset:207987*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207987*0 + 3*209*FLEN/8, x4, x1, x2)

inst_69330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffff80000000; valaddr_reg:x3; val_offset:207990*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207990*0 + 3*210*FLEN/8, x4, x1, x2)

inst_69331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffc0000000; valaddr_reg:x3; val_offset:207993*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207993*0 + 3*211*FLEN/8, x4, x1, x2)

inst_69332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffe0000000; valaddr_reg:x3; val_offset:207996*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207996*0 + 3*212*FLEN/8, x4, x1, x2)

inst_69333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffff0000000; valaddr_reg:x3; val_offset:207999*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207999*0 + 3*213*FLEN/8, x4, x1, x2)

inst_69334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffff8000000; valaddr_reg:x3; val_offset:208002*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208002*0 + 3*214*FLEN/8, x4, x1, x2)

inst_69335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffc000000; valaddr_reg:x3; val_offset:208005*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208005*0 + 3*215*FLEN/8, x4, x1, x2)

inst_69336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffe000000; valaddr_reg:x3; val_offset:208008*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208008*0 + 3*216*FLEN/8, x4, x1, x2)

inst_69337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffff000000; valaddr_reg:x3; val_offset:208011*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208011*0 + 3*217*FLEN/8, x4, x1, x2)

inst_69338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffff800000; valaddr_reg:x3; val_offset:208014*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208014*0 + 3*218*FLEN/8, x4, x1, x2)

inst_69339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffc00000; valaddr_reg:x3; val_offset:208017*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208017*0 + 3*219*FLEN/8, x4, x1, x2)

inst_69340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffe00000; valaddr_reg:x3; val_offset:208020*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208020*0 + 3*220*FLEN/8, x4, x1, x2)

inst_69341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffff00000; valaddr_reg:x3; val_offset:208023*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208023*0 + 3*221*FLEN/8, x4, x1, x2)

inst_69342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffff80000; valaddr_reg:x3; val_offset:208026*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208026*0 + 3*222*FLEN/8, x4, x1, x2)

inst_69343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffc0000; valaddr_reg:x3; val_offset:208029*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208029*0 + 3*223*FLEN/8, x4, x1, x2)

inst_69344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffe0000; valaddr_reg:x3; val_offset:208032*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208032*0 + 3*224*FLEN/8, x4, x1, x2)

inst_69345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffff0000; valaddr_reg:x3; val_offset:208035*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208035*0 + 3*225*FLEN/8, x4, x1, x2)

inst_69346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffff8000; valaddr_reg:x3; val_offset:208038*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208038*0 + 3*226*FLEN/8, x4, x1, x2)

inst_69347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffffc000; valaddr_reg:x3; val_offset:208041*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208041*0 + 3*227*FLEN/8, x4, x1, x2)

inst_69348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffffe000; valaddr_reg:x3; val_offset:208044*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208044*0 + 3*228*FLEN/8, x4, x1, x2)

inst_69349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffff000; valaddr_reg:x3; val_offset:208047*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208047*0 + 3*229*FLEN/8, x4, x1, x2)

inst_69350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffff800; valaddr_reg:x3; val_offset:208050*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208050*0 + 3*230*FLEN/8, x4, x1, x2)

inst_69351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffffc00; valaddr_reg:x3; val_offset:208053*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208053*0 + 3*231*FLEN/8, x4, x1, x2)

inst_69352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffffe00; valaddr_reg:x3; val_offset:208056*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208056*0 + 3*232*FLEN/8, x4, x1, x2)

inst_69353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffffff00; valaddr_reg:x3; val_offset:208059*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208059*0 + 3*233*FLEN/8, x4, x1, x2)

inst_69354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffffff80; valaddr_reg:x3; val_offset:208062*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208062*0 + 3*234*FLEN/8, x4, x1, x2)

inst_69355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffffffc0; valaddr_reg:x3; val_offset:208065*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208065*0 + 3*235*FLEN/8, x4, x1, x2)

inst_69356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffffffe0; valaddr_reg:x3; val_offset:208068*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208068*0 + 3*236*FLEN/8, x4, x1, x2)

inst_69357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffffff0; valaddr_reg:x3; val_offset:208071*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208071*0 + 3*237*FLEN/8, x4, x1, x2)

inst_69358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffffff8; valaddr_reg:x3; val_offset:208074*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208074*0 + 3*238*FLEN/8, x4, x1, x2)

inst_69359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffffffc; valaddr_reg:x3; val_offset:208077*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208077*0 + 3*239*FLEN/8, x4, x1, x2)

inst_69360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93ffffffffffffe; valaddr_reg:x3; val_offset:208080*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208080*0 + 3*240*FLEN/8, x4, x1, x2)

inst_69361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x393 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xb93fffffffffffff; valaddr_reg:x3; val_offset:208083*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208083*0 + 3*241*FLEN/8, x4, x1, x2)

inst_69362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:208086*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208086*0 + 3*242*FLEN/8, x4, x1, x2)

inst_69363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:208089*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208089*0 + 3*243*FLEN/8, x4, x1, x2)

inst_69364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:208092*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208092*0 + 3*244*FLEN/8, x4, x1, x2)

inst_69365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:208095*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208095*0 + 3*245*FLEN/8, x4, x1, x2)

inst_69366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:208098*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208098*0 + 3*246*FLEN/8, x4, x1, x2)

inst_69367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:208101*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208101*0 + 3*247*FLEN/8, x4, x1, x2)

inst_69368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:208104*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208104*0 + 3*248*FLEN/8, x4, x1, x2)

inst_69369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:208107*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208107*0 + 3*249*FLEN/8, x4, x1, x2)

inst_69370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:208110*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208110*0 + 3*250*FLEN/8, x4, x1, x2)

inst_69371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:208113*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208113*0 + 3*251*FLEN/8, x4, x1, x2)

inst_69372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:208116*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208116*0 + 3*252*FLEN/8, x4, x1, x2)

inst_69373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:208119*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208119*0 + 3*253*FLEN/8, x4, x1, x2)

inst_69374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:208122*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208122*0 + 3*254*FLEN/8, x4, x1, x2)

inst_69375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:208125*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208125*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_69376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:208128*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208128*0 + 3*256*FLEN/8, x4, x1, x2)

inst_69377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:208131*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208131*0 + 3*257*FLEN/8, x4, x1, x2)

inst_69378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:208134*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208134*0 + 3*258*FLEN/8, x4, x1, x2)

inst_69379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:208137*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208137*0 + 3*259*FLEN/8, x4, x1, x2)

inst_69380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:208140*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208140*0 + 3*260*FLEN/8, x4, x1, x2)

inst_69381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:208143*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208143*0 + 3*261*FLEN/8, x4, x1, x2)

inst_69382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:208146*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208146*0 + 3*262*FLEN/8, x4, x1, x2)

inst_69383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x52dbf656c5de7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x82cdbeb38924e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa52dbf656c5de7; op2val:0x9fc82cdbeb38924e;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:208149*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208149*0 + 3*263*FLEN/8, x4, x1, x2)

inst_69384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:208152*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208152*0 + 3*264*FLEN/8, x4, x1, x2)

inst_69385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:208155*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208155*0 + 3*265*FLEN/8, x4, x1, x2)

inst_69386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:208158*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208158*0 + 3*266*FLEN/8, x4, x1, x2)

inst_69387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:208161*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208161*0 + 3*267*FLEN/8, x4, x1, x2)

inst_69388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:208164*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208164*0 + 3*268*FLEN/8, x4, x1, x2)

inst_69389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:208167*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208167*0 + 3*269*FLEN/8, x4, x1, x2)

inst_69390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:208170*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208170*0 + 3*270*FLEN/8, x4, x1, x2)

inst_69391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:208173*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208173*0 + 3*271*FLEN/8, x4, x1, x2)

inst_69392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:208176*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208176*0 + 3*272*FLEN/8, x4, x1, x2)

inst_69393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:208179*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208179*0 + 3*273*FLEN/8, x4, x1, x2)

inst_69394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:208182*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208182*0 + 3*274*FLEN/8, x4, x1, x2)

inst_69395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:208185*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208185*0 + 3*275*FLEN/8, x4, x1, x2)

inst_69396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:208188*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208188*0 + 3*276*FLEN/8, x4, x1, x2)

inst_69397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:208191*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208191*0 + 3*277*FLEN/8, x4, x1, x2)

inst_69398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:208194*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208194*0 + 3*278*FLEN/8, x4, x1, x2)

inst_69399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:208197*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208197*0 + 3*279*FLEN/8, x4, x1, x2)

inst_69400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:208200*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208200*0 + 3*280*FLEN/8, x4, x1, x2)

inst_69401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:208203*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208203*0 + 3*281*FLEN/8, x4, x1, x2)

inst_69402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:208206*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208206*0 + 3*282*FLEN/8, x4, x1, x2)

inst_69403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:208209*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208209*0 + 3*283*FLEN/8, x4, x1, x2)

inst_69404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:208212*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208212*0 + 3*284*FLEN/8, x4, x1, x2)

inst_69405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:208215*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208215*0 + 3*285*FLEN/8, x4, x1, x2)

inst_69406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000000000; valaddr_reg:x3; val_offset:208218*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208218*0 + 3*286*FLEN/8, x4, x1, x2)

inst_69407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000000001; valaddr_reg:x3; val_offset:208221*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208221*0 + 3*287*FLEN/8, x4, x1, x2)

inst_69408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000000003; valaddr_reg:x3; val_offset:208224*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208224*0 + 3*288*FLEN/8, x4, x1, x2)

inst_69409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000000007; valaddr_reg:x3; val_offset:208227*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208227*0 + 3*289*FLEN/8, x4, x1, x2)

inst_69410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000000000f; valaddr_reg:x3; val_offset:208230*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208230*0 + 3*290*FLEN/8, x4, x1, x2)

inst_69411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000000001f; valaddr_reg:x3; val_offset:208233*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208233*0 + 3*291*FLEN/8, x4, x1, x2)

inst_69412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000000003f; valaddr_reg:x3; val_offset:208236*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208236*0 + 3*292*FLEN/8, x4, x1, x2)

inst_69413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000000007f; valaddr_reg:x3; val_offset:208239*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208239*0 + 3*293*FLEN/8, x4, x1, x2)

inst_69414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:208242*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208242*0 + 3*294*FLEN/8, x4, x1, x2)

inst_69415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:208245*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208245*0 + 3*295*FLEN/8, x4, x1, x2)

inst_69416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:208248*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208248*0 + 3*296*FLEN/8, x4, x1, x2)

inst_69417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:208251*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208251*0 + 3*297*FLEN/8, x4, x1, x2)

inst_69418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:208254*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208254*0 + 3*298*FLEN/8, x4, x1, x2)

inst_69419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:208257*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208257*0 + 3*299*FLEN/8, x4, x1, x2)

inst_69420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:208260*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208260*0 + 3*300*FLEN/8, x4, x1, x2)

inst_69421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:208263*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208263*0 + 3*301*FLEN/8, x4, x1, x2)

inst_69422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:208266*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208266*0 + 3*302*FLEN/8, x4, x1, x2)

inst_69423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:208269*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208269*0 + 3*303*FLEN/8, x4, x1, x2)

inst_69424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:208272*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208272*0 + 3*304*FLEN/8, x4, x1, x2)

inst_69425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:208275*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208275*0 + 3*305*FLEN/8, x4, x1, x2)

inst_69426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:208278*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208278*0 + 3*306*FLEN/8, x4, x1, x2)

inst_69427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:208281*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208281*0 + 3*307*FLEN/8, x4, x1, x2)

inst_69428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:208284*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208284*0 + 3*308*FLEN/8, x4, x1, x2)

inst_69429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:208287*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208287*0 + 3*309*FLEN/8, x4, x1, x2)

inst_69430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:208290*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208290*0 + 3*310*FLEN/8, x4, x1, x2)

inst_69431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:208293*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208293*0 + 3*311*FLEN/8, x4, x1, x2)

inst_69432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:208296*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208296*0 + 3*312*FLEN/8, x4, x1, x2)

inst_69433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:208299*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208299*0 + 3*313*FLEN/8, x4, x1, x2)

inst_69434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:208302*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208302*0 + 3*314*FLEN/8, x4, x1, x2)

inst_69435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:208305*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208305*0 + 3*315*FLEN/8, x4, x1, x2)

inst_69436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:208308*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208308*0 + 3*316*FLEN/8, x4, x1, x2)

inst_69437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:208311*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208311*0 + 3*317*FLEN/8, x4, x1, x2)

inst_69438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:208314*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208314*0 + 3*318*FLEN/8, x4, x1, x2)

inst_69439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:208317*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208317*0 + 3*319*FLEN/8, x4, x1, x2)

inst_69440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:208320*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208320*0 + 3*320*FLEN/8, x4, x1, x2)

inst_69441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:208323*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208323*0 + 3*321*FLEN/8, x4, x1, x2)

inst_69442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:208326*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208326*0 + 3*322*FLEN/8, x4, x1, x2)

inst_69443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:208329*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208329*0 + 3*323*FLEN/8, x4, x1, x2)

inst_69444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:208332*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208332*0 + 3*324*FLEN/8, x4, x1, x2)

inst_69445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:208335*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208335*0 + 3*325*FLEN/8, x4, x1, x2)

inst_69446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:208338*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208338*0 + 3*326*FLEN/8, x4, x1, x2)

inst_69447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:208341*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208341*0 + 3*327*FLEN/8, x4, x1, x2)

inst_69448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:208344*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208344*0 + 3*328*FLEN/8, x4, x1, x2)

inst_69449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:208347*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208347*0 + 3*329*FLEN/8, x4, x1, x2)

inst_69450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f00fffffffffff; valaddr_reg:x3; val_offset:208350*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208350*0 + 3*330*FLEN/8, x4, x1, x2)

inst_69451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f01fffffffffff; valaddr_reg:x3; val_offset:208353*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208353*0 + 3*331*FLEN/8, x4, x1, x2)

inst_69452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f03fffffffffff; valaddr_reg:x3; val_offset:208356*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208356*0 + 3*332*FLEN/8, x4, x1, x2)

inst_69453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f07fffffffffff; valaddr_reg:x3; val_offset:208359*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208359*0 + 3*333*FLEN/8, x4, x1, x2)

inst_69454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f0ffffffffffff; valaddr_reg:x3; val_offset:208362*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208362*0 + 3*334*FLEN/8, x4, x1, x2)

inst_69455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f1ffffffffffff; valaddr_reg:x3; val_offset:208365*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208365*0 + 3*335*FLEN/8, x4, x1, x2)

inst_69456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f3ffffffffffff; valaddr_reg:x3; val_offset:208368*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208368*0 + 3*336*FLEN/8, x4, x1, x2)

inst_69457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f7ffffffffffff; valaddr_reg:x3; val_offset:208371*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208371*0 + 3*337*FLEN/8, x4, x1, x2)

inst_69458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:208374*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208374*0 + 3*338*FLEN/8, x4, x1, x2)

inst_69459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:208377*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208377*0 + 3*339*FLEN/8, x4, x1, x2)

inst_69460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:208380*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208380*0 + 3*340*FLEN/8, x4, x1, x2)

inst_69461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:208383*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208383*0 + 3*341*FLEN/8, x4, x1, x2)

inst_69462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:208386*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208386*0 + 3*342*FLEN/8, x4, x1, x2)

inst_69463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:208389*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208389*0 + 3*343*FLEN/8, x4, x1, x2)

inst_69464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:208392*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208392*0 + 3*344*FLEN/8, x4, x1, x2)

inst_69465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:208395*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208395*0 + 3*345*FLEN/8, x4, x1, x2)

inst_69466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:208398*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208398*0 + 3*346*FLEN/8, x4, x1, x2)

inst_69467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:208401*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208401*0 + 3*347*FLEN/8, x4, x1, x2)

inst_69468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:208404*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208404*0 + 3*348*FLEN/8, x4, x1, x2)

inst_69469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:208407*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208407*0 + 3*349*FLEN/8, x4, x1, x2)

inst_69470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:208410*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208410*0 + 3*350*FLEN/8, x4, x1, x2)

inst_69471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:208413*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208413*0 + 3*351*FLEN/8, x4, x1, x2)

inst_69472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:208416*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208416*0 + 3*352*FLEN/8, x4, x1, x2)

inst_69473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:208419*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208419*0 + 3*353*FLEN/8, x4, x1, x2)

inst_69474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:208422*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208422*0 + 3*354*FLEN/8, x4, x1, x2)

inst_69475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:208425*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208425*0 + 3*355*FLEN/8, x4, x1, x2)

inst_69476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:208428*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208428*0 + 3*356*FLEN/8, x4, x1, x2)

inst_69477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:208431*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208431*0 + 3*357*FLEN/8, x4, x1, x2)

inst_69478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:208434*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208434*0 + 3*358*FLEN/8, x4, x1, x2)

inst_69479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:208437*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208437*0 + 3*359*FLEN/8, x4, x1, x2)

inst_69480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffe0000000; valaddr_reg:x3; val_offset:208440*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208440*0 + 3*360*FLEN/8, x4, x1, x2)

inst_69481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffff0000000; valaddr_reg:x3; val_offset:208443*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208443*0 + 3*361*FLEN/8, x4, x1, x2)

inst_69482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffff8000000; valaddr_reg:x3; val_offset:208446*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208446*0 + 3*362*FLEN/8, x4, x1, x2)

inst_69483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffc000000; valaddr_reg:x3; val_offset:208449*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208449*0 + 3*363*FLEN/8, x4, x1, x2)

inst_69484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffe000000; valaddr_reg:x3; val_offset:208452*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208452*0 + 3*364*FLEN/8, x4, x1, x2)

inst_69485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffff000000; valaddr_reg:x3; val_offset:208455*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208455*0 + 3*365*FLEN/8, x4, x1, x2)

inst_69486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffff800000; valaddr_reg:x3; val_offset:208458*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208458*0 + 3*366*FLEN/8, x4, x1, x2)

inst_69487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffc00000; valaddr_reg:x3; val_offset:208461*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208461*0 + 3*367*FLEN/8, x4, x1, x2)

inst_69488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffe00000; valaddr_reg:x3; val_offset:208464*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208464*0 + 3*368*FLEN/8, x4, x1, x2)

inst_69489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffff00000; valaddr_reg:x3; val_offset:208467*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208467*0 + 3*369*FLEN/8, x4, x1, x2)

inst_69490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffff80000; valaddr_reg:x3; val_offset:208470*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208470*0 + 3*370*FLEN/8, x4, x1, x2)

inst_69491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffc0000; valaddr_reg:x3; val_offset:208473*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208473*0 + 3*371*FLEN/8, x4, x1, x2)

inst_69492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffe0000; valaddr_reg:x3; val_offset:208476*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208476*0 + 3*372*FLEN/8, x4, x1, x2)

inst_69493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffff0000; valaddr_reg:x3; val_offset:208479*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208479*0 + 3*373*FLEN/8, x4, x1, x2)

inst_69494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffff8000; valaddr_reg:x3; val_offset:208482*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208482*0 + 3*374*FLEN/8, x4, x1, x2)

inst_69495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffffc000; valaddr_reg:x3; val_offset:208485*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208485*0 + 3*375*FLEN/8, x4, x1, x2)

inst_69496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffffe000; valaddr_reg:x3; val_offset:208488*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208488*0 + 3*376*FLEN/8, x4, x1, x2)

inst_69497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffff000; valaddr_reg:x3; val_offset:208491*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208491*0 + 3*377*FLEN/8, x4, x1, x2)

inst_69498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffff800; valaddr_reg:x3; val_offset:208494*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208494*0 + 3*378*FLEN/8, x4, x1, x2)

inst_69499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffffc00; valaddr_reg:x3; val_offset:208497*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208497*0 + 3*379*FLEN/8, x4, x1, x2)

inst_69500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffffe00; valaddr_reg:x3; val_offset:208500*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208500*0 + 3*380*FLEN/8, x4, x1, x2)

inst_69501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffffff00; valaddr_reg:x3; val_offset:208503*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208503*0 + 3*381*FLEN/8, x4, x1, x2)

inst_69502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffffff80; valaddr_reg:x3; val_offset:208506*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208506*0 + 3*382*FLEN/8, x4, x1, x2)

inst_69503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffffffc0; valaddr_reg:x3; val_offset:208509*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208509*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_69504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffffffe0; valaddr_reg:x3; val_offset:208512*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208512*0 + 3*384*FLEN/8, x4, x1, x2)

inst_69505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffffff0; valaddr_reg:x3; val_offset:208515*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208515*0 + 3*385*FLEN/8, x4, x1, x2)

inst_69506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffffff8; valaddr_reg:x3; val_offset:208518*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208518*0 + 3*386*FLEN/8, x4, x1, x2)

inst_69507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffffffc; valaddr_reg:x3; val_offset:208521*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208521*0 + 3*387*FLEN/8, x4, x1, x2)

inst_69508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3fffffffffffffe; valaddr_reg:x3; val_offset:208524*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208524*0 + 3*388*FLEN/8, x4, x1, x2)

inst_69509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x53d810208a0f3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa53d810208a0f3; op2val:0x0;
op3val:0x3ffffffffffffff; valaddr_reg:x3; val_offset:208527*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208527*0 + 3*389*FLEN/8, x4, x1, x2)

inst_69510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:208530*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208530*0 + 3*390*FLEN/8, x4, x1, x2)

inst_69511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:208533*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208533*0 + 3*391*FLEN/8, x4, x1, x2)

inst_69512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:208536*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208536*0 + 3*392*FLEN/8, x4, x1, x2)

inst_69513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:208539*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208539*0 + 3*393*FLEN/8, x4, x1, x2)

inst_69514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:208542*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208542*0 + 3*394*FLEN/8, x4, x1, x2)

inst_69515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:208545*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208545*0 + 3*395*FLEN/8, x4, x1, x2)

inst_69516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:208548*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208548*0 + 3*396*FLEN/8, x4, x1, x2)

inst_69517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:208551*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208551*0 + 3*397*FLEN/8, x4, x1, x2)

inst_69518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:208554*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208554*0 + 3*398*FLEN/8, x4, x1, x2)

inst_69519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:208557*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208557*0 + 3*399*FLEN/8, x4, x1, x2)

inst_69520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:208560*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208560*0 + 3*400*FLEN/8, x4, x1, x2)

inst_69521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:208563*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208563*0 + 3*401*FLEN/8, x4, x1, x2)

inst_69522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:208566*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208566*0 + 3*402*FLEN/8, x4, x1, x2)

inst_69523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:208569*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208569*0 + 3*403*FLEN/8, x4, x1, x2)

inst_69524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:208572*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208572*0 + 3*404*FLEN/8, x4, x1, x2)

inst_69525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:208575*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208575*0 + 3*405*FLEN/8, x4, x1, x2)

inst_69526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:208578*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208578*0 + 3*406*FLEN/8, x4, x1, x2)

inst_69527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:208581*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208581*0 + 3*407*FLEN/8, x4, x1, x2)

inst_69528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:208584*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208584*0 + 3*408*FLEN/8, x4, x1, x2)

inst_69529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:208587*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208587*0 + 3*409*FLEN/8, x4, x1, x2)

inst_69530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:208590*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208590*0 + 3*410*FLEN/8, x4, x1, x2)

inst_69531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:208593*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208593*0 + 3*411*FLEN/8, x4, x1, x2)

inst_69532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:208596*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208596*0 + 3*412*FLEN/8, x4, x1, x2)

inst_69533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:208599*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208599*0 + 3*413*FLEN/8, x4, x1, x2)

inst_69534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:208602*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208602*0 + 3*414*FLEN/8, x4, x1, x2)

inst_69535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:208605*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208605*0 + 3*415*FLEN/8, x4, x1, x2)

inst_69536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:208608*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208608*0 + 3*416*FLEN/8, x4, x1, x2)

inst_69537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:208611*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208611*0 + 3*417*FLEN/8, x4, x1, x2)

inst_69538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:208614*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208614*0 + 3*418*FLEN/8, x4, x1, x2)

inst_69539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:208617*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208617*0 + 3*419*FLEN/8, x4, x1, x2)

inst_69540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:208620*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208620*0 + 3*420*FLEN/8, x4, x1, x2)

inst_69541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:208623*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208623*0 + 3*421*FLEN/8, x4, x1, x2)

inst_69542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:208626*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208626*0 + 3*422*FLEN/8, x4, x1, x2)

inst_69543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:208629*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208629*0 + 3*423*FLEN/8, x4, x1, x2)

inst_69544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:208632*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208632*0 + 3*424*FLEN/8, x4, x1, x2)

inst_69545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:208635*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208635*0 + 3*425*FLEN/8, x4, x1, x2)

inst_69546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:208638*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208638*0 + 3*426*FLEN/8, x4, x1, x2)

inst_69547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:208641*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208641*0 + 3*427*FLEN/8, x4, x1, x2)

inst_69548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:208644*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208644*0 + 3*428*FLEN/8, x4, x1, x2)

inst_69549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:208647*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208647*0 + 3*429*FLEN/8, x4, x1, x2)

inst_69550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:208650*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208650*0 + 3*430*FLEN/8, x4, x1, x2)

inst_69551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:208653*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208653*0 + 3*431*FLEN/8, x4, x1, x2)

inst_69552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:208656*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208656*0 + 3*432*FLEN/8, x4, x1, x2)

inst_69553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:208659*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208659*0 + 3*433*FLEN/8, x4, x1, x2)

inst_69554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:208662*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208662*0 + 3*434*FLEN/8, x4, x1, x2)

inst_69555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:208665*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208665*0 + 3*435*FLEN/8, x4, x1, x2)

inst_69556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:208668*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208668*0 + 3*436*FLEN/8, x4, x1, x2)

inst_69557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:208671*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208671*0 + 3*437*FLEN/8, x4, x1, x2)

inst_69558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:208674*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208674*0 + 3*438*FLEN/8, x4, x1, x2)

inst_69559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:208677*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208677*0 + 3*439*FLEN/8, x4, x1, x2)

inst_69560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:208680*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208680*0 + 3*440*FLEN/8, x4, x1, x2)

inst_69561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:208683*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208683*0 + 3*441*FLEN/8, x4, x1, x2)

inst_69562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:208686*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208686*0 + 3*442*FLEN/8, x4, x1, x2)

inst_69563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:208689*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208689*0 + 3*443*FLEN/8, x4, x1, x2)

inst_69564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:208692*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208692*0 + 3*444*FLEN/8, x4, x1, x2)

inst_69565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:208695*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208695*0 + 3*445*FLEN/8, x4, x1, x2)

inst_69566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:208698*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208698*0 + 3*446*FLEN/8, x4, x1, x2)

inst_69567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:208701*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208701*0 + 3*447*FLEN/8, x4, x1, x2)

inst_69568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:208704*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208704*0 + 3*448*FLEN/8, x4, x1, x2)

inst_69569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:208707*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208707*0 + 3*449*FLEN/8, x4, x1, x2)

inst_69570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:208710*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208710*0 + 3*450*FLEN/8, x4, x1, x2)

inst_69571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:208713*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208713*0 + 3*451*FLEN/8, x4, x1, x2)

inst_69572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:208716*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208716*0 + 3*452*FLEN/8, x4, x1, x2)

inst_69573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:208719*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208719*0 + 3*453*FLEN/8, x4, x1, x2)

inst_69574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:208722*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208722*0 + 3*454*FLEN/8, x4, x1, x2)

inst_69575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:208725*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208725*0 + 3*455*FLEN/8, x4, x1, x2)

inst_69576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:208728*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208728*0 + 3*456*FLEN/8, x4, x1, x2)

inst_69577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:208731*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208731*0 + 3*457*FLEN/8, x4, x1, x2)

inst_69578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:208734*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208734*0 + 3*458*FLEN/8, x4, x1, x2)

inst_69579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:208737*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208737*0 + 3*459*FLEN/8, x4, x1, x2)

inst_69580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:208740*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208740*0 + 3*460*FLEN/8, x4, x1, x2)

inst_69581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:208743*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208743*0 + 3*461*FLEN/8, x4, x1, x2)

inst_69582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:208746*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208746*0 + 3*462*FLEN/8, x4, x1, x2)

inst_69583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:208749*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208749*0 + 3*463*FLEN/8, x4, x1, x2)

inst_69584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:208752*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208752*0 + 3*464*FLEN/8, x4, x1, x2)

inst_69585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:208755*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208755*0 + 3*465*FLEN/8, x4, x1, x2)

inst_69586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:208758*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208758*0 + 3*466*FLEN/8, x4, x1, x2)

inst_69587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:208761*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208761*0 + 3*467*FLEN/8, x4, x1, x2)

inst_69588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:208764*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208764*0 + 3*468*FLEN/8, x4, x1, x2)

inst_69589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:208767*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208767*0 + 3*469*FLEN/8, x4, x1, x2)

inst_69590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:208770*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208770*0 + 3*470*FLEN/8, x4, x1, x2)

inst_69591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:208773*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208773*0 + 3*471*FLEN/8, x4, x1, x2)

inst_69592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:208776*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208776*0 + 3*472*FLEN/8, x4, x1, x2)

inst_69593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:208779*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208779*0 + 3*473*FLEN/8, x4, x1, x2)

inst_69594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:208782*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208782*0 + 3*474*FLEN/8, x4, x1, x2)

inst_69595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:208785*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208785*0 + 3*475*FLEN/8, x4, x1, x2)

inst_69596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:208788*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208788*0 + 3*476*FLEN/8, x4, x1, x2)

inst_69597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:208791*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208791*0 + 3*477*FLEN/8, x4, x1, x2)

inst_69598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:208794*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208794*0 + 3*478*FLEN/8, x4, x1, x2)

inst_69599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:208797*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208797*0 + 3*479*FLEN/8, x4, x1, x2)

inst_69600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:208800*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208800*0 + 3*480*FLEN/8, x4, x1, x2)

inst_69601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:208803*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208803*0 + 3*481*FLEN/8, x4, x1, x2)

inst_69602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:208806*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208806*0 + 3*482*FLEN/8, x4, x1, x2)

inst_69603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:208809*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208809*0 + 3*483*FLEN/8, x4, x1, x2)

inst_69604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:208812*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208812*0 + 3*484*FLEN/8, x4, x1, x2)

inst_69605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:208815*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208815*0 + 3*485*FLEN/8, x4, x1, x2)

inst_69606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:208818*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208818*0 + 3*486*FLEN/8, x4, x1, x2)

inst_69607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:208821*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208821*0 + 3*487*FLEN/8, x4, x1, x2)

inst_69608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:208824*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208824*0 + 3*488*FLEN/8, x4, x1, x2)

inst_69609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:208827*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208827*0 + 3*489*FLEN/8, x4, x1, x2)

inst_69610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:208830*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208830*0 + 3*490*FLEN/8, x4, x1, x2)

inst_69611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:208833*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208833*0 + 3*491*FLEN/8, x4, x1, x2)

inst_69612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:208836*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208836*0 + 3*492*FLEN/8, x4, x1, x2)

inst_69613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:208839*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208839*0 + 3*493*FLEN/8, x4, x1, x2)

inst_69614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:208842*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208842*0 + 3*494*FLEN/8, x4, x1, x2)

inst_69615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:208845*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208845*0 + 3*495*FLEN/8, x4, x1, x2)

inst_69616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:208848*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208848*0 + 3*496*FLEN/8, x4, x1, x2)

inst_69617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:208851*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208851*0 + 3*497*FLEN/8, x4, x1, x2)

inst_69618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:208854*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208854*0 + 3*498*FLEN/8, x4, x1, x2)

inst_69619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:208857*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208857*0 + 3*499*FLEN/8, x4, x1, x2)

inst_69620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:208860*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208860*0 + 3*500*FLEN/8, x4, x1, x2)

inst_69621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:208863*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208863*0 + 3*501*FLEN/8, x4, x1, x2)

inst_69622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:208866*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208866*0 + 3*502*FLEN/8, x4, x1, x2)

inst_69623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:208869*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208869*0 + 3*503*FLEN/8, x4, x1, x2)

inst_69624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:208872*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208872*0 + 3*504*FLEN/8, x4, x1, x2)

inst_69625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:208875*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208875*0 + 3*505*FLEN/8, x4, x1, x2)

inst_69626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:208878*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208878*0 + 3*506*FLEN/8, x4, x1, x2)

inst_69627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:208881*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208881*0 + 3*507*FLEN/8, x4, x1, x2)

inst_69628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:208884*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208884*0 + 3*508*FLEN/8, x4, x1, x2)

inst_69629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:208887*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208887*0 + 3*509*FLEN/8, x4, x1, x2)

inst_69630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:208890*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208890*0 + 3*510*FLEN/8, x4, x1, x2)

inst_69631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:208893*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208893*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_69632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:208896*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208896*0 + 3*512*FLEN/8, x4, x1, x2)

inst_69633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:208899*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208899*0 + 3*513*FLEN/8, x4, x1, x2)

inst_69634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:208902*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208902*0 + 3*514*FLEN/8, x4, x1, x2)

inst_69635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x54196dc8347ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa54196dc8347ac; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:208905*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208905*0 + 3*515*FLEN/8, x4, x1, x2)

inst_69636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:208908*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208908*0 + 3*516*FLEN/8, x4, x1, x2)

inst_69637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:208911*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208911*0 + 3*517*FLEN/8, x4, x1, x2)

inst_69638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:208914*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208914*0 + 3*518*FLEN/8, x4, x1, x2)

inst_69639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:208917*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208917*0 + 3*519*FLEN/8, x4, x1, x2)

inst_69640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:208920*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208920*0 + 3*520*FLEN/8, x4, x1, x2)

inst_69641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:208923*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208923*0 + 3*521*FLEN/8, x4, x1, x2)

inst_69642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:208926*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208926*0 + 3*522*FLEN/8, x4, x1, x2)

inst_69643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:208929*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208929*0 + 3*523*FLEN/8, x4, x1, x2)

inst_69644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:208932*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208932*0 + 3*524*FLEN/8, x4, x1, x2)

inst_69645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:208935*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208935*0 + 3*525*FLEN/8, x4, x1, x2)

inst_69646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:208938*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208938*0 + 3*526*FLEN/8, x4, x1, x2)

inst_69647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:208941*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208941*0 + 3*527*FLEN/8, x4, x1, x2)

inst_69648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:208944*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208944*0 + 3*528*FLEN/8, x4, x1, x2)

inst_69649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:208947*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208947*0 + 3*529*FLEN/8, x4, x1, x2)

inst_69650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:208950*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208950*0 + 3*530*FLEN/8, x4, x1, x2)

inst_69651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:208953*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208953*0 + 3*531*FLEN/8, x4, x1, x2)

inst_69652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:208956*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208956*0 + 3*532*FLEN/8, x4, x1, x2)

inst_69653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:208959*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208959*0 + 3*533*FLEN/8, x4, x1, x2)

inst_69654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:208962*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208962*0 + 3*534*FLEN/8, x4, x1, x2)

inst_69655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:208965*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208965*0 + 3*535*FLEN/8, x4, x1, x2)

inst_69656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:208968*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208968*0 + 3*536*FLEN/8, x4, x1, x2)

inst_69657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:208971*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208971*0 + 3*537*FLEN/8, x4, x1, x2)

inst_69658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000000000; valaddr_reg:x3; val_offset:208974*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208974*0 + 3*538*FLEN/8, x4, x1, x2)

inst_69659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000000001; valaddr_reg:x3; val_offset:208977*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208977*0 + 3*539*FLEN/8, x4, x1, x2)

inst_69660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000000003; valaddr_reg:x3; val_offset:208980*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208980*0 + 3*540*FLEN/8, x4, x1, x2)

inst_69661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000000007; valaddr_reg:x3; val_offset:208983*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208983*0 + 3*541*FLEN/8, x4, x1, x2)

inst_69662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000000000f; valaddr_reg:x3; val_offset:208986*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208986*0 + 3*542*FLEN/8, x4, x1, x2)

inst_69663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000000001f; valaddr_reg:x3; val_offset:208989*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208989*0 + 3*543*FLEN/8, x4, x1, x2)

inst_69664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000000003f; valaddr_reg:x3; val_offset:208992*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208992*0 + 3*544*FLEN/8, x4, x1, x2)

inst_69665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000000007f; valaddr_reg:x3; val_offset:208995*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208995*0 + 3*545*FLEN/8, x4, x1, x2)

inst_69666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000000000ff; valaddr_reg:x3; val_offset:208998*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 208998*0 + 3*546*FLEN/8, x4, x1, x2)

inst_69667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000000001ff; valaddr_reg:x3; val_offset:209001*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209001*0 + 3*547*FLEN/8, x4, x1, x2)

inst_69668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000000003ff; valaddr_reg:x3; val_offset:209004*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209004*0 + 3*548*FLEN/8, x4, x1, x2)

inst_69669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000000007ff; valaddr_reg:x3; val_offset:209007*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209007*0 + 3*549*FLEN/8, x4, x1, x2)

inst_69670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000000fff; valaddr_reg:x3; val_offset:209010*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209010*0 + 3*550*FLEN/8, x4, x1, x2)

inst_69671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000001fff; valaddr_reg:x3; val_offset:209013*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209013*0 + 3*551*FLEN/8, x4, x1, x2)

inst_69672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000003fff; valaddr_reg:x3; val_offset:209016*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209016*0 + 3*552*FLEN/8, x4, x1, x2)

inst_69673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000007fff; valaddr_reg:x3; val_offset:209019*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209019*0 + 3*553*FLEN/8, x4, x1, x2)

inst_69674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000000ffff; valaddr_reg:x3; val_offset:209022*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209022*0 + 3*554*FLEN/8, x4, x1, x2)

inst_69675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000001ffff; valaddr_reg:x3; val_offset:209025*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209025*0 + 3*555*FLEN/8, x4, x1, x2)

inst_69676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000003ffff; valaddr_reg:x3; val_offset:209028*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209028*0 + 3*556*FLEN/8, x4, x1, x2)

inst_69677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000007ffff; valaddr_reg:x3; val_offset:209031*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209031*0 + 3*557*FLEN/8, x4, x1, x2)

inst_69678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000000fffff; valaddr_reg:x3; val_offset:209034*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209034*0 + 3*558*FLEN/8, x4, x1, x2)

inst_69679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000001fffff; valaddr_reg:x3; val_offset:209037*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209037*0 + 3*559*FLEN/8, x4, x1, x2)

inst_69680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000003fffff; valaddr_reg:x3; val_offset:209040*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209040*0 + 3*560*FLEN/8, x4, x1, x2)

inst_69681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000007fffff; valaddr_reg:x3; val_offset:209043*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209043*0 + 3*561*FLEN/8, x4, x1, x2)

inst_69682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000000ffffff; valaddr_reg:x3; val_offset:209046*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209046*0 + 3*562*FLEN/8, x4, x1, x2)

inst_69683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000001ffffff; valaddr_reg:x3; val_offset:209049*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209049*0 + 3*563*FLEN/8, x4, x1, x2)

inst_69684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000003ffffff; valaddr_reg:x3; val_offset:209052*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209052*0 + 3*564*FLEN/8, x4, x1, x2)

inst_69685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000007ffffff; valaddr_reg:x3; val_offset:209055*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209055*0 + 3*565*FLEN/8, x4, x1, x2)

inst_69686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000000fffffff; valaddr_reg:x3; val_offset:209058*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209058*0 + 3*566*FLEN/8, x4, x1, x2)

inst_69687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000001fffffff; valaddr_reg:x3; val_offset:209061*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209061*0 + 3*567*FLEN/8, x4, x1, x2)

inst_69688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000003fffffff; valaddr_reg:x3; val_offset:209064*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209064*0 + 3*568*FLEN/8, x4, x1, x2)

inst_69689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000007fffffff; valaddr_reg:x3; val_offset:209067*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209067*0 + 3*569*FLEN/8, x4, x1, x2)

inst_69690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900000ffffffff; valaddr_reg:x3; val_offset:209070*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209070*0 + 3*570*FLEN/8, x4, x1, x2)

inst_69691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900001ffffffff; valaddr_reg:x3; val_offset:209073*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209073*0 + 3*571*FLEN/8, x4, x1, x2)

inst_69692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900003ffffffff; valaddr_reg:x3; val_offset:209076*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209076*0 + 3*572*FLEN/8, x4, x1, x2)

inst_69693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900007ffffffff; valaddr_reg:x3; val_offset:209079*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209079*0 + 3*573*FLEN/8, x4, x1, x2)

inst_69694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390000fffffffff; valaddr_reg:x3; val_offset:209082*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209082*0 + 3*574*FLEN/8, x4, x1, x2)

inst_69695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390001fffffffff; valaddr_reg:x3; val_offset:209085*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209085*0 + 3*575*FLEN/8, x4, x1, x2)

inst_69696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390003fffffffff; valaddr_reg:x3; val_offset:209088*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209088*0 + 3*576*FLEN/8, x4, x1, x2)

inst_69697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390007fffffffff; valaddr_reg:x3; val_offset:209091*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209091*0 + 3*577*FLEN/8, x4, x1, x2)

inst_69698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39000ffffffffff; valaddr_reg:x3; val_offset:209094*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209094*0 + 3*578*FLEN/8, x4, x1, x2)

inst_69699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39001ffffffffff; valaddr_reg:x3; val_offset:209097*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209097*0 + 3*579*FLEN/8, x4, x1, x2)

inst_69700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39003ffffffffff; valaddr_reg:x3; val_offset:209100*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209100*0 + 3*580*FLEN/8, x4, x1, x2)

inst_69701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39007ffffffffff; valaddr_reg:x3; val_offset:209103*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209103*0 + 3*581*FLEN/8, x4, x1, x2)

inst_69702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3900fffffffffff; valaddr_reg:x3; val_offset:209106*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209106*0 + 3*582*FLEN/8, x4, x1, x2)

inst_69703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3901fffffffffff; valaddr_reg:x3; val_offset:209109*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209109*0 + 3*583*FLEN/8, x4, x1, x2)

inst_69704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3903fffffffffff; valaddr_reg:x3; val_offset:209112*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209112*0 + 3*584*FLEN/8, x4, x1, x2)

inst_69705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x3907fffffffffff; valaddr_reg:x3; val_offset:209115*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209115*0 + 3*585*FLEN/8, x4, x1, x2)

inst_69706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x390ffffffffffff; valaddr_reg:x3; val_offset:209118*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209118*0 + 3*586*FLEN/8, x4, x1, x2)

inst_69707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x391ffffffffffff; valaddr_reg:x3; val_offset:209121*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209121*0 + 3*587*FLEN/8, x4, x1, x2)

inst_69708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x393ffffffffffff; valaddr_reg:x3; val_offset:209124*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209124*0 + 3*588*FLEN/8, x4, x1, x2)

inst_69709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x397ffffffffffff; valaddr_reg:x3; val_offset:209127*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209127*0 + 3*589*FLEN/8, x4, x1, x2)

inst_69710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x398000000000000; valaddr_reg:x3; val_offset:209130*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209130*0 + 3*590*FLEN/8, x4, x1, x2)

inst_69711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39c000000000000; valaddr_reg:x3; val_offset:209133*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209133*0 + 3*591*FLEN/8, x4, x1, x2)

inst_69712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39e000000000000; valaddr_reg:x3; val_offset:209136*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209136*0 + 3*592*FLEN/8, x4, x1, x2)

inst_69713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39f000000000000; valaddr_reg:x3; val_offset:209139*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209139*0 + 3*593*FLEN/8, x4, x1, x2)

inst_69714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39f800000000000; valaddr_reg:x3; val_offset:209142*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209142*0 + 3*594*FLEN/8, x4, x1, x2)

inst_69715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fc00000000000; valaddr_reg:x3; val_offset:209145*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209145*0 + 3*595*FLEN/8, x4, x1, x2)

inst_69716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fe00000000000; valaddr_reg:x3; val_offset:209148*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209148*0 + 3*596*FLEN/8, x4, x1, x2)

inst_69717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ff00000000000; valaddr_reg:x3; val_offset:209151*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209151*0 + 3*597*FLEN/8, x4, x1, x2)

inst_69718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ff80000000000; valaddr_reg:x3; val_offset:209154*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209154*0 + 3*598*FLEN/8, x4, x1, x2)

inst_69719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffc0000000000; valaddr_reg:x3; val_offset:209157*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209157*0 + 3*599*FLEN/8, x4, x1, x2)

inst_69720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffe0000000000; valaddr_reg:x3; val_offset:209160*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209160*0 + 3*600*FLEN/8, x4, x1, x2)

inst_69721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fff0000000000; valaddr_reg:x3; val_offset:209163*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209163*0 + 3*601*FLEN/8, x4, x1, x2)

inst_69722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fff8000000000; valaddr_reg:x3; val_offset:209166*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209166*0 + 3*602*FLEN/8, x4, x1, x2)

inst_69723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffc000000000; valaddr_reg:x3; val_offset:209169*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209169*0 + 3*603*FLEN/8, x4, x1, x2)

inst_69724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffe000000000; valaddr_reg:x3; val_offset:209172*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209172*0 + 3*604*FLEN/8, x4, x1, x2)

inst_69725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffff000000000; valaddr_reg:x3; val_offset:209175*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209175*0 + 3*605*FLEN/8, x4, x1, x2)

inst_69726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffff800000000; valaddr_reg:x3; val_offset:209178*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209178*0 + 3*606*FLEN/8, x4, x1, x2)

inst_69727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffc00000000; valaddr_reg:x3; val_offset:209181*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209181*0 + 3*607*FLEN/8, x4, x1, x2)

inst_69728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffe00000000; valaddr_reg:x3; val_offset:209184*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209184*0 + 3*608*FLEN/8, x4, x1, x2)

inst_69729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffff00000000; valaddr_reg:x3; val_offset:209187*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209187*0 + 3*609*FLEN/8, x4, x1, x2)

inst_69730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffff80000000; valaddr_reg:x3; val_offset:209190*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209190*0 + 3*610*FLEN/8, x4, x1, x2)

inst_69731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffc0000000; valaddr_reg:x3; val_offset:209193*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209193*0 + 3*611*FLEN/8, x4, x1, x2)

inst_69732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffe0000000; valaddr_reg:x3; val_offset:209196*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209196*0 + 3*612*FLEN/8, x4, x1, x2)

inst_69733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffff0000000; valaddr_reg:x3; val_offset:209199*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209199*0 + 3*613*FLEN/8, x4, x1, x2)

inst_69734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffff8000000; valaddr_reg:x3; val_offset:209202*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209202*0 + 3*614*FLEN/8, x4, x1, x2)

inst_69735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffc000000; valaddr_reg:x3; val_offset:209205*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209205*0 + 3*615*FLEN/8, x4, x1, x2)

inst_69736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffe000000; valaddr_reg:x3; val_offset:209208*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209208*0 + 3*616*FLEN/8, x4, x1, x2)

inst_69737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffff000000; valaddr_reg:x3; val_offset:209211*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209211*0 + 3*617*FLEN/8, x4, x1, x2)

inst_69738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffff800000; valaddr_reg:x3; val_offset:209214*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209214*0 + 3*618*FLEN/8, x4, x1, x2)

inst_69739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffc00000; valaddr_reg:x3; val_offset:209217*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209217*0 + 3*619*FLEN/8, x4, x1, x2)

inst_69740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffe00000; valaddr_reg:x3; val_offset:209220*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209220*0 + 3*620*FLEN/8, x4, x1, x2)

inst_69741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffff00000; valaddr_reg:x3; val_offset:209223*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209223*0 + 3*621*FLEN/8, x4, x1, x2)

inst_69742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffff80000; valaddr_reg:x3; val_offset:209226*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209226*0 + 3*622*FLEN/8, x4, x1, x2)

inst_69743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffc0000; valaddr_reg:x3; val_offset:209229*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209229*0 + 3*623*FLEN/8, x4, x1, x2)

inst_69744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffe0000; valaddr_reg:x3; val_offset:209232*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209232*0 + 3*624*FLEN/8, x4, x1, x2)

inst_69745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffff0000; valaddr_reg:x3; val_offset:209235*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209235*0 + 3*625*FLEN/8, x4, x1, x2)

inst_69746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffff8000; valaddr_reg:x3; val_offset:209238*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209238*0 + 3*626*FLEN/8, x4, x1, x2)

inst_69747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffffc000; valaddr_reg:x3; val_offset:209241*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209241*0 + 3*627*FLEN/8, x4, x1, x2)

inst_69748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffffe000; valaddr_reg:x3; val_offset:209244*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209244*0 + 3*628*FLEN/8, x4, x1, x2)

inst_69749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffff000; valaddr_reg:x3; val_offset:209247*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209247*0 + 3*629*FLEN/8, x4, x1, x2)

inst_69750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffff800; valaddr_reg:x3; val_offset:209250*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209250*0 + 3*630*FLEN/8, x4, x1, x2)

inst_69751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffffc00; valaddr_reg:x3; val_offset:209253*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209253*0 + 3*631*FLEN/8, x4, x1, x2)

inst_69752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffffe00; valaddr_reg:x3; val_offset:209256*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209256*0 + 3*632*FLEN/8, x4, x1, x2)

inst_69753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffffff00; valaddr_reg:x3; val_offset:209259*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209259*0 + 3*633*FLEN/8, x4, x1, x2)

inst_69754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffffff80; valaddr_reg:x3; val_offset:209262*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209262*0 + 3*634*FLEN/8, x4, x1, x2)

inst_69755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffffffc0; valaddr_reg:x3; val_offset:209265*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209265*0 + 3*635*FLEN/8, x4, x1, x2)

inst_69756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffffffe0; valaddr_reg:x3; val_offset:209268*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209268*0 + 3*636*FLEN/8, x4, x1, x2)

inst_69757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffffff0; valaddr_reg:x3; val_offset:209271*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209271*0 + 3*637*FLEN/8, x4, x1, x2)

inst_69758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffffff8; valaddr_reg:x3; val_offset:209274*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209274*0 + 3*638*FLEN/8, x4, x1, x2)

inst_69759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffffffc; valaddr_reg:x3; val_offset:209277*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209277*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_69760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39ffffffffffffe; valaddr_reg:x3; val_offset:209280*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209280*0 + 3*640*FLEN/8, x4, x1, x2)

inst_69761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5459434b128d9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa5459434b128d9; op2val:0x0;
op3val:0x39fffffffffffff; valaddr_reg:x3; val_offset:209283*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209283*0 + 3*641*FLEN/8, x4, x1, x2)

inst_69762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:209286*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209286*0 + 3*642*FLEN/8, x4, x1, x2)

inst_69763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:209289*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209289*0 + 3*643*FLEN/8, x4, x1, x2)

inst_69764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:209292*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209292*0 + 3*644*FLEN/8, x4, x1, x2)

inst_69765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:209295*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209295*0 + 3*645*FLEN/8, x4, x1, x2)

inst_69766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:209298*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209298*0 + 3*646*FLEN/8, x4, x1, x2)

inst_69767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:209301*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209301*0 + 3*647*FLEN/8, x4, x1, x2)

inst_69768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:209304*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209304*0 + 3*648*FLEN/8, x4, x1, x2)

inst_69769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:209307*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209307*0 + 3*649*FLEN/8, x4, x1, x2)

inst_69770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:209310*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209310*0 + 3*650*FLEN/8, x4, x1, x2)

inst_69771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:209313*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209313*0 + 3*651*FLEN/8, x4, x1, x2)

inst_69772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:209316*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209316*0 + 3*652*FLEN/8, x4, x1, x2)

inst_69773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:209319*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209319*0 + 3*653*FLEN/8, x4, x1, x2)

inst_69774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:209322*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209322*0 + 3*654*FLEN/8, x4, x1, x2)

inst_69775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:209325*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209325*0 + 3*655*FLEN/8, x4, x1, x2)

inst_69776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:209328*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209328*0 + 3*656*FLEN/8, x4, x1, x2)

inst_69777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:209331*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209331*0 + 3*657*FLEN/8, x4, x1, x2)

inst_69778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:209334*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209334*0 + 3*658*FLEN/8, x4, x1, x2)

inst_69779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:209337*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209337*0 + 3*659*FLEN/8, x4, x1, x2)

inst_69780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:209340*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209340*0 + 3*660*FLEN/8, x4, x1, x2)

inst_69781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:209343*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209343*0 + 3*661*FLEN/8, x4, x1, x2)

inst_69782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:209346*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209346*0 + 3*662*FLEN/8, x4, x1, x2)

inst_69783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:209349*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209349*0 + 3*663*FLEN/8, x4, x1, x2)

inst_69784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:209352*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209352*0 + 3*664*FLEN/8, x4, x1, x2)

inst_69785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:209355*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209355*0 + 3*665*FLEN/8, x4, x1, x2)

inst_69786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:209358*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209358*0 + 3*666*FLEN/8, x4, x1, x2)

inst_69787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:209361*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209361*0 + 3*667*FLEN/8, x4, x1, x2)

inst_69788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:209364*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209364*0 + 3*668*FLEN/8, x4, x1, x2)

inst_69789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:209367*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209367*0 + 3*669*FLEN/8, x4, x1, x2)

inst_69790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:209370*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209370*0 + 3*670*FLEN/8, x4, x1, x2)

inst_69791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:209373*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209373*0 + 3*671*FLEN/8, x4, x1, x2)

inst_69792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:209376*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209376*0 + 3*672*FLEN/8, x4, x1, x2)

inst_69793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:209379*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209379*0 + 3*673*FLEN/8, x4, x1, x2)

inst_69794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:209382*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209382*0 + 3*674*FLEN/8, x4, x1, x2)

inst_69795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:209385*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209385*0 + 3*675*FLEN/8, x4, x1, x2)

inst_69796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:209388*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209388*0 + 3*676*FLEN/8, x4, x1, x2)

inst_69797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:209391*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209391*0 + 3*677*FLEN/8, x4, x1, x2)

inst_69798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:209394*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209394*0 + 3*678*FLEN/8, x4, x1, x2)

inst_69799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:209397*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209397*0 + 3*679*FLEN/8, x4, x1, x2)

inst_69800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:209400*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209400*0 + 3*680*FLEN/8, x4, x1, x2)

inst_69801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:209403*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209403*0 + 3*681*FLEN/8, x4, x1, x2)

inst_69802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:209406*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209406*0 + 3*682*FLEN/8, x4, x1, x2)

inst_69803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:209409*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209409*0 + 3*683*FLEN/8, x4, x1, x2)

inst_69804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:209412*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209412*0 + 3*684*FLEN/8, x4, x1, x2)

inst_69805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:209415*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209415*0 + 3*685*FLEN/8, x4, x1, x2)

inst_69806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:209418*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209418*0 + 3*686*FLEN/8, x4, x1, x2)

inst_69807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:209421*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209421*0 + 3*687*FLEN/8, x4, x1, x2)

inst_69808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:209424*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209424*0 + 3*688*FLEN/8, x4, x1, x2)

inst_69809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:209427*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209427*0 + 3*689*FLEN/8, x4, x1, x2)

inst_69810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:209430*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209430*0 + 3*690*FLEN/8, x4, x1, x2)

inst_69811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:209433*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209433*0 + 3*691*FLEN/8, x4, x1, x2)

inst_69812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:209436*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209436*0 + 3*692*FLEN/8, x4, x1, x2)

inst_69813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:209439*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209439*0 + 3*693*FLEN/8, x4, x1, x2)

inst_69814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:209442*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209442*0 + 3*694*FLEN/8, x4, x1, x2)

inst_69815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:209445*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209445*0 + 3*695*FLEN/8, x4, x1, x2)

inst_69816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:209448*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209448*0 + 3*696*FLEN/8, x4, x1, x2)

inst_69817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:209451*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209451*0 + 3*697*FLEN/8, x4, x1, x2)

inst_69818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:209454*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209454*0 + 3*698*FLEN/8, x4, x1, x2)

inst_69819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:209457*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209457*0 + 3*699*FLEN/8, x4, x1, x2)

inst_69820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:209460*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209460*0 + 3*700*FLEN/8, x4, x1, x2)

inst_69821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:209463*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209463*0 + 3*701*FLEN/8, x4, x1, x2)

inst_69822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:209466*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209466*0 + 3*702*FLEN/8, x4, x1, x2)

inst_69823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:209469*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209469*0 + 3*703*FLEN/8, x4, x1, x2)

inst_69824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:209472*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209472*0 + 3*704*FLEN/8, x4, x1, x2)

inst_69825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:209475*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209475*0 + 3*705*FLEN/8, x4, x1, x2)

inst_69826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:209478*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209478*0 + 3*706*FLEN/8, x4, x1, x2)

inst_69827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:209481*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209481*0 + 3*707*FLEN/8, x4, x1, x2)

inst_69828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:209484*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209484*0 + 3*708*FLEN/8, x4, x1, x2)

inst_69829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:209487*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209487*0 + 3*709*FLEN/8, x4, x1, x2)

inst_69830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:209490*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209490*0 + 3*710*FLEN/8, x4, x1, x2)

inst_69831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:209493*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209493*0 + 3*711*FLEN/8, x4, x1, x2)

inst_69832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:209496*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209496*0 + 3*712*FLEN/8, x4, x1, x2)

inst_69833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:209499*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209499*0 + 3*713*FLEN/8, x4, x1, x2)

inst_69834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:209502*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209502*0 + 3*714*FLEN/8, x4, x1, x2)

inst_69835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:209505*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209505*0 + 3*715*FLEN/8, x4, x1, x2)

inst_69836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:209508*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209508*0 + 3*716*FLEN/8, x4, x1, x2)

inst_69837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:209511*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209511*0 + 3*717*FLEN/8, x4, x1, x2)

inst_69838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:209514*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209514*0 + 3*718*FLEN/8, x4, x1, x2)

inst_69839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:209517*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209517*0 + 3*719*FLEN/8, x4, x1, x2)

inst_69840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:209520*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209520*0 + 3*720*FLEN/8, x4, x1, x2)

inst_69841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:209523*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209523*0 + 3*721*FLEN/8, x4, x1, x2)

inst_69842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:209526*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209526*0 + 3*722*FLEN/8, x4, x1, x2)

inst_69843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:209529*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209529*0 + 3*723*FLEN/8, x4, x1, x2)

inst_69844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:209532*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209532*0 + 3*724*FLEN/8, x4, x1, x2)

inst_69845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:209535*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209535*0 + 3*725*FLEN/8, x4, x1, x2)

inst_69846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:209538*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209538*0 + 3*726*FLEN/8, x4, x1, x2)

inst_69847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:209541*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209541*0 + 3*727*FLEN/8, x4, x1, x2)

inst_69848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:209544*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209544*0 + 3*728*FLEN/8, x4, x1, x2)

inst_69849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:209547*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209547*0 + 3*729*FLEN/8, x4, x1, x2)

inst_69850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:209550*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209550*0 + 3*730*FLEN/8, x4, x1, x2)

inst_69851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:209553*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209553*0 + 3*731*FLEN/8, x4, x1, x2)

inst_69852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:209556*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209556*0 + 3*732*FLEN/8, x4, x1, x2)

inst_69853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:209559*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209559*0 + 3*733*FLEN/8, x4, x1, x2)

inst_69854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:209562*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209562*0 + 3*734*FLEN/8, x4, x1, x2)

inst_69855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:209565*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209565*0 + 3*735*FLEN/8, x4, x1, x2)

inst_69856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:209568*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209568*0 + 3*736*FLEN/8, x4, x1, x2)

inst_69857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:209571*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209571*0 + 3*737*FLEN/8, x4, x1, x2)

inst_69858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:209574*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209574*0 + 3*738*FLEN/8, x4, x1, x2)

inst_69859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:209577*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209577*0 + 3*739*FLEN/8, x4, x1, x2)

inst_69860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:209580*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209580*0 + 3*740*FLEN/8, x4, x1, x2)

inst_69861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:209583*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209583*0 + 3*741*FLEN/8, x4, x1, x2)

inst_69862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:209586*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209586*0 + 3*742*FLEN/8, x4, x1, x2)

inst_69863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:209589*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209589*0 + 3*743*FLEN/8, x4, x1, x2)

inst_69864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:209592*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209592*0 + 3*744*FLEN/8, x4, x1, x2)

inst_69865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:209595*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209595*0 + 3*745*FLEN/8, x4, x1, x2)

inst_69866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:209598*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209598*0 + 3*746*FLEN/8, x4, x1, x2)

inst_69867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:209601*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209601*0 + 3*747*FLEN/8, x4, x1, x2)

inst_69868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:209604*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209604*0 + 3*748*FLEN/8, x4, x1, x2)

inst_69869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:209607*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209607*0 + 3*749*FLEN/8, x4, x1, x2)

inst_69870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:209610*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209610*0 + 3*750*FLEN/8, x4, x1, x2)

inst_69871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:209613*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209613*0 + 3*751*FLEN/8, x4, x1, x2)

inst_69872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:209616*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209616*0 + 3*752*FLEN/8, x4, x1, x2)

inst_69873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:209619*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209619*0 + 3*753*FLEN/8, x4, x1, x2)

inst_69874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:209622*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209622*0 + 3*754*FLEN/8, x4, x1, x2)

inst_69875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:209625*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209625*0 + 3*755*FLEN/8, x4, x1, x2)

inst_69876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:209628*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209628*0 + 3*756*FLEN/8, x4, x1, x2)

inst_69877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:209631*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209631*0 + 3*757*FLEN/8, x4, x1, x2)

inst_69878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:209634*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209634*0 + 3*758*FLEN/8, x4, x1, x2)

inst_69879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:209637*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209637*0 + 3*759*FLEN/8, x4, x1, x2)

inst_69880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:209640*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209640*0 + 3*760*FLEN/8, x4, x1, x2)

inst_69881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:209643*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209643*0 + 3*761*FLEN/8, x4, x1, x2)

inst_69882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:209646*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209646*0 + 3*762*FLEN/8, x4, x1, x2)

inst_69883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:209649*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209649*0 + 3*763*FLEN/8, x4, x1, x2)

inst_69884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:209652*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209652*0 + 3*764*FLEN/8, x4, x1, x2)

inst_69885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:209655*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209655*0 + 3*765*FLEN/8, x4, x1, x2)

inst_69886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:209658*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209658*0 + 3*766*FLEN/8, x4, x1, x2)

inst_69887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x546222a2b98e9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa546222a2b98e9; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:209661*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 209661*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878004736,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878005760,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006272,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006528,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006656,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006720,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006752,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006768,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006776,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006780,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006782,64,FLEN)
NAN_BOXED(6891953172796838177,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006783,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859264,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859265,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859267,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859271,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859279,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859295,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859327,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859391,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859519,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859775,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014860287,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014861311,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014863359,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014867455,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014875647,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014892031,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014924799,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014990335,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015121407,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015383551,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015907839,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378016956415,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378019053567,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378023247871,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378031636479,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378048413695,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378081968127,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378149076991,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378283294719,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378551730175,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712379088601087,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712380162342911,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712382309826559,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712386604793855,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712395194728447,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712412374597631,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712446734335999,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712515453812735,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712652892766207,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712927770673151,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265713477526487039,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265714577038114815,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265716776061370367,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265721174107881471,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265729970200903679,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265747562386948095,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265782746759036927,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265853115503214591,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265993852991569919,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266275327968280575,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266838277921701887,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544511,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544512,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269090077735387136,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269653027688808448,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269934502665519104,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270075240153874432,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270145608898052096,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270180793270140928,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270198385456185344,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270207181549207552,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270211579595718656,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270213778618974208,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270214878130601984,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215427886415872,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215702764322816,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215840203276288,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215908922753024,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215943282491392,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215960462360576,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215969052295168,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215973347262464,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215975494746112,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215976568487936,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977105358848,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977373794304,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977508012032,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977575120896,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977608675328,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977625452544,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977633841152,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977638035456,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977640132608,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641181184,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641705472,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641967616,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642098688,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642164224,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642196992,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642213376,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642221568,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642225664,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642227712,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642228736,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229248,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229504,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229632,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229696,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229728,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229744,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229752,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229756,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229758,64,FLEN)
NAN_BOXED(6891956149594047596,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229759,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779648,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779649,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779651,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779655,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779663,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779679,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779711,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779775,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898779903,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898780159,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898780671,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898781695,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898783743,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898787839,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898796031,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898812415,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898845183,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695898910719,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695899041791,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695899303935,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695899828223,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695900876799,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695902973951,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695907168255,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695915556863,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695932334079,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165695965888511,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165696032997375,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165696167215103,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165696435650559,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165696972521471,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165698046263295,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165700193746943,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165704488714239,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165713078648831,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165730258518015,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165764618256383,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165833337733119,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344165970776686591,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344166245654593535,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344166795410407423,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344167894922035199,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344170093945290751,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344174491991801855,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344183288084824063,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344200880270868479,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344236064642957311,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344306433387134975,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344447170875490303,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13344728645852200959,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13345291595805622271,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13346417495712464895,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13346417495712464896,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13347543395619307520,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348106345572728832,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348387820549439488,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348528558037794816,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348598926781972480,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348634111154061312,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348651703340105728,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348660499433127936,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348664897479639040,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348667096502894592,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348668196014522368,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348668745770336256,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669020648243200,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669158087196672,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669226806673408,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669261166411776,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669278346280960,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669286936215552,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669291231182848,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669293378666496,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669294452408320,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669294989279232,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295257714688,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295391932416,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295459041280,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295492595712,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295509372928,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295517761536,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295521955840,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295524052992,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295525101568,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295525625856,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295525888000,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526019072,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526084608,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526117376,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526133760,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526141952,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526146048,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526148096,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526149120,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526149632,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526149888,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150016,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150080,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150112,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150128,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150136,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150140,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150142,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13348669295526150143,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891965104824016359,64,FLEN)
NAN_BOXED(11513501770428486222,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341248,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341249,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341251,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341255,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341263,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341279,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341311,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341375,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341503,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341759,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524342271,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524343295,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524345343,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524349439,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524357631,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524374015,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524406783,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524472319,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524603391,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524865535,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776525389823,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776526438399,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776528535551,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776532729855,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776541118463,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776557895679,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776591450111,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776658558975,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776792776703,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777061212159,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726777598083071,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726778671824895,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726780819308543,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726785114275839,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726793704210431,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726810884079615,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726845243817983,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726913963294719,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727051402248191,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727326280155135,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283727876035969023,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283728975547596799,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283731174570852351,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283735572617363455,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283744368710385663,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283761960896430079,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283797145268518911,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283867514012696575,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284008251501051903,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284289726477762559,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(284852676431183871,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026495,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(285978576338026496,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287104476244869120,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287667426198290432,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(287948901175001088,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288089638663356416,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288160007407534080,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288195191779622912,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288212783965667328,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288221580058689536,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288225978105200640,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288228177128456192,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229276640083968,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288229826395897856,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230101273804800,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230238712758272,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230307432235008,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230341791973376,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230358971842560,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230367561777152,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230371856744448,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230374004228096,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375077969920,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375614840832,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230375883276288,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376017494016,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376084602880,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376118157312,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376134934528,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376143323136,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376147517440,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376149614592,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376150663168,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151187456,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151449600,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151580672,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151646208,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151678976,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151695360,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151703552,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151707648,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151709696,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151710720,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711232,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711488,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711616,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711680,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711712,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711728,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711736,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711740,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711742,64,FLEN)
NAN_BOXED(6891982429054607603,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711743,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6891986920960903084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118272,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118273,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118275,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118279,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118287,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118303,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118335,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118399,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118527,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118783,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760119295,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760120319,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760122367,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760126463,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760134655,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760151039,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760183807,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760249343,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760380415,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760642559,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178761166847,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178762215423,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178764312575,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178768506879,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178776895487,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178793672703,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178827227135,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178894335999,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179028553727,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179296989183,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179833860095,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705180907601919,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705183055085567,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705187350052863,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705195939987455,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705213119856639,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705247479595007,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705316199071743,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705453638025215,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705728515932159,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256706278271746047,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256707377783373823,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256709576806629375,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256713974853140479,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256722770946162687,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256740363132207103,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256775547504295935,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256845916248473599,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256986653736828927,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257268128713539583,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257831078666960895,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803519,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803520,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260082878480646144,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260645828434067456,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260927303410778112,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261068040899133440,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261138409643311104,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261173594015399936,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261191186201444352,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261199982294466560,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261204380340977664,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261206579364233216,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261207678875860992,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208228631674880,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208503509581824,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208640948535296,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208709668012032,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208744027750400,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208761207619584,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208769797554176,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208774092521472,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208776240005120,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777313746944,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777850617856,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778119053312,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778253271040,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778320379904,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778353934336,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778370711552,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778379100160,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778383294464,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778385391616,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386440192,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386964480,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387226624,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387357696,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387423232,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387456000,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387472384,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387480576,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387484672,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387486720,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387487744,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488256,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488512,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488640,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488704,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488736,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488752,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488760,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488764,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488766,64,FLEN)
NAN_BOXED(6891991307601914073,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488767,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891991917310744809,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
