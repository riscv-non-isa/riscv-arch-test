
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_37632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:112896*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112896*0 + 3*0*FLEN/8, x4, x1, x2)

inst_37633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:112899*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112899*0 + 3*1*FLEN/8, x4, x1, x2)

inst_37634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:112902*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112902*0 + 3*2*FLEN/8, x4, x1, x2)

inst_37635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:112905*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112905*0 + 3*3*FLEN/8, x4, x1, x2)

inst_37636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:112908*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112908*0 + 3*4*FLEN/8, x4, x1, x2)

inst_37637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:112911*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112911*0 + 3*5*FLEN/8, x4, x1, x2)

inst_37638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:112914*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112914*0 + 3*6*FLEN/8, x4, x1, x2)

inst_37639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:112917*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112917*0 + 3*7*FLEN/8, x4, x1, x2)

inst_37640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:112920*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112920*0 + 3*8*FLEN/8, x4, x1, x2)

inst_37641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:112923*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112923*0 + 3*9*FLEN/8, x4, x1, x2)

inst_37642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:112926*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112926*0 + 3*10*FLEN/8, x4, x1, x2)

inst_37643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:112929*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112929*0 + 3*11*FLEN/8, x4, x1, x2)

inst_37644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:112932*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112932*0 + 3*12*FLEN/8, x4, x1, x2)

inst_37645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:112935*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112935*0 + 3*13*FLEN/8, x4, x1, x2)

inst_37646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:112938*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112938*0 + 3*14*FLEN/8, x4, x1, x2)

inst_37647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:112941*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112941*0 + 3*15*FLEN/8, x4, x1, x2)

inst_37648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:112944*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112944*0 + 3*16*FLEN/8, x4, x1, x2)

inst_37649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:112947*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112947*0 + 3*17*FLEN/8, x4, x1, x2)

inst_37650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:112950*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112950*0 + 3*18*FLEN/8, x4, x1, x2)

inst_37651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:112953*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112953*0 + 3*19*FLEN/8, x4, x1, x2)

inst_37652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:112956*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112956*0 + 3*20*FLEN/8, x4, x1, x2)

inst_37653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:112959*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112959*0 + 3*21*FLEN/8, x4, x1, x2)

inst_37654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:112962*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112962*0 + 3*22*FLEN/8, x4, x1, x2)

inst_37655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:112965*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112965*0 + 3*23*FLEN/8, x4, x1, x2)

inst_37656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:112968*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112968*0 + 3*24*FLEN/8, x4, x1, x2)

inst_37657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:112971*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112971*0 + 3*25*FLEN/8, x4, x1, x2)

inst_37658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:112974*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112974*0 + 3*26*FLEN/8, x4, x1, x2)

inst_37659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:112977*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112977*0 + 3*27*FLEN/8, x4, x1, x2)

inst_37660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:112980*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112980*0 + 3*28*FLEN/8, x4, x1, x2)

inst_37661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:112983*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112983*0 + 3*29*FLEN/8, x4, x1, x2)

inst_37662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:112986*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112986*0 + 3*30*FLEN/8, x4, x1, x2)

inst_37663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:112989*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112989*0 + 3*31*FLEN/8, x4, x1, x2)

inst_37664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:112992*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112992*0 + 3*32*FLEN/8, x4, x1, x2)

inst_37665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:112995*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112995*0 + 3*33*FLEN/8, x4, x1, x2)

inst_37666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:112998*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 112998*0 + 3*34*FLEN/8, x4, x1, x2)

inst_37667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:113001*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113001*0 + 3*35*FLEN/8, x4, x1, x2)

inst_37668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:113004*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113004*0 + 3*36*FLEN/8, x4, x1, x2)

inst_37669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:113007*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113007*0 + 3*37*FLEN/8, x4, x1, x2)

inst_37670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:113010*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113010*0 + 3*38*FLEN/8, x4, x1, x2)

inst_37671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:113013*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113013*0 + 3*39*FLEN/8, x4, x1, x2)

inst_37672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:113016*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113016*0 + 3*40*FLEN/8, x4, x1, x2)

inst_37673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:113019*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113019*0 + 3*41*FLEN/8, x4, x1, x2)

inst_37674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:113022*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113022*0 + 3*42*FLEN/8, x4, x1, x2)

inst_37675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:113025*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113025*0 + 3*43*FLEN/8, x4, x1, x2)

inst_37676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:113028*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113028*0 + 3*44*FLEN/8, x4, x1, x2)

inst_37677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:113031*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113031*0 + 3*45*FLEN/8, x4, x1, x2)

inst_37678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:113034*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113034*0 + 3*46*FLEN/8, x4, x1, x2)

inst_37679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:113037*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113037*0 + 3*47*FLEN/8, x4, x1, x2)

inst_37680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:113040*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113040*0 + 3*48*FLEN/8, x4, x1, x2)

inst_37681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:113043*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113043*0 + 3*49*FLEN/8, x4, x1, x2)

inst_37682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:113046*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113046*0 + 3*50*FLEN/8, x4, x1, x2)

inst_37683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:113049*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113049*0 + 3*51*FLEN/8, x4, x1, x2)

inst_37684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:113052*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113052*0 + 3*52*FLEN/8, x4, x1, x2)

inst_37685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:113055*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113055*0 + 3*53*FLEN/8, x4, x1, x2)

inst_37686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:113058*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113058*0 + 3*54*FLEN/8, x4, x1, x2)

inst_37687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:113061*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113061*0 + 3*55*FLEN/8, x4, x1, x2)

inst_37688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:113064*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113064*0 + 3*56*FLEN/8, x4, x1, x2)

inst_37689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:113067*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113067*0 + 3*57*FLEN/8, x4, x1, x2)

inst_37690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:113070*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113070*0 + 3*58*FLEN/8, x4, x1, x2)

inst_37691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7989e71469703 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97989e71469703; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:113073*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113073*0 + 3*59*FLEN/8, x4, x1, x2)

inst_37692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:113076*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113076*0 + 3*60*FLEN/8, x4, x1, x2)

inst_37693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:113079*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113079*0 + 3*61*FLEN/8, x4, x1, x2)

inst_37694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:113082*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113082*0 + 3*62*FLEN/8, x4, x1, x2)

inst_37695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:113085*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113085*0 + 3*63*FLEN/8, x4, x1, x2)

inst_37696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:113088*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113088*0 + 3*64*FLEN/8, x4, x1, x2)

inst_37697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:113091*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113091*0 + 3*65*FLEN/8, x4, x1, x2)

inst_37698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:113094*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113094*0 + 3*66*FLEN/8, x4, x1, x2)

inst_37699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:113097*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113097*0 + 3*67*FLEN/8, x4, x1, x2)

inst_37700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:113100*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113100*0 + 3*68*FLEN/8, x4, x1, x2)

inst_37701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:113103*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113103*0 + 3*69*FLEN/8, x4, x1, x2)

inst_37702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:113106*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113106*0 + 3*70*FLEN/8, x4, x1, x2)

inst_37703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:113109*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113109*0 + 3*71*FLEN/8, x4, x1, x2)

inst_37704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:113112*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113112*0 + 3*72*FLEN/8, x4, x1, x2)

inst_37705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:113115*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113115*0 + 3*73*FLEN/8, x4, x1, x2)

inst_37706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:113118*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113118*0 + 3*74*FLEN/8, x4, x1, x2)

inst_37707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:113121*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113121*0 + 3*75*FLEN/8, x4, x1, x2)

inst_37708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:113124*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113124*0 + 3*76*FLEN/8, x4, x1, x2)

inst_37709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:113127*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113127*0 + 3*77*FLEN/8, x4, x1, x2)

inst_37710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:113130*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113130*0 + 3*78*FLEN/8, x4, x1, x2)

inst_37711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:113133*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113133*0 + 3*79*FLEN/8, x4, x1, x2)

inst_37712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:113136*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113136*0 + 3*80*FLEN/8, x4, x1, x2)

inst_37713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:113139*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113139*0 + 3*81*FLEN/8, x4, x1, x2)

inst_37714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000000000; valaddr_reg:x3; val_offset:113142*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113142*0 + 3*82*FLEN/8, x4, x1, x2)

inst_37715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000000001; valaddr_reg:x3; val_offset:113145*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113145*0 + 3*83*FLEN/8, x4, x1, x2)

inst_37716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000000003; valaddr_reg:x3; val_offset:113148*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113148*0 + 3*84*FLEN/8, x4, x1, x2)

inst_37717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000000007; valaddr_reg:x3; val_offset:113151*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113151*0 + 3*85*FLEN/8, x4, x1, x2)

inst_37718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000000000f; valaddr_reg:x3; val_offset:113154*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113154*0 + 3*86*FLEN/8, x4, x1, x2)

inst_37719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000000001f; valaddr_reg:x3; val_offset:113157*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113157*0 + 3*87*FLEN/8, x4, x1, x2)

inst_37720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000000003f; valaddr_reg:x3; val_offset:113160*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113160*0 + 3*88*FLEN/8, x4, x1, x2)

inst_37721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000000007f; valaddr_reg:x3; val_offset:113163*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113163*0 + 3*89*FLEN/8, x4, x1, x2)

inst_37722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000000000ff; valaddr_reg:x3; val_offset:113166*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113166*0 + 3*90*FLEN/8, x4, x1, x2)

inst_37723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000000001ff; valaddr_reg:x3; val_offset:113169*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113169*0 + 3*91*FLEN/8, x4, x1, x2)

inst_37724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000000003ff; valaddr_reg:x3; val_offset:113172*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113172*0 + 3*92*FLEN/8, x4, x1, x2)

inst_37725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000000007ff; valaddr_reg:x3; val_offset:113175*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113175*0 + 3*93*FLEN/8, x4, x1, x2)

inst_37726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000000fff; valaddr_reg:x3; val_offset:113178*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113178*0 + 3*94*FLEN/8, x4, x1, x2)

inst_37727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000001fff; valaddr_reg:x3; val_offset:113181*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113181*0 + 3*95*FLEN/8, x4, x1, x2)

inst_37728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000003fff; valaddr_reg:x3; val_offset:113184*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113184*0 + 3*96*FLEN/8, x4, x1, x2)

inst_37729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000007fff; valaddr_reg:x3; val_offset:113187*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113187*0 + 3*97*FLEN/8, x4, x1, x2)

inst_37730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000000ffff; valaddr_reg:x3; val_offset:113190*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113190*0 + 3*98*FLEN/8, x4, x1, x2)

inst_37731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000001ffff; valaddr_reg:x3; val_offset:113193*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113193*0 + 3*99*FLEN/8, x4, x1, x2)

inst_37732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000003ffff; valaddr_reg:x3; val_offset:113196*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113196*0 + 3*100*FLEN/8, x4, x1, x2)

inst_37733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000007ffff; valaddr_reg:x3; val_offset:113199*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113199*0 + 3*101*FLEN/8, x4, x1, x2)

inst_37734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000000fffff; valaddr_reg:x3; val_offset:113202*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113202*0 + 3*102*FLEN/8, x4, x1, x2)

inst_37735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000001fffff; valaddr_reg:x3; val_offset:113205*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113205*0 + 3*103*FLEN/8, x4, x1, x2)

inst_37736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000003fffff; valaddr_reg:x3; val_offset:113208*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113208*0 + 3*104*FLEN/8, x4, x1, x2)

inst_37737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000007fffff; valaddr_reg:x3; val_offset:113211*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113211*0 + 3*105*FLEN/8, x4, x1, x2)

inst_37738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000000ffffff; valaddr_reg:x3; val_offset:113214*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113214*0 + 3*106*FLEN/8, x4, x1, x2)

inst_37739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000001ffffff; valaddr_reg:x3; val_offset:113217*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113217*0 + 3*107*FLEN/8, x4, x1, x2)

inst_37740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000003ffffff; valaddr_reg:x3; val_offset:113220*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113220*0 + 3*108*FLEN/8, x4, x1, x2)

inst_37741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000007ffffff; valaddr_reg:x3; val_offset:113223*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113223*0 + 3*109*FLEN/8, x4, x1, x2)

inst_37742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000000fffffff; valaddr_reg:x3; val_offset:113226*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113226*0 + 3*110*FLEN/8, x4, x1, x2)

inst_37743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000001fffffff; valaddr_reg:x3; val_offset:113229*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113229*0 + 3*111*FLEN/8, x4, x1, x2)

inst_37744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000003fffffff; valaddr_reg:x3; val_offset:113232*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113232*0 + 3*112*FLEN/8, x4, x1, x2)

inst_37745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000007fffffff; valaddr_reg:x3; val_offset:113235*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113235*0 + 3*113*FLEN/8, x4, x1, x2)

inst_37746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900000ffffffff; valaddr_reg:x3; val_offset:113238*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113238*0 + 3*114*FLEN/8, x4, x1, x2)

inst_37747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900001ffffffff; valaddr_reg:x3; val_offset:113241*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113241*0 + 3*115*FLEN/8, x4, x1, x2)

inst_37748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900003ffffffff; valaddr_reg:x3; val_offset:113244*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113244*0 + 3*116*FLEN/8, x4, x1, x2)

inst_37749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900007ffffffff; valaddr_reg:x3; val_offset:113247*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113247*0 + 3*117*FLEN/8, x4, x1, x2)

inst_37750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190000fffffffff; valaddr_reg:x3; val_offset:113250*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113250*0 + 3*118*FLEN/8, x4, x1, x2)

inst_37751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190001fffffffff; valaddr_reg:x3; val_offset:113253*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113253*0 + 3*119*FLEN/8, x4, x1, x2)

inst_37752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190003fffffffff; valaddr_reg:x3; val_offset:113256*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113256*0 + 3*120*FLEN/8, x4, x1, x2)

inst_37753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190007fffffffff; valaddr_reg:x3; val_offset:113259*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113259*0 + 3*121*FLEN/8, x4, x1, x2)

inst_37754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819000ffffffffff; valaddr_reg:x3; val_offset:113262*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113262*0 + 3*122*FLEN/8, x4, x1, x2)

inst_37755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819001ffffffffff; valaddr_reg:x3; val_offset:113265*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113265*0 + 3*123*FLEN/8, x4, x1, x2)

inst_37756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819003ffffffffff; valaddr_reg:x3; val_offset:113268*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113268*0 + 3*124*FLEN/8, x4, x1, x2)

inst_37757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819007ffffffffff; valaddr_reg:x3; val_offset:113271*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113271*0 + 3*125*FLEN/8, x4, x1, x2)

inst_37758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81900fffffffffff; valaddr_reg:x3; val_offset:113274*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113274*0 + 3*126*FLEN/8, x4, x1, x2)

inst_37759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81901fffffffffff; valaddr_reg:x3; val_offset:113277*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113277*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_37760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81903fffffffffff; valaddr_reg:x3; val_offset:113280*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113280*0 + 3*128*FLEN/8, x4, x1, x2)

inst_37761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x81907fffffffffff; valaddr_reg:x3; val_offset:113283*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113283*0 + 3*129*FLEN/8, x4, x1, x2)

inst_37762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8190ffffffffffff; valaddr_reg:x3; val_offset:113286*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113286*0 + 3*130*FLEN/8, x4, x1, x2)

inst_37763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8191ffffffffffff; valaddr_reg:x3; val_offset:113289*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113289*0 + 3*131*FLEN/8, x4, x1, x2)

inst_37764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8193ffffffffffff; valaddr_reg:x3; val_offset:113292*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113292*0 + 3*132*FLEN/8, x4, x1, x2)

inst_37765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8197ffffffffffff; valaddr_reg:x3; val_offset:113295*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113295*0 + 3*133*FLEN/8, x4, x1, x2)

inst_37766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x8198000000000000; valaddr_reg:x3; val_offset:113298*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113298*0 + 3*134*FLEN/8, x4, x1, x2)

inst_37767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819c000000000000; valaddr_reg:x3; val_offset:113301*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113301*0 + 3*135*FLEN/8, x4, x1, x2)

inst_37768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819e000000000000; valaddr_reg:x3; val_offset:113304*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113304*0 + 3*136*FLEN/8, x4, x1, x2)

inst_37769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819f000000000000; valaddr_reg:x3; val_offset:113307*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113307*0 + 3*137*FLEN/8, x4, x1, x2)

inst_37770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819f800000000000; valaddr_reg:x3; val_offset:113310*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113310*0 + 3*138*FLEN/8, x4, x1, x2)

inst_37771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fc00000000000; valaddr_reg:x3; val_offset:113313*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113313*0 + 3*139*FLEN/8, x4, x1, x2)

inst_37772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fe00000000000; valaddr_reg:x3; val_offset:113316*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113316*0 + 3*140*FLEN/8, x4, x1, x2)

inst_37773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ff00000000000; valaddr_reg:x3; val_offset:113319*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113319*0 + 3*141*FLEN/8, x4, x1, x2)

inst_37774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ff80000000000; valaddr_reg:x3; val_offset:113322*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113322*0 + 3*142*FLEN/8, x4, x1, x2)

inst_37775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffc0000000000; valaddr_reg:x3; val_offset:113325*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113325*0 + 3*143*FLEN/8, x4, x1, x2)

inst_37776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffe0000000000; valaddr_reg:x3; val_offset:113328*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113328*0 + 3*144*FLEN/8, x4, x1, x2)

inst_37777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fff0000000000; valaddr_reg:x3; val_offset:113331*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113331*0 + 3*145*FLEN/8, x4, x1, x2)

inst_37778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fff8000000000; valaddr_reg:x3; val_offset:113334*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113334*0 + 3*146*FLEN/8, x4, x1, x2)

inst_37779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffc000000000; valaddr_reg:x3; val_offset:113337*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113337*0 + 3*147*FLEN/8, x4, x1, x2)

inst_37780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffe000000000; valaddr_reg:x3; val_offset:113340*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113340*0 + 3*148*FLEN/8, x4, x1, x2)

inst_37781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffff000000000; valaddr_reg:x3; val_offset:113343*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113343*0 + 3*149*FLEN/8, x4, x1, x2)

inst_37782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffff800000000; valaddr_reg:x3; val_offset:113346*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113346*0 + 3*150*FLEN/8, x4, x1, x2)

inst_37783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffc00000000; valaddr_reg:x3; val_offset:113349*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113349*0 + 3*151*FLEN/8, x4, x1, x2)

inst_37784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffe00000000; valaddr_reg:x3; val_offset:113352*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113352*0 + 3*152*FLEN/8, x4, x1, x2)

inst_37785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffff00000000; valaddr_reg:x3; val_offset:113355*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113355*0 + 3*153*FLEN/8, x4, x1, x2)

inst_37786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffff80000000; valaddr_reg:x3; val_offset:113358*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113358*0 + 3*154*FLEN/8, x4, x1, x2)

inst_37787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffc0000000; valaddr_reg:x3; val_offset:113361*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113361*0 + 3*155*FLEN/8, x4, x1, x2)

inst_37788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffe0000000; valaddr_reg:x3; val_offset:113364*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113364*0 + 3*156*FLEN/8, x4, x1, x2)

inst_37789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffff0000000; valaddr_reg:x3; val_offset:113367*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113367*0 + 3*157*FLEN/8, x4, x1, x2)

inst_37790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffff8000000; valaddr_reg:x3; val_offset:113370*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113370*0 + 3*158*FLEN/8, x4, x1, x2)

inst_37791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffc000000; valaddr_reg:x3; val_offset:113373*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113373*0 + 3*159*FLEN/8, x4, x1, x2)

inst_37792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffe000000; valaddr_reg:x3; val_offset:113376*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113376*0 + 3*160*FLEN/8, x4, x1, x2)

inst_37793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffff000000; valaddr_reg:x3; val_offset:113379*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113379*0 + 3*161*FLEN/8, x4, x1, x2)

inst_37794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffff800000; valaddr_reg:x3; val_offset:113382*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113382*0 + 3*162*FLEN/8, x4, x1, x2)

inst_37795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffc00000; valaddr_reg:x3; val_offset:113385*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113385*0 + 3*163*FLEN/8, x4, x1, x2)

inst_37796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffe00000; valaddr_reg:x3; val_offset:113388*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113388*0 + 3*164*FLEN/8, x4, x1, x2)

inst_37797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffff00000; valaddr_reg:x3; val_offset:113391*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113391*0 + 3*165*FLEN/8, x4, x1, x2)

inst_37798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffff80000; valaddr_reg:x3; val_offset:113394*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113394*0 + 3*166*FLEN/8, x4, x1, x2)

inst_37799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffc0000; valaddr_reg:x3; val_offset:113397*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113397*0 + 3*167*FLEN/8, x4, x1, x2)

inst_37800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffe0000; valaddr_reg:x3; val_offset:113400*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113400*0 + 3*168*FLEN/8, x4, x1, x2)

inst_37801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffff0000; valaddr_reg:x3; val_offset:113403*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113403*0 + 3*169*FLEN/8, x4, x1, x2)

inst_37802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffff8000; valaddr_reg:x3; val_offset:113406*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113406*0 + 3*170*FLEN/8, x4, x1, x2)

inst_37803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffffc000; valaddr_reg:x3; val_offset:113409*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113409*0 + 3*171*FLEN/8, x4, x1, x2)

inst_37804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffffe000; valaddr_reg:x3; val_offset:113412*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113412*0 + 3*172*FLEN/8, x4, x1, x2)

inst_37805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffff000; valaddr_reg:x3; val_offset:113415*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113415*0 + 3*173*FLEN/8, x4, x1, x2)

inst_37806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffff800; valaddr_reg:x3; val_offset:113418*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113418*0 + 3*174*FLEN/8, x4, x1, x2)

inst_37807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffffc00; valaddr_reg:x3; val_offset:113421*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113421*0 + 3*175*FLEN/8, x4, x1, x2)

inst_37808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffffe00; valaddr_reg:x3; val_offset:113424*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113424*0 + 3*176*FLEN/8, x4, x1, x2)

inst_37809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffffff00; valaddr_reg:x3; val_offset:113427*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113427*0 + 3*177*FLEN/8, x4, x1, x2)

inst_37810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffffff80; valaddr_reg:x3; val_offset:113430*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113430*0 + 3*178*FLEN/8, x4, x1, x2)

inst_37811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffffffc0; valaddr_reg:x3; val_offset:113433*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113433*0 + 3*179*FLEN/8, x4, x1, x2)

inst_37812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffffffe0; valaddr_reg:x3; val_offset:113436*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113436*0 + 3*180*FLEN/8, x4, x1, x2)

inst_37813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffffff0; valaddr_reg:x3; val_offset:113439*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113439*0 + 3*181*FLEN/8, x4, x1, x2)

inst_37814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffffff8; valaddr_reg:x3; val_offset:113442*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113442*0 + 3*182*FLEN/8, x4, x1, x2)

inst_37815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffffffc; valaddr_reg:x3; val_offset:113445*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113445*0 + 3*183*FLEN/8, x4, x1, x2)

inst_37816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819ffffffffffffe; valaddr_reg:x3; val_offset:113448*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113448*0 + 3*184*FLEN/8, x4, x1, x2)

inst_37817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x7b3d8531d2915 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f97b3d8531d2915; op2val:0x8000;
op3val:0x819fffffffffffff; valaddr_reg:x3; val_offset:113451*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113451*0 + 3*185*FLEN/8, x4, x1, x2)

inst_37818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:113454*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113454*0 + 3*186*FLEN/8, x4, x1, x2)

inst_37819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:113457*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113457*0 + 3*187*FLEN/8, x4, x1, x2)

inst_37820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:113460*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113460*0 + 3*188*FLEN/8, x4, x1, x2)

inst_37821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:113463*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113463*0 + 3*189*FLEN/8, x4, x1, x2)

inst_37822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:113466*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113466*0 + 3*190*FLEN/8, x4, x1, x2)

inst_37823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:113469*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113469*0 + 3*191*FLEN/8, x4, x1, x2)

inst_37824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:113472*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113472*0 + 3*192*FLEN/8, x4, x1, x2)

inst_37825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:113475*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113475*0 + 3*193*FLEN/8, x4, x1, x2)

inst_37826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:113478*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113478*0 + 3*194*FLEN/8, x4, x1, x2)

inst_37827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:113481*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113481*0 + 3*195*FLEN/8, x4, x1, x2)

inst_37828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:113484*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113484*0 + 3*196*FLEN/8, x4, x1, x2)

inst_37829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:113487*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113487*0 + 3*197*FLEN/8, x4, x1, x2)

inst_37830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:113490*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113490*0 + 3*198*FLEN/8, x4, x1, x2)

inst_37831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:113493*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113493*0 + 3*199*FLEN/8, x4, x1, x2)

inst_37832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:113496*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113496*0 + 3*200*FLEN/8, x4, x1, x2)

inst_37833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:113499*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113499*0 + 3*201*FLEN/8, x4, x1, x2)

inst_37834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:113502*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113502*0 + 3*202*FLEN/8, x4, x1, x2)

inst_37835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:113505*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113505*0 + 3*203*FLEN/8, x4, x1, x2)

inst_37836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:113508*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113508*0 + 3*204*FLEN/8, x4, x1, x2)

inst_37837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:113511*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113511*0 + 3*205*FLEN/8, x4, x1, x2)

inst_37838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:113514*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113514*0 + 3*206*FLEN/8, x4, x1, x2)

inst_37839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:113517*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113517*0 + 3*207*FLEN/8, x4, x1, x2)

inst_37840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000000000; valaddr_reg:x3; val_offset:113520*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113520*0 + 3*208*FLEN/8, x4, x1, x2)

inst_37841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000000001; valaddr_reg:x3; val_offset:113523*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113523*0 + 3*209*FLEN/8, x4, x1, x2)

inst_37842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000000003; valaddr_reg:x3; val_offset:113526*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113526*0 + 3*210*FLEN/8, x4, x1, x2)

inst_37843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000000007; valaddr_reg:x3; val_offset:113529*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113529*0 + 3*211*FLEN/8, x4, x1, x2)

inst_37844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000000000f; valaddr_reg:x3; val_offset:113532*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113532*0 + 3*212*FLEN/8, x4, x1, x2)

inst_37845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000000001f; valaddr_reg:x3; val_offset:113535*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113535*0 + 3*213*FLEN/8, x4, x1, x2)

inst_37846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000000003f; valaddr_reg:x3; val_offset:113538*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113538*0 + 3*214*FLEN/8, x4, x1, x2)

inst_37847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000000007f; valaddr_reg:x3; val_offset:113541*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113541*0 + 3*215*FLEN/8, x4, x1, x2)

inst_37848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000000000ff; valaddr_reg:x3; val_offset:113544*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113544*0 + 3*216*FLEN/8, x4, x1, x2)

inst_37849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000000001ff; valaddr_reg:x3; val_offset:113547*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113547*0 + 3*217*FLEN/8, x4, x1, x2)

inst_37850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000000003ff; valaddr_reg:x3; val_offset:113550*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113550*0 + 3*218*FLEN/8, x4, x1, x2)

inst_37851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000000007ff; valaddr_reg:x3; val_offset:113553*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113553*0 + 3*219*FLEN/8, x4, x1, x2)

inst_37852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000000fff; valaddr_reg:x3; val_offset:113556*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113556*0 + 3*220*FLEN/8, x4, x1, x2)

inst_37853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000001fff; valaddr_reg:x3; val_offset:113559*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113559*0 + 3*221*FLEN/8, x4, x1, x2)

inst_37854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000003fff; valaddr_reg:x3; val_offset:113562*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113562*0 + 3*222*FLEN/8, x4, x1, x2)

inst_37855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000007fff; valaddr_reg:x3; val_offset:113565*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113565*0 + 3*223*FLEN/8, x4, x1, x2)

inst_37856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000000ffff; valaddr_reg:x3; val_offset:113568*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113568*0 + 3*224*FLEN/8, x4, x1, x2)

inst_37857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000001ffff; valaddr_reg:x3; val_offset:113571*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113571*0 + 3*225*FLEN/8, x4, x1, x2)

inst_37858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000003ffff; valaddr_reg:x3; val_offset:113574*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113574*0 + 3*226*FLEN/8, x4, x1, x2)

inst_37859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000007ffff; valaddr_reg:x3; val_offset:113577*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113577*0 + 3*227*FLEN/8, x4, x1, x2)

inst_37860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000000fffff; valaddr_reg:x3; val_offset:113580*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113580*0 + 3*228*FLEN/8, x4, x1, x2)

inst_37861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000001fffff; valaddr_reg:x3; val_offset:113583*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113583*0 + 3*229*FLEN/8, x4, x1, x2)

inst_37862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000003fffff; valaddr_reg:x3; val_offset:113586*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113586*0 + 3*230*FLEN/8, x4, x1, x2)

inst_37863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000007fffff; valaddr_reg:x3; val_offset:113589*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113589*0 + 3*231*FLEN/8, x4, x1, x2)

inst_37864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000000ffffff; valaddr_reg:x3; val_offset:113592*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113592*0 + 3*232*FLEN/8, x4, x1, x2)

inst_37865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000001ffffff; valaddr_reg:x3; val_offset:113595*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113595*0 + 3*233*FLEN/8, x4, x1, x2)

inst_37866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000003ffffff; valaddr_reg:x3; val_offset:113598*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113598*0 + 3*234*FLEN/8, x4, x1, x2)

inst_37867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000007ffffff; valaddr_reg:x3; val_offset:113601*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113601*0 + 3*235*FLEN/8, x4, x1, x2)

inst_37868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000000fffffff; valaddr_reg:x3; val_offset:113604*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113604*0 + 3*236*FLEN/8, x4, x1, x2)

inst_37869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000001fffffff; valaddr_reg:x3; val_offset:113607*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113607*0 + 3*237*FLEN/8, x4, x1, x2)

inst_37870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000003fffffff; valaddr_reg:x3; val_offset:113610*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113610*0 + 3*238*FLEN/8, x4, x1, x2)

inst_37871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000007fffffff; valaddr_reg:x3; val_offset:113613*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113613*0 + 3*239*FLEN/8, x4, x1, x2)

inst_37872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00000ffffffff; valaddr_reg:x3; val_offset:113616*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113616*0 + 3*240*FLEN/8, x4, x1, x2)

inst_37873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00001ffffffff; valaddr_reg:x3; val_offset:113619*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113619*0 + 3*241*FLEN/8, x4, x1, x2)

inst_37874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00003ffffffff; valaddr_reg:x3; val_offset:113622*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113622*0 + 3*242*FLEN/8, x4, x1, x2)

inst_37875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00007ffffffff; valaddr_reg:x3; val_offset:113625*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113625*0 + 3*243*FLEN/8, x4, x1, x2)

inst_37876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0000fffffffff; valaddr_reg:x3; val_offset:113628*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113628*0 + 3*244*FLEN/8, x4, x1, x2)

inst_37877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0001fffffffff; valaddr_reg:x3; val_offset:113631*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113631*0 + 3*245*FLEN/8, x4, x1, x2)

inst_37878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0003fffffffff; valaddr_reg:x3; val_offset:113634*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113634*0 + 3*246*FLEN/8, x4, x1, x2)

inst_37879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0007fffffffff; valaddr_reg:x3; val_offset:113637*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113637*0 + 3*247*FLEN/8, x4, x1, x2)

inst_37880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe000ffffffffff; valaddr_reg:x3; val_offset:113640*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113640*0 + 3*248*FLEN/8, x4, x1, x2)

inst_37881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe001ffffffffff; valaddr_reg:x3; val_offset:113643*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113643*0 + 3*249*FLEN/8, x4, x1, x2)

inst_37882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe003ffffffffff; valaddr_reg:x3; val_offset:113646*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113646*0 + 3*250*FLEN/8, x4, x1, x2)

inst_37883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe007ffffffffff; valaddr_reg:x3; val_offset:113649*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113649*0 + 3*251*FLEN/8, x4, x1, x2)

inst_37884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe00fffffffffff; valaddr_reg:x3; val_offset:113652*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113652*0 + 3*252*FLEN/8, x4, x1, x2)

inst_37885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe01fffffffffff; valaddr_reg:x3; val_offset:113655*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113655*0 + 3*253*FLEN/8, x4, x1, x2)

inst_37886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe03fffffffffff; valaddr_reg:x3; val_offset:113658*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113658*0 + 3*254*FLEN/8, x4, x1, x2)

inst_37887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe07fffffffffff; valaddr_reg:x3; val_offset:113661*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113661*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_37888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe0ffffffffffff; valaddr_reg:x3; val_offset:113664*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113664*0 + 3*256*FLEN/8, x4, x1, x2)

inst_37889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe1ffffffffffff; valaddr_reg:x3; val_offset:113667*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113667*0 + 3*257*FLEN/8, x4, x1, x2)

inst_37890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe3ffffffffffff; valaddr_reg:x3; val_offset:113670*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113670*0 + 3*258*FLEN/8, x4, x1, x2)

inst_37891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe7ffffffffffff; valaddr_reg:x3; val_offset:113673*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113673*0 + 3*259*FLEN/8, x4, x1, x2)

inst_37892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xe8000000000000; valaddr_reg:x3; val_offset:113676*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113676*0 + 3*260*FLEN/8, x4, x1, x2)

inst_37893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xec000000000000; valaddr_reg:x3; val_offset:113679*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113679*0 + 3*261*FLEN/8, x4, x1, x2)

inst_37894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xee000000000000; valaddr_reg:x3; val_offset:113682*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113682*0 + 3*262*FLEN/8, x4, x1, x2)

inst_37895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xef000000000000; valaddr_reg:x3; val_offset:113685*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113685*0 + 3*263*FLEN/8, x4, x1, x2)

inst_37896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xef800000000000; valaddr_reg:x3; val_offset:113688*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113688*0 + 3*264*FLEN/8, x4, x1, x2)

inst_37897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefc00000000000; valaddr_reg:x3; val_offset:113691*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113691*0 + 3*265*FLEN/8, x4, x1, x2)

inst_37898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefe00000000000; valaddr_reg:x3; val_offset:113694*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113694*0 + 3*266*FLEN/8, x4, x1, x2)

inst_37899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeff00000000000; valaddr_reg:x3; val_offset:113697*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113697*0 + 3*267*FLEN/8, x4, x1, x2)

inst_37900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeff80000000000; valaddr_reg:x3; val_offset:113700*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113700*0 + 3*268*FLEN/8, x4, x1, x2)

inst_37901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffc0000000000; valaddr_reg:x3; val_offset:113703*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113703*0 + 3*269*FLEN/8, x4, x1, x2)

inst_37902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffe0000000000; valaddr_reg:x3; val_offset:113706*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113706*0 + 3*270*FLEN/8, x4, x1, x2)

inst_37903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefff0000000000; valaddr_reg:x3; val_offset:113709*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113709*0 + 3*271*FLEN/8, x4, x1, x2)

inst_37904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefff8000000000; valaddr_reg:x3; val_offset:113712*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113712*0 + 3*272*FLEN/8, x4, x1, x2)

inst_37905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffc000000000; valaddr_reg:x3; val_offset:113715*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113715*0 + 3*273*FLEN/8, x4, x1, x2)

inst_37906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffe000000000; valaddr_reg:x3; val_offset:113718*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113718*0 + 3*274*FLEN/8, x4, x1, x2)

inst_37907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffff000000000; valaddr_reg:x3; val_offset:113721*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113721*0 + 3*275*FLEN/8, x4, x1, x2)

inst_37908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffff800000000; valaddr_reg:x3; val_offset:113724*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113724*0 + 3*276*FLEN/8, x4, x1, x2)

inst_37909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffc00000000; valaddr_reg:x3; val_offset:113727*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113727*0 + 3*277*FLEN/8, x4, x1, x2)

inst_37910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffe00000000; valaddr_reg:x3; val_offset:113730*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113730*0 + 3*278*FLEN/8, x4, x1, x2)

inst_37911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffff00000000; valaddr_reg:x3; val_offset:113733*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113733*0 + 3*279*FLEN/8, x4, x1, x2)

inst_37912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffff80000000; valaddr_reg:x3; val_offset:113736*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113736*0 + 3*280*FLEN/8, x4, x1, x2)

inst_37913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffc0000000; valaddr_reg:x3; val_offset:113739*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113739*0 + 3*281*FLEN/8, x4, x1, x2)

inst_37914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffe0000000; valaddr_reg:x3; val_offset:113742*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113742*0 + 3*282*FLEN/8, x4, x1, x2)

inst_37915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffff0000000; valaddr_reg:x3; val_offset:113745*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113745*0 + 3*283*FLEN/8, x4, x1, x2)

inst_37916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffff8000000; valaddr_reg:x3; val_offset:113748*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113748*0 + 3*284*FLEN/8, x4, x1, x2)

inst_37917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffc000000; valaddr_reg:x3; val_offset:113751*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113751*0 + 3*285*FLEN/8, x4, x1, x2)

inst_37918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffe000000; valaddr_reg:x3; val_offset:113754*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113754*0 + 3*286*FLEN/8, x4, x1, x2)

inst_37919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffff000000; valaddr_reg:x3; val_offset:113757*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113757*0 + 3*287*FLEN/8, x4, x1, x2)

inst_37920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffff800000; valaddr_reg:x3; val_offset:113760*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113760*0 + 3*288*FLEN/8, x4, x1, x2)

inst_37921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffc00000; valaddr_reg:x3; val_offset:113763*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113763*0 + 3*289*FLEN/8, x4, x1, x2)

inst_37922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffe00000; valaddr_reg:x3; val_offset:113766*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113766*0 + 3*290*FLEN/8, x4, x1, x2)

inst_37923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffff00000; valaddr_reg:x3; val_offset:113769*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113769*0 + 3*291*FLEN/8, x4, x1, x2)

inst_37924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffff80000; valaddr_reg:x3; val_offset:113772*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113772*0 + 3*292*FLEN/8, x4, x1, x2)

inst_37925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffc0000; valaddr_reg:x3; val_offset:113775*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113775*0 + 3*293*FLEN/8, x4, x1, x2)

inst_37926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffe0000; valaddr_reg:x3; val_offset:113778*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113778*0 + 3*294*FLEN/8, x4, x1, x2)

inst_37927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffff0000; valaddr_reg:x3; val_offset:113781*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113781*0 + 3*295*FLEN/8, x4, x1, x2)

inst_37928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffff8000; valaddr_reg:x3; val_offset:113784*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113784*0 + 3*296*FLEN/8, x4, x1, x2)

inst_37929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffffc000; valaddr_reg:x3; val_offset:113787*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113787*0 + 3*297*FLEN/8, x4, x1, x2)

inst_37930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffffe000; valaddr_reg:x3; val_offset:113790*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113790*0 + 3*298*FLEN/8, x4, x1, x2)

inst_37931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffff000; valaddr_reg:x3; val_offset:113793*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113793*0 + 3*299*FLEN/8, x4, x1, x2)

inst_37932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffff800; valaddr_reg:x3; val_offset:113796*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113796*0 + 3*300*FLEN/8, x4, x1, x2)

inst_37933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffffc00; valaddr_reg:x3; val_offset:113799*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113799*0 + 3*301*FLEN/8, x4, x1, x2)

inst_37934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffffe00; valaddr_reg:x3; val_offset:113802*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113802*0 + 3*302*FLEN/8, x4, x1, x2)

inst_37935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffffff00; valaddr_reg:x3; val_offset:113805*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113805*0 + 3*303*FLEN/8, x4, x1, x2)

inst_37936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffffff80; valaddr_reg:x3; val_offset:113808*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113808*0 + 3*304*FLEN/8, x4, x1, x2)

inst_37937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffffffc0; valaddr_reg:x3; val_offset:113811*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113811*0 + 3*305*FLEN/8, x4, x1, x2)

inst_37938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffffffe0; valaddr_reg:x3; val_offset:113814*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113814*0 + 3*306*FLEN/8, x4, x1, x2)

inst_37939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffffff0; valaddr_reg:x3; val_offset:113817*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113817*0 + 3*307*FLEN/8, x4, x1, x2)

inst_37940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffffff8; valaddr_reg:x3; val_offset:113820*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113820*0 + 3*308*FLEN/8, x4, x1, x2)

inst_37941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffffffc; valaddr_reg:x3; val_offset:113823*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113823*0 + 3*309*FLEN/8, x4, x1, x2)

inst_37942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xeffffffffffffe; valaddr_reg:x3; val_offset:113826*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113826*0 + 3*310*FLEN/8, x4, x1, x2)

inst_37943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82401d9690355 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982401d9690355; op2val:0x0;
op3val:0xefffffffffffff; valaddr_reg:x3; val_offset:113829*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113829*0 + 3*311*FLEN/8, x4, x1, x2)

inst_37944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:113832*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113832*0 + 3*312*FLEN/8, x4, x1, x2)

inst_37945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:113835*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113835*0 + 3*313*FLEN/8, x4, x1, x2)

inst_37946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:113838*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113838*0 + 3*314*FLEN/8, x4, x1, x2)

inst_37947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:113841*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113841*0 + 3*315*FLEN/8, x4, x1, x2)

inst_37948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:113844*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113844*0 + 3*316*FLEN/8, x4, x1, x2)

inst_37949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:113847*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113847*0 + 3*317*FLEN/8, x4, x1, x2)

inst_37950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:113850*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113850*0 + 3*318*FLEN/8, x4, x1, x2)

inst_37951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:113853*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113853*0 + 3*319*FLEN/8, x4, x1, x2)

inst_37952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:113856*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113856*0 + 3*320*FLEN/8, x4, x1, x2)

inst_37953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:113859*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113859*0 + 3*321*FLEN/8, x4, x1, x2)

inst_37954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:113862*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113862*0 + 3*322*FLEN/8, x4, x1, x2)

inst_37955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:113865*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113865*0 + 3*323*FLEN/8, x4, x1, x2)

inst_37956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:113868*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113868*0 + 3*324*FLEN/8, x4, x1, x2)

inst_37957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:113871*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113871*0 + 3*325*FLEN/8, x4, x1, x2)

inst_37958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:113874*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113874*0 + 3*326*FLEN/8, x4, x1, x2)

inst_37959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:113877*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113877*0 + 3*327*FLEN/8, x4, x1, x2)

inst_37960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:113880*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113880*0 + 3*328*FLEN/8, x4, x1, x2)

inst_37961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:113883*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113883*0 + 3*329*FLEN/8, x4, x1, x2)

inst_37962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:113886*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113886*0 + 3*330*FLEN/8, x4, x1, x2)

inst_37963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:113889*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113889*0 + 3*331*FLEN/8, x4, x1, x2)

inst_37964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:113892*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113892*0 + 3*332*FLEN/8, x4, x1, x2)

inst_37965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:113895*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113895*0 + 3*333*FLEN/8, x4, x1, x2)

inst_37966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000000000; valaddr_reg:x3; val_offset:113898*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113898*0 + 3*334*FLEN/8, x4, x1, x2)

inst_37967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000000001; valaddr_reg:x3; val_offset:113901*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113901*0 + 3*335*FLEN/8, x4, x1, x2)

inst_37968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000000003; valaddr_reg:x3; val_offset:113904*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113904*0 + 3*336*FLEN/8, x4, x1, x2)

inst_37969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000000007; valaddr_reg:x3; val_offset:113907*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113907*0 + 3*337*FLEN/8, x4, x1, x2)

inst_37970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000000000f; valaddr_reg:x3; val_offset:113910*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113910*0 + 3*338*FLEN/8, x4, x1, x2)

inst_37971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000000001f; valaddr_reg:x3; val_offset:113913*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113913*0 + 3*339*FLEN/8, x4, x1, x2)

inst_37972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000000003f; valaddr_reg:x3; val_offset:113916*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113916*0 + 3*340*FLEN/8, x4, x1, x2)

inst_37973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000000007f; valaddr_reg:x3; val_offset:113919*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113919*0 + 3*341*FLEN/8, x4, x1, x2)

inst_37974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000000000ff; valaddr_reg:x3; val_offset:113922*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113922*0 + 3*342*FLEN/8, x4, x1, x2)

inst_37975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000000001ff; valaddr_reg:x3; val_offset:113925*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113925*0 + 3*343*FLEN/8, x4, x1, x2)

inst_37976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000000003ff; valaddr_reg:x3; val_offset:113928*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113928*0 + 3*344*FLEN/8, x4, x1, x2)

inst_37977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000000007ff; valaddr_reg:x3; val_offset:113931*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113931*0 + 3*345*FLEN/8, x4, x1, x2)

inst_37978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000000fff; valaddr_reg:x3; val_offset:113934*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113934*0 + 3*346*FLEN/8, x4, x1, x2)

inst_37979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000001fff; valaddr_reg:x3; val_offset:113937*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113937*0 + 3*347*FLEN/8, x4, x1, x2)

inst_37980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000003fff; valaddr_reg:x3; val_offset:113940*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113940*0 + 3*348*FLEN/8, x4, x1, x2)

inst_37981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000007fff; valaddr_reg:x3; val_offset:113943*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113943*0 + 3*349*FLEN/8, x4, x1, x2)

inst_37982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000000ffff; valaddr_reg:x3; val_offset:113946*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113946*0 + 3*350*FLEN/8, x4, x1, x2)

inst_37983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000001ffff; valaddr_reg:x3; val_offset:113949*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113949*0 + 3*351*FLEN/8, x4, x1, x2)

inst_37984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000003ffff; valaddr_reg:x3; val_offset:113952*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113952*0 + 3*352*FLEN/8, x4, x1, x2)

inst_37985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000007ffff; valaddr_reg:x3; val_offset:113955*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113955*0 + 3*353*FLEN/8, x4, x1, x2)

inst_37986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000000fffff; valaddr_reg:x3; val_offset:113958*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113958*0 + 3*354*FLEN/8, x4, x1, x2)

inst_37987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000001fffff; valaddr_reg:x3; val_offset:113961*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113961*0 + 3*355*FLEN/8, x4, x1, x2)

inst_37988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000003fffff; valaddr_reg:x3; val_offset:113964*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113964*0 + 3*356*FLEN/8, x4, x1, x2)

inst_37989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000007fffff; valaddr_reg:x3; val_offset:113967*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113967*0 + 3*357*FLEN/8, x4, x1, x2)

inst_37990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000000ffffff; valaddr_reg:x3; val_offset:113970*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113970*0 + 3*358*FLEN/8, x4, x1, x2)

inst_37991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000001ffffff; valaddr_reg:x3; val_offset:113973*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113973*0 + 3*359*FLEN/8, x4, x1, x2)

inst_37992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000003ffffff; valaddr_reg:x3; val_offset:113976*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113976*0 + 3*360*FLEN/8, x4, x1, x2)

inst_37993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000007ffffff; valaddr_reg:x3; val_offset:113979*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113979*0 + 3*361*FLEN/8, x4, x1, x2)

inst_37994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000000fffffff; valaddr_reg:x3; val_offset:113982*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113982*0 + 3*362*FLEN/8, x4, x1, x2)

inst_37995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000001fffffff; valaddr_reg:x3; val_offset:113985*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113985*0 + 3*363*FLEN/8, x4, x1, x2)

inst_37996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000003fffffff; valaddr_reg:x3; val_offset:113988*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113988*0 + 3*364*FLEN/8, x4, x1, x2)

inst_37997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000007fffffff; valaddr_reg:x3; val_offset:113991*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113991*0 + 3*365*FLEN/8, x4, x1, x2)

inst_37998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500000ffffffff; valaddr_reg:x3; val_offset:113994*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113994*0 + 3*366*FLEN/8, x4, x1, x2)

inst_37999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500001ffffffff; valaddr_reg:x3; val_offset:113997*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 113997*0 + 3*367*FLEN/8, x4, x1, x2)

inst_38000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500003ffffffff; valaddr_reg:x3; val_offset:114000*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114000*0 + 3*368*FLEN/8, x4, x1, x2)

inst_38001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500007ffffffff; valaddr_reg:x3; val_offset:114003*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114003*0 + 3*369*FLEN/8, x4, x1, x2)

inst_38002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250000fffffffff; valaddr_reg:x3; val_offset:114006*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114006*0 + 3*370*FLEN/8, x4, x1, x2)

inst_38003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250001fffffffff; valaddr_reg:x3; val_offset:114009*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114009*0 + 3*371*FLEN/8, x4, x1, x2)

inst_38004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250003fffffffff; valaddr_reg:x3; val_offset:114012*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114012*0 + 3*372*FLEN/8, x4, x1, x2)

inst_38005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250007fffffffff; valaddr_reg:x3; val_offset:114015*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114015*0 + 3*373*FLEN/8, x4, x1, x2)

inst_38006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825000ffffffffff; valaddr_reg:x3; val_offset:114018*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114018*0 + 3*374*FLEN/8, x4, x1, x2)

inst_38007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825001ffffffffff; valaddr_reg:x3; val_offset:114021*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114021*0 + 3*375*FLEN/8, x4, x1, x2)

inst_38008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825003ffffffffff; valaddr_reg:x3; val_offset:114024*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114024*0 + 3*376*FLEN/8, x4, x1, x2)

inst_38009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825007ffffffffff; valaddr_reg:x3; val_offset:114027*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114027*0 + 3*377*FLEN/8, x4, x1, x2)

inst_38010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82500fffffffffff; valaddr_reg:x3; val_offset:114030*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114030*0 + 3*378*FLEN/8, x4, x1, x2)

inst_38011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82501fffffffffff; valaddr_reg:x3; val_offset:114033*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114033*0 + 3*379*FLEN/8, x4, x1, x2)

inst_38012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82503fffffffffff; valaddr_reg:x3; val_offset:114036*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114036*0 + 3*380*FLEN/8, x4, x1, x2)

inst_38013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x82507fffffffffff; valaddr_reg:x3; val_offset:114039*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114039*0 + 3*381*FLEN/8, x4, x1, x2)

inst_38014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8250ffffffffffff; valaddr_reg:x3; val_offset:114042*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114042*0 + 3*382*FLEN/8, x4, x1, x2)

inst_38015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8251ffffffffffff; valaddr_reg:x3; val_offset:114045*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114045*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_38016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8253ffffffffffff; valaddr_reg:x3; val_offset:114048*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114048*0 + 3*384*FLEN/8, x4, x1, x2)

inst_38017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8257ffffffffffff; valaddr_reg:x3; val_offset:114051*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114051*0 + 3*385*FLEN/8, x4, x1, x2)

inst_38018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x8258000000000000; valaddr_reg:x3; val_offset:114054*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114054*0 + 3*386*FLEN/8, x4, x1, x2)

inst_38019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825c000000000000; valaddr_reg:x3; val_offset:114057*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114057*0 + 3*387*FLEN/8, x4, x1, x2)

inst_38020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825e000000000000; valaddr_reg:x3; val_offset:114060*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114060*0 + 3*388*FLEN/8, x4, x1, x2)

inst_38021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825f000000000000; valaddr_reg:x3; val_offset:114063*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114063*0 + 3*389*FLEN/8, x4, x1, x2)

inst_38022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825f800000000000; valaddr_reg:x3; val_offset:114066*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114066*0 + 3*390*FLEN/8, x4, x1, x2)

inst_38023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fc00000000000; valaddr_reg:x3; val_offset:114069*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114069*0 + 3*391*FLEN/8, x4, x1, x2)

inst_38024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fe00000000000; valaddr_reg:x3; val_offset:114072*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114072*0 + 3*392*FLEN/8, x4, x1, x2)

inst_38025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ff00000000000; valaddr_reg:x3; val_offset:114075*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114075*0 + 3*393*FLEN/8, x4, x1, x2)

inst_38026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ff80000000000; valaddr_reg:x3; val_offset:114078*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114078*0 + 3*394*FLEN/8, x4, x1, x2)

inst_38027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffc0000000000; valaddr_reg:x3; val_offset:114081*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114081*0 + 3*395*FLEN/8, x4, x1, x2)

inst_38028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffe0000000000; valaddr_reg:x3; val_offset:114084*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114084*0 + 3*396*FLEN/8, x4, x1, x2)

inst_38029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fff0000000000; valaddr_reg:x3; val_offset:114087*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114087*0 + 3*397*FLEN/8, x4, x1, x2)

inst_38030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fff8000000000; valaddr_reg:x3; val_offset:114090*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114090*0 + 3*398*FLEN/8, x4, x1, x2)

inst_38031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffc000000000; valaddr_reg:x3; val_offset:114093*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114093*0 + 3*399*FLEN/8, x4, x1, x2)

inst_38032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffe000000000; valaddr_reg:x3; val_offset:114096*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114096*0 + 3*400*FLEN/8, x4, x1, x2)

inst_38033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffff000000000; valaddr_reg:x3; val_offset:114099*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114099*0 + 3*401*FLEN/8, x4, x1, x2)

inst_38034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffff800000000; valaddr_reg:x3; val_offset:114102*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114102*0 + 3*402*FLEN/8, x4, x1, x2)

inst_38035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffc00000000; valaddr_reg:x3; val_offset:114105*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114105*0 + 3*403*FLEN/8, x4, x1, x2)

inst_38036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffe00000000; valaddr_reg:x3; val_offset:114108*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114108*0 + 3*404*FLEN/8, x4, x1, x2)

inst_38037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffff00000000; valaddr_reg:x3; val_offset:114111*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114111*0 + 3*405*FLEN/8, x4, x1, x2)

inst_38038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffff80000000; valaddr_reg:x3; val_offset:114114*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114114*0 + 3*406*FLEN/8, x4, x1, x2)

inst_38039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffc0000000; valaddr_reg:x3; val_offset:114117*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114117*0 + 3*407*FLEN/8, x4, x1, x2)

inst_38040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffe0000000; valaddr_reg:x3; val_offset:114120*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114120*0 + 3*408*FLEN/8, x4, x1, x2)

inst_38041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffff0000000; valaddr_reg:x3; val_offset:114123*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114123*0 + 3*409*FLEN/8, x4, x1, x2)

inst_38042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffff8000000; valaddr_reg:x3; val_offset:114126*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114126*0 + 3*410*FLEN/8, x4, x1, x2)

inst_38043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffc000000; valaddr_reg:x3; val_offset:114129*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114129*0 + 3*411*FLEN/8, x4, x1, x2)

inst_38044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffe000000; valaddr_reg:x3; val_offset:114132*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114132*0 + 3*412*FLEN/8, x4, x1, x2)

inst_38045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffff000000; valaddr_reg:x3; val_offset:114135*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114135*0 + 3*413*FLEN/8, x4, x1, x2)

inst_38046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffff800000; valaddr_reg:x3; val_offset:114138*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114138*0 + 3*414*FLEN/8, x4, x1, x2)

inst_38047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffc00000; valaddr_reg:x3; val_offset:114141*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114141*0 + 3*415*FLEN/8, x4, x1, x2)

inst_38048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffe00000; valaddr_reg:x3; val_offset:114144*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114144*0 + 3*416*FLEN/8, x4, x1, x2)

inst_38049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffff00000; valaddr_reg:x3; val_offset:114147*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114147*0 + 3*417*FLEN/8, x4, x1, x2)

inst_38050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffff80000; valaddr_reg:x3; val_offset:114150*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114150*0 + 3*418*FLEN/8, x4, x1, x2)

inst_38051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffc0000; valaddr_reg:x3; val_offset:114153*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114153*0 + 3*419*FLEN/8, x4, x1, x2)

inst_38052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffe0000; valaddr_reg:x3; val_offset:114156*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114156*0 + 3*420*FLEN/8, x4, x1, x2)

inst_38053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffff0000; valaddr_reg:x3; val_offset:114159*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114159*0 + 3*421*FLEN/8, x4, x1, x2)

inst_38054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffff8000; valaddr_reg:x3; val_offset:114162*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114162*0 + 3*422*FLEN/8, x4, x1, x2)

inst_38055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffffc000; valaddr_reg:x3; val_offset:114165*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114165*0 + 3*423*FLEN/8, x4, x1, x2)

inst_38056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffffe000; valaddr_reg:x3; val_offset:114168*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114168*0 + 3*424*FLEN/8, x4, x1, x2)

inst_38057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffff000; valaddr_reg:x3; val_offset:114171*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114171*0 + 3*425*FLEN/8, x4, x1, x2)

inst_38058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffff800; valaddr_reg:x3; val_offset:114174*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114174*0 + 3*426*FLEN/8, x4, x1, x2)

inst_38059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffffc00; valaddr_reg:x3; val_offset:114177*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114177*0 + 3*427*FLEN/8, x4, x1, x2)

inst_38060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffffe00; valaddr_reg:x3; val_offset:114180*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114180*0 + 3*428*FLEN/8, x4, x1, x2)

inst_38061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffffff00; valaddr_reg:x3; val_offset:114183*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114183*0 + 3*429*FLEN/8, x4, x1, x2)

inst_38062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffffff80; valaddr_reg:x3; val_offset:114186*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114186*0 + 3*430*FLEN/8, x4, x1, x2)

inst_38063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffffffc0; valaddr_reg:x3; val_offset:114189*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114189*0 + 3*431*FLEN/8, x4, x1, x2)

inst_38064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffffffe0; valaddr_reg:x3; val_offset:114192*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114192*0 + 3*432*FLEN/8, x4, x1, x2)

inst_38065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffffff0; valaddr_reg:x3; val_offset:114195*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114195*0 + 3*433*FLEN/8, x4, x1, x2)

inst_38066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffffff8; valaddr_reg:x3; val_offset:114198*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114198*0 + 3*434*FLEN/8, x4, x1, x2)

inst_38067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffffffc; valaddr_reg:x3; val_offset:114201*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114201*0 + 3*435*FLEN/8, x4, x1, x2)

inst_38068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825ffffffffffffe; valaddr_reg:x3; val_offset:114204*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114204*0 + 3*436*FLEN/8, x4, x1, x2)

inst_38069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x829e9eb0f2033 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9829e9eb0f2033; op2val:0x8000;
op3val:0x825fffffffffffff; valaddr_reg:x3; val_offset:114207*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114207*0 + 3*437*FLEN/8, x4, x1, x2)

inst_38070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:114210*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114210*0 + 3*438*FLEN/8, x4, x1, x2)

inst_38071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:114213*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114213*0 + 3*439*FLEN/8, x4, x1, x2)

inst_38072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:114216*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114216*0 + 3*440*FLEN/8, x4, x1, x2)

inst_38073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:114219*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114219*0 + 3*441*FLEN/8, x4, x1, x2)

inst_38074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:114222*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114222*0 + 3*442*FLEN/8, x4, x1, x2)

inst_38075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:114225*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114225*0 + 3*443*FLEN/8, x4, x1, x2)

inst_38076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:114228*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114228*0 + 3*444*FLEN/8, x4, x1, x2)

inst_38077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:114231*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114231*0 + 3*445*FLEN/8, x4, x1, x2)

inst_38078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:114234*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114234*0 + 3*446*FLEN/8, x4, x1, x2)

inst_38079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:114237*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114237*0 + 3*447*FLEN/8, x4, x1, x2)

inst_38080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:114240*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114240*0 + 3*448*FLEN/8, x4, x1, x2)

inst_38081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:114243*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114243*0 + 3*449*FLEN/8, x4, x1, x2)

inst_38082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:114246*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114246*0 + 3*450*FLEN/8, x4, x1, x2)

inst_38083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:114249*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114249*0 + 3*451*FLEN/8, x4, x1, x2)

inst_38084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:114252*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114252*0 + 3*452*FLEN/8, x4, x1, x2)

inst_38085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:114255*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114255*0 + 3*453*FLEN/8, x4, x1, x2)

inst_38086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:114258*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114258*0 + 3*454*FLEN/8, x4, x1, x2)

inst_38087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:114261*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114261*0 + 3*455*FLEN/8, x4, x1, x2)

inst_38088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:114264*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114264*0 + 3*456*FLEN/8, x4, x1, x2)

inst_38089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:114267*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114267*0 + 3*457*FLEN/8, x4, x1, x2)

inst_38090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:114270*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114270*0 + 3*458*FLEN/8, x4, x1, x2)

inst_38091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:114273*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114273*0 + 3*459*FLEN/8, x4, x1, x2)

inst_38092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000000000; valaddr_reg:x3; val_offset:114276*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114276*0 + 3*460*FLEN/8, x4, x1, x2)

inst_38093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000000001; valaddr_reg:x3; val_offset:114279*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114279*0 + 3*461*FLEN/8, x4, x1, x2)

inst_38094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000000003; valaddr_reg:x3; val_offset:114282*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114282*0 + 3*462*FLEN/8, x4, x1, x2)

inst_38095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000000007; valaddr_reg:x3; val_offset:114285*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114285*0 + 3*463*FLEN/8, x4, x1, x2)

inst_38096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000000000f; valaddr_reg:x3; val_offset:114288*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114288*0 + 3*464*FLEN/8, x4, x1, x2)

inst_38097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000000001f; valaddr_reg:x3; val_offset:114291*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114291*0 + 3*465*FLEN/8, x4, x1, x2)

inst_38098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000000003f; valaddr_reg:x3; val_offset:114294*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114294*0 + 3*466*FLEN/8, x4, x1, x2)

inst_38099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000000007f; valaddr_reg:x3; val_offset:114297*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114297*0 + 3*467*FLEN/8, x4, x1, x2)

inst_38100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000000000ff; valaddr_reg:x3; val_offset:114300*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114300*0 + 3*468*FLEN/8, x4, x1, x2)

inst_38101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000000001ff; valaddr_reg:x3; val_offset:114303*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114303*0 + 3*469*FLEN/8, x4, x1, x2)

inst_38102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000000003ff; valaddr_reg:x3; val_offset:114306*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114306*0 + 3*470*FLEN/8, x4, x1, x2)

inst_38103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000000007ff; valaddr_reg:x3; val_offset:114309*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114309*0 + 3*471*FLEN/8, x4, x1, x2)

inst_38104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000000fff; valaddr_reg:x3; val_offset:114312*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114312*0 + 3*472*FLEN/8, x4, x1, x2)

inst_38105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000001fff; valaddr_reg:x3; val_offset:114315*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114315*0 + 3*473*FLEN/8, x4, x1, x2)

inst_38106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000003fff; valaddr_reg:x3; val_offset:114318*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114318*0 + 3*474*FLEN/8, x4, x1, x2)

inst_38107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000007fff; valaddr_reg:x3; val_offset:114321*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114321*0 + 3*475*FLEN/8, x4, x1, x2)

inst_38108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000000ffff; valaddr_reg:x3; val_offset:114324*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114324*0 + 3*476*FLEN/8, x4, x1, x2)

inst_38109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000001ffff; valaddr_reg:x3; val_offset:114327*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114327*0 + 3*477*FLEN/8, x4, x1, x2)

inst_38110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000003ffff; valaddr_reg:x3; val_offset:114330*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114330*0 + 3*478*FLEN/8, x4, x1, x2)

inst_38111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000007ffff; valaddr_reg:x3; val_offset:114333*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114333*0 + 3*479*FLEN/8, x4, x1, x2)

inst_38112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000000fffff; valaddr_reg:x3; val_offset:114336*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114336*0 + 3*480*FLEN/8, x4, x1, x2)

inst_38113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000001fffff; valaddr_reg:x3; val_offset:114339*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114339*0 + 3*481*FLEN/8, x4, x1, x2)

inst_38114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000003fffff; valaddr_reg:x3; val_offset:114342*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114342*0 + 3*482*FLEN/8, x4, x1, x2)

inst_38115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000007fffff; valaddr_reg:x3; val_offset:114345*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114345*0 + 3*483*FLEN/8, x4, x1, x2)

inst_38116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000000ffffff; valaddr_reg:x3; val_offset:114348*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114348*0 + 3*484*FLEN/8, x4, x1, x2)

inst_38117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000001ffffff; valaddr_reg:x3; val_offset:114351*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114351*0 + 3*485*FLEN/8, x4, x1, x2)

inst_38118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000003ffffff; valaddr_reg:x3; val_offset:114354*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114354*0 + 3*486*FLEN/8, x4, x1, x2)

inst_38119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000007ffffff; valaddr_reg:x3; val_offset:114357*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114357*0 + 3*487*FLEN/8, x4, x1, x2)

inst_38120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000000fffffff; valaddr_reg:x3; val_offset:114360*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114360*0 + 3*488*FLEN/8, x4, x1, x2)

inst_38121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000001fffffff; valaddr_reg:x3; val_offset:114363*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114363*0 + 3*489*FLEN/8, x4, x1, x2)

inst_38122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000003fffffff; valaddr_reg:x3; val_offset:114366*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114366*0 + 3*490*FLEN/8, x4, x1, x2)

inst_38123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000007fffffff; valaddr_reg:x3; val_offset:114369*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114369*0 + 3*491*FLEN/8, x4, x1, x2)

inst_38124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700000ffffffff; valaddr_reg:x3; val_offset:114372*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114372*0 + 3*492*FLEN/8, x4, x1, x2)

inst_38125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700001ffffffff; valaddr_reg:x3; val_offset:114375*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114375*0 + 3*493*FLEN/8, x4, x1, x2)

inst_38126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700003ffffffff; valaddr_reg:x3; val_offset:114378*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114378*0 + 3*494*FLEN/8, x4, x1, x2)

inst_38127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700007ffffffff; valaddr_reg:x3; val_offset:114381*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114381*0 + 3*495*FLEN/8, x4, x1, x2)

inst_38128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270000fffffffff; valaddr_reg:x3; val_offset:114384*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114384*0 + 3*496*FLEN/8, x4, x1, x2)

inst_38129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270001fffffffff; valaddr_reg:x3; val_offset:114387*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114387*0 + 3*497*FLEN/8, x4, x1, x2)

inst_38130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270003fffffffff; valaddr_reg:x3; val_offset:114390*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114390*0 + 3*498*FLEN/8, x4, x1, x2)

inst_38131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270007fffffffff; valaddr_reg:x3; val_offset:114393*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114393*0 + 3*499*FLEN/8, x4, x1, x2)

inst_38132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827000ffffffffff; valaddr_reg:x3; val_offset:114396*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114396*0 + 3*500*FLEN/8, x4, x1, x2)

inst_38133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827001ffffffffff; valaddr_reg:x3; val_offset:114399*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114399*0 + 3*501*FLEN/8, x4, x1, x2)

inst_38134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827003ffffffffff; valaddr_reg:x3; val_offset:114402*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114402*0 + 3*502*FLEN/8, x4, x1, x2)

inst_38135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827007ffffffffff; valaddr_reg:x3; val_offset:114405*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114405*0 + 3*503*FLEN/8, x4, x1, x2)

inst_38136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82700fffffffffff; valaddr_reg:x3; val_offset:114408*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114408*0 + 3*504*FLEN/8, x4, x1, x2)

inst_38137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82701fffffffffff; valaddr_reg:x3; val_offset:114411*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114411*0 + 3*505*FLEN/8, x4, x1, x2)

inst_38138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82703fffffffffff; valaddr_reg:x3; val_offset:114414*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114414*0 + 3*506*FLEN/8, x4, x1, x2)

inst_38139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x82707fffffffffff; valaddr_reg:x3; val_offset:114417*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114417*0 + 3*507*FLEN/8, x4, x1, x2)

inst_38140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8270ffffffffffff; valaddr_reg:x3; val_offset:114420*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114420*0 + 3*508*FLEN/8, x4, x1, x2)

inst_38141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8271ffffffffffff; valaddr_reg:x3; val_offset:114423*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114423*0 + 3*509*FLEN/8, x4, x1, x2)

inst_38142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8273ffffffffffff; valaddr_reg:x3; val_offset:114426*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114426*0 + 3*510*FLEN/8, x4, x1, x2)

inst_38143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8277ffffffffffff; valaddr_reg:x3; val_offset:114429*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114429*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_38144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x8278000000000000; valaddr_reg:x3; val_offset:114432*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114432*0 + 3*512*FLEN/8, x4, x1, x2)

inst_38145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827c000000000000; valaddr_reg:x3; val_offset:114435*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114435*0 + 3*513*FLEN/8, x4, x1, x2)

inst_38146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827e000000000000; valaddr_reg:x3; val_offset:114438*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114438*0 + 3*514*FLEN/8, x4, x1, x2)

inst_38147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827f000000000000; valaddr_reg:x3; val_offset:114441*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114441*0 + 3*515*FLEN/8, x4, x1, x2)

inst_38148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827f800000000000; valaddr_reg:x3; val_offset:114444*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114444*0 + 3*516*FLEN/8, x4, x1, x2)

inst_38149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fc00000000000; valaddr_reg:x3; val_offset:114447*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114447*0 + 3*517*FLEN/8, x4, x1, x2)

inst_38150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fe00000000000; valaddr_reg:x3; val_offset:114450*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114450*0 + 3*518*FLEN/8, x4, x1, x2)

inst_38151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ff00000000000; valaddr_reg:x3; val_offset:114453*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114453*0 + 3*519*FLEN/8, x4, x1, x2)

inst_38152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ff80000000000; valaddr_reg:x3; val_offset:114456*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114456*0 + 3*520*FLEN/8, x4, x1, x2)

inst_38153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffc0000000000; valaddr_reg:x3; val_offset:114459*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114459*0 + 3*521*FLEN/8, x4, x1, x2)

inst_38154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffe0000000000; valaddr_reg:x3; val_offset:114462*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114462*0 + 3*522*FLEN/8, x4, x1, x2)

inst_38155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fff0000000000; valaddr_reg:x3; val_offset:114465*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114465*0 + 3*523*FLEN/8, x4, x1, x2)

inst_38156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fff8000000000; valaddr_reg:x3; val_offset:114468*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114468*0 + 3*524*FLEN/8, x4, x1, x2)

inst_38157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffc000000000; valaddr_reg:x3; val_offset:114471*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114471*0 + 3*525*FLEN/8, x4, x1, x2)

inst_38158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffe000000000; valaddr_reg:x3; val_offset:114474*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114474*0 + 3*526*FLEN/8, x4, x1, x2)

inst_38159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffff000000000; valaddr_reg:x3; val_offset:114477*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114477*0 + 3*527*FLEN/8, x4, x1, x2)

inst_38160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffff800000000; valaddr_reg:x3; val_offset:114480*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114480*0 + 3*528*FLEN/8, x4, x1, x2)

inst_38161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffc00000000; valaddr_reg:x3; val_offset:114483*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114483*0 + 3*529*FLEN/8, x4, x1, x2)

inst_38162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffe00000000; valaddr_reg:x3; val_offset:114486*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114486*0 + 3*530*FLEN/8, x4, x1, x2)

inst_38163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffff00000000; valaddr_reg:x3; val_offset:114489*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114489*0 + 3*531*FLEN/8, x4, x1, x2)

inst_38164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffff80000000; valaddr_reg:x3; val_offset:114492*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114492*0 + 3*532*FLEN/8, x4, x1, x2)

inst_38165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffc0000000; valaddr_reg:x3; val_offset:114495*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114495*0 + 3*533*FLEN/8, x4, x1, x2)

inst_38166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffe0000000; valaddr_reg:x3; val_offset:114498*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114498*0 + 3*534*FLEN/8, x4, x1, x2)

inst_38167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffff0000000; valaddr_reg:x3; val_offset:114501*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114501*0 + 3*535*FLEN/8, x4, x1, x2)

inst_38168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffff8000000; valaddr_reg:x3; val_offset:114504*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114504*0 + 3*536*FLEN/8, x4, x1, x2)

inst_38169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffc000000; valaddr_reg:x3; val_offset:114507*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114507*0 + 3*537*FLEN/8, x4, x1, x2)

inst_38170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffe000000; valaddr_reg:x3; val_offset:114510*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114510*0 + 3*538*FLEN/8, x4, x1, x2)

inst_38171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffff000000; valaddr_reg:x3; val_offset:114513*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114513*0 + 3*539*FLEN/8, x4, x1, x2)

inst_38172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffff800000; valaddr_reg:x3; val_offset:114516*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114516*0 + 3*540*FLEN/8, x4, x1, x2)

inst_38173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffc00000; valaddr_reg:x3; val_offset:114519*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114519*0 + 3*541*FLEN/8, x4, x1, x2)

inst_38174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffe00000; valaddr_reg:x3; val_offset:114522*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114522*0 + 3*542*FLEN/8, x4, x1, x2)

inst_38175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffff00000; valaddr_reg:x3; val_offset:114525*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114525*0 + 3*543*FLEN/8, x4, x1, x2)

inst_38176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffff80000; valaddr_reg:x3; val_offset:114528*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114528*0 + 3*544*FLEN/8, x4, x1, x2)

inst_38177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffc0000; valaddr_reg:x3; val_offset:114531*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114531*0 + 3*545*FLEN/8, x4, x1, x2)

inst_38178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffe0000; valaddr_reg:x3; val_offset:114534*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114534*0 + 3*546*FLEN/8, x4, x1, x2)

inst_38179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffff0000; valaddr_reg:x3; val_offset:114537*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114537*0 + 3*547*FLEN/8, x4, x1, x2)

inst_38180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffff8000; valaddr_reg:x3; val_offset:114540*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114540*0 + 3*548*FLEN/8, x4, x1, x2)

inst_38181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffffc000; valaddr_reg:x3; val_offset:114543*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114543*0 + 3*549*FLEN/8, x4, x1, x2)

inst_38182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffffe000; valaddr_reg:x3; val_offset:114546*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114546*0 + 3*550*FLEN/8, x4, x1, x2)

inst_38183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffff000; valaddr_reg:x3; val_offset:114549*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114549*0 + 3*551*FLEN/8, x4, x1, x2)

inst_38184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffff800; valaddr_reg:x3; val_offset:114552*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114552*0 + 3*552*FLEN/8, x4, x1, x2)

inst_38185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffffc00; valaddr_reg:x3; val_offset:114555*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114555*0 + 3*553*FLEN/8, x4, x1, x2)

inst_38186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffffe00; valaddr_reg:x3; val_offset:114558*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114558*0 + 3*554*FLEN/8, x4, x1, x2)

inst_38187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffffff00; valaddr_reg:x3; val_offset:114561*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114561*0 + 3*555*FLEN/8, x4, x1, x2)

inst_38188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffffff80; valaddr_reg:x3; val_offset:114564*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114564*0 + 3*556*FLEN/8, x4, x1, x2)

inst_38189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffffffc0; valaddr_reg:x3; val_offset:114567*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114567*0 + 3*557*FLEN/8, x4, x1, x2)

inst_38190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffffffe0; valaddr_reg:x3; val_offset:114570*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114570*0 + 3*558*FLEN/8, x4, x1, x2)

inst_38191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffffff0; valaddr_reg:x3; val_offset:114573*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114573*0 + 3*559*FLEN/8, x4, x1, x2)

inst_38192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffffff8; valaddr_reg:x3; val_offset:114576*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114576*0 + 3*560*FLEN/8, x4, x1, x2)

inst_38193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffffffc; valaddr_reg:x3; val_offset:114579*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114579*0 + 3*561*FLEN/8, x4, x1, x2)

inst_38194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827ffffffffffffe; valaddr_reg:x3; val_offset:114582*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114582*0 + 3*562*FLEN/8, x4, x1, x2)

inst_38195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x82f6b7601411d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x027 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f982f6b7601411d; op2val:0x8000;
op3val:0x827fffffffffffff; valaddr_reg:x3; val_offset:114585*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114585*0 + 3*563*FLEN/8, x4, x1, x2)

inst_38196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000000000; valaddr_reg:x3; val_offset:114588*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114588*0 + 3*564*FLEN/8, x4, x1, x2)

inst_38197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000000001; valaddr_reg:x3; val_offset:114591*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114591*0 + 3*565*FLEN/8, x4, x1, x2)

inst_38198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000000003; valaddr_reg:x3; val_offset:114594*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114594*0 + 3*566*FLEN/8, x4, x1, x2)

inst_38199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000000007; valaddr_reg:x3; val_offset:114597*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114597*0 + 3*567*FLEN/8, x4, x1, x2)

inst_38200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000000000f; valaddr_reg:x3; val_offset:114600*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114600*0 + 3*568*FLEN/8, x4, x1, x2)

inst_38201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000000001f; valaddr_reg:x3; val_offset:114603*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114603*0 + 3*569*FLEN/8, x4, x1, x2)

inst_38202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000000003f; valaddr_reg:x3; val_offset:114606*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114606*0 + 3*570*FLEN/8, x4, x1, x2)

inst_38203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000000007f; valaddr_reg:x3; val_offset:114609*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114609*0 + 3*571*FLEN/8, x4, x1, x2)

inst_38204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000000000ff; valaddr_reg:x3; val_offset:114612*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114612*0 + 3*572*FLEN/8, x4, x1, x2)

inst_38205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000000001ff; valaddr_reg:x3; val_offset:114615*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114615*0 + 3*573*FLEN/8, x4, x1, x2)

inst_38206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000000003ff; valaddr_reg:x3; val_offset:114618*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114618*0 + 3*574*FLEN/8, x4, x1, x2)

inst_38207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000000007ff; valaddr_reg:x3; val_offset:114621*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114621*0 + 3*575*FLEN/8, x4, x1, x2)

inst_38208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000000fff; valaddr_reg:x3; val_offset:114624*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114624*0 + 3*576*FLEN/8, x4, x1, x2)

inst_38209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000001fff; valaddr_reg:x3; val_offset:114627*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114627*0 + 3*577*FLEN/8, x4, x1, x2)

inst_38210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000003fff; valaddr_reg:x3; val_offset:114630*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114630*0 + 3*578*FLEN/8, x4, x1, x2)

inst_38211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000007fff; valaddr_reg:x3; val_offset:114633*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114633*0 + 3*579*FLEN/8, x4, x1, x2)

inst_38212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000000ffff; valaddr_reg:x3; val_offset:114636*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114636*0 + 3*580*FLEN/8, x4, x1, x2)

inst_38213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000001ffff; valaddr_reg:x3; val_offset:114639*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114639*0 + 3*581*FLEN/8, x4, x1, x2)

inst_38214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000003ffff; valaddr_reg:x3; val_offset:114642*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114642*0 + 3*582*FLEN/8, x4, x1, x2)

inst_38215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000007ffff; valaddr_reg:x3; val_offset:114645*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114645*0 + 3*583*FLEN/8, x4, x1, x2)

inst_38216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000000fffff; valaddr_reg:x3; val_offset:114648*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114648*0 + 3*584*FLEN/8, x4, x1, x2)

inst_38217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000001fffff; valaddr_reg:x3; val_offset:114651*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114651*0 + 3*585*FLEN/8, x4, x1, x2)

inst_38218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000003fffff; valaddr_reg:x3; val_offset:114654*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114654*0 + 3*586*FLEN/8, x4, x1, x2)

inst_38219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000007fffff; valaddr_reg:x3; val_offset:114657*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114657*0 + 3*587*FLEN/8, x4, x1, x2)

inst_38220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000000ffffff; valaddr_reg:x3; val_offset:114660*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114660*0 + 3*588*FLEN/8, x4, x1, x2)

inst_38221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000001ffffff; valaddr_reg:x3; val_offset:114663*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114663*0 + 3*589*FLEN/8, x4, x1, x2)

inst_38222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000003ffffff; valaddr_reg:x3; val_offset:114666*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114666*0 + 3*590*FLEN/8, x4, x1, x2)

inst_38223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000007ffffff; valaddr_reg:x3; val_offset:114669*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114669*0 + 3*591*FLEN/8, x4, x1, x2)

inst_38224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000000fffffff; valaddr_reg:x3; val_offset:114672*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114672*0 + 3*592*FLEN/8, x4, x1, x2)

inst_38225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000001fffffff; valaddr_reg:x3; val_offset:114675*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114675*0 + 3*593*FLEN/8, x4, x1, x2)

inst_38226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000003fffffff; valaddr_reg:x3; val_offset:114678*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114678*0 + 3*594*FLEN/8, x4, x1, x2)

inst_38227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000007fffffff; valaddr_reg:x3; val_offset:114681*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114681*0 + 3*595*FLEN/8, x4, x1, x2)

inst_38228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00000ffffffff; valaddr_reg:x3; val_offset:114684*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114684*0 + 3*596*FLEN/8, x4, x1, x2)

inst_38229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00001ffffffff; valaddr_reg:x3; val_offset:114687*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114687*0 + 3*597*FLEN/8, x4, x1, x2)

inst_38230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00003ffffffff; valaddr_reg:x3; val_offset:114690*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114690*0 + 3*598*FLEN/8, x4, x1, x2)

inst_38231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00007ffffffff; valaddr_reg:x3; val_offset:114693*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114693*0 + 3*599*FLEN/8, x4, x1, x2)

inst_38232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0000fffffffff; valaddr_reg:x3; val_offset:114696*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114696*0 + 3*600*FLEN/8, x4, x1, x2)

inst_38233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0001fffffffff; valaddr_reg:x3; val_offset:114699*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114699*0 + 3*601*FLEN/8, x4, x1, x2)

inst_38234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0003fffffffff; valaddr_reg:x3; val_offset:114702*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114702*0 + 3*602*FLEN/8, x4, x1, x2)

inst_38235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0007fffffffff; valaddr_reg:x3; val_offset:114705*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114705*0 + 3*603*FLEN/8, x4, x1, x2)

inst_38236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a000ffffffffff; valaddr_reg:x3; val_offset:114708*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114708*0 + 3*604*FLEN/8, x4, x1, x2)

inst_38237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a001ffffffffff; valaddr_reg:x3; val_offset:114711*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114711*0 + 3*605*FLEN/8, x4, x1, x2)

inst_38238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a003ffffffffff; valaddr_reg:x3; val_offset:114714*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114714*0 + 3*606*FLEN/8, x4, x1, x2)

inst_38239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a007ffffffffff; valaddr_reg:x3; val_offset:114717*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114717*0 + 3*607*FLEN/8, x4, x1, x2)

inst_38240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a00fffffffffff; valaddr_reg:x3; val_offset:114720*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114720*0 + 3*608*FLEN/8, x4, x1, x2)

inst_38241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a01fffffffffff; valaddr_reg:x3; val_offset:114723*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114723*0 + 3*609*FLEN/8, x4, x1, x2)

inst_38242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a03fffffffffff; valaddr_reg:x3; val_offset:114726*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114726*0 + 3*610*FLEN/8, x4, x1, x2)

inst_38243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a07fffffffffff; valaddr_reg:x3; val_offset:114729*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114729*0 + 3*611*FLEN/8, x4, x1, x2)

inst_38244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a0ffffffffffff; valaddr_reg:x3; val_offset:114732*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114732*0 + 3*612*FLEN/8, x4, x1, x2)

inst_38245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a1ffffffffffff; valaddr_reg:x3; val_offset:114735*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114735*0 + 3*613*FLEN/8, x4, x1, x2)

inst_38246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a3ffffffffffff; valaddr_reg:x3; val_offset:114738*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114738*0 + 3*614*FLEN/8, x4, x1, x2)

inst_38247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a7ffffffffffff; valaddr_reg:x3; val_offset:114741*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114741*0 + 3*615*FLEN/8, x4, x1, x2)

inst_38248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7a8000000000000; valaddr_reg:x3; val_offset:114744*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114744*0 + 3*616*FLEN/8, x4, x1, x2)

inst_38249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7ac000000000000; valaddr_reg:x3; val_offset:114747*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114747*0 + 3*617*FLEN/8, x4, x1, x2)

inst_38250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7ae000000000000; valaddr_reg:x3; val_offset:114750*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114750*0 + 3*618*FLEN/8, x4, x1, x2)

inst_38251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7af000000000000; valaddr_reg:x3; val_offset:114753*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114753*0 + 3*619*FLEN/8, x4, x1, x2)

inst_38252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7af800000000000; valaddr_reg:x3; val_offset:114756*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114756*0 + 3*620*FLEN/8, x4, x1, x2)

inst_38253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afc00000000000; valaddr_reg:x3; val_offset:114759*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114759*0 + 3*621*FLEN/8, x4, x1, x2)

inst_38254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afe00000000000; valaddr_reg:x3; val_offset:114762*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114762*0 + 3*622*FLEN/8, x4, x1, x2)

inst_38255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7aff00000000000; valaddr_reg:x3; val_offset:114765*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114765*0 + 3*623*FLEN/8, x4, x1, x2)

inst_38256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7aff80000000000; valaddr_reg:x3; val_offset:114768*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114768*0 + 3*624*FLEN/8, x4, x1, x2)

inst_38257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affc0000000000; valaddr_reg:x3; val_offset:114771*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114771*0 + 3*625*FLEN/8, x4, x1, x2)

inst_38258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affe0000000000; valaddr_reg:x3; val_offset:114774*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114774*0 + 3*626*FLEN/8, x4, x1, x2)

inst_38259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afff0000000000; valaddr_reg:x3; val_offset:114777*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114777*0 + 3*627*FLEN/8, x4, x1, x2)

inst_38260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afff8000000000; valaddr_reg:x3; val_offset:114780*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114780*0 + 3*628*FLEN/8, x4, x1, x2)

inst_38261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffc000000000; valaddr_reg:x3; val_offset:114783*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114783*0 + 3*629*FLEN/8, x4, x1, x2)

inst_38262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffe000000000; valaddr_reg:x3; val_offset:114786*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114786*0 + 3*630*FLEN/8, x4, x1, x2)

inst_38263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affff000000000; valaddr_reg:x3; val_offset:114789*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114789*0 + 3*631*FLEN/8, x4, x1, x2)

inst_38264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affff800000000; valaddr_reg:x3; val_offset:114792*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114792*0 + 3*632*FLEN/8, x4, x1, x2)

inst_38265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffc00000000; valaddr_reg:x3; val_offset:114795*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114795*0 + 3*633*FLEN/8, x4, x1, x2)

inst_38266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffe00000000; valaddr_reg:x3; val_offset:114798*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114798*0 + 3*634*FLEN/8, x4, x1, x2)

inst_38267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffff00000000; valaddr_reg:x3; val_offset:114801*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114801*0 + 3*635*FLEN/8, x4, x1, x2)

inst_38268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffff80000000; valaddr_reg:x3; val_offset:114804*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114804*0 + 3*636*FLEN/8, x4, x1, x2)

inst_38269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffc0000000; valaddr_reg:x3; val_offset:114807*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114807*0 + 3*637*FLEN/8, x4, x1, x2)

inst_38270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffe0000000; valaddr_reg:x3; val_offset:114810*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114810*0 + 3*638*FLEN/8, x4, x1, x2)

inst_38271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffff0000000; valaddr_reg:x3; val_offset:114813*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114813*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_38272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffff8000000; valaddr_reg:x3; val_offset:114816*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114816*0 + 3*640*FLEN/8, x4, x1, x2)

inst_38273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffc000000; valaddr_reg:x3; val_offset:114819*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114819*0 + 3*641*FLEN/8, x4, x1, x2)

inst_38274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffe000000; valaddr_reg:x3; val_offset:114822*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114822*0 + 3*642*FLEN/8, x4, x1, x2)

inst_38275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffff000000; valaddr_reg:x3; val_offset:114825*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114825*0 + 3*643*FLEN/8, x4, x1, x2)

inst_38276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffff800000; valaddr_reg:x3; val_offset:114828*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114828*0 + 3*644*FLEN/8, x4, x1, x2)

inst_38277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffc00000; valaddr_reg:x3; val_offset:114831*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114831*0 + 3*645*FLEN/8, x4, x1, x2)

inst_38278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffe00000; valaddr_reg:x3; val_offset:114834*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114834*0 + 3*646*FLEN/8, x4, x1, x2)

inst_38279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffff00000; valaddr_reg:x3; val_offset:114837*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114837*0 + 3*647*FLEN/8, x4, x1, x2)

inst_38280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffff80000; valaddr_reg:x3; val_offset:114840*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114840*0 + 3*648*FLEN/8, x4, x1, x2)

inst_38281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffc0000; valaddr_reg:x3; val_offset:114843*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114843*0 + 3*649*FLEN/8, x4, x1, x2)

inst_38282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffe0000; valaddr_reg:x3; val_offset:114846*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114846*0 + 3*650*FLEN/8, x4, x1, x2)

inst_38283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffff0000; valaddr_reg:x3; val_offset:114849*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114849*0 + 3*651*FLEN/8, x4, x1, x2)

inst_38284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffff8000; valaddr_reg:x3; val_offset:114852*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114852*0 + 3*652*FLEN/8, x4, x1, x2)

inst_38285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffffc000; valaddr_reg:x3; val_offset:114855*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114855*0 + 3*653*FLEN/8, x4, x1, x2)

inst_38286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffffe000; valaddr_reg:x3; val_offset:114858*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114858*0 + 3*654*FLEN/8, x4, x1, x2)

inst_38287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffff000; valaddr_reg:x3; val_offset:114861*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114861*0 + 3*655*FLEN/8, x4, x1, x2)

inst_38288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffff800; valaddr_reg:x3; val_offset:114864*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114864*0 + 3*656*FLEN/8, x4, x1, x2)

inst_38289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffffc00; valaddr_reg:x3; val_offset:114867*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114867*0 + 3*657*FLEN/8, x4, x1, x2)

inst_38290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffffe00; valaddr_reg:x3; val_offset:114870*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114870*0 + 3*658*FLEN/8, x4, x1, x2)

inst_38291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffffff00; valaddr_reg:x3; val_offset:114873*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114873*0 + 3*659*FLEN/8, x4, x1, x2)

inst_38292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffffff80; valaddr_reg:x3; val_offset:114876*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114876*0 + 3*660*FLEN/8, x4, x1, x2)

inst_38293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffffffc0; valaddr_reg:x3; val_offset:114879*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114879*0 + 3*661*FLEN/8, x4, x1, x2)

inst_38294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffffffe0; valaddr_reg:x3; val_offset:114882*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114882*0 + 3*662*FLEN/8, x4, x1, x2)

inst_38295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffffff0; valaddr_reg:x3; val_offset:114885*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114885*0 + 3*663*FLEN/8, x4, x1, x2)

inst_38296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffffff8; valaddr_reg:x3; val_offset:114888*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114888*0 + 3*664*FLEN/8, x4, x1, x2)

inst_38297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffffffc; valaddr_reg:x3; val_offset:114891*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114891*0 + 3*665*FLEN/8, x4, x1, x2)

inst_38298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7affffffffffffe; valaddr_reg:x3; val_offset:114894*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114894*0 + 3*666*FLEN/8, x4, x1, x2)

inst_38299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xb7afffffffffffff; valaddr_reg:x3; val_offset:114897*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114897*0 + 3*667*FLEN/8, x4, x1, x2)

inst_38300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:114900*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114900*0 + 3*668*FLEN/8, x4, x1, x2)

inst_38301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:114903*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114903*0 + 3*669*FLEN/8, x4, x1, x2)

inst_38302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:114906*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114906*0 + 3*670*FLEN/8, x4, x1, x2)

inst_38303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:114909*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114909*0 + 3*671*FLEN/8, x4, x1, x2)

inst_38304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:114912*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114912*0 + 3*672*FLEN/8, x4, x1, x2)

inst_38305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:114915*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114915*0 + 3*673*FLEN/8, x4, x1, x2)

inst_38306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:114918*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114918*0 + 3*674*FLEN/8, x4, x1, x2)

inst_38307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:114921*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114921*0 + 3*675*FLEN/8, x4, x1, x2)

inst_38308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:114924*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114924*0 + 3*676*FLEN/8, x4, x1, x2)

inst_38309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:114927*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114927*0 + 3*677*FLEN/8, x4, x1, x2)

inst_38310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:114930*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114930*0 + 3*678*FLEN/8, x4, x1, x2)

inst_38311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:114933*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114933*0 + 3*679*FLEN/8, x4, x1, x2)

inst_38312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:114936*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114936*0 + 3*680*FLEN/8, x4, x1, x2)

inst_38313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:114939*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114939*0 + 3*681*FLEN/8, x4, x1, x2)

inst_38314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:114942*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114942*0 + 3*682*FLEN/8, x4, x1, x2)

inst_38315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:114945*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114945*0 + 3*683*FLEN/8, x4, x1, x2)

inst_38316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:114948*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114948*0 + 3*684*FLEN/8, x4, x1, x2)

inst_38317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:114951*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114951*0 + 3*685*FLEN/8, x4, x1, x2)

inst_38318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:114954*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114954*0 + 3*686*FLEN/8, x4, x1, x2)

inst_38319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:114957*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114957*0 + 3*687*FLEN/8, x4, x1, x2)

inst_38320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:114960*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114960*0 + 3*688*FLEN/8, x4, x1, x2)

inst_38321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x835b1de73afa3 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x52604a4034de9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9835b1de73afa3; op2val:0x9fd52604a4034de9;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:114963*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114963*0 + 3*689*FLEN/8, x4, x1, x2)

inst_38322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:114966*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114966*0 + 3*690*FLEN/8, x4, x1, x2)

inst_38323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:114969*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114969*0 + 3*691*FLEN/8, x4, x1, x2)

inst_38324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:114972*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114972*0 + 3*692*FLEN/8, x4, x1, x2)

inst_38325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:114975*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114975*0 + 3*693*FLEN/8, x4, x1, x2)

inst_38326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:114978*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114978*0 + 3*694*FLEN/8, x4, x1, x2)

inst_38327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:114981*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114981*0 + 3*695*FLEN/8, x4, x1, x2)

inst_38328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:114984*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114984*0 + 3*696*FLEN/8, x4, x1, x2)

inst_38329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:114987*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114987*0 + 3*697*FLEN/8, x4, x1, x2)

inst_38330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:114990*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114990*0 + 3*698*FLEN/8, x4, x1, x2)

inst_38331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:114993*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114993*0 + 3*699*FLEN/8, x4, x1, x2)

inst_38332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:114996*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114996*0 + 3*700*FLEN/8, x4, x1, x2)

inst_38333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:114999*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114999*0 + 3*701*FLEN/8, x4, x1, x2)

inst_38334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:115002*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115002*0 + 3*702*FLEN/8, x4, x1, x2)

inst_38335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:115005*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115005*0 + 3*703*FLEN/8, x4, x1, x2)

inst_38336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:115008*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115008*0 + 3*704*FLEN/8, x4, x1, x2)

inst_38337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:115011*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115011*0 + 3*705*FLEN/8, x4, x1, x2)

inst_38338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:115014*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115014*0 + 3*706*FLEN/8, x4, x1, x2)

inst_38339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:115017*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115017*0 + 3*707*FLEN/8, x4, x1, x2)

inst_38340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:115020*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115020*0 + 3*708*FLEN/8, x4, x1, x2)

inst_38341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:115023*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115023*0 + 3*709*FLEN/8, x4, x1, x2)

inst_38342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:115026*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115026*0 + 3*710*FLEN/8, x4, x1, x2)

inst_38343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:115029*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115029*0 + 3*711*FLEN/8, x4, x1, x2)

inst_38344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:115032*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115032*0 + 3*712*FLEN/8, x4, x1, x2)

inst_38345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:115035*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115035*0 + 3*713*FLEN/8, x4, x1, x2)

inst_38346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:115038*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115038*0 + 3*714*FLEN/8, x4, x1, x2)

inst_38347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:115041*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115041*0 + 3*715*FLEN/8, x4, x1, x2)

inst_38348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:115044*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115044*0 + 3*716*FLEN/8, x4, x1, x2)

inst_38349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:115047*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115047*0 + 3*717*FLEN/8, x4, x1, x2)

inst_38350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:115050*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115050*0 + 3*718*FLEN/8, x4, x1, x2)

inst_38351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:115053*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115053*0 + 3*719*FLEN/8, x4, x1, x2)

inst_38352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:115056*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115056*0 + 3*720*FLEN/8, x4, x1, x2)

inst_38353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:115059*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115059*0 + 3*721*FLEN/8, x4, x1, x2)

inst_38354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:115062*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115062*0 + 3*722*FLEN/8, x4, x1, x2)

inst_38355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:115065*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115065*0 + 3*723*FLEN/8, x4, x1, x2)

inst_38356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:115068*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115068*0 + 3*724*FLEN/8, x4, x1, x2)

inst_38357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:115071*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115071*0 + 3*725*FLEN/8, x4, x1, x2)

inst_38358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:115074*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115074*0 + 3*726*FLEN/8, x4, x1, x2)

inst_38359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:115077*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115077*0 + 3*727*FLEN/8, x4, x1, x2)

inst_38360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:115080*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115080*0 + 3*728*FLEN/8, x4, x1, x2)

inst_38361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:115083*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115083*0 + 3*729*FLEN/8, x4, x1, x2)

inst_38362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:115086*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115086*0 + 3*730*FLEN/8, x4, x1, x2)

inst_38363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:115089*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115089*0 + 3*731*FLEN/8, x4, x1, x2)

inst_38364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:115092*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115092*0 + 3*732*FLEN/8, x4, x1, x2)

inst_38365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:115095*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115095*0 + 3*733*FLEN/8, x4, x1, x2)

inst_38366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:115098*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115098*0 + 3*734*FLEN/8, x4, x1, x2)

inst_38367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:115101*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115101*0 + 3*735*FLEN/8, x4, x1, x2)

inst_38368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:115104*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115104*0 + 3*736*FLEN/8, x4, x1, x2)

inst_38369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:115107*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115107*0 + 3*737*FLEN/8, x4, x1, x2)

inst_38370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:115110*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115110*0 + 3*738*FLEN/8, x4, x1, x2)

inst_38371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:115113*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115113*0 + 3*739*FLEN/8, x4, x1, x2)

inst_38372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:115116*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115116*0 + 3*740*FLEN/8, x4, x1, x2)

inst_38373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:115119*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115119*0 + 3*741*FLEN/8, x4, x1, x2)

inst_38374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:115122*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115122*0 + 3*742*FLEN/8, x4, x1, x2)

inst_38375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:115125*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115125*0 + 3*743*FLEN/8, x4, x1, x2)

inst_38376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:115128*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115128*0 + 3*744*FLEN/8, x4, x1, x2)

inst_38377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:115131*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115131*0 + 3*745*FLEN/8, x4, x1, x2)

inst_38378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:115134*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115134*0 + 3*746*FLEN/8, x4, x1, x2)

inst_38379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:115137*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115137*0 + 3*747*FLEN/8, x4, x1, x2)

inst_38380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:115140*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115140*0 + 3*748*FLEN/8, x4, x1, x2)

inst_38381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:115143*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115143*0 + 3*749*FLEN/8, x4, x1, x2)

inst_38382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:115146*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115146*0 + 3*750*FLEN/8, x4, x1, x2)

inst_38383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:115149*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115149*0 + 3*751*FLEN/8, x4, x1, x2)

inst_38384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:115152*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115152*0 + 3*752*FLEN/8, x4, x1, x2)

inst_38385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:115155*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115155*0 + 3*753*FLEN/8, x4, x1, x2)

inst_38386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:115158*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115158*0 + 3*754*FLEN/8, x4, x1, x2)

inst_38387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:115161*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115161*0 + 3*755*FLEN/8, x4, x1, x2)

inst_38388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:115164*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115164*0 + 3*756*FLEN/8, x4, x1, x2)

inst_38389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:115167*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115167*0 + 3*757*FLEN/8, x4, x1, x2)

inst_38390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:115170*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115170*0 + 3*758*FLEN/8, x4, x1, x2)

inst_38391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:115173*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115173*0 + 3*759*FLEN/8, x4, x1, x2)

inst_38392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:115176*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115176*0 + 3*760*FLEN/8, x4, x1, x2)

inst_38393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:115179*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115179*0 + 3*761*FLEN/8, x4, x1, x2)

inst_38394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:115182*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115182*0 + 3*762*FLEN/8, x4, x1, x2)

inst_38395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:115185*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115185*0 + 3*763*FLEN/8, x4, x1, x2)

inst_38396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:115188*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115188*0 + 3*764*FLEN/8, x4, x1, x2)

inst_38397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:115191*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115191*0 + 3*765*FLEN/8, x4, x1, x2)

inst_38398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:115194*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115194*0 + 3*766*FLEN/8, x4, x1, x2)

inst_38399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x83f11fdff221f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f983f11fdff221f; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:115197*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 115197*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888141961359169283,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038208,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038209,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038211,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038215,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038223,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038239,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038271,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038335,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038463,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539038719,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539039231,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539040255,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539042303,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539046399,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539054591,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539070975,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539103743,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539169279,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539300351,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027539562495,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027540086783,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027541135359,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027543232511,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027547426815,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027555815423,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027572592639,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027606147071,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027673255935,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962027807473663,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962028075909119,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962028612780031,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962029686521855,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962031834005503,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962036128972799,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962044718907391,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962061898776575,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962096258514943,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962164977991679,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962302416945151,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335962577294852095,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335963127050665983,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335964226562293759,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335966425585549311,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335970823632060415,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335979619725082623,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9335997211911127039,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336032396283215871,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336102765027393535,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336243502515748863,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9336524977492459519,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9337087927445880831,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9338213827352723455,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9338213827352723456,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9339339727259566080,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9339902677212987392,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340184152189698048,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340324889678053376,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340395258422231040,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340430442794319872,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340448034980364288,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340456831073386496,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340461229119897600,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340463428143153152,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340464527654780928,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465077410594816,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465352288501760,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465489727455232,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465558446931968,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465592806670336,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465609986539520,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465618576474112,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465622871441408,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465625018925056,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626092666880,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626629537792,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465626897973248,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627032190976,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627099299840,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627132854272,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627149631488,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627158020096,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627162214400,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627164311552,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627165360128,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627165884416,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166146560,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166277632,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166343168,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166375936,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166392320,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166400512,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166404608,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166406656,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166407680,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408192,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408448,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408576,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408640,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408672,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408688,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408696,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408700,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408702,64,FLEN)
NAN_BOXED(6888171896775190805,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408703,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186944,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186945,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186947,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186951,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186959,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186975,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187007,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187071,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187199,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187455,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187967,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783188991,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783191039,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783195135,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783203327,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783219711,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783252479,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783318015,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783449087,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783711231,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394784235519,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394785284095,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394787381247,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394791575551,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394799964159,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394816741375,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394850295807,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394917404671,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395051622399,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395320057855,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395856928767,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050396930670591,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050399078154239,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050403373121535,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050411963056127,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050429142925311,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050463502663679,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050532222140415,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050669661093887,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050944539000831,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63051494294814719,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63052593806442495,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63054792829698047,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63059190876209151,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63067986969231359,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63085579155275775,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63120763527364607,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63191132271542271,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63331869759897599,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63613344736608255,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(64176294690029567,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65302194596872191,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65302194596872192,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(66428094503714816,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(66991044457136128,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67272519433846784,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67413256922202112,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67483625666379776,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67518810038468608,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67536402224513024,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67545198317535232,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67549596364046336,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67551795387301888,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67552894898929664,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553444654743552,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553719532650496,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553856971603968,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553925691080704,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553960050819072,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553977230688256,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553985820622848,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553990115590144,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553992263073792,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553993336815616,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553993873686528,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994142121984,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994276339712,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994343448576,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994377003008,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994393780224,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994402168832,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994406363136,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994408460288,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994409508864,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410033152,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410295296,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410426368,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410491904,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410524672,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410541056,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410549248,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410553344,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410555392,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410556416,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410556928,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557184,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557312,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557376,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557408,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557424,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557432,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557436,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557438,64,FLEN)
NAN_BOXED(6888295220424278869,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557439,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484160,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484161,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484163,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484167,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484175,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484191,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484223,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484287,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484415,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067484671,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067485183,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067486207,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067488255,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067492351,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067500543,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067516927,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067549695,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067615231,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223067746303,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068008447,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223068532735,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223069581311,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223071678463,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223075872767,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223084261375,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223101038591,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223134593023,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223201701887,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223335919615,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005223604355071,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005224141225983,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005225214967807,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005227362451455,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005231657418751,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005240247353343,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005257427222527,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005291786960895,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005360506437631,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005497945391103,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390005772823298047,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390006322579111935,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390007422090739711,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390009621113995263,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390014019160506367,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390022815253528575,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390040407439572991,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390075591811661823,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390145960555839487,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390286698044194815,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9390568173020905471,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9391131122974326783,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169407,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9392257022881169408,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393382922788012032,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9393945872741433344,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394227347718144000,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394368085206499328,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394438453950676992,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394473638322765824,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394491230508810240,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394500026601832448,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394504424648343552,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394506623671599104,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394507723183226880,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508272939040768,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508547816947712,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508685255901184,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508753975377920,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508788335116288,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508805514985472,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508814104920064,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508818399887360,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508820547371008,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508821621112832,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822157983744,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822426419200,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822560636928,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822627745792,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822661300224,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822678077440,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822686466048,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822690660352,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822692757504,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822693806080,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694330368,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694592512,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694723584,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694789120,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694821888,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694838272,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694846464,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694850560,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694852608,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694853632,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854144,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854400,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854528,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854592,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854624,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854640,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854648,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854652,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854654,64,FLEN)
NAN_BOXED(6888301714710929459,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9394508822694854655,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225152,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225153,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225155,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225159,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225167,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225183,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225215,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225279,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225407,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322225663,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322226175,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322227199,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322229247,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322233343,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322241535,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322257919,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322290687,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322356223,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322487295,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422322749439,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422323273727,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422324322303,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422326419455,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422330613759,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422339002367,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422355779583,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422389334015,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422456442879,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422590660607,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012422859096063,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012423395966975,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012424469708799,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012426617192447,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012430912159743,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012439502094335,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012456681963519,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012491041701887,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012559761178623,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012697200132095,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399012972078039039,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399013521833852927,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399014621345480703,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399016820368736255,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399021218415247359,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399030014508269567,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399047606694313983,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399082791066402815,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399153159810580479,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399293897298935807,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9399575372275646463,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9400138322229067775,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9401264222135910399,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9401264222135910400,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9402390122042753024,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9402953071996174336,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403234546972884992,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403375284461240320,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403445653205417984,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403480837577506816,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403498429763551232,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403507225856573440,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403511623903084544,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403513822926340096,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403514922437967872,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515472193781760,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515747071688704,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515884510642176,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515953230118912,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403515987589857280,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516004769726464,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516013359661056,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516017654628352,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516019802112000,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516020875853824,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021412724736,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021681160192,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021815377920,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021882486784,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021916041216,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021932818432,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021941207040,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021945401344,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021947498496,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021948547072,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949071360,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949333504,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949464576,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949530112,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949562880,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949579264,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949587456,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949591552,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949593600,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949594624,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595136,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595392,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595520,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595584,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595616,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595632,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595640,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595644,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595646,64,FLEN)
NAN_BOXED(6888307768650973469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9403516021949595647,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517248,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517249,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517251,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517255,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517263,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517279,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517311,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517375,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517503,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214517759,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214518271,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214519295,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214521343,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214525439,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214533631,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214550015,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214582783,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214648319,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705214779391,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705215041535,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705215565823,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705216614399,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705218711551,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705222905855,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705231294463,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705248071679,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705281626111,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705348734975,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705482952703,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575705751388159,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575706288259071,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575707362000895,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575709509484543,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575713804451839,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575722394386431,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575739574255615,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575773933993983,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575842653470719,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231575980092424191,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231576254970331135,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231576804726145023,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231577904237772799,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231580103261028351,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231584501307539455,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231593297400561663,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231610889586606079,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231646073958694911,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231716442702872575,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13231857180191227903,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13232138655167938559,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13232701605121359871,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13233827505028202495,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13233827505028202496,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13234953404935045120,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13235516354888466432,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13235797829865177088,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13235938567353532416,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236008936097710080,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236044120469798912,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236061712655843328,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236070508748865536,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236074906795376640,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236077105818632192,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236078205330259968,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236078755086073856,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079029963980800,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079167402934272,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079236122411008,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079270482149376,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079287662018560,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079296251953152,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079300546920448,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079302694404096,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079303768145920,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304305016832,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304573452288,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304707670016,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304774778880,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304808333312,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304825110528,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304833499136,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304837693440,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304839790592,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304840839168,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841363456,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841625600,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841756672,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841822208,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841854976,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841871360,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841879552,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841883648,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841885696,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841886720,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887232,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887488,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887616,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887680,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887712,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887728,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887736,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887740,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887742,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13236079304841887743,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6888314668120780707,64,FLEN)
NAN_BOXED(11517153423443316201,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6888324976571523615,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
