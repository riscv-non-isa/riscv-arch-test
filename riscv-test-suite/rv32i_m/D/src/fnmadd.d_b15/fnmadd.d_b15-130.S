
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_99072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffff800000; valaddr_reg:x3; val_offset:297216*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297216*0 + 3*0*FLEN/8, x4, x1, x2)

inst_99073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffc00000; valaddr_reg:x3; val_offset:297219*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297219*0 + 3*1*FLEN/8, x4, x1, x2)

inst_99074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffe00000; valaddr_reg:x3; val_offset:297222*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297222*0 + 3*2*FLEN/8, x4, x1, x2)

inst_99075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffff00000; valaddr_reg:x3; val_offset:297225*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297225*0 + 3*3*FLEN/8, x4, x1, x2)

inst_99076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffff80000; valaddr_reg:x3; val_offset:297228*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297228*0 + 3*4*FLEN/8, x4, x1, x2)

inst_99077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffc0000; valaddr_reg:x3; val_offset:297231*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297231*0 + 3*5*FLEN/8, x4, x1, x2)

inst_99078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffe0000; valaddr_reg:x3; val_offset:297234*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297234*0 + 3*6*FLEN/8, x4, x1, x2)

inst_99079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffff0000; valaddr_reg:x3; val_offset:297237*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297237*0 + 3*7*FLEN/8, x4, x1, x2)

inst_99080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffff8000; valaddr_reg:x3; val_offset:297240*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297240*0 + 3*8*FLEN/8, x4, x1, x2)

inst_99081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffffc000; valaddr_reg:x3; val_offset:297243*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297243*0 + 3*9*FLEN/8, x4, x1, x2)

inst_99082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffffe000; valaddr_reg:x3; val_offset:297246*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297246*0 + 3*10*FLEN/8, x4, x1, x2)

inst_99083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffff000; valaddr_reg:x3; val_offset:297249*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297249*0 + 3*11*FLEN/8, x4, x1, x2)

inst_99084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffff800; valaddr_reg:x3; val_offset:297252*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297252*0 + 3*12*FLEN/8, x4, x1, x2)

inst_99085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffffc00; valaddr_reg:x3; val_offset:297255*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297255*0 + 3*13*FLEN/8, x4, x1, x2)

inst_99086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffffe00; valaddr_reg:x3; val_offset:297258*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297258*0 + 3*14*FLEN/8, x4, x1, x2)

inst_99087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffffff00; valaddr_reg:x3; val_offset:297261*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297261*0 + 3*15*FLEN/8, x4, x1, x2)

inst_99088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffffff80; valaddr_reg:x3; val_offset:297264*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297264*0 + 3*16*FLEN/8, x4, x1, x2)

inst_99089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffffffc0; valaddr_reg:x3; val_offset:297267*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297267*0 + 3*17*FLEN/8, x4, x1, x2)

inst_99090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffffffe0; valaddr_reg:x3; val_offset:297270*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297270*0 + 3*18*FLEN/8, x4, x1, x2)

inst_99091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffffff0; valaddr_reg:x3; val_offset:297273*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297273*0 + 3*19*FLEN/8, x4, x1, x2)

inst_99092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffffff8; valaddr_reg:x3; val_offset:297276*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297276*0 + 3*20*FLEN/8, x4, x1, x2)

inst_99093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffffffc; valaddr_reg:x3; val_offset:297279*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297279*0 + 3*21*FLEN/8, x4, x1, x2)

inst_99094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dffffffffffffe; valaddr_reg:x3; val_offset:297282*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297282*0 + 3*22*FLEN/8, x4, x1, x2)

inst_99095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2390be6c299f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2390be6c299f; op2val:0x0;
op3val:0x3dfffffffffffff; valaddr_reg:x3; val_offset:297285*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297285*0 + 3*23*FLEN/8, x4, x1, x2)

inst_99096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:297288*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297288*0 + 3*24*FLEN/8, x4, x1, x2)

inst_99097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:297291*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297291*0 + 3*25*FLEN/8, x4, x1, x2)

inst_99098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:297294*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297294*0 + 3*26*FLEN/8, x4, x1, x2)

inst_99099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:297297*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297297*0 + 3*27*FLEN/8, x4, x1, x2)

inst_99100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:297300*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297300*0 + 3*28*FLEN/8, x4, x1, x2)

inst_99101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:297303*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297303*0 + 3*29*FLEN/8, x4, x1, x2)

inst_99102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:297306*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297306*0 + 3*30*FLEN/8, x4, x1, x2)

inst_99103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:297309*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297309*0 + 3*31*FLEN/8, x4, x1, x2)

inst_99104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:297312*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297312*0 + 3*32*FLEN/8, x4, x1, x2)

inst_99105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:297315*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297315*0 + 3*33*FLEN/8, x4, x1, x2)

inst_99106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:297318*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297318*0 + 3*34*FLEN/8, x4, x1, x2)

inst_99107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:297321*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297321*0 + 3*35*FLEN/8, x4, x1, x2)

inst_99108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:297324*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297324*0 + 3*36*FLEN/8, x4, x1, x2)

inst_99109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:297327*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297327*0 + 3*37*FLEN/8, x4, x1, x2)

inst_99110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:297330*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297330*0 + 3*38*FLEN/8, x4, x1, x2)

inst_99111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:297333*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297333*0 + 3*39*FLEN/8, x4, x1, x2)

inst_99112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:297336*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297336*0 + 3*40*FLEN/8, x4, x1, x2)

inst_99113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:297339*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297339*0 + 3*41*FLEN/8, x4, x1, x2)

inst_99114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:297342*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297342*0 + 3*42*FLEN/8, x4, x1, x2)

inst_99115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:297345*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297345*0 + 3*43*FLEN/8, x4, x1, x2)

inst_99116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:297348*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297348*0 + 3*44*FLEN/8, x4, x1, x2)

inst_99117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:297351*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297351*0 + 3*45*FLEN/8, x4, x1, x2)

inst_99118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000000000; valaddr_reg:x3; val_offset:297354*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297354*0 + 3*46*FLEN/8, x4, x1, x2)

inst_99119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000000001; valaddr_reg:x3; val_offset:297357*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297357*0 + 3*47*FLEN/8, x4, x1, x2)

inst_99120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000000003; valaddr_reg:x3; val_offset:297360*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297360*0 + 3*48*FLEN/8, x4, x1, x2)

inst_99121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000000007; valaddr_reg:x3; val_offset:297363*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297363*0 + 3*49*FLEN/8, x4, x1, x2)

inst_99122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000000000f; valaddr_reg:x3; val_offset:297366*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297366*0 + 3*50*FLEN/8, x4, x1, x2)

inst_99123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000000001f; valaddr_reg:x3; val_offset:297369*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297369*0 + 3*51*FLEN/8, x4, x1, x2)

inst_99124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000000003f; valaddr_reg:x3; val_offset:297372*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297372*0 + 3*52*FLEN/8, x4, x1, x2)

inst_99125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000000007f; valaddr_reg:x3; val_offset:297375*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297375*0 + 3*53*FLEN/8, x4, x1, x2)

inst_99126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000000000ff; valaddr_reg:x3; val_offset:297378*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297378*0 + 3*54*FLEN/8, x4, x1, x2)

inst_99127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000000001ff; valaddr_reg:x3; val_offset:297381*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297381*0 + 3*55*FLEN/8, x4, x1, x2)

inst_99128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000000003ff; valaddr_reg:x3; val_offset:297384*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297384*0 + 3*56*FLEN/8, x4, x1, x2)

inst_99129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000000007ff; valaddr_reg:x3; val_offset:297387*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297387*0 + 3*57*FLEN/8, x4, x1, x2)

inst_99130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000000fff; valaddr_reg:x3; val_offset:297390*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297390*0 + 3*58*FLEN/8, x4, x1, x2)

inst_99131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000001fff; valaddr_reg:x3; val_offset:297393*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297393*0 + 3*59*FLEN/8, x4, x1, x2)

inst_99132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000003fff; valaddr_reg:x3; val_offset:297396*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297396*0 + 3*60*FLEN/8, x4, x1, x2)

inst_99133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000007fff; valaddr_reg:x3; val_offset:297399*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297399*0 + 3*61*FLEN/8, x4, x1, x2)

inst_99134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000000ffff; valaddr_reg:x3; val_offset:297402*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297402*0 + 3*62*FLEN/8, x4, x1, x2)

inst_99135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000001ffff; valaddr_reg:x3; val_offset:297405*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297405*0 + 3*63*FLEN/8, x4, x1, x2)

inst_99136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000003ffff; valaddr_reg:x3; val_offset:297408*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297408*0 + 3*64*FLEN/8, x4, x1, x2)

inst_99137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000007ffff; valaddr_reg:x3; val_offset:297411*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297411*0 + 3*65*FLEN/8, x4, x1, x2)

inst_99138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000000fffff; valaddr_reg:x3; val_offset:297414*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297414*0 + 3*66*FLEN/8, x4, x1, x2)

inst_99139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000001fffff; valaddr_reg:x3; val_offset:297417*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297417*0 + 3*67*FLEN/8, x4, x1, x2)

inst_99140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000003fffff; valaddr_reg:x3; val_offset:297420*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297420*0 + 3*68*FLEN/8, x4, x1, x2)

inst_99141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000007fffff; valaddr_reg:x3; val_offset:297423*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297423*0 + 3*69*FLEN/8, x4, x1, x2)

inst_99142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000000ffffff; valaddr_reg:x3; val_offset:297426*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297426*0 + 3*70*FLEN/8, x4, x1, x2)

inst_99143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000001ffffff; valaddr_reg:x3; val_offset:297429*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297429*0 + 3*71*FLEN/8, x4, x1, x2)

inst_99144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000003ffffff; valaddr_reg:x3; val_offset:297432*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297432*0 + 3*72*FLEN/8, x4, x1, x2)

inst_99145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000007ffffff; valaddr_reg:x3; val_offset:297435*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297435*0 + 3*73*FLEN/8, x4, x1, x2)

inst_99146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000000fffffff; valaddr_reg:x3; val_offset:297438*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297438*0 + 3*74*FLEN/8, x4, x1, x2)

inst_99147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000001fffffff; valaddr_reg:x3; val_offset:297441*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297441*0 + 3*75*FLEN/8, x4, x1, x2)

inst_99148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000003fffffff; valaddr_reg:x3; val_offset:297444*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297444*0 + 3*76*FLEN/8, x4, x1, x2)

inst_99149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000007fffffff; valaddr_reg:x3; val_offset:297447*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297447*0 + 3*77*FLEN/8, x4, x1, x2)

inst_99150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00000ffffffff; valaddr_reg:x3; val_offset:297450*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297450*0 + 3*78*FLEN/8, x4, x1, x2)

inst_99151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00001ffffffff; valaddr_reg:x3; val_offset:297453*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297453*0 + 3*79*FLEN/8, x4, x1, x2)

inst_99152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00003ffffffff; valaddr_reg:x3; val_offset:297456*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297456*0 + 3*80*FLEN/8, x4, x1, x2)

inst_99153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00007ffffffff; valaddr_reg:x3; val_offset:297459*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297459*0 + 3*81*FLEN/8, x4, x1, x2)

inst_99154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0000fffffffff; valaddr_reg:x3; val_offset:297462*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297462*0 + 3*82*FLEN/8, x4, x1, x2)

inst_99155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0001fffffffff; valaddr_reg:x3; val_offset:297465*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297465*0 + 3*83*FLEN/8, x4, x1, x2)

inst_99156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0003fffffffff; valaddr_reg:x3; val_offset:297468*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297468*0 + 3*84*FLEN/8, x4, x1, x2)

inst_99157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0007fffffffff; valaddr_reg:x3; val_offset:297471*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297471*0 + 3*85*FLEN/8, x4, x1, x2)

inst_99158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a000ffffffffff; valaddr_reg:x3; val_offset:297474*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297474*0 + 3*86*FLEN/8, x4, x1, x2)

inst_99159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a001ffffffffff; valaddr_reg:x3; val_offset:297477*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297477*0 + 3*87*FLEN/8, x4, x1, x2)

inst_99160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a003ffffffffff; valaddr_reg:x3; val_offset:297480*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297480*0 + 3*88*FLEN/8, x4, x1, x2)

inst_99161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a007ffffffffff; valaddr_reg:x3; val_offset:297483*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297483*0 + 3*89*FLEN/8, x4, x1, x2)

inst_99162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a00fffffffffff; valaddr_reg:x3; val_offset:297486*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297486*0 + 3*90*FLEN/8, x4, x1, x2)

inst_99163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a01fffffffffff; valaddr_reg:x3; val_offset:297489*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297489*0 + 3*91*FLEN/8, x4, x1, x2)

inst_99164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a03fffffffffff; valaddr_reg:x3; val_offset:297492*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297492*0 + 3*92*FLEN/8, x4, x1, x2)

inst_99165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a07fffffffffff; valaddr_reg:x3; val_offset:297495*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297495*0 + 3*93*FLEN/8, x4, x1, x2)

inst_99166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a0ffffffffffff; valaddr_reg:x3; val_offset:297498*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297498*0 + 3*94*FLEN/8, x4, x1, x2)

inst_99167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a1ffffffffffff; valaddr_reg:x3; val_offset:297501*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297501*0 + 3*95*FLEN/8, x4, x1, x2)

inst_99168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a3ffffffffffff; valaddr_reg:x3; val_offset:297504*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297504*0 + 3*96*FLEN/8, x4, x1, x2)

inst_99169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a7ffffffffffff; valaddr_reg:x3; val_offset:297507*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297507*0 + 3*97*FLEN/8, x4, x1, x2)

inst_99170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2a8000000000000; valaddr_reg:x3; val_offset:297510*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297510*0 + 3*98*FLEN/8, x4, x1, x2)

inst_99171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2ac000000000000; valaddr_reg:x3; val_offset:297513*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297513*0 + 3*99*FLEN/8, x4, x1, x2)

inst_99172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2ae000000000000; valaddr_reg:x3; val_offset:297516*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297516*0 + 3*100*FLEN/8, x4, x1, x2)

inst_99173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2af000000000000; valaddr_reg:x3; val_offset:297519*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297519*0 + 3*101*FLEN/8, x4, x1, x2)

inst_99174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2af800000000000; valaddr_reg:x3; val_offset:297522*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297522*0 + 3*102*FLEN/8, x4, x1, x2)

inst_99175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afc00000000000; valaddr_reg:x3; val_offset:297525*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297525*0 + 3*103*FLEN/8, x4, x1, x2)

inst_99176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afe00000000000; valaddr_reg:x3; val_offset:297528*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297528*0 + 3*104*FLEN/8, x4, x1, x2)

inst_99177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2aff00000000000; valaddr_reg:x3; val_offset:297531*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297531*0 + 3*105*FLEN/8, x4, x1, x2)

inst_99178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2aff80000000000; valaddr_reg:x3; val_offset:297534*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297534*0 + 3*106*FLEN/8, x4, x1, x2)

inst_99179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affc0000000000; valaddr_reg:x3; val_offset:297537*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297537*0 + 3*107*FLEN/8, x4, x1, x2)

inst_99180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affe0000000000; valaddr_reg:x3; val_offset:297540*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297540*0 + 3*108*FLEN/8, x4, x1, x2)

inst_99181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afff0000000000; valaddr_reg:x3; val_offset:297543*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297543*0 + 3*109*FLEN/8, x4, x1, x2)

inst_99182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afff8000000000; valaddr_reg:x3; val_offset:297546*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297546*0 + 3*110*FLEN/8, x4, x1, x2)

inst_99183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffc000000000; valaddr_reg:x3; val_offset:297549*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297549*0 + 3*111*FLEN/8, x4, x1, x2)

inst_99184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffe000000000; valaddr_reg:x3; val_offset:297552*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297552*0 + 3*112*FLEN/8, x4, x1, x2)

inst_99185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affff000000000; valaddr_reg:x3; val_offset:297555*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297555*0 + 3*113*FLEN/8, x4, x1, x2)

inst_99186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affff800000000; valaddr_reg:x3; val_offset:297558*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297558*0 + 3*114*FLEN/8, x4, x1, x2)

inst_99187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffc00000000; valaddr_reg:x3; val_offset:297561*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297561*0 + 3*115*FLEN/8, x4, x1, x2)

inst_99188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffe00000000; valaddr_reg:x3; val_offset:297564*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297564*0 + 3*116*FLEN/8, x4, x1, x2)

inst_99189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffff00000000; valaddr_reg:x3; val_offset:297567*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297567*0 + 3*117*FLEN/8, x4, x1, x2)

inst_99190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffff80000000; valaddr_reg:x3; val_offset:297570*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297570*0 + 3*118*FLEN/8, x4, x1, x2)

inst_99191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffc0000000; valaddr_reg:x3; val_offset:297573*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297573*0 + 3*119*FLEN/8, x4, x1, x2)

inst_99192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffe0000000; valaddr_reg:x3; val_offset:297576*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297576*0 + 3*120*FLEN/8, x4, x1, x2)

inst_99193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffff0000000; valaddr_reg:x3; val_offset:297579*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297579*0 + 3*121*FLEN/8, x4, x1, x2)

inst_99194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffff8000000; valaddr_reg:x3; val_offset:297582*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297582*0 + 3*122*FLEN/8, x4, x1, x2)

inst_99195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffc000000; valaddr_reg:x3; val_offset:297585*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297585*0 + 3*123*FLEN/8, x4, x1, x2)

inst_99196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffe000000; valaddr_reg:x3; val_offset:297588*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297588*0 + 3*124*FLEN/8, x4, x1, x2)

inst_99197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffff000000; valaddr_reg:x3; val_offset:297591*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297591*0 + 3*125*FLEN/8, x4, x1, x2)

inst_99198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffff800000; valaddr_reg:x3; val_offset:297594*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297594*0 + 3*126*FLEN/8, x4, x1, x2)

inst_99199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffc00000; valaddr_reg:x3; val_offset:297597*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297597*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_99200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffe00000; valaddr_reg:x3; val_offset:297600*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297600*0 + 3*128*FLEN/8, x4, x1, x2)

inst_99201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffff00000; valaddr_reg:x3; val_offset:297603*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297603*0 + 3*129*FLEN/8, x4, x1, x2)

inst_99202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffff80000; valaddr_reg:x3; val_offset:297606*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297606*0 + 3*130*FLEN/8, x4, x1, x2)

inst_99203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffc0000; valaddr_reg:x3; val_offset:297609*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297609*0 + 3*131*FLEN/8, x4, x1, x2)

inst_99204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffe0000; valaddr_reg:x3; val_offset:297612*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297612*0 + 3*132*FLEN/8, x4, x1, x2)

inst_99205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffff0000; valaddr_reg:x3; val_offset:297615*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297615*0 + 3*133*FLEN/8, x4, x1, x2)

inst_99206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffff8000; valaddr_reg:x3; val_offset:297618*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297618*0 + 3*134*FLEN/8, x4, x1, x2)

inst_99207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffffc000; valaddr_reg:x3; val_offset:297621*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297621*0 + 3*135*FLEN/8, x4, x1, x2)

inst_99208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffffe000; valaddr_reg:x3; val_offset:297624*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297624*0 + 3*136*FLEN/8, x4, x1, x2)

inst_99209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffff000; valaddr_reg:x3; val_offset:297627*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297627*0 + 3*137*FLEN/8, x4, x1, x2)

inst_99210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffff800; valaddr_reg:x3; val_offset:297630*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297630*0 + 3*138*FLEN/8, x4, x1, x2)

inst_99211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffffc00; valaddr_reg:x3; val_offset:297633*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297633*0 + 3*139*FLEN/8, x4, x1, x2)

inst_99212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffffe00; valaddr_reg:x3; val_offset:297636*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297636*0 + 3*140*FLEN/8, x4, x1, x2)

inst_99213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffffff00; valaddr_reg:x3; val_offset:297639*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297639*0 + 3*141*FLEN/8, x4, x1, x2)

inst_99214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffffff80; valaddr_reg:x3; val_offset:297642*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297642*0 + 3*142*FLEN/8, x4, x1, x2)

inst_99215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffffffc0; valaddr_reg:x3; val_offset:297645*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297645*0 + 3*143*FLEN/8, x4, x1, x2)

inst_99216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffffffe0; valaddr_reg:x3; val_offset:297648*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297648*0 + 3*144*FLEN/8, x4, x1, x2)

inst_99217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffffff0; valaddr_reg:x3; val_offset:297651*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297651*0 + 3*145*FLEN/8, x4, x1, x2)

inst_99218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffffff8; valaddr_reg:x3; val_offset:297654*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297654*0 + 3*146*FLEN/8, x4, x1, x2)

inst_99219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffffffc; valaddr_reg:x3; val_offset:297657*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297657*0 + 3*147*FLEN/8, x4, x1, x2)

inst_99220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2affffffffffffe; valaddr_reg:x3; val_offset:297660*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297660*0 + 3*148*FLEN/8, x4, x1, x2)

inst_99221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf24e1ead842a6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf24e1ead842a6; op2val:0x0;
op3val:0x2afffffffffffff; valaddr_reg:x3; val_offset:297663*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297663*0 + 3*149*FLEN/8, x4, x1, x2)

inst_99222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:297666*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297666*0 + 3*150*FLEN/8, x4, x1, x2)

inst_99223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:297669*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297669*0 + 3*151*FLEN/8, x4, x1, x2)

inst_99224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:297672*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297672*0 + 3*152*FLEN/8, x4, x1, x2)

inst_99225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:297675*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297675*0 + 3*153*FLEN/8, x4, x1, x2)

inst_99226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:297678*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297678*0 + 3*154*FLEN/8, x4, x1, x2)

inst_99227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:297681*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297681*0 + 3*155*FLEN/8, x4, x1, x2)

inst_99228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:297684*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297684*0 + 3*156*FLEN/8, x4, x1, x2)

inst_99229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:297687*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297687*0 + 3*157*FLEN/8, x4, x1, x2)

inst_99230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:297690*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297690*0 + 3*158*FLEN/8, x4, x1, x2)

inst_99231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:297693*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297693*0 + 3*159*FLEN/8, x4, x1, x2)

inst_99232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:297696*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297696*0 + 3*160*FLEN/8, x4, x1, x2)

inst_99233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:297699*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297699*0 + 3*161*FLEN/8, x4, x1, x2)

inst_99234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:297702*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297702*0 + 3*162*FLEN/8, x4, x1, x2)

inst_99235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:297705*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297705*0 + 3*163*FLEN/8, x4, x1, x2)

inst_99236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:297708*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297708*0 + 3*164*FLEN/8, x4, x1, x2)

inst_99237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:297711*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297711*0 + 3*165*FLEN/8, x4, x1, x2)

inst_99238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:297714*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297714*0 + 3*166*FLEN/8, x4, x1, x2)

inst_99239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:297717*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297717*0 + 3*167*FLEN/8, x4, x1, x2)

inst_99240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:297720*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297720*0 + 3*168*FLEN/8, x4, x1, x2)

inst_99241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:297723*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297723*0 + 3*169*FLEN/8, x4, x1, x2)

inst_99242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:297726*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297726*0 + 3*170*FLEN/8, x4, x1, x2)

inst_99243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:297729*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297729*0 + 3*171*FLEN/8, x4, x1, x2)

inst_99244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000000000; valaddr_reg:x3; val_offset:297732*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297732*0 + 3*172*FLEN/8, x4, x1, x2)

inst_99245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000000001; valaddr_reg:x3; val_offset:297735*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297735*0 + 3*173*FLEN/8, x4, x1, x2)

inst_99246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000000003; valaddr_reg:x3; val_offset:297738*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297738*0 + 3*174*FLEN/8, x4, x1, x2)

inst_99247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000000007; valaddr_reg:x3; val_offset:297741*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297741*0 + 3*175*FLEN/8, x4, x1, x2)

inst_99248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000000000f; valaddr_reg:x3; val_offset:297744*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297744*0 + 3*176*FLEN/8, x4, x1, x2)

inst_99249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000000001f; valaddr_reg:x3; val_offset:297747*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297747*0 + 3*177*FLEN/8, x4, x1, x2)

inst_99250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000000003f; valaddr_reg:x3; val_offset:297750*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297750*0 + 3*178*FLEN/8, x4, x1, x2)

inst_99251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000000007f; valaddr_reg:x3; val_offset:297753*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297753*0 + 3*179*FLEN/8, x4, x1, x2)

inst_99252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000000000ff; valaddr_reg:x3; val_offset:297756*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297756*0 + 3*180*FLEN/8, x4, x1, x2)

inst_99253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000000001ff; valaddr_reg:x3; val_offset:297759*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297759*0 + 3*181*FLEN/8, x4, x1, x2)

inst_99254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000000003ff; valaddr_reg:x3; val_offset:297762*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297762*0 + 3*182*FLEN/8, x4, x1, x2)

inst_99255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000000007ff; valaddr_reg:x3; val_offset:297765*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297765*0 + 3*183*FLEN/8, x4, x1, x2)

inst_99256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000000fff; valaddr_reg:x3; val_offset:297768*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297768*0 + 3*184*FLEN/8, x4, x1, x2)

inst_99257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000001fff; valaddr_reg:x3; val_offset:297771*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297771*0 + 3*185*FLEN/8, x4, x1, x2)

inst_99258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000003fff; valaddr_reg:x3; val_offset:297774*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297774*0 + 3*186*FLEN/8, x4, x1, x2)

inst_99259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000007fff; valaddr_reg:x3; val_offset:297777*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297777*0 + 3*187*FLEN/8, x4, x1, x2)

inst_99260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000000ffff; valaddr_reg:x3; val_offset:297780*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297780*0 + 3*188*FLEN/8, x4, x1, x2)

inst_99261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000001ffff; valaddr_reg:x3; val_offset:297783*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297783*0 + 3*189*FLEN/8, x4, x1, x2)

inst_99262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000003ffff; valaddr_reg:x3; val_offset:297786*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297786*0 + 3*190*FLEN/8, x4, x1, x2)

inst_99263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000007ffff; valaddr_reg:x3; val_offset:297789*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297789*0 + 3*191*FLEN/8, x4, x1, x2)

inst_99264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000000fffff; valaddr_reg:x3; val_offset:297792*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297792*0 + 3*192*FLEN/8, x4, x1, x2)

inst_99265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000001fffff; valaddr_reg:x3; val_offset:297795*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297795*0 + 3*193*FLEN/8, x4, x1, x2)

inst_99266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000003fffff; valaddr_reg:x3; val_offset:297798*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297798*0 + 3*194*FLEN/8, x4, x1, x2)

inst_99267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000007fffff; valaddr_reg:x3; val_offset:297801*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297801*0 + 3*195*FLEN/8, x4, x1, x2)

inst_99268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000000ffffff; valaddr_reg:x3; val_offset:297804*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297804*0 + 3*196*FLEN/8, x4, x1, x2)

inst_99269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000001ffffff; valaddr_reg:x3; val_offset:297807*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297807*0 + 3*197*FLEN/8, x4, x1, x2)

inst_99270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000003ffffff; valaddr_reg:x3; val_offset:297810*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297810*0 + 3*198*FLEN/8, x4, x1, x2)

inst_99271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000007ffffff; valaddr_reg:x3; val_offset:297813*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297813*0 + 3*199*FLEN/8, x4, x1, x2)

inst_99272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000000fffffff; valaddr_reg:x3; val_offset:297816*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297816*0 + 3*200*FLEN/8, x4, x1, x2)

inst_99273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000001fffffff; valaddr_reg:x3; val_offset:297819*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297819*0 + 3*201*FLEN/8, x4, x1, x2)

inst_99274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000003fffffff; valaddr_reg:x3; val_offset:297822*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297822*0 + 3*202*FLEN/8, x4, x1, x2)

inst_99275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000007fffffff; valaddr_reg:x3; val_offset:297825*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297825*0 + 3*203*FLEN/8, x4, x1, x2)

inst_99276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100000ffffffff; valaddr_reg:x3; val_offset:297828*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297828*0 + 3*204*FLEN/8, x4, x1, x2)

inst_99277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100001ffffffff; valaddr_reg:x3; val_offset:297831*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297831*0 + 3*205*FLEN/8, x4, x1, x2)

inst_99278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100003ffffffff; valaddr_reg:x3; val_offset:297834*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297834*0 + 3*206*FLEN/8, x4, x1, x2)

inst_99279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100007ffffffff; valaddr_reg:x3; val_offset:297837*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297837*0 + 3*207*FLEN/8, x4, x1, x2)

inst_99280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310000fffffffff; valaddr_reg:x3; val_offset:297840*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297840*0 + 3*208*FLEN/8, x4, x1, x2)

inst_99281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310001fffffffff; valaddr_reg:x3; val_offset:297843*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297843*0 + 3*209*FLEN/8, x4, x1, x2)

inst_99282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310003fffffffff; valaddr_reg:x3; val_offset:297846*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297846*0 + 3*210*FLEN/8, x4, x1, x2)

inst_99283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310007fffffffff; valaddr_reg:x3; val_offset:297849*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297849*0 + 3*211*FLEN/8, x4, x1, x2)

inst_99284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31000ffffffffff; valaddr_reg:x3; val_offset:297852*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297852*0 + 3*212*FLEN/8, x4, x1, x2)

inst_99285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31001ffffffffff; valaddr_reg:x3; val_offset:297855*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297855*0 + 3*213*FLEN/8, x4, x1, x2)

inst_99286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31003ffffffffff; valaddr_reg:x3; val_offset:297858*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297858*0 + 3*214*FLEN/8, x4, x1, x2)

inst_99287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31007ffffffffff; valaddr_reg:x3; val_offset:297861*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297861*0 + 3*215*FLEN/8, x4, x1, x2)

inst_99288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3100fffffffffff; valaddr_reg:x3; val_offset:297864*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297864*0 + 3*216*FLEN/8, x4, x1, x2)

inst_99289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3101fffffffffff; valaddr_reg:x3; val_offset:297867*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297867*0 + 3*217*FLEN/8, x4, x1, x2)

inst_99290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3103fffffffffff; valaddr_reg:x3; val_offset:297870*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297870*0 + 3*218*FLEN/8, x4, x1, x2)

inst_99291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x3107fffffffffff; valaddr_reg:x3; val_offset:297873*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297873*0 + 3*219*FLEN/8, x4, x1, x2)

inst_99292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x310ffffffffffff; valaddr_reg:x3; val_offset:297876*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297876*0 + 3*220*FLEN/8, x4, x1, x2)

inst_99293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x311ffffffffffff; valaddr_reg:x3; val_offset:297879*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297879*0 + 3*221*FLEN/8, x4, x1, x2)

inst_99294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x313ffffffffffff; valaddr_reg:x3; val_offset:297882*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297882*0 + 3*222*FLEN/8, x4, x1, x2)

inst_99295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x317ffffffffffff; valaddr_reg:x3; val_offset:297885*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297885*0 + 3*223*FLEN/8, x4, x1, x2)

inst_99296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x318000000000000; valaddr_reg:x3; val_offset:297888*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297888*0 + 3*224*FLEN/8, x4, x1, x2)

inst_99297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31c000000000000; valaddr_reg:x3; val_offset:297891*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297891*0 + 3*225*FLEN/8, x4, x1, x2)

inst_99298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31e000000000000; valaddr_reg:x3; val_offset:297894*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297894*0 + 3*226*FLEN/8, x4, x1, x2)

inst_99299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31f000000000000; valaddr_reg:x3; val_offset:297897*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297897*0 + 3*227*FLEN/8, x4, x1, x2)

inst_99300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31f800000000000; valaddr_reg:x3; val_offset:297900*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297900*0 + 3*228*FLEN/8, x4, x1, x2)

inst_99301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fc00000000000; valaddr_reg:x3; val_offset:297903*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297903*0 + 3*229*FLEN/8, x4, x1, x2)

inst_99302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fe00000000000; valaddr_reg:x3; val_offset:297906*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297906*0 + 3*230*FLEN/8, x4, x1, x2)

inst_99303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ff00000000000; valaddr_reg:x3; val_offset:297909*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297909*0 + 3*231*FLEN/8, x4, x1, x2)

inst_99304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ff80000000000; valaddr_reg:x3; val_offset:297912*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297912*0 + 3*232*FLEN/8, x4, x1, x2)

inst_99305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffc0000000000; valaddr_reg:x3; val_offset:297915*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297915*0 + 3*233*FLEN/8, x4, x1, x2)

inst_99306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffe0000000000; valaddr_reg:x3; val_offset:297918*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297918*0 + 3*234*FLEN/8, x4, x1, x2)

inst_99307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fff0000000000; valaddr_reg:x3; val_offset:297921*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297921*0 + 3*235*FLEN/8, x4, x1, x2)

inst_99308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fff8000000000; valaddr_reg:x3; val_offset:297924*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297924*0 + 3*236*FLEN/8, x4, x1, x2)

inst_99309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffc000000000; valaddr_reg:x3; val_offset:297927*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297927*0 + 3*237*FLEN/8, x4, x1, x2)

inst_99310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffe000000000; valaddr_reg:x3; val_offset:297930*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297930*0 + 3*238*FLEN/8, x4, x1, x2)

inst_99311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffff000000000; valaddr_reg:x3; val_offset:297933*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297933*0 + 3*239*FLEN/8, x4, x1, x2)

inst_99312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffff800000000; valaddr_reg:x3; val_offset:297936*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297936*0 + 3*240*FLEN/8, x4, x1, x2)

inst_99313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffc00000000; valaddr_reg:x3; val_offset:297939*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297939*0 + 3*241*FLEN/8, x4, x1, x2)

inst_99314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffe00000000; valaddr_reg:x3; val_offset:297942*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297942*0 + 3*242*FLEN/8, x4, x1, x2)

inst_99315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffff00000000; valaddr_reg:x3; val_offset:297945*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297945*0 + 3*243*FLEN/8, x4, x1, x2)

inst_99316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffff80000000; valaddr_reg:x3; val_offset:297948*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297948*0 + 3*244*FLEN/8, x4, x1, x2)

inst_99317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffc0000000; valaddr_reg:x3; val_offset:297951*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297951*0 + 3*245*FLEN/8, x4, x1, x2)

inst_99318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffe0000000; valaddr_reg:x3; val_offset:297954*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297954*0 + 3*246*FLEN/8, x4, x1, x2)

inst_99319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffff0000000; valaddr_reg:x3; val_offset:297957*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297957*0 + 3*247*FLEN/8, x4, x1, x2)

inst_99320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffff8000000; valaddr_reg:x3; val_offset:297960*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297960*0 + 3*248*FLEN/8, x4, x1, x2)

inst_99321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffc000000; valaddr_reg:x3; val_offset:297963*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297963*0 + 3*249*FLEN/8, x4, x1, x2)

inst_99322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffe000000; valaddr_reg:x3; val_offset:297966*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297966*0 + 3*250*FLEN/8, x4, x1, x2)

inst_99323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffff000000; valaddr_reg:x3; val_offset:297969*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297969*0 + 3*251*FLEN/8, x4, x1, x2)

inst_99324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffff800000; valaddr_reg:x3; val_offset:297972*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297972*0 + 3*252*FLEN/8, x4, x1, x2)

inst_99325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffc00000; valaddr_reg:x3; val_offset:297975*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297975*0 + 3*253*FLEN/8, x4, x1, x2)

inst_99326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffe00000; valaddr_reg:x3; val_offset:297978*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297978*0 + 3*254*FLEN/8, x4, x1, x2)

inst_99327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffff00000; valaddr_reg:x3; val_offset:297981*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297981*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_99328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffff80000; valaddr_reg:x3; val_offset:297984*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297984*0 + 3*256*FLEN/8, x4, x1, x2)

inst_99329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffc0000; valaddr_reg:x3; val_offset:297987*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297987*0 + 3*257*FLEN/8, x4, x1, x2)

inst_99330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffe0000; valaddr_reg:x3; val_offset:297990*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297990*0 + 3*258*FLEN/8, x4, x1, x2)

inst_99331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffff0000; valaddr_reg:x3; val_offset:297993*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297993*0 + 3*259*FLEN/8, x4, x1, x2)

inst_99332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffff8000; valaddr_reg:x3; val_offset:297996*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297996*0 + 3*260*FLEN/8, x4, x1, x2)

inst_99333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffffc000; valaddr_reg:x3; val_offset:297999*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297999*0 + 3*261*FLEN/8, x4, x1, x2)

inst_99334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffffe000; valaddr_reg:x3; val_offset:298002*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298002*0 + 3*262*FLEN/8, x4, x1, x2)

inst_99335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffff000; valaddr_reg:x3; val_offset:298005*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298005*0 + 3*263*FLEN/8, x4, x1, x2)

inst_99336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffff800; valaddr_reg:x3; val_offset:298008*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298008*0 + 3*264*FLEN/8, x4, x1, x2)

inst_99337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffffc00; valaddr_reg:x3; val_offset:298011*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298011*0 + 3*265*FLEN/8, x4, x1, x2)

inst_99338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffffe00; valaddr_reg:x3; val_offset:298014*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298014*0 + 3*266*FLEN/8, x4, x1, x2)

inst_99339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffffff00; valaddr_reg:x3; val_offset:298017*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298017*0 + 3*267*FLEN/8, x4, x1, x2)

inst_99340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffffff80; valaddr_reg:x3; val_offset:298020*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298020*0 + 3*268*FLEN/8, x4, x1, x2)

inst_99341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffffffc0; valaddr_reg:x3; val_offset:298023*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298023*0 + 3*269*FLEN/8, x4, x1, x2)

inst_99342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffffffe0; valaddr_reg:x3; val_offset:298026*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298026*0 + 3*270*FLEN/8, x4, x1, x2)

inst_99343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffffff0; valaddr_reg:x3; val_offset:298029*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298029*0 + 3*271*FLEN/8, x4, x1, x2)

inst_99344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffffff8; valaddr_reg:x3; val_offset:298032*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298032*0 + 3*272*FLEN/8, x4, x1, x2)

inst_99345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffffffc; valaddr_reg:x3; val_offset:298035*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298035*0 + 3*273*FLEN/8, x4, x1, x2)

inst_99346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31ffffffffffffe; valaddr_reg:x3; val_offset:298038*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298038*0 + 3*274*FLEN/8, x4, x1, x2)

inst_99347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf26838f87a892 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf26838f87a892; op2val:0x0;
op3val:0x31fffffffffffff; valaddr_reg:x3; val_offset:298041*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298041*0 + 3*275*FLEN/8, x4, x1, x2)

inst_99348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:298044*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298044*0 + 3*276*FLEN/8, x4, x1, x2)

inst_99349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:298047*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298047*0 + 3*277*FLEN/8, x4, x1, x2)

inst_99350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:298050*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298050*0 + 3*278*FLEN/8, x4, x1, x2)

inst_99351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:298053*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298053*0 + 3*279*FLEN/8, x4, x1, x2)

inst_99352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:298056*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298056*0 + 3*280*FLEN/8, x4, x1, x2)

inst_99353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:298059*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298059*0 + 3*281*FLEN/8, x4, x1, x2)

inst_99354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:298062*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298062*0 + 3*282*FLEN/8, x4, x1, x2)

inst_99355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:298065*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298065*0 + 3*283*FLEN/8, x4, x1, x2)

inst_99356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:298068*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298068*0 + 3*284*FLEN/8, x4, x1, x2)

inst_99357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:298071*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298071*0 + 3*285*FLEN/8, x4, x1, x2)

inst_99358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:298074*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298074*0 + 3*286*FLEN/8, x4, x1, x2)

inst_99359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:298077*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298077*0 + 3*287*FLEN/8, x4, x1, x2)

inst_99360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:298080*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298080*0 + 3*288*FLEN/8, x4, x1, x2)

inst_99361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:298083*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298083*0 + 3*289*FLEN/8, x4, x1, x2)

inst_99362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:298086*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298086*0 + 3*290*FLEN/8, x4, x1, x2)

inst_99363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:298089*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298089*0 + 3*291*FLEN/8, x4, x1, x2)

inst_99364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:298092*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298092*0 + 3*292*FLEN/8, x4, x1, x2)

inst_99365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:298095*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298095*0 + 3*293*FLEN/8, x4, x1, x2)

inst_99366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:298098*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298098*0 + 3*294*FLEN/8, x4, x1, x2)

inst_99367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:298101*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298101*0 + 3*295*FLEN/8, x4, x1, x2)

inst_99368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:298104*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298104*0 + 3*296*FLEN/8, x4, x1, x2)

inst_99369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:298107*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298107*0 + 3*297*FLEN/8, x4, x1, x2)

inst_99370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000000000; valaddr_reg:x3; val_offset:298110*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298110*0 + 3*298*FLEN/8, x4, x1, x2)

inst_99371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000000001; valaddr_reg:x3; val_offset:298113*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298113*0 + 3*299*FLEN/8, x4, x1, x2)

inst_99372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000000003; valaddr_reg:x3; val_offset:298116*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298116*0 + 3*300*FLEN/8, x4, x1, x2)

inst_99373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000000007; valaddr_reg:x3; val_offset:298119*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298119*0 + 3*301*FLEN/8, x4, x1, x2)

inst_99374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000000000f; valaddr_reg:x3; val_offset:298122*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298122*0 + 3*302*FLEN/8, x4, x1, x2)

inst_99375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000000001f; valaddr_reg:x3; val_offset:298125*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298125*0 + 3*303*FLEN/8, x4, x1, x2)

inst_99376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000000003f; valaddr_reg:x3; val_offset:298128*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298128*0 + 3*304*FLEN/8, x4, x1, x2)

inst_99377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000000007f; valaddr_reg:x3; val_offset:298131*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298131*0 + 3*305*FLEN/8, x4, x1, x2)

inst_99378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000000000ff; valaddr_reg:x3; val_offset:298134*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298134*0 + 3*306*FLEN/8, x4, x1, x2)

inst_99379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000000001ff; valaddr_reg:x3; val_offset:298137*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298137*0 + 3*307*FLEN/8, x4, x1, x2)

inst_99380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000000003ff; valaddr_reg:x3; val_offset:298140*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298140*0 + 3*308*FLEN/8, x4, x1, x2)

inst_99381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000000007ff; valaddr_reg:x3; val_offset:298143*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298143*0 + 3*309*FLEN/8, x4, x1, x2)

inst_99382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000000fff; valaddr_reg:x3; val_offset:298146*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298146*0 + 3*310*FLEN/8, x4, x1, x2)

inst_99383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000001fff; valaddr_reg:x3; val_offset:298149*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298149*0 + 3*311*FLEN/8, x4, x1, x2)

inst_99384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000003fff; valaddr_reg:x3; val_offset:298152*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298152*0 + 3*312*FLEN/8, x4, x1, x2)

inst_99385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000007fff; valaddr_reg:x3; val_offset:298155*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298155*0 + 3*313*FLEN/8, x4, x1, x2)

inst_99386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000000ffff; valaddr_reg:x3; val_offset:298158*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298158*0 + 3*314*FLEN/8, x4, x1, x2)

inst_99387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000001ffff; valaddr_reg:x3; val_offset:298161*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298161*0 + 3*315*FLEN/8, x4, x1, x2)

inst_99388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000003ffff; valaddr_reg:x3; val_offset:298164*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298164*0 + 3*316*FLEN/8, x4, x1, x2)

inst_99389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000007ffff; valaddr_reg:x3; val_offset:298167*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298167*0 + 3*317*FLEN/8, x4, x1, x2)

inst_99390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000000fffff; valaddr_reg:x3; val_offset:298170*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298170*0 + 3*318*FLEN/8, x4, x1, x2)

inst_99391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000001fffff; valaddr_reg:x3; val_offset:298173*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298173*0 + 3*319*FLEN/8, x4, x1, x2)

inst_99392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000003fffff; valaddr_reg:x3; val_offset:298176*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298176*0 + 3*320*FLEN/8, x4, x1, x2)

inst_99393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000007fffff; valaddr_reg:x3; val_offset:298179*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298179*0 + 3*321*FLEN/8, x4, x1, x2)

inst_99394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000000ffffff; valaddr_reg:x3; val_offset:298182*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298182*0 + 3*322*FLEN/8, x4, x1, x2)

inst_99395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000001ffffff; valaddr_reg:x3; val_offset:298185*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298185*0 + 3*323*FLEN/8, x4, x1, x2)

inst_99396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000003ffffff; valaddr_reg:x3; val_offset:298188*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298188*0 + 3*324*FLEN/8, x4, x1, x2)

inst_99397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000007ffffff; valaddr_reg:x3; val_offset:298191*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298191*0 + 3*325*FLEN/8, x4, x1, x2)

inst_99398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000000fffffff; valaddr_reg:x3; val_offset:298194*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298194*0 + 3*326*FLEN/8, x4, x1, x2)

inst_99399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000001fffffff; valaddr_reg:x3; val_offset:298197*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298197*0 + 3*327*FLEN/8, x4, x1, x2)

inst_99400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000003fffffff; valaddr_reg:x3; val_offset:298200*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298200*0 + 3*328*FLEN/8, x4, x1, x2)

inst_99401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000007fffffff; valaddr_reg:x3; val_offset:298203*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298203*0 + 3*329*FLEN/8, x4, x1, x2)

inst_99402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400000ffffffff; valaddr_reg:x3; val_offset:298206*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298206*0 + 3*330*FLEN/8, x4, x1, x2)

inst_99403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400001ffffffff; valaddr_reg:x3; val_offset:298209*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298209*0 + 3*331*FLEN/8, x4, x1, x2)

inst_99404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400003ffffffff; valaddr_reg:x3; val_offset:298212*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298212*0 + 3*332*FLEN/8, x4, x1, x2)

inst_99405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400007ffffffff; valaddr_reg:x3; val_offset:298215*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298215*0 + 3*333*FLEN/8, x4, x1, x2)

inst_99406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140000fffffffff; valaddr_reg:x3; val_offset:298218*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298218*0 + 3*334*FLEN/8, x4, x1, x2)

inst_99407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140001fffffffff; valaddr_reg:x3; val_offset:298221*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298221*0 + 3*335*FLEN/8, x4, x1, x2)

inst_99408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140003fffffffff; valaddr_reg:x3; val_offset:298224*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298224*0 + 3*336*FLEN/8, x4, x1, x2)

inst_99409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140007fffffffff; valaddr_reg:x3; val_offset:298227*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298227*0 + 3*337*FLEN/8, x4, x1, x2)

inst_99410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814000ffffffffff; valaddr_reg:x3; val_offset:298230*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298230*0 + 3*338*FLEN/8, x4, x1, x2)

inst_99411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814001ffffffffff; valaddr_reg:x3; val_offset:298233*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298233*0 + 3*339*FLEN/8, x4, x1, x2)

inst_99412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814003ffffffffff; valaddr_reg:x3; val_offset:298236*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298236*0 + 3*340*FLEN/8, x4, x1, x2)

inst_99413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814007ffffffffff; valaddr_reg:x3; val_offset:298239*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298239*0 + 3*341*FLEN/8, x4, x1, x2)

inst_99414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81400fffffffffff; valaddr_reg:x3; val_offset:298242*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298242*0 + 3*342*FLEN/8, x4, x1, x2)

inst_99415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81401fffffffffff; valaddr_reg:x3; val_offset:298245*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298245*0 + 3*343*FLEN/8, x4, x1, x2)

inst_99416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81403fffffffffff; valaddr_reg:x3; val_offset:298248*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298248*0 + 3*344*FLEN/8, x4, x1, x2)

inst_99417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x81407fffffffffff; valaddr_reg:x3; val_offset:298251*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298251*0 + 3*345*FLEN/8, x4, x1, x2)

inst_99418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8140ffffffffffff; valaddr_reg:x3; val_offset:298254*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298254*0 + 3*346*FLEN/8, x4, x1, x2)

inst_99419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8141ffffffffffff; valaddr_reg:x3; val_offset:298257*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298257*0 + 3*347*FLEN/8, x4, x1, x2)

inst_99420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8143ffffffffffff; valaddr_reg:x3; val_offset:298260*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298260*0 + 3*348*FLEN/8, x4, x1, x2)

inst_99421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8147ffffffffffff; valaddr_reg:x3; val_offset:298263*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298263*0 + 3*349*FLEN/8, x4, x1, x2)

inst_99422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x8148000000000000; valaddr_reg:x3; val_offset:298266*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298266*0 + 3*350*FLEN/8, x4, x1, x2)

inst_99423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814c000000000000; valaddr_reg:x3; val_offset:298269*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298269*0 + 3*351*FLEN/8, x4, x1, x2)

inst_99424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814e000000000000; valaddr_reg:x3; val_offset:298272*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298272*0 + 3*352*FLEN/8, x4, x1, x2)

inst_99425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814f000000000000; valaddr_reg:x3; val_offset:298275*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298275*0 + 3*353*FLEN/8, x4, x1, x2)

inst_99426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814f800000000000; valaddr_reg:x3; val_offset:298278*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298278*0 + 3*354*FLEN/8, x4, x1, x2)

inst_99427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fc00000000000; valaddr_reg:x3; val_offset:298281*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298281*0 + 3*355*FLEN/8, x4, x1, x2)

inst_99428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fe00000000000; valaddr_reg:x3; val_offset:298284*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298284*0 + 3*356*FLEN/8, x4, x1, x2)

inst_99429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ff00000000000; valaddr_reg:x3; val_offset:298287*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298287*0 + 3*357*FLEN/8, x4, x1, x2)

inst_99430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ff80000000000; valaddr_reg:x3; val_offset:298290*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298290*0 + 3*358*FLEN/8, x4, x1, x2)

inst_99431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffc0000000000; valaddr_reg:x3; val_offset:298293*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298293*0 + 3*359*FLEN/8, x4, x1, x2)

inst_99432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffe0000000000; valaddr_reg:x3; val_offset:298296*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298296*0 + 3*360*FLEN/8, x4, x1, x2)

inst_99433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fff0000000000; valaddr_reg:x3; val_offset:298299*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298299*0 + 3*361*FLEN/8, x4, x1, x2)

inst_99434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fff8000000000; valaddr_reg:x3; val_offset:298302*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298302*0 + 3*362*FLEN/8, x4, x1, x2)

inst_99435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffc000000000; valaddr_reg:x3; val_offset:298305*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298305*0 + 3*363*FLEN/8, x4, x1, x2)

inst_99436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffe000000000; valaddr_reg:x3; val_offset:298308*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298308*0 + 3*364*FLEN/8, x4, x1, x2)

inst_99437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffff000000000; valaddr_reg:x3; val_offset:298311*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298311*0 + 3*365*FLEN/8, x4, x1, x2)

inst_99438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffff800000000; valaddr_reg:x3; val_offset:298314*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298314*0 + 3*366*FLEN/8, x4, x1, x2)

inst_99439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffc00000000; valaddr_reg:x3; val_offset:298317*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298317*0 + 3*367*FLEN/8, x4, x1, x2)

inst_99440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffe00000000; valaddr_reg:x3; val_offset:298320*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298320*0 + 3*368*FLEN/8, x4, x1, x2)

inst_99441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffff00000000; valaddr_reg:x3; val_offset:298323*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298323*0 + 3*369*FLEN/8, x4, x1, x2)

inst_99442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffff80000000; valaddr_reg:x3; val_offset:298326*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298326*0 + 3*370*FLEN/8, x4, x1, x2)

inst_99443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffc0000000; valaddr_reg:x3; val_offset:298329*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298329*0 + 3*371*FLEN/8, x4, x1, x2)

inst_99444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffe0000000; valaddr_reg:x3; val_offset:298332*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298332*0 + 3*372*FLEN/8, x4, x1, x2)

inst_99445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffff0000000; valaddr_reg:x3; val_offset:298335*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298335*0 + 3*373*FLEN/8, x4, x1, x2)

inst_99446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffff8000000; valaddr_reg:x3; val_offset:298338*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298338*0 + 3*374*FLEN/8, x4, x1, x2)

inst_99447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffc000000; valaddr_reg:x3; val_offset:298341*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298341*0 + 3*375*FLEN/8, x4, x1, x2)

inst_99448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffe000000; valaddr_reg:x3; val_offset:298344*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298344*0 + 3*376*FLEN/8, x4, x1, x2)

inst_99449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffff000000; valaddr_reg:x3; val_offset:298347*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298347*0 + 3*377*FLEN/8, x4, x1, x2)

inst_99450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffff800000; valaddr_reg:x3; val_offset:298350*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298350*0 + 3*378*FLEN/8, x4, x1, x2)

inst_99451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffc00000; valaddr_reg:x3; val_offset:298353*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298353*0 + 3*379*FLEN/8, x4, x1, x2)

inst_99452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffe00000; valaddr_reg:x3; val_offset:298356*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298356*0 + 3*380*FLEN/8, x4, x1, x2)

inst_99453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffff00000; valaddr_reg:x3; val_offset:298359*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298359*0 + 3*381*FLEN/8, x4, x1, x2)

inst_99454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffff80000; valaddr_reg:x3; val_offset:298362*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298362*0 + 3*382*FLEN/8, x4, x1, x2)

inst_99455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffc0000; valaddr_reg:x3; val_offset:298365*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298365*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_99456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffe0000; valaddr_reg:x3; val_offset:298368*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298368*0 + 3*384*FLEN/8, x4, x1, x2)

inst_99457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffff0000; valaddr_reg:x3; val_offset:298371*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298371*0 + 3*385*FLEN/8, x4, x1, x2)

inst_99458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffff8000; valaddr_reg:x3; val_offset:298374*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298374*0 + 3*386*FLEN/8, x4, x1, x2)

inst_99459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffffc000; valaddr_reg:x3; val_offset:298377*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298377*0 + 3*387*FLEN/8, x4, x1, x2)

inst_99460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffffe000; valaddr_reg:x3; val_offset:298380*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298380*0 + 3*388*FLEN/8, x4, x1, x2)

inst_99461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffff000; valaddr_reg:x3; val_offset:298383*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298383*0 + 3*389*FLEN/8, x4, x1, x2)

inst_99462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffff800; valaddr_reg:x3; val_offset:298386*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298386*0 + 3*390*FLEN/8, x4, x1, x2)

inst_99463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffffc00; valaddr_reg:x3; val_offset:298389*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298389*0 + 3*391*FLEN/8, x4, x1, x2)

inst_99464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffffe00; valaddr_reg:x3; val_offset:298392*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298392*0 + 3*392*FLEN/8, x4, x1, x2)

inst_99465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffffff00; valaddr_reg:x3; val_offset:298395*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298395*0 + 3*393*FLEN/8, x4, x1, x2)

inst_99466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffffff80; valaddr_reg:x3; val_offset:298398*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298398*0 + 3*394*FLEN/8, x4, x1, x2)

inst_99467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffffffc0; valaddr_reg:x3; val_offset:298401*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298401*0 + 3*395*FLEN/8, x4, x1, x2)

inst_99468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffffffe0; valaddr_reg:x3; val_offset:298404*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298404*0 + 3*396*FLEN/8, x4, x1, x2)

inst_99469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffffff0; valaddr_reg:x3; val_offset:298407*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298407*0 + 3*397*FLEN/8, x4, x1, x2)

inst_99470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffffff8; valaddr_reg:x3; val_offset:298410*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298410*0 + 3*398*FLEN/8, x4, x1, x2)

inst_99471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffffffc; valaddr_reg:x3; val_offset:298413*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298413*0 + 3*399*FLEN/8, x4, x1, x2)

inst_99472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814ffffffffffffe; valaddr_reg:x3; val_offset:298416*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298416*0 + 3*400*FLEN/8, x4, x1, x2)

inst_99473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf2712f698f82f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf2712f698f82f; op2val:0x8000;
op3val:0x814fffffffffffff; valaddr_reg:x3; val_offset:298419*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298419*0 + 3*401*FLEN/8, x4, x1, x2)

inst_99474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:298422*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298422*0 + 3*402*FLEN/8, x4, x1, x2)

inst_99475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:298425*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298425*0 + 3*403*FLEN/8, x4, x1, x2)

inst_99476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:298428*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298428*0 + 3*404*FLEN/8, x4, x1, x2)

inst_99477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:298431*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298431*0 + 3*405*FLEN/8, x4, x1, x2)

inst_99478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:298434*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298434*0 + 3*406*FLEN/8, x4, x1, x2)

inst_99479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:298437*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298437*0 + 3*407*FLEN/8, x4, x1, x2)

inst_99480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:298440*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298440*0 + 3*408*FLEN/8, x4, x1, x2)

inst_99481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:298443*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298443*0 + 3*409*FLEN/8, x4, x1, x2)

inst_99482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:298446*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298446*0 + 3*410*FLEN/8, x4, x1, x2)

inst_99483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:298449*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298449*0 + 3*411*FLEN/8, x4, x1, x2)

inst_99484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:298452*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298452*0 + 3*412*FLEN/8, x4, x1, x2)

inst_99485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:298455*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298455*0 + 3*413*FLEN/8, x4, x1, x2)

inst_99486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:298458*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298458*0 + 3*414*FLEN/8, x4, x1, x2)

inst_99487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:298461*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298461*0 + 3*415*FLEN/8, x4, x1, x2)

inst_99488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:298464*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298464*0 + 3*416*FLEN/8, x4, x1, x2)

inst_99489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:298467*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298467*0 + 3*417*FLEN/8, x4, x1, x2)

inst_99490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:298470*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298470*0 + 3*418*FLEN/8, x4, x1, x2)

inst_99491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:298473*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298473*0 + 3*419*FLEN/8, x4, x1, x2)

inst_99492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:298476*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298476*0 + 3*420*FLEN/8, x4, x1, x2)

inst_99493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:298479*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298479*0 + 3*421*FLEN/8, x4, x1, x2)

inst_99494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:298482*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298482*0 + 3*422*FLEN/8, x4, x1, x2)

inst_99495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:298485*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298485*0 + 3*423*FLEN/8, x4, x1, x2)

inst_99496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000000000; valaddr_reg:x3; val_offset:298488*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298488*0 + 3*424*FLEN/8, x4, x1, x2)

inst_99497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000000001; valaddr_reg:x3; val_offset:298491*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298491*0 + 3*425*FLEN/8, x4, x1, x2)

inst_99498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000000003; valaddr_reg:x3; val_offset:298494*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298494*0 + 3*426*FLEN/8, x4, x1, x2)

inst_99499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000000007; valaddr_reg:x3; val_offset:298497*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298497*0 + 3*427*FLEN/8, x4, x1, x2)

inst_99500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000000000f; valaddr_reg:x3; val_offset:298500*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298500*0 + 3*428*FLEN/8, x4, x1, x2)

inst_99501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000000001f; valaddr_reg:x3; val_offset:298503*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298503*0 + 3*429*FLEN/8, x4, x1, x2)

inst_99502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000000003f; valaddr_reg:x3; val_offset:298506*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298506*0 + 3*430*FLEN/8, x4, x1, x2)

inst_99503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000000007f; valaddr_reg:x3; val_offset:298509*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298509*0 + 3*431*FLEN/8, x4, x1, x2)

inst_99504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000000000ff; valaddr_reg:x3; val_offset:298512*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298512*0 + 3*432*FLEN/8, x4, x1, x2)

inst_99505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000000001ff; valaddr_reg:x3; val_offset:298515*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298515*0 + 3*433*FLEN/8, x4, x1, x2)

inst_99506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000000003ff; valaddr_reg:x3; val_offset:298518*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298518*0 + 3*434*FLEN/8, x4, x1, x2)

inst_99507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000000007ff; valaddr_reg:x3; val_offset:298521*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298521*0 + 3*435*FLEN/8, x4, x1, x2)

inst_99508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000000fff; valaddr_reg:x3; val_offset:298524*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298524*0 + 3*436*FLEN/8, x4, x1, x2)

inst_99509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000001fff; valaddr_reg:x3; val_offset:298527*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298527*0 + 3*437*FLEN/8, x4, x1, x2)

inst_99510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000003fff; valaddr_reg:x3; val_offset:298530*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298530*0 + 3*438*FLEN/8, x4, x1, x2)

inst_99511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000007fff; valaddr_reg:x3; val_offset:298533*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298533*0 + 3*439*FLEN/8, x4, x1, x2)

inst_99512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000000ffff; valaddr_reg:x3; val_offset:298536*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298536*0 + 3*440*FLEN/8, x4, x1, x2)

inst_99513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000001ffff; valaddr_reg:x3; val_offset:298539*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298539*0 + 3*441*FLEN/8, x4, x1, x2)

inst_99514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000003ffff; valaddr_reg:x3; val_offset:298542*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298542*0 + 3*442*FLEN/8, x4, x1, x2)

inst_99515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000007ffff; valaddr_reg:x3; val_offset:298545*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298545*0 + 3*443*FLEN/8, x4, x1, x2)

inst_99516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000000fffff; valaddr_reg:x3; val_offset:298548*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298548*0 + 3*444*FLEN/8, x4, x1, x2)

inst_99517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000001fffff; valaddr_reg:x3; val_offset:298551*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298551*0 + 3*445*FLEN/8, x4, x1, x2)

inst_99518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000003fffff; valaddr_reg:x3; val_offset:298554*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298554*0 + 3*446*FLEN/8, x4, x1, x2)

inst_99519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000007fffff; valaddr_reg:x3; val_offset:298557*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298557*0 + 3*447*FLEN/8, x4, x1, x2)

inst_99520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000000ffffff; valaddr_reg:x3; val_offset:298560*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298560*0 + 3*448*FLEN/8, x4, x1, x2)

inst_99521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000001ffffff; valaddr_reg:x3; val_offset:298563*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298563*0 + 3*449*FLEN/8, x4, x1, x2)

inst_99522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000003ffffff; valaddr_reg:x3; val_offset:298566*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298566*0 + 3*450*FLEN/8, x4, x1, x2)

inst_99523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000007ffffff; valaddr_reg:x3; val_offset:298569*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298569*0 + 3*451*FLEN/8, x4, x1, x2)

inst_99524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000000fffffff; valaddr_reg:x3; val_offset:298572*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298572*0 + 3*452*FLEN/8, x4, x1, x2)

inst_99525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000001fffffff; valaddr_reg:x3; val_offset:298575*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298575*0 + 3*453*FLEN/8, x4, x1, x2)

inst_99526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000003fffffff; valaddr_reg:x3; val_offset:298578*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298578*0 + 3*454*FLEN/8, x4, x1, x2)

inst_99527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000007fffffff; valaddr_reg:x3; val_offset:298581*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298581*0 + 3*455*FLEN/8, x4, x1, x2)

inst_99528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500000ffffffff; valaddr_reg:x3; val_offset:298584*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298584*0 + 3*456*FLEN/8, x4, x1, x2)

inst_99529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500001ffffffff; valaddr_reg:x3; val_offset:298587*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298587*0 + 3*457*FLEN/8, x4, x1, x2)

inst_99530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500003ffffffff; valaddr_reg:x3; val_offset:298590*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298590*0 + 3*458*FLEN/8, x4, x1, x2)

inst_99531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500007ffffffff; valaddr_reg:x3; val_offset:298593*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298593*0 + 3*459*FLEN/8, x4, x1, x2)

inst_99532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050000fffffffff; valaddr_reg:x3; val_offset:298596*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298596*0 + 3*460*FLEN/8, x4, x1, x2)

inst_99533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050001fffffffff; valaddr_reg:x3; val_offset:298599*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298599*0 + 3*461*FLEN/8, x4, x1, x2)

inst_99534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050003fffffffff; valaddr_reg:x3; val_offset:298602*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298602*0 + 3*462*FLEN/8, x4, x1, x2)

inst_99535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050007fffffffff; valaddr_reg:x3; val_offset:298605*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298605*0 + 3*463*FLEN/8, x4, x1, x2)

inst_99536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805000ffffffffff; valaddr_reg:x3; val_offset:298608*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298608*0 + 3*464*FLEN/8, x4, x1, x2)

inst_99537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805001ffffffffff; valaddr_reg:x3; val_offset:298611*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298611*0 + 3*465*FLEN/8, x4, x1, x2)

inst_99538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805003ffffffffff; valaddr_reg:x3; val_offset:298614*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298614*0 + 3*466*FLEN/8, x4, x1, x2)

inst_99539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805007ffffffffff; valaddr_reg:x3; val_offset:298617*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298617*0 + 3*467*FLEN/8, x4, x1, x2)

inst_99540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80500fffffffffff; valaddr_reg:x3; val_offset:298620*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298620*0 + 3*468*FLEN/8, x4, x1, x2)

inst_99541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80501fffffffffff; valaddr_reg:x3; val_offset:298623*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298623*0 + 3*469*FLEN/8, x4, x1, x2)

inst_99542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80503fffffffffff; valaddr_reg:x3; val_offset:298626*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298626*0 + 3*470*FLEN/8, x4, x1, x2)

inst_99543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x80507fffffffffff; valaddr_reg:x3; val_offset:298629*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298629*0 + 3*471*FLEN/8, x4, x1, x2)

inst_99544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8050ffffffffffff; valaddr_reg:x3; val_offset:298632*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298632*0 + 3*472*FLEN/8, x4, x1, x2)

inst_99545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8051ffffffffffff; valaddr_reg:x3; val_offset:298635*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298635*0 + 3*473*FLEN/8, x4, x1, x2)

inst_99546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8053ffffffffffff; valaddr_reg:x3; val_offset:298638*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298638*0 + 3*474*FLEN/8, x4, x1, x2)

inst_99547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8057ffffffffffff; valaddr_reg:x3; val_offset:298641*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298641*0 + 3*475*FLEN/8, x4, x1, x2)

inst_99548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x8058000000000000; valaddr_reg:x3; val_offset:298644*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298644*0 + 3*476*FLEN/8, x4, x1, x2)

inst_99549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805c000000000000; valaddr_reg:x3; val_offset:298647*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298647*0 + 3*477*FLEN/8, x4, x1, x2)

inst_99550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805e000000000000; valaddr_reg:x3; val_offset:298650*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298650*0 + 3*478*FLEN/8, x4, x1, x2)

inst_99551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805f000000000000; valaddr_reg:x3; val_offset:298653*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298653*0 + 3*479*FLEN/8, x4, x1, x2)

inst_99552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805f800000000000; valaddr_reg:x3; val_offset:298656*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298656*0 + 3*480*FLEN/8, x4, x1, x2)

inst_99553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fc00000000000; valaddr_reg:x3; val_offset:298659*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298659*0 + 3*481*FLEN/8, x4, x1, x2)

inst_99554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fe00000000000; valaddr_reg:x3; val_offset:298662*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298662*0 + 3*482*FLEN/8, x4, x1, x2)

inst_99555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ff00000000000; valaddr_reg:x3; val_offset:298665*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298665*0 + 3*483*FLEN/8, x4, x1, x2)

inst_99556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ff80000000000; valaddr_reg:x3; val_offset:298668*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298668*0 + 3*484*FLEN/8, x4, x1, x2)

inst_99557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffc0000000000; valaddr_reg:x3; val_offset:298671*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298671*0 + 3*485*FLEN/8, x4, x1, x2)

inst_99558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffe0000000000; valaddr_reg:x3; val_offset:298674*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298674*0 + 3*486*FLEN/8, x4, x1, x2)

inst_99559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fff0000000000; valaddr_reg:x3; val_offset:298677*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298677*0 + 3*487*FLEN/8, x4, x1, x2)

inst_99560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fff8000000000; valaddr_reg:x3; val_offset:298680*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298680*0 + 3*488*FLEN/8, x4, x1, x2)

inst_99561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffc000000000; valaddr_reg:x3; val_offset:298683*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298683*0 + 3*489*FLEN/8, x4, x1, x2)

inst_99562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffe000000000; valaddr_reg:x3; val_offset:298686*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298686*0 + 3*490*FLEN/8, x4, x1, x2)

inst_99563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffff000000000; valaddr_reg:x3; val_offset:298689*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298689*0 + 3*491*FLEN/8, x4, x1, x2)

inst_99564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffff800000000; valaddr_reg:x3; val_offset:298692*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298692*0 + 3*492*FLEN/8, x4, x1, x2)

inst_99565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffc00000000; valaddr_reg:x3; val_offset:298695*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298695*0 + 3*493*FLEN/8, x4, x1, x2)

inst_99566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffe00000000; valaddr_reg:x3; val_offset:298698*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298698*0 + 3*494*FLEN/8, x4, x1, x2)

inst_99567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffff00000000; valaddr_reg:x3; val_offset:298701*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298701*0 + 3*495*FLEN/8, x4, x1, x2)

inst_99568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffff80000000; valaddr_reg:x3; val_offset:298704*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298704*0 + 3*496*FLEN/8, x4, x1, x2)

inst_99569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffc0000000; valaddr_reg:x3; val_offset:298707*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298707*0 + 3*497*FLEN/8, x4, x1, x2)

inst_99570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffe0000000; valaddr_reg:x3; val_offset:298710*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298710*0 + 3*498*FLEN/8, x4, x1, x2)

inst_99571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffff0000000; valaddr_reg:x3; val_offset:298713*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298713*0 + 3*499*FLEN/8, x4, x1, x2)

inst_99572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffff8000000; valaddr_reg:x3; val_offset:298716*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298716*0 + 3*500*FLEN/8, x4, x1, x2)

inst_99573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffc000000; valaddr_reg:x3; val_offset:298719*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298719*0 + 3*501*FLEN/8, x4, x1, x2)

inst_99574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffe000000; valaddr_reg:x3; val_offset:298722*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298722*0 + 3*502*FLEN/8, x4, x1, x2)

inst_99575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffff000000; valaddr_reg:x3; val_offset:298725*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298725*0 + 3*503*FLEN/8, x4, x1, x2)

inst_99576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffff800000; valaddr_reg:x3; val_offset:298728*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298728*0 + 3*504*FLEN/8, x4, x1, x2)

inst_99577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffc00000; valaddr_reg:x3; val_offset:298731*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298731*0 + 3*505*FLEN/8, x4, x1, x2)

inst_99578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffe00000; valaddr_reg:x3; val_offset:298734*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298734*0 + 3*506*FLEN/8, x4, x1, x2)

inst_99579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffff00000; valaddr_reg:x3; val_offset:298737*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298737*0 + 3*507*FLEN/8, x4, x1, x2)

inst_99580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffff80000; valaddr_reg:x3; val_offset:298740*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298740*0 + 3*508*FLEN/8, x4, x1, x2)

inst_99581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffc0000; valaddr_reg:x3; val_offset:298743*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298743*0 + 3*509*FLEN/8, x4, x1, x2)

inst_99582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffe0000; valaddr_reg:x3; val_offset:298746*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298746*0 + 3*510*FLEN/8, x4, x1, x2)

inst_99583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffff0000; valaddr_reg:x3; val_offset:298749*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298749*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_99584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffff8000; valaddr_reg:x3; val_offset:298752*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298752*0 + 3*512*FLEN/8, x4, x1, x2)

inst_99585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffffc000; valaddr_reg:x3; val_offset:298755*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298755*0 + 3*513*FLEN/8, x4, x1, x2)

inst_99586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffffe000; valaddr_reg:x3; val_offset:298758*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298758*0 + 3*514*FLEN/8, x4, x1, x2)

inst_99587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffff000; valaddr_reg:x3; val_offset:298761*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298761*0 + 3*515*FLEN/8, x4, x1, x2)

inst_99588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffff800; valaddr_reg:x3; val_offset:298764*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298764*0 + 3*516*FLEN/8, x4, x1, x2)

inst_99589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffffc00; valaddr_reg:x3; val_offset:298767*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298767*0 + 3*517*FLEN/8, x4, x1, x2)

inst_99590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffffe00; valaddr_reg:x3; val_offset:298770*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298770*0 + 3*518*FLEN/8, x4, x1, x2)

inst_99591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffffff00; valaddr_reg:x3; val_offset:298773*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298773*0 + 3*519*FLEN/8, x4, x1, x2)

inst_99592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffffff80; valaddr_reg:x3; val_offset:298776*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298776*0 + 3*520*FLEN/8, x4, x1, x2)

inst_99593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffffffc0; valaddr_reg:x3; val_offset:298779*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298779*0 + 3*521*FLEN/8, x4, x1, x2)

inst_99594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffffffe0; valaddr_reg:x3; val_offset:298782*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298782*0 + 3*522*FLEN/8, x4, x1, x2)

inst_99595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffffff0; valaddr_reg:x3; val_offset:298785*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298785*0 + 3*523*FLEN/8, x4, x1, x2)

inst_99596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffffff8; valaddr_reg:x3; val_offset:298788*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298788*0 + 3*524*FLEN/8, x4, x1, x2)

inst_99597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffffffc; valaddr_reg:x3; val_offset:298791*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298791*0 + 3*525*FLEN/8, x4, x1, x2)

inst_99598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805ffffffffffffe; valaddr_reg:x3; val_offset:298794*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298794*0 + 3*526*FLEN/8, x4, x1, x2)

inst_99599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf27dcf8ac02d4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf27dcf8ac02d4; op2val:0x8000;
op3val:0x805fffffffffffff; valaddr_reg:x3; val_offset:298797*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298797*0 + 3*527*FLEN/8, x4, x1, x2)

inst_99600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:298800*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298800*0 + 3*528*FLEN/8, x4, x1, x2)

inst_99601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:298803*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298803*0 + 3*529*FLEN/8, x4, x1, x2)

inst_99602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:298806*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298806*0 + 3*530*FLEN/8, x4, x1, x2)

inst_99603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:298809*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298809*0 + 3*531*FLEN/8, x4, x1, x2)

inst_99604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:298812*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298812*0 + 3*532*FLEN/8, x4, x1, x2)

inst_99605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:298815*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298815*0 + 3*533*FLEN/8, x4, x1, x2)

inst_99606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:298818*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298818*0 + 3*534*FLEN/8, x4, x1, x2)

inst_99607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:298821*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298821*0 + 3*535*FLEN/8, x4, x1, x2)

inst_99608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:298824*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298824*0 + 3*536*FLEN/8, x4, x1, x2)

inst_99609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:298827*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298827*0 + 3*537*FLEN/8, x4, x1, x2)

inst_99610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:298830*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298830*0 + 3*538*FLEN/8, x4, x1, x2)

inst_99611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:298833*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298833*0 + 3*539*FLEN/8, x4, x1, x2)

inst_99612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:298836*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298836*0 + 3*540*FLEN/8, x4, x1, x2)

inst_99613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:298839*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298839*0 + 3*541*FLEN/8, x4, x1, x2)

inst_99614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:298842*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298842*0 + 3*542*FLEN/8, x4, x1, x2)

inst_99615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:298845*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298845*0 + 3*543*FLEN/8, x4, x1, x2)

inst_99616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:298848*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298848*0 + 3*544*FLEN/8, x4, x1, x2)

inst_99617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:298851*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298851*0 + 3*545*FLEN/8, x4, x1, x2)

inst_99618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:298854*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298854*0 + 3*546*FLEN/8, x4, x1, x2)

inst_99619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:298857*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298857*0 + 3*547*FLEN/8, x4, x1, x2)

inst_99620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:298860*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298860*0 + 3*548*FLEN/8, x4, x1, x2)

inst_99621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:298863*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298863*0 + 3*549*FLEN/8, x4, x1, x2)

inst_99622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000000000; valaddr_reg:x3; val_offset:298866*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298866*0 + 3*550*FLEN/8, x4, x1, x2)

inst_99623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000000001; valaddr_reg:x3; val_offset:298869*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298869*0 + 3*551*FLEN/8, x4, x1, x2)

inst_99624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000000003; valaddr_reg:x3; val_offset:298872*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298872*0 + 3*552*FLEN/8, x4, x1, x2)

inst_99625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000000007; valaddr_reg:x3; val_offset:298875*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298875*0 + 3*553*FLEN/8, x4, x1, x2)

inst_99626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000000000f; valaddr_reg:x3; val_offset:298878*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298878*0 + 3*554*FLEN/8, x4, x1, x2)

inst_99627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000000001f; valaddr_reg:x3; val_offset:298881*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298881*0 + 3*555*FLEN/8, x4, x1, x2)

inst_99628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000000003f; valaddr_reg:x3; val_offset:298884*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298884*0 + 3*556*FLEN/8, x4, x1, x2)

inst_99629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000000007f; valaddr_reg:x3; val_offset:298887*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298887*0 + 3*557*FLEN/8, x4, x1, x2)

inst_99630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000000000ff; valaddr_reg:x3; val_offset:298890*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298890*0 + 3*558*FLEN/8, x4, x1, x2)

inst_99631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000000001ff; valaddr_reg:x3; val_offset:298893*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298893*0 + 3*559*FLEN/8, x4, x1, x2)

inst_99632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000000003ff; valaddr_reg:x3; val_offset:298896*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298896*0 + 3*560*FLEN/8, x4, x1, x2)

inst_99633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000000007ff; valaddr_reg:x3; val_offset:298899*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298899*0 + 3*561*FLEN/8, x4, x1, x2)

inst_99634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000000fff; valaddr_reg:x3; val_offset:298902*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298902*0 + 3*562*FLEN/8, x4, x1, x2)

inst_99635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000001fff; valaddr_reg:x3; val_offset:298905*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298905*0 + 3*563*FLEN/8, x4, x1, x2)

inst_99636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000003fff; valaddr_reg:x3; val_offset:298908*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298908*0 + 3*564*FLEN/8, x4, x1, x2)

inst_99637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000007fff; valaddr_reg:x3; val_offset:298911*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298911*0 + 3*565*FLEN/8, x4, x1, x2)

inst_99638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000000ffff; valaddr_reg:x3; val_offset:298914*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298914*0 + 3*566*FLEN/8, x4, x1, x2)

inst_99639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000001ffff; valaddr_reg:x3; val_offset:298917*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298917*0 + 3*567*FLEN/8, x4, x1, x2)

inst_99640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000003ffff; valaddr_reg:x3; val_offset:298920*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298920*0 + 3*568*FLEN/8, x4, x1, x2)

inst_99641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000007ffff; valaddr_reg:x3; val_offset:298923*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298923*0 + 3*569*FLEN/8, x4, x1, x2)

inst_99642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000000fffff; valaddr_reg:x3; val_offset:298926*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298926*0 + 3*570*FLEN/8, x4, x1, x2)

inst_99643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000001fffff; valaddr_reg:x3; val_offset:298929*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298929*0 + 3*571*FLEN/8, x4, x1, x2)

inst_99644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000003fffff; valaddr_reg:x3; val_offset:298932*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298932*0 + 3*572*FLEN/8, x4, x1, x2)

inst_99645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000007fffff; valaddr_reg:x3; val_offset:298935*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298935*0 + 3*573*FLEN/8, x4, x1, x2)

inst_99646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000000ffffff; valaddr_reg:x3; val_offset:298938*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298938*0 + 3*574*FLEN/8, x4, x1, x2)

inst_99647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000001ffffff; valaddr_reg:x3; val_offset:298941*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298941*0 + 3*575*FLEN/8, x4, x1, x2)

inst_99648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000003ffffff; valaddr_reg:x3; val_offset:298944*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298944*0 + 3*576*FLEN/8, x4, x1, x2)

inst_99649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000007ffffff; valaddr_reg:x3; val_offset:298947*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298947*0 + 3*577*FLEN/8, x4, x1, x2)

inst_99650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000000fffffff; valaddr_reg:x3; val_offset:298950*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298950*0 + 3*578*FLEN/8, x4, x1, x2)

inst_99651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000001fffffff; valaddr_reg:x3; val_offset:298953*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298953*0 + 3*579*FLEN/8, x4, x1, x2)

inst_99652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000003fffffff; valaddr_reg:x3; val_offset:298956*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298956*0 + 3*580*FLEN/8, x4, x1, x2)

inst_99653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000007fffffff; valaddr_reg:x3; val_offset:298959*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298959*0 + 3*581*FLEN/8, x4, x1, x2)

inst_99654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100000ffffffff; valaddr_reg:x3; val_offset:298962*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298962*0 + 3*582*FLEN/8, x4, x1, x2)

inst_99655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100001ffffffff; valaddr_reg:x3; val_offset:298965*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298965*0 + 3*583*FLEN/8, x4, x1, x2)

inst_99656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100003ffffffff; valaddr_reg:x3; val_offset:298968*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298968*0 + 3*584*FLEN/8, x4, x1, x2)

inst_99657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100007ffffffff; valaddr_reg:x3; val_offset:298971*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298971*0 + 3*585*FLEN/8, x4, x1, x2)

inst_99658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210000fffffffff; valaddr_reg:x3; val_offset:298974*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298974*0 + 3*586*FLEN/8, x4, x1, x2)

inst_99659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210001fffffffff; valaddr_reg:x3; val_offset:298977*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298977*0 + 3*587*FLEN/8, x4, x1, x2)

inst_99660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210003fffffffff; valaddr_reg:x3; val_offset:298980*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298980*0 + 3*588*FLEN/8, x4, x1, x2)

inst_99661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210007fffffffff; valaddr_reg:x3; val_offset:298983*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298983*0 + 3*589*FLEN/8, x4, x1, x2)

inst_99662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21000ffffffffff; valaddr_reg:x3; val_offset:298986*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298986*0 + 3*590*FLEN/8, x4, x1, x2)

inst_99663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21001ffffffffff; valaddr_reg:x3; val_offset:298989*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298989*0 + 3*591*FLEN/8, x4, x1, x2)

inst_99664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21003ffffffffff; valaddr_reg:x3; val_offset:298992*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298992*0 + 3*592*FLEN/8, x4, x1, x2)

inst_99665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21007ffffffffff; valaddr_reg:x3; val_offset:298995*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298995*0 + 3*593*FLEN/8, x4, x1, x2)

inst_99666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2100fffffffffff; valaddr_reg:x3; val_offset:298998*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 298998*0 + 3*594*FLEN/8, x4, x1, x2)

inst_99667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2101fffffffffff; valaddr_reg:x3; val_offset:299001*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299001*0 + 3*595*FLEN/8, x4, x1, x2)

inst_99668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2103fffffffffff; valaddr_reg:x3; val_offset:299004*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299004*0 + 3*596*FLEN/8, x4, x1, x2)

inst_99669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x2107fffffffffff; valaddr_reg:x3; val_offset:299007*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299007*0 + 3*597*FLEN/8, x4, x1, x2)

inst_99670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x210ffffffffffff; valaddr_reg:x3; val_offset:299010*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299010*0 + 3*598*FLEN/8, x4, x1, x2)

inst_99671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x211ffffffffffff; valaddr_reg:x3; val_offset:299013*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299013*0 + 3*599*FLEN/8, x4, x1, x2)

inst_99672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x213ffffffffffff; valaddr_reg:x3; val_offset:299016*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299016*0 + 3*600*FLEN/8, x4, x1, x2)

inst_99673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x217ffffffffffff; valaddr_reg:x3; val_offset:299019*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299019*0 + 3*601*FLEN/8, x4, x1, x2)

inst_99674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x218000000000000; valaddr_reg:x3; val_offset:299022*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299022*0 + 3*602*FLEN/8, x4, x1, x2)

inst_99675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21c000000000000; valaddr_reg:x3; val_offset:299025*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299025*0 + 3*603*FLEN/8, x4, x1, x2)

inst_99676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21e000000000000; valaddr_reg:x3; val_offset:299028*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299028*0 + 3*604*FLEN/8, x4, x1, x2)

inst_99677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21f000000000000; valaddr_reg:x3; val_offset:299031*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299031*0 + 3*605*FLEN/8, x4, x1, x2)

inst_99678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21f800000000000; valaddr_reg:x3; val_offset:299034*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299034*0 + 3*606*FLEN/8, x4, x1, x2)

inst_99679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fc00000000000; valaddr_reg:x3; val_offset:299037*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299037*0 + 3*607*FLEN/8, x4, x1, x2)

inst_99680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fe00000000000; valaddr_reg:x3; val_offset:299040*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299040*0 + 3*608*FLEN/8, x4, x1, x2)

inst_99681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ff00000000000; valaddr_reg:x3; val_offset:299043*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299043*0 + 3*609*FLEN/8, x4, x1, x2)

inst_99682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ff80000000000; valaddr_reg:x3; val_offset:299046*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299046*0 + 3*610*FLEN/8, x4, x1, x2)

inst_99683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffc0000000000; valaddr_reg:x3; val_offset:299049*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299049*0 + 3*611*FLEN/8, x4, x1, x2)

inst_99684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffe0000000000; valaddr_reg:x3; val_offset:299052*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299052*0 + 3*612*FLEN/8, x4, x1, x2)

inst_99685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fff0000000000; valaddr_reg:x3; val_offset:299055*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299055*0 + 3*613*FLEN/8, x4, x1, x2)

inst_99686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fff8000000000; valaddr_reg:x3; val_offset:299058*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299058*0 + 3*614*FLEN/8, x4, x1, x2)

inst_99687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffc000000000; valaddr_reg:x3; val_offset:299061*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299061*0 + 3*615*FLEN/8, x4, x1, x2)

inst_99688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffe000000000; valaddr_reg:x3; val_offset:299064*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299064*0 + 3*616*FLEN/8, x4, x1, x2)

inst_99689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffff000000000; valaddr_reg:x3; val_offset:299067*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299067*0 + 3*617*FLEN/8, x4, x1, x2)

inst_99690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffff800000000; valaddr_reg:x3; val_offset:299070*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299070*0 + 3*618*FLEN/8, x4, x1, x2)

inst_99691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffc00000000; valaddr_reg:x3; val_offset:299073*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299073*0 + 3*619*FLEN/8, x4, x1, x2)

inst_99692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffe00000000; valaddr_reg:x3; val_offset:299076*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299076*0 + 3*620*FLEN/8, x4, x1, x2)

inst_99693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffff00000000; valaddr_reg:x3; val_offset:299079*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299079*0 + 3*621*FLEN/8, x4, x1, x2)

inst_99694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffff80000000; valaddr_reg:x3; val_offset:299082*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299082*0 + 3*622*FLEN/8, x4, x1, x2)

inst_99695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffc0000000; valaddr_reg:x3; val_offset:299085*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299085*0 + 3*623*FLEN/8, x4, x1, x2)

inst_99696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffe0000000; valaddr_reg:x3; val_offset:299088*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299088*0 + 3*624*FLEN/8, x4, x1, x2)

inst_99697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffff0000000; valaddr_reg:x3; val_offset:299091*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299091*0 + 3*625*FLEN/8, x4, x1, x2)

inst_99698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffff8000000; valaddr_reg:x3; val_offset:299094*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299094*0 + 3*626*FLEN/8, x4, x1, x2)

inst_99699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffc000000; valaddr_reg:x3; val_offset:299097*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299097*0 + 3*627*FLEN/8, x4, x1, x2)

inst_99700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffe000000; valaddr_reg:x3; val_offset:299100*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299100*0 + 3*628*FLEN/8, x4, x1, x2)

inst_99701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffff000000; valaddr_reg:x3; val_offset:299103*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299103*0 + 3*629*FLEN/8, x4, x1, x2)

inst_99702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffff800000; valaddr_reg:x3; val_offset:299106*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299106*0 + 3*630*FLEN/8, x4, x1, x2)

inst_99703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffc00000; valaddr_reg:x3; val_offset:299109*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299109*0 + 3*631*FLEN/8, x4, x1, x2)

inst_99704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffe00000; valaddr_reg:x3; val_offset:299112*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299112*0 + 3*632*FLEN/8, x4, x1, x2)

inst_99705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffff00000; valaddr_reg:x3; val_offset:299115*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299115*0 + 3*633*FLEN/8, x4, x1, x2)

inst_99706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffff80000; valaddr_reg:x3; val_offset:299118*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299118*0 + 3*634*FLEN/8, x4, x1, x2)

inst_99707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffc0000; valaddr_reg:x3; val_offset:299121*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299121*0 + 3*635*FLEN/8, x4, x1, x2)

inst_99708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffe0000; valaddr_reg:x3; val_offset:299124*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299124*0 + 3*636*FLEN/8, x4, x1, x2)

inst_99709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffff0000; valaddr_reg:x3; val_offset:299127*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299127*0 + 3*637*FLEN/8, x4, x1, x2)

inst_99710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffff8000; valaddr_reg:x3; val_offset:299130*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299130*0 + 3*638*FLEN/8, x4, x1, x2)

inst_99711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffffc000; valaddr_reg:x3; val_offset:299133*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299133*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_99712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffffe000; valaddr_reg:x3; val_offset:299136*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299136*0 + 3*640*FLEN/8, x4, x1, x2)

inst_99713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffff000; valaddr_reg:x3; val_offset:299139*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299139*0 + 3*641*FLEN/8, x4, x1, x2)

inst_99714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffff800; valaddr_reg:x3; val_offset:299142*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299142*0 + 3*642*FLEN/8, x4, x1, x2)

inst_99715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffffc00; valaddr_reg:x3; val_offset:299145*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299145*0 + 3*643*FLEN/8, x4, x1, x2)

inst_99716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffffe00; valaddr_reg:x3; val_offset:299148*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299148*0 + 3*644*FLEN/8, x4, x1, x2)

inst_99717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffffff00; valaddr_reg:x3; val_offset:299151*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299151*0 + 3*645*FLEN/8, x4, x1, x2)

inst_99718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffffff80; valaddr_reg:x3; val_offset:299154*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299154*0 + 3*646*FLEN/8, x4, x1, x2)

inst_99719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffffffc0; valaddr_reg:x3; val_offset:299157*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299157*0 + 3*647*FLEN/8, x4, x1, x2)

inst_99720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffffffe0; valaddr_reg:x3; val_offset:299160*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299160*0 + 3*648*FLEN/8, x4, x1, x2)

inst_99721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffffff0; valaddr_reg:x3; val_offset:299163*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299163*0 + 3*649*FLEN/8, x4, x1, x2)

inst_99722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffffff8; valaddr_reg:x3; val_offset:299166*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299166*0 + 3*650*FLEN/8, x4, x1, x2)

inst_99723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffffffc; valaddr_reg:x3; val_offset:299169*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299169*0 + 3*651*FLEN/8, x4, x1, x2)

inst_99724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21ffffffffffffe; valaddr_reg:x3; val_offset:299172*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299172*0 + 3*652*FLEN/8, x4, x1, x2)

inst_99725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf31bb908e7715 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf31bb908e7715; op2val:0x0;
op3val:0x21fffffffffffff; valaddr_reg:x3; val_offset:299175*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299175*0 + 3*653*FLEN/8, x4, x1, x2)

inst_99726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000000000; valaddr_reg:x3; val_offset:299178*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299178*0 + 3*654*FLEN/8, x4, x1, x2)

inst_99727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000000001; valaddr_reg:x3; val_offset:299181*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299181*0 + 3*655*FLEN/8, x4, x1, x2)

inst_99728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000000003; valaddr_reg:x3; val_offset:299184*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299184*0 + 3*656*FLEN/8, x4, x1, x2)

inst_99729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000000007; valaddr_reg:x3; val_offset:299187*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299187*0 + 3*657*FLEN/8, x4, x1, x2)

inst_99730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000000000f; valaddr_reg:x3; val_offset:299190*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299190*0 + 3*658*FLEN/8, x4, x1, x2)

inst_99731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000000001f; valaddr_reg:x3; val_offset:299193*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299193*0 + 3*659*FLEN/8, x4, x1, x2)

inst_99732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000000003f; valaddr_reg:x3; val_offset:299196*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299196*0 + 3*660*FLEN/8, x4, x1, x2)

inst_99733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000000007f; valaddr_reg:x3; val_offset:299199*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299199*0 + 3*661*FLEN/8, x4, x1, x2)

inst_99734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000000000ff; valaddr_reg:x3; val_offset:299202*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299202*0 + 3*662*FLEN/8, x4, x1, x2)

inst_99735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000000001ff; valaddr_reg:x3; val_offset:299205*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299205*0 + 3*663*FLEN/8, x4, x1, x2)

inst_99736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000000003ff; valaddr_reg:x3; val_offset:299208*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299208*0 + 3*664*FLEN/8, x4, x1, x2)

inst_99737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000000007ff; valaddr_reg:x3; val_offset:299211*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299211*0 + 3*665*FLEN/8, x4, x1, x2)

inst_99738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000000fff; valaddr_reg:x3; val_offset:299214*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299214*0 + 3*666*FLEN/8, x4, x1, x2)

inst_99739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000001fff; valaddr_reg:x3; val_offset:299217*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299217*0 + 3*667*FLEN/8, x4, x1, x2)

inst_99740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000003fff; valaddr_reg:x3; val_offset:299220*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299220*0 + 3*668*FLEN/8, x4, x1, x2)

inst_99741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000007fff; valaddr_reg:x3; val_offset:299223*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299223*0 + 3*669*FLEN/8, x4, x1, x2)

inst_99742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000000ffff; valaddr_reg:x3; val_offset:299226*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299226*0 + 3*670*FLEN/8, x4, x1, x2)

inst_99743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000001ffff; valaddr_reg:x3; val_offset:299229*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299229*0 + 3*671*FLEN/8, x4, x1, x2)

inst_99744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000003ffff; valaddr_reg:x3; val_offset:299232*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299232*0 + 3*672*FLEN/8, x4, x1, x2)

inst_99745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000007ffff; valaddr_reg:x3; val_offset:299235*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299235*0 + 3*673*FLEN/8, x4, x1, x2)

inst_99746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000000fffff; valaddr_reg:x3; val_offset:299238*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299238*0 + 3*674*FLEN/8, x4, x1, x2)

inst_99747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000001fffff; valaddr_reg:x3; val_offset:299241*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299241*0 + 3*675*FLEN/8, x4, x1, x2)

inst_99748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000003fffff; valaddr_reg:x3; val_offset:299244*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299244*0 + 3*676*FLEN/8, x4, x1, x2)

inst_99749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000007fffff; valaddr_reg:x3; val_offset:299247*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299247*0 + 3*677*FLEN/8, x4, x1, x2)

inst_99750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000000ffffff; valaddr_reg:x3; val_offset:299250*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299250*0 + 3*678*FLEN/8, x4, x1, x2)

inst_99751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000001ffffff; valaddr_reg:x3; val_offset:299253*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299253*0 + 3*679*FLEN/8, x4, x1, x2)

inst_99752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000003ffffff; valaddr_reg:x3; val_offset:299256*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299256*0 + 3*680*FLEN/8, x4, x1, x2)

inst_99753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000007ffffff; valaddr_reg:x3; val_offset:299259*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299259*0 + 3*681*FLEN/8, x4, x1, x2)

inst_99754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000000fffffff; valaddr_reg:x3; val_offset:299262*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299262*0 + 3*682*FLEN/8, x4, x1, x2)

inst_99755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000001fffffff; valaddr_reg:x3; val_offset:299265*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299265*0 + 3*683*FLEN/8, x4, x1, x2)

inst_99756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000003fffffff; valaddr_reg:x3; val_offset:299268*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299268*0 + 3*684*FLEN/8, x4, x1, x2)

inst_99757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000007fffffff; valaddr_reg:x3; val_offset:299271*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299271*0 + 3*685*FLEN/8, x4, x1, x2)

inst_99758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00000ffffffff; valaddr_reg:x3; val_offset:299274*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299274*0 + 3*686*FLEN/8, x4, x1, x2)

inst_99759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00001ffffffff; valaddr_reg:x3; val_offset:299277*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299277*0 + 3*687*FLEN/8, x4, x1, x2)

inst_99760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00003ffffffff; valaddr_reg:x3; val_offset:299280*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299280*0 + 3*688*FLEN/8, x4, x1, x2)

inst_99761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00007ffffffff; valaddr_reg:x3; val_offset:299283*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299283*0 + 3*689*FLEN/8, x4, x1, x2)

inst_99762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0000fffffffff; valaddr_reg:x3; val_offset:299286*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299286*0 + 3*690*FLEN/8, x4, x1, x2)

inst_99763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0001fffffffff; valaddr_reg:x3; val_offset:299289*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299289*0 + 3*691*FLEN/8, x4, x1, x2)

inst_99764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0003fffffffff; valaddr_reg:x3; val_offset:299292*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299292*0 + 3*692*FLEN/8, x4, x1, x2)

inst_99765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0007fffffffff; valaddr_reg:x3; val_offset:299295*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299295*0 + 3*693*FLEN/8, x4, x1, x2)

inst_99766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a000ffffffffff; valaddr_reg:x3; val_offset:299298*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299298*0 + 3*694*FLEN/8, x4, x1, x2)

inst_99767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a001ffffffffff; valaddr_reg:x3; val_offset:299301*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299301*0 + 3*695*FLEN/8, x4, x1, x2)

inst_99768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a003ffffffffff; valaddr_reg:x3; val_offset:299304*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299304*0 + 3*696*FLEN/8, x4, x1, x2)

inst_99769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a007ffffffffff; valaddr_reg:x3; val_offset:299307*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299307*0 + 3*697*FLEN/8, x4, x1, x2)

inst_99770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a00fffffffffff; valaddr_reg:x3; val_offset:299310*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299310*0 + 3*698*FLEN/8, x4, x1, x2)

inst_99771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a01fffffffffff; valaddr_reg:x3; val_offset:299313*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299313*0 + 3*699*FLEN/8, x4, x1, x2)

inst_99772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a03fffffffffff; valaddr_reg:x3; val_offset:299316*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299316*0 + 3*700*FLEN/8, x4, x1, x2)

inst_99773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a07fffffffffff; valaddr_reg:x3; val_offset:299319*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299319*0 + 3*701*FLEN/8, x4, x1, x2)

inst_99774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a0ffffffffffff; valaddr_reg:x3; val_offset:299322*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299322*0 + 3*702*FLEN/8, x4, x1, x2)

inst_99775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a1ffffffffffff; valaddr_reg:x3; val_offset:299325*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299325*0 + 3*703*FLEN/8, x4, x1, x2)

inst_99776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a3ffffffffffff; valaddr_reg:x3; val_offset:299328*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299328*0 + 3*704*FLEN/8, x4, x1, x2)

inst_99777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a7ffffffffffff; valaddr_reg:x3; val_offset:299331*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299331*0 + 3*705*FLEN/8, x4, x1, x2)

inst_99778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38a8000000000000; valaddr_reg:x3; val_offset:299334*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299334*0 + 3*706*FLEN/8, x4, x1, x2)

inst_99779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38ac000000000000; valaddr_reg:x3; val_offset:299337*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299337*0 + 3*707*FLEN/8, x4, x1, x2)

inst_99780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38ae000000000000; valaddr_reg:x3; val_offset:299340*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299340*0 + 3*708*FLEN/8, x4, x1, x2)

inst_99781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38af000000000000; valaddr_reg:x3; val_offset:299343*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299343*0 + 3*709*FLEN/8, x4, x1, x2)

inst_99782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38af800000000000; valaddr_reg:x3; val_offset:299346*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299346*0 + 3*710*FLEN/8, x4, x1, x2)

inst_99783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afc00000000000; valaddr_reg:x3; val_offset:299349*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299349*0 + 3*711*FLEN/8, x4, x1, x2)

inst_99784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afe00000000000; valaddr_reg:x3; val_offset:299352*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299352*0 + 3*712*FLEN/8, x4, x1, x2)

inst_99785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38aff00000000000; valaddr_reg:x3; val_offset:299355*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299355*0 + 3*713*FLEN/8, x4, x1, x2)

inst_99786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38aff80000000000; valaddr_reg:x3; val_offset:299358*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299358*0 + 3*714*FLEN/8, x4, x1, x2)

inst_99787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affc0000000000; valaddr_reg:x3; val_offset:299361*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299361*0 + 3*715*FLEN/8, x4, x1, x2)

inst_99788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affe0000000000; valaddr_reg:x3; val_offset:299364*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299364*0 + 3*716*FLEN/8, x4, x1, x2)

inst_99789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afff0000000000; valaddr_reg:x3; val_offset:299367*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299367*0 + 3*717*FLEN/8, x4, x1, x2)

inst_99790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afff8000000000; valaddr_reg:x3; val_offset:299370*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299370*0 + 3*718*FLEN/8, x4, x1, x2)

inst_99791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffc000000000; valaddr_reg:x3; val_offset:299373*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299373*0 + 3*719*FLEN/8, x4, x1, x2)

inst_99792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffe000000000; valaddr_reg:x3; val_offset:299376*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299376*0 + 3*720*FLEN/8, x4, x1, x2)

inst_99793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affff000000000; valaddr_reg:x3; val_offset:299379*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299379*0 + 3*721*FLEN/8, x4, x1, x2)

inst_99794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affff800000000; valaddr_reg:x3; val_offset:299382*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299382*0 + 3*722*FLEN/8, x4, x1, x2)

inst_99795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffc00000000; valaddr_reg:x3; val_offset:299385*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299385*0 + 3*723*FLEN/8, x4, x1, x2)

inst_99796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffe00000000; valaddr_reg:x3; val_offset:299388*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299388*0 + 3*724*FLEN/8, x4, x1, x2)

inst_99797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffff00000000; valaddr_reg:x3; val_offset:299391*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299391*0 + 3*725*FLEN/8, x4, x1, x2)

inst_99798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffff80000000; valaddr_reg:x3; val_offset:299394*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299394*0 + 3*726*FLEN/8, x4, x1, x2)

inst_99799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffc0000000; valaddr_reg:x3; val_offset:299397*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299397*0 + 3*727*FLEN/8, x4, x1, x2)

inst_99800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffe0000000; valaddr_reg:x3; val_offset:299400*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299400*0 + 3*728*FLEN/8, x4, x1, x2)

inst_99801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffff0000000; valaddr_reg:x3; val_offset:299403*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299403*0 + 3*729*FLEN/8, x4, x1, x2)

inst_99802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffff8000000; valaddr_reg:x3; val_offset:299406*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299406*0 + 3*730*FLEN/8, x4, x1, x2)

inst_99803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffc000000; valaddr_reg:x3; val_offset:299409*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299409*0 + 3*731*FLEN/8, x4, x1, x2)

inst_99804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffe000000; valaddr_reg:x3; val_offset:299412*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299412*0 + 3*732*FLEN/8, x4, x1, x2)

inst_99805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffff000000; valaddr_reg:x3; val_offset:299415*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299415*0 + 3*733*FLEN/8, x4, x1, x2)

inst_99806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffff800000; valaddr_reg:x3; val_offset:299418*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299418*0 + 3*734*FLEN/8, x4, x1, x2)

inst_99807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffc00000; valaddr_reg:x3; val_offset:299421*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299421*0 + 3*735*FLEN/8, x4, x1, x2)

inst_99808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffe00000; valaddr_reg:x3; val_offset:299424*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299424*0 + 3*736*FLEN/8, x4, x1, x2)

inst_99809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffff00000; valaddr_reg:x3; val_offset:299427*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299427*0 + 3*737*FLEN/8, x4, x1, x2)

inst_99810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffff80000; valaddr_reg:x3; val_offset:299430*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299430*0 + 3*738*FLEN/8, x4, x1, x2)

inst_99811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffc0000; valaddr_reg:x3; val_offset:299433*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299433*0 + 3*739*FLEN/8, x4, x1, x2)

inst_99812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffe0000; valaddr_reg:x3; val_offset:299436*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299436*0 + 3*740*FLEN/8, x4, x1, x2)

inst_99813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffff0000; valaddr_reg:x3; val_offset:299439*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299439*0 + 3*741*FLEN/8, x4, x1, x2)

inst_99814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffff8000; valaddr_reg:x3; val_offset:299442*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299442*0 + 3*742*FLEN/8, x4, x1, x2)

inst_99815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffffc000; valaddr_reg:x3; val_offset:299445*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299445*0 + 3*743*FLEN/8, x4, x1, x2)

inst_99816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffffe000; valaddr_reg:x3; val_offset:299448*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299448*0 + 3*744*FLEN/8, x4, x1, x2)

inst_99817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffff000; valaddr_reg:x3; val_offset:299451*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299451*0 + 3*745*FLEN/8, x4, x1, x2)

inst_99818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffff800; valaddr_reg:x3; val_offset:299454*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299454*0 + 3*746*FLEN/8, x4, x1, x2)

inst_99819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffffc00; valaddr_reg:x3; val_offset:299457*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299457*0 + 3*747*FLEN/8, x4, x1, x2)

inst_99820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffffe00; valaddr_reg:x3; val_offset:299460*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299460*0 + 3*748*FLEN/8, x4, x1, x2)

inst_99821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffffff00; valaddr_reg:x3; val_offset:299463*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299463*0 + 3*749*FLEN/8, x4, x1, x2)

inst_99822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffffff80; valaddr_reg:x3; val_offset:299466*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299466*0 + 3*750*FLEN/8, x4, x1, x2)

inst_99823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffffffc0; valaddr_reg:x3; val_offset:299469*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299469*0 + 3*751*FLEN/8, x4, x1, x2)

inst_99824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffffffe0; valaddr_reg:x3; val_offset:299472*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299472*0 + 3*752*FLEN/8, x4, x1, x2)

inst_99825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffffff0; valaddr_reg:x3; val_offset:299475*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299475*0 + 3*753*FLEN/8, x4, x1, x2)

inst_99826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffffff8; valaddr_reg:x3; val_offset:299478*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299478*0 + 3*754*FLEN/8, x4, x1, x2)

inst_99827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffffffc; valaddr_reg:x3; val_offset:299481*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299481*0 + 3*755*FLEN/8, x4, x1, x2)

inst_99828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38affffffffffffe; valaddr_reg:x3; val_offset:299484*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299484*0 + 3*756*FLEN/8, x4, x1, x2)

inst_99829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x38a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x38afffffffffffff; valaddr_reg:x3; val_offset:299487*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299487*0 + 3*757*FLEN/8, x4, x1, x2)

inst_99830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:299490*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299490*0 + 3*758*FLEN/8, x4, x1, x2)

inst_99831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:299493*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299493*0 + 3*759*FLEN/8, x4, x1, x2)

inst_99832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:299496*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299496*0 + 3*760*FLEN/8, x4, x1, x2)

inst_99833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:299499*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299499*0 + 3*761*FLEN/8, x4, x1, x2)

inst_99834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:299502*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299502*0 + 3*762*FLEN/8, x4, x1, x2)

inst_99835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:299505*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299505*0 + 3*763*FLEN/8, x4, x1, x2)

inst_99836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:299508*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299508*0 + 3*764*FLEN/8, x4, x1, x2)

inst_99837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:299511*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299511*0 + 3*765*FLEN/8, x4, x1, x2)

inst_99838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:299514*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299514*0 + 3*766*FLEN/8, x4, x1, x2)

inst_99839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf37bbd4155156 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x066a474779809 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faf37bbd4155156; op2val:0x203066a474779809;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:299517*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 299517*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176888582144,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176892776448,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176894873600,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176895922176,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896446464,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896708608,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896839680,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896905216,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896937984,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896954368,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896962560,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896966656,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896968704,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896969728,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970240,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970496,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970624,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970688,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970720,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970736,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970744,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970748,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970750,64,FLEN)
NAN_BOXED(6894768659104541087,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970751,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560832,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560833,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560835,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560839,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560847,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560863,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560895,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560959,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561087,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561343,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349561855,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349562879,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349564927,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349569023,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349577215,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349593599,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349626367,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349691903,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349822975,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350085119,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184350609407,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184351657983,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184353755135,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184357949439,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184366338047,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184383115263,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184416669695,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184483778559,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184617996287,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184886431743,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151185423302655,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151186497044479,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151188644528127,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151192939495423,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151201529430015,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151218709299199,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151253069037567,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151321788514303,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151459227467775,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151734105374719,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189152283861188607,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189153383372816383,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189155582396071935,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189159980442583039,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189168776535605247,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189186368721649663,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189221553093738495,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189291921837916159,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189432659326271487,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189714134302982143,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(190277084256403455,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246079,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(191402984163246080,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(192528884070088704,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193091834023510016,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193373309000220672,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193514046488576000,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193584415232753664,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193619599604842496,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193637191790886912,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193645987883909120,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193650385930420224,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193652584953675776,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193653684465303552,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654234221117440,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654509099024384,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654646537977856,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654715257454592,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654749617192960,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654766797062144,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654775386996736,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654779681964032,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654781829447680,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654782903189504,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783440060416,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783708495872,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783842713600,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783909822464,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783943376896,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783960154112,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783968542720,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783972737024,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783974834176,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783975882752,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976407040,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976669184,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976800256,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976865792,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976898560,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976914944,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976923136,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976927232,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976929280,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930304,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976930816,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931072,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931200,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931264,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931296,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931312,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931320,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931324,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931326,64,FLEN)
NAN_BOXED(6894770107253801638,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(193654783976931327,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154304,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154305,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154307,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154311,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154319,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154335,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154367,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154431,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154559,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741154815,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741155327,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741156351,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741158399,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741162495,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741170687,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741187071,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741219839,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741285375,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741416447,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381741678591,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381742202879,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381743251455,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381745348607,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381749542911,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381757931519,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381774708735,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381808263167,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676381875372031,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382009589759,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382278025215,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676382814896127,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676383888637951,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676386036121599,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676390331088895,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676398921023487,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676416100892671,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676450460631039,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676519180107775,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676656619061247,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220676931496968191,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220677481252782079,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220678580764409855,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220680779787665407,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220685177834176511,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220693973927198719,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220711566113243135,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220746750485331967,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220817119229509631,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(220957856717864959,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221239331694575615,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(221802281647996927,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839551,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(222928181554839552,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224054081461682176,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224617031415103488,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(224898506391814144,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225039243880169472,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225109612624347136,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225144796996435968,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225162389182480384,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225171185275502592,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225175583322013696,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225177782345269248,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225178881856897024,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179431612710912,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179706490617856,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179843929571328,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179912649048064,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179947008786432,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179964188655616,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179972778590208,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179977073557504,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179979221041152,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980294782976,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179980831653888,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981100089344,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981234307072,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981301415936,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981334970368,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981351747584,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981360136192,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981364330496,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981366427648,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981367476224,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368000512,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368262656,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368393728,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368459264,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368492032,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368508416,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368516608,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368520704,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368522752,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368523776,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524288,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524544,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524672,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524736,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524768,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524784,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524792,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524796,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524798,64,FLEN)
NAN_BOXED(6894771901018122386,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524799,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185728,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185729,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185731,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185735,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185743,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185759,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185791,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185855,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185983,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186239,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186751,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402187775,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402189823,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402193919,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402202111,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402218495,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402251263,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402316799,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402447871,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402710015,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029403234303,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029404282879,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029406380031,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029410574335,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029418962943,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029435740159,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029469294591,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029536403455,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029670621183,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029939056639,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444030475927551,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444031549669375,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444033697153023,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444037992120319,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444046582054911,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444063761924095,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444098121662463,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444166841139199,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444304280092671,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444579157999615,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313445128913813503,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313446228425441279,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313448427448696831,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313452825495207935,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313461621588230143,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313479213774274559,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313514398146363391,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313584766890541055,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313725504378896383,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314006979355607039,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314569929309028351,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870975,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870976,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9316821729122713600,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317384679076134912,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317666154052845568,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317806891541200896,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317877260285378560,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317912444657467392,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317930036843511808,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317938832936534016,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317943230983045120,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317945430006300672,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317946529517928448,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947079273742336,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947354151649280,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947491590602752,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947560310079488,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947594669817856,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947611849687040,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947620439621632,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947624734588928,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947626882072576,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947627955814400,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628492685312,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628761120768,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628895338496,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628962447360,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628996001792,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629012779008,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629021167616,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629025361920,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629027459072,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629028507648,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029031936,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029294080,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029425152,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029490688,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029523456,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029539840,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029548032,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029552128,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029554176,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555200,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555712,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555968,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556096,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556160,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556192,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556208,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556216,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556220,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556222,64,FLEN)
NAN_BOXED(6894772516927633455,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556223,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628288,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628289,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628291,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628295,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628303,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628319,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628351,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628415,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628543,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628799,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991629311,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991630335,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991632383,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991636479,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991644671,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991661055,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991693823,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991759359,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991890431,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034992152575,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034992676863,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034993725439,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034995822591,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035000016895,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035008405503,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035025182719,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035058737151,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035125846015,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035260063743,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890035528499199,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890036065370111,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890037139111935,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890039286595583,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890043581562879,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890052171497471,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890069351366655,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890103711105023,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890172430581759,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890309869535231,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890584747442175,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245891134503256063,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245892234014883839,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245894433038139391,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245898831084650495,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245907627177672703,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245925219363717119,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245960403735805951,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246030772479983615,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246171509968338943,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9246452984945049599,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9247015934898470911,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9248141834805313535,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9248141834805313536,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9249267734712156160,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9249830684665577472,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250112159642288128,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250252897130643456,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250323265874821120,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250358450246909952,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250376042432954368,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250384838525976576,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250389236572487680,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250391435595743232,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250392535107371008,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393084863184896,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393359741091840,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393497180045312,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393565899522048,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393600259260416,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393617439129600,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393626029064192,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393630324031488,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393632471515136,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393633545256960,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634082127872,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634350563328,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634484781056,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634551889920,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634585444352,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634602221568,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634610610176,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634614804480,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634616901632,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634617950208,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618474496,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618736640,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618867712,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618933248,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618966016,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618982400,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618990592,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618994688,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618996736,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618997760,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998272,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998528,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998656,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998720,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998752,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998768,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998776,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998780,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998782,64,FLEN)
NAN_BOXED(6894773384545829588,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9250393634618998783,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226368,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226369,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226371,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226375,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226383,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226399,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226431,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226495,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226623,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703226879,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703227391,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703228415,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703230463,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703234559,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703242751,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703259135,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703291903,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703357439,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703488511,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787703750655,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787704274943,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787705323519,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787707420671,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787711614975,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787720003583,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787736780799,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787770335231,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787837444095,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618787971661823,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788240097279,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618788776968191,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618789850710015,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618791998193663,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618796293160959,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618804883095551,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618822062964735,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618856422703103,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148618925142179839,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619062581133311,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619337459040255,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148619887214854143,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148620986726481919,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148623185749737471,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148627583796248575,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148636379889270783,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148653972075315199,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148689156447404031,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148759525191581695,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(148900262679937023,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149181737656647679,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(149744687610068991,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911615,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(150870587516911616,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(151996487423754240,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152559437377175552,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152840912353886208,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(152981649842241536,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153052018586419200,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153087202958508032,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153104795144552448,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153113591237574656,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153117989284085760,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153120188307341312,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121287818969088,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153121837574782976,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122112452689920,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122249891643392,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122318611120128,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122352970858496,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122370150727680,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122378740662272,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122383035629568,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122385183113216,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386256855040,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122386793725952,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387062161408,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387196379136,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387263488000,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387297042432,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387313819648,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387322208256,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387326402560,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387328499712,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387329548288,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330072576,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330334720,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330465792,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330531328,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330564096,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330580480,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330588672,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330592768,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330594816,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330595840,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596352,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596608,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596736,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596800,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596832,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596848,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596856,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596860,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596862,64,FLEN)
NAN_BOXED(6894784236181419797,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596863,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669376,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669377,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669379,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669383,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669391,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669407,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669439,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669503,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669631,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397669887,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397670399,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397671423,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397673471,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397677567,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397685759,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397702143,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397734911,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397800447,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262397931519,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262398193663,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262398717951,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262399766527,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262401863679,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262406057983,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262414446591,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262431223807,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262464778239,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262531887103,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262666104831,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261262934540287,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261263471411199,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261264545153023,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261266692636671,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261270987603967,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261279577538559,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261296757407743,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261331117146111,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261399836622847,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261537275576319,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080261812153483263,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080262361909297151,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080263461420924927,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080265660444180479,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080270058490691583,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080278854583713791,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080296446769758207,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080331631141847039,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080401999886024703,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080542737374380031,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4080824212351090687,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4081387162304511999,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4082513062211354623,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4082513062211354624,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4083638962118197248,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084201912071618560,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084483387048329216,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084624124536684544,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084694493280862208,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084729677652951040,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084747269838995456,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084756065932017664,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084760463978528768,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084762663001784320,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084763762513412096,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764312269225984,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764587147132928,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764724586086400,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764793305563136,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764827665301504,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764844845170688,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764853435105280,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764857730072576,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764859877556224,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764860951298048,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764861488168960,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764861756604416,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764861890822144,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764861957931008,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764861991485440,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862008262656,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862016651264,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862020845568,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862022942720,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862023991296,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862024515584,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862024777728,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862024908800,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862024974336,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025007104,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025023488,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025031680,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025035776,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025037824,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025038848,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039360,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039616,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039744,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039808,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039840,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039856,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039864,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039868,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039870,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4084764862025039871,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894790834384097622,64,FLEN)
NAN_BOXED(2319466664610469897,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
