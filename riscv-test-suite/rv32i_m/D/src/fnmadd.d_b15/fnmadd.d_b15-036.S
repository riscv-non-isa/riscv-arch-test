
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_26880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:80640*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80640*0 + 3*0*FLEN/8, x4, x1, x2)

inst_26881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:80643*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80643*0 + 3*1*FLEN/8, x4, x1, x2)

inst_26882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:80646*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80646*0 + 3*2*FLEN/8, x4, x1, x2)

inst_26883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:80649*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80649*0 + 3*3*FLEN/8, x4, x1, x2)

inst_26884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:80652*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80652*0 + 3*4*FLEN/8, x4, x1, x2)

inst_26885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:80655*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80655*0 + 3*5*FLEN/8, x4, x1, x2)

inst_26886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:80658*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80658*0 + 3*6*FLEN/8, x4, x1, x2)

inst_26887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:80661*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80661*0 + 3*7*FLEN/8, x4, x1, x2)

inst_26888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:80664*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80664*0 + 3*8*FLEN/8, x4, x1, x2)

inst_26889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:80667*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80667*0 + 3*9*FLEN/8, x4, x1, x2)

inst_26890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:80670*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80670*0 + 3*10*FLEN/8, x4, x1, x2)

inst_26891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:80673*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80673*0 + 3*11*FLEN/8, x4, x1, x2)

inst_26892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:80676*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80676*0 + 3*12*FLEN/8, x4, x1, x2)

inst_26893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:80679*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80679*0 + 3*13*FLEN/8, x4, x1, x2)

inst_26894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:80682*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80682*0 + 3*14*FLEN/8, x4, x1, x2)

inst_26895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:80685*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80685*0 + 3*15*FLEN/8, x4, x1, x2)

inst_26896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:80688*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80688*0 + 3*16*FLEN/8, x4, x1, x2)

inst_26897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:80691*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80691*0 + 3*17*FLEN/8, x4, x1, x2)

inst_26898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:80694*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80694*0 + 3*18*FLEN/8, x4, x1, x2)

inst_26899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:80697*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80697*0 + 3*19*FLEN/8, x4, x1, x2)

inst_26900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:80700*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80700*0 + 3*20*FLEN/8, x4, x1, x2)

inst_26901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:80703*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80703*0 + 3*21*FLEN/8, x4, x1, x2)

inst_26902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000000000; valaddr_reg:x3; val_offset:80706*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80706*0 + 3*22*FLEN/8, x4, x1, x2)

inst_26903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000000001; valaddr_reg:x3; val_offset:80709*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80709*0 + 3*23*FLEN/8, x4, x1, x2)

inst_26904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000000003; valaddr_reg:x3; val_offset:80712*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80712*0 + 3*24*FLEN/8, x4, x1, x2)

inst_26905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000000007; valaddr_reg:x3; val_offset:80715*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80715*0 + 3*25*FLEN/8, x4, x1, x2)

inst_26906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000000000f; valaddr_reg:x3; val_offset:80718*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80718*0 + 3*26*FLEN/8, x4, x1, x2)

inst_26907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000000001f; valaddr_reg:x3; val_offset:80721*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80721*0 + 3*27*FLEN/8, x4, x1, x2)

inst_26908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000000003f; valaddr_reg:x3; val_offset:80724*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80724*0 + 3*28*FLEN/8, x4, x1, x2)

inst_26909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000000007f; valaddr_reg:x3; val_offset:80727*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80727*0 + 3*29*FLEN/8, x4, x1, x2)

inst_26910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000000000ff; valaddr_reg:x3; val_offset:80730*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80730*0 + 3*30*FLEN/8, x4, x1, x2)

inst_26911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000000001ff; valaddr_reg:x3; val_offset:80733*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80733*0 + 3*31*FLEN/8, x4, x1, x2)

inst_26912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000000003ff; valaddr_reg:x3; val_offset:80736*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80736*0 + 3*32*FLEN/8, x4, x1, x2)

inst_26913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000000007ff; valaddr_reg:x3; val_offset:80739*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80739*0 + 3*33*FLEN/8, x4, x1, x2)

inst_26914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000000fff; valaddr_reg:x3; val_offset:80742*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80742*0 + 3*34*FLEN/8, x4, x1, x2)

inst_26915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000001fff; valaddr_reg:x3; val_offset:80745*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80745*0 + 3*35*FLEN/8, x4, x1, x2)

inst_26916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000003fff; valaddr_reg:x3; val_offset:80748*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80748*0 + 3*36*FLEN/8, x4, x1, x2)

inst_26917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000007fff; valaddr_reg:x3; val_offset:80751*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80751*0 + 3*37*FLEN/8, x4, x1, x2)

inst_26918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000000ffff; valaddr_reg:x3; val_offset:80754*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80754*0 + 3*38*FLEN/8, x4, x1, x2)

inst_26919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000001ffff; valaddr_reg:x3; val_offset:80757*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80757*0 + 3*39*FLEN/8, x4, x1, x2)

inst_26920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000003ffff; valaddr_reg:x3; val_offset:80760*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80760*0 + 3*40*FLEN/8, x4, x1, x2)

inst_26921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000007ffff; valaddr_reg:x3; val_offset:80763*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80763*0 + 3*41*FLEN/8, x4, x1, x2)

inst_26922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000000fffff; valaddr_reg:x3; val_offset:80766*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80766*0 + 3*42*FLEN/8, x4, x1, x2)

inst_26923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000001fffff; valaddr_reg:x3; val_offset:80769*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80769*0 + 3*43*FLEN/8, x4, x1, x2)

inst_26924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000003fffff; valaddr_reg:x3; val_offset:80772*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80772*0 + 3*44*FLEN/8, x4, x1, x2)

inst_26925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000007fffff; valaddr_reg:x3; val_offset:80775*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80775*0 + 3*45*FLEN/8, x4, x1, x2)

inst_26926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000000ffffff; valaddr_reg:x3; val_offset:80778*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80778*0 + 3*46*FLEN/8, x4, x1, x2)

inst_26927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000001ffffff; valaddr_reg:x3; val_offset:80781*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80781*0 + 3*47*FLEN/8, x4, x1, x2)

inst_26928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000003ffffff; valaddr_reg:x3; val_offset:80784*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80784*0 + 3*48*FLEN/8, x4, x1, x2)

inst_26929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000007ffffff; valaddr_reg:x3; val_offset:80787*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80787*0 + 3*49*FLEN/8, x4, x1, x2)

inst_26930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000000fffffff; valaddr_reg:x3; val_offset:80790*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80790*0 + 3*50*FLEN/8, x4, x1, x2)

inst_26931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000001fffffff; valaddr_reg:x3; val_offset:80793*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80793*0 + 3*51*FLEN/8, x4, x1, x2)

inst_26932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000003fffffff; valaddr_reg:x3; val_offset:80796*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80796*0 + 3*52*FLEN/8, x4, x1, x2)

inst_26933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000007fffffff; valaddr_reg:x3; val_offset:80799*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80799*0 + 3*53*FLEN/8, x4, x1, x2)

inst_26934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500000ffffffff; valaddr_reg:x3; val_offset:80802*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80802*0 + 3*54*FLEN/8, x4, x1, x2)

inst_26935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500001ffffffff; valaddr_reg:x3; val_offset:80805*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80805*0 + 3*55*FLEN/8, x4, x1, x2)

inst_26936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500003ffffffff; valaddr_reg:x3; val_offset:80808*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80808*0 + 3*56*FLEN/8, x4, x1, x2)

inst_26937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500007ffffffff; valaddr_reg:x3; val_offset:80811*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80811*0 + 3*57*FLEN/8, x4, x1, x2)

inst_26938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250000fffffffff; valaddr_reg:x3; val_offset:80814*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80814*0 + 3*58*FLEN/8, x4, x1, x2)

inst_26939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250001fffffffff; valaddr_reg:x3; val_offset:80817*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80817*0 + 3*59*FLEN/8, x4, x1, x2)

inst_26940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250003fffffffff; valaddr_reg:x3; val_offset:80820*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80820*0 + 3*60*FLEN/8, x4, x1, x2)

inst_26941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250007fffffffff; valaddr_reg:x3; val_offset:80823*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80823*0 + 3*61*FLEN/8, x4, x1, x2)

inst_26942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25000ffffffffff; valaddr_reg:x3; val_offset:80826*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80826*0 + 3*62*FLEN/8, x4, x1, x2)

inst_26943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25001ffffffffff; valaddr_reg:x3; val_offset:80829*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80829*0 + 3*63*FLEN/8, x4, x1, x2)

inst_26944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25003ffffffffff; valaddr_reg:x3; val_offset:80832*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80832*0 + 3*64*FLEN/8, x4, x1, x2)

inst_26945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25007ffffffffff; valaddr_reg:x3; val_offset:80835*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80835*0 + 3*65*FLEN/8, x4, x1, x2)

inst_26946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2500fffffffffff; valaddr_reg:x3; val_offset:80838*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80838*0 + 3*66*FLEN/8, x4, x1, x2)

inst_26947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2501fffffffffff; valaddr_reg:x3; val_offset:80841*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80841*0 + 3*67*FLEN/8, x4, x1, x2)

inst_26948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2503fffffffffff; valaddr_reg:x3; val_offset:80844*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80844*0 + 3*68*FLEN/8, x4, x1, x2)

inst_26949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x2507fffffffffff; valaddr_reg:x3; val_offset:80847*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80847*0 + 3*69*FLEN/8, x4, x1, x2)

inst_26950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x250ffffffffffff; valaddr_reg:x3; val_offset:80850*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80850*0 + 3*70*FLEN/8, x4, x1, x2)

inst_26951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x251ffffffffffff; valaddr_reg:x3; val_offset:80853*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80853*0 + 3*71*FLEN/8, x4, x1, x2)

inst_26952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x253ffffffffffff; valaddr_reg:x3; val_offset:80856*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80856*0 + 3*72*FLEN/8, x4, x1, x2)

inst_26953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x257ffffffffffff; valaddr_reg:x3; val_offset:80859*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80859*0 + 3*73*FLEN/8, x4, x1, x2)

inst_26954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x258000000000000; valaddr_reg:x3; val_offset:80862*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80862*0 + 3*74*FLEN/8, x4, x1, x2)

inst_26955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25c000000000000; valaddr_reg:x3; val_offset:80865*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80865*0 + 3*75*FLEN/8, x4, x1, x2)

inst_26956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25e000000000000; valaddr_reg:x3; val_offset:80868*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80868*0 + 3*76*FLEN/8, x4, x1, x2)

inst_26957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25f000000000000; valaddr_reg:x3; val_offset:80871*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80871*0 + 3*77*FLEN/8, x4, x1, x2)

inst_26958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25f800000000000; valaddr_reg:x3; val_offset:80874*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80874*0 + 3*78*FLEN/8, x4, x1, x2)

inst_26959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fc00000000000; valaddr_reg:x3; val_offset:80877*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80877*0 + 3*79*FLEN/8, x4, x1, x2)

inst_26960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fe00000000000; valaddr_reg:x3; val_offset:80880*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80880*0 + 3*80*FLEN/8, x4, x1, x2)

inst_26961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ff00000000000; valaddr_reg:x3; val_offset:80883*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80883*0 + 3*81*FLEN/8, x4, x1, x2)

inst_26962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ff80000000000; valaddr_reg:x3; val_offset:80886*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80886*0 + 3*82*FLEN/8, x4, x1, x2)

inst_26963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffc0000000000; valaddr_reg:x3; val_offset:80889*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80889*0 + 3*83*FLEN/8, x4, x1, x2)

inst_26964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffe0000000000; valaddr_reg:x3; val_offset:80892*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80892*0 + 3*84*FLEN/8, x4, x1, x2)

inst_26965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fff0000000000; valaddr_reg:x3; val_offset:80895*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80895*0 + 3*85*FLEN/8, x4, x1, x2)

inst_26966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fff8000000000; valaddr_reg:x3; val_offset:80898*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80898*0 + 3*86*FLEN/8, x4, x1, x2)

inst_26967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffc000000000; valaddr_reg:x3; val_offset:80901*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80901*0 + 3*87*FLEN/8, x4, x1, x2)

inst_26968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffe000000000; valaddr_reg:x3; val_offset:80904*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80904*0 + 3*88*FLEN/8, x4, x1, x2)

inst_26969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffff000000000; valaddr_reg:x3; val_offset:80907*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80907*0 + 3*89*FLEN/8, x4, x1, x2)

inst_26970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffff800000000; valaddr_reg:x3; val_offset:80910*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80910*0 + 3*90*FLEN/8, x4, x1, x2)

inst_26971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffc00000000; valaddr_reg:x3; val_offset:80913*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80913*0 + 3*91*FLEN/8, x4, x1, x2)

inst_26972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffe00000000; valaddr_reg:x3; val_offset:80916*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80916*0 + 3*92*FLEN/8, x4, x1, x2)

inst_26973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffff00000000; valaddr_reg:x3; val_offset:80919*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80919*0 + 3*93*FLEN/8, x4, x1, x2)

inst_26974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffff80000000; valaddr_reg:x3; val_offset:80922*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80922*0 + 3*94*FLEN/8, x4, x1, x2)

inst_26975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffc0000000; valaddr_reg:x3; val_offset:80925*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80925*0 + 3*95*FLEN/8, x4, x1, x2)

inst_26976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffe0000000; valaddr_reg:x3; val_offset:80928*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80928*0 + 3*96*FLEN/8, x4, x1, x2)

inst_26977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffff0000000; valaddr_reg:x3; val_offset:80931*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80931*0 + 3*97*FLEN/8, x4, x1, x2)

inst_26978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffff8000000; valaddr_reg:x3; val_offset:80934*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80934*0 + 3*98*FLEN/8, x4, x1, x2)

inst_26979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffc000000; valaddr_reg:x3; val_offset:80937*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80937*0 + 3*99*FLEN/8, x4, x1, x2)

inst_26980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffe000000; valaddr_reg:x3; val_offset:80940*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80940*0 + 3*100*FLEN/8, x4, x1, x2)

inst_26981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffff000000; valaddr_reg:x3; val_offset:80943*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80943*0 + 3*101*FLEN/8, x4, x1, x2)

inst_26982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffff800000; valaddr_reg:x3; val_offset:80946*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80946*0 + 3*102*FLEN/8, x4, x1, x2)

inst_26983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffc00000; valaddr_reg:x3; val_offset:80949*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80949*0 + 3*103*FLEN/8, x4, x1, x2)

inst_26984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffe00000; valaddr_reg:x3; val_offset:80952*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80952*0 + 3*104*FLEN/8, x4, x1, x2)

inst_26985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffff00000; valaddr_reg:x3; val_offset:80955*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80955*0 + 3*105*FLEN/8, x4, x1, x2)

inst_26986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffff80000; valaddr_reg:x3; val_offset:80958*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80958*0 + 3*106*FLEN/8, x4, x1, x2)

inst_26987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffc0000; valaddr_reg:x3; val_offset:80961*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80961*0 + 3*107*FLEN/8, x4, x1, x2)

inst_26988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffe0000; valaddr_reg:x3; val_offset:80964*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80964*0 + 3*108*FLEN/8, x4, x1, x2)

inst_26989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffff0000; valaddr_reg:x3; val_offset:80967*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80967*0 + 3*109*FLEN/8, x4, x1, x2)

inst_26990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffff8000; valaddr_reg:x3; val_offset:80970*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80970*0 + 3*110*FLEN/8, x4, x1, x2)

inst_26991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffffc000; valaddr_reg:x3; val_offset:80973*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80973*0 + 3*111*FLEN/8, x4, x1, x2)

inst_26992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffffe000; valaddr_reg:x3; val_offset:80976*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80976*0 + 3*112*FLEN/8, x4, x1, x2)

inst_26993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffff000; valaddr_reg:x3; val_offset:80979*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80979*0 + 3*113*FLEN/8, x4, x1, x2)

inst_26994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffff800; valaddr_reg:x3; val_offset:80982*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80982*0 + 3*114*FLEN/8, x4, x1, x2)

inst_26995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffffc00; valaddr_reg:x3; val_offset:80985*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80985*0 + 3*115*FLEN/8, x4, x1, x2)

inst_26996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffffe00; valaddr_reg:x3; val_offset:80988*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80988*0 + 3*116*FLEN/8, x4, x1, x2)

inst_26997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffffff00; valaddr_reg:x3; val_offset:80991*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80991*0 + 3*117*FLEN/8, x4, x1, x2)

inst_26998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffffff80; valaddr_reg:x3; val_offset:80994*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80994*0 + 3*118*FLEN/8, x4, x1, x2)

inst_26999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffffffc0; valaddr_reg:x3; val_offset:80997*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 80997*0 + 3*119*FLEN/8, x4, x1, x2)

inst_27000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffffffe0; valaddr_reg:x3; val_offset:81000*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81000*0 + 3*120*FLEN/8, x4, x1, x2)

inst_27001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffffff0; valaddr_reg:x3; val_offset:81003*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81003*0 + 3*121*FLEN/8, x4, x1, x2)

inst_27002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffffff8; valaddr_reg:x3; val_offset:81006*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81006*0 + 3*122*FLEN/8, x4, x1, x2)

inst_27003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffffffc; valaddr_reg:x3; val_offset:81009*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81009*0 + 3*123*FLEN/8, x4, x1, x2)

inst_27004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25ffffffffffffe; valaddr_reg:x3; val_offset:81012*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81012*0 + 3*124*FLEN/8, x4, x1, x2)

inst_27005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x11815adf23e61 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f911815adf23e61; op2val:0x0;
op3val:0x25fffffffffffff; valaddr_reg:x3; val_offset:81015*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81015*0 + 3*125*FLEN/8, x4, x1, x2)

inst_27006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:81018*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81018*0 + 3*126*FLEN/8, x4, x1, x2)

inst_27007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:81021*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81021*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_27008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:81024*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81024*0 + 3*128*FLEN/8, x4, x1, x2)

inst_27009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:81027*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81027*0 + 3*129*FLEN/8, x4, x1, x2)

inst_27010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:81030*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81030*0 + 3*130*FLEN/8, x4, x1, x2)

inst_27011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:81033*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81033*0 + 3*131*FLEN/8, x4, x1, x2)

inst_27012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:81036*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81036*0 + 3*132*FLEN/8, x4, x1, x2)

inst_27013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:81039*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81039*0 + 3*133*FLEN/8, x4, x1, x2)

inst_27014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:81042*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81042*0 + 3*134*FLEN/8, x4, x1, x2)

inst_27015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:81045*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81045*0 + 3*135*FLEN/8, x4, x1, x2)

inst_27016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:81048*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81048*0 + 3*136*FLEN/8, x4, x1, x2)

inst_27017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:81051*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81051*0 + 3*137*FLEN/8, x4, x1, x2)

inst_27018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:81054*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81054*0 + 3*138*FLEN/8, x4, x1, x2)

inst_27019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:81057*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81057*0 + 3*139*FLEN/8, x4, x1, x2)

inst_27020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:81060*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81060*0 + 3*140*FLEN/8, x4, x1, x2)

inst_27021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:81063*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81063*0 + 3*141*FLEN/8, x4, x1, x2)

inst_27022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:81066*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81066*0 + 3*142*FLEN/8, x4, x1, x2)

inst_27023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:81069*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81069*0 + 3*143*FLEN/8, x4, x1, x2)

inst_27024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:81072*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81072*0 + 3*144*FLEN/8, x4, x1, x2)

inst_27025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:81075*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81075*0 + 3*145*FLEN/8, x4, x1, x2)

inst_27026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:81078*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81078*0 + 3*146*FLEN/8, x4, x1, x2)

inst_27027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:81081*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81081*0 + 3*147*FLEN/8, x4, x1, x2)

inst_27028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000000000; valaddr_reg:x3; val_offset:81084*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81084*0 + 3*148*FLEN/8, x4, x1, x2)

inst_27029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000000001; valaddr_reg:x3; val_offset:81087*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81087*0 + 3*149*FLEN/8, x4, x1, x2)

inst_27030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000000003; valaddr_reg:x3; val_offset:81090*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81090*0 + 3*150*FLEN/8, x4, x1, x2)

inst_27031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000000007; valaddr_reg:x3; val_offset:81093*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81093*0 + 3*151*FLEN/8, x4, x1, x2)

inst_27032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000000000f; valaddr_reg:x3; val_offset:81096*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81096*0 + 3*152*FLEN/8, x4, x1, x2)

inst_27033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000000001f; valaddr_reg:x3; val_offset:81099*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81099*0 + 3*153*FLEN/8, x4, x1, x2)

inst_27034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000000003f; valaddr_reg:x3; val_offset:81102*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81102*0 + 3*154*FLEN/8, x4, x1, x2)

inst_27035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000000007f; valaddr_reg:x3; val_offset:81105*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81105*0 + 3*155*FLEN/8, x4, x1, x2)

inst_27036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000000000ff; valaddr_reg:x3; val_offset:81108*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81108*0 + 3*156*FLEN/8, x4, x1, x2)

inst_27037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000000001ff; valaddr_reg:x3; val_offset:81111*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81111*0 + 3*157*FLEN/8, x4, x1, x2)

inst_27038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000000003ff; valaddr_reg:x3; val_offset:81114*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81114*0 + 3*158*FLEN/8, x4, x1, x2)

inst_27039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000000007ff; valaddr_reg:x3; val_offset:81117*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81117*0 + 3*159*FLEN/8, x4, x1, x2)

inst_27040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000000fff; valaddr_reg:x3; val_offset:81120*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81120*0 + 3*160*FLEN/8, x4, x1, x2)

inst_27041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000001fff; valaddr_reg:x3; val_offset:81123*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81123*0 + 3*161*FLEN/8, x4, x1, x2)

inst_27042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000003fff; valaddr_reg:x3; val_offset:81126*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81126*0 + 3*162*FLEN/8, x4, x1, x2)

inst_27043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000007fff; valaddr_reg:x3; val_offset:81129*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81129*0 + 3*163*FLEN/8, x4, x1, x2)

inst_27044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000000ffff; valaddr_reg:x3; val_offset:81132*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81132*0 + 3*164*FLEN/8, x4, x1, x2)

inst_27045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000001ffff; valaddr_reg:x3; val_offset:81135*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81135*0 + 3*165*FLEN/8, x4, x1, x2)

inst_27046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000003ffff; valaddr_reg:x3; val_offset:81138*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81138*0 + 3*166*FLEN/8, x4, x1, x2)

inst_27047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000007ffff; valaddr_reg:x3; val_offset:81141*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81141*0 + 3*167*FLEN/8, x4, x1, x2)

inst_27048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000000fffff; valaddr_reg:x3; val_offset:81144*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81144*0 + 3*168*FLEN/8, x4, x1, x2)

inst_27049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000001fffff; valaddr_reg:x3; val_offset:81147*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81147*0 + 3*169*FLEN/8, x4, x1, x2)

inst_27050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000003fffff; valaddr_reg:x3; val_offset:81150*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81150*0 + 3*170*FLEN/8, x4, x1, x2)

inst_27051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000007fffff; valaddr_reg:x3; val_offset:81153*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81153*0 + 3*171*FLEN/8, x4, x1, x2)

inst_27052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000000ffffff; valaddr_reg:x3; val_offset:81156*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81156*0 + 3*172*FLEN/8, x4, x1, x2)

inst_27053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000001ffffff; valaddr_reg:x3; val_offset:81159*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81159*0 + 3*173*FLEN/8, x4, x1, x2)

inst_27054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000003ffffff; valaddr_reg:x3; val_offset:81162*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81162*0 + 3*174*FLEN/8, x4, x1, x2)

inst_27055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000007ffffff; valaddr_reg:x3; val_offset:81165*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81165*0 + 3*175*FLEN/8, x4, x1, x2)

inst_27056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000000fffffff; valaddr_reg:x3; val_offset:81168*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81168*0 + 3*176*FLEN/8, x4, x1, x2)

inst_27057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000001fffffff; valaddr_reg:x3; val_offset:81171*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81171*0 + 3*177*FLEN/8, x4, x1, x2)

inst_27058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000003fffffff; valaddr_reg:x3; val_offset:81174*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81174*0 + 3*178*FLEN/8, x4, x1, x2)

inst_27059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000007fffffff; valaddr_reg:x3; val_offset:81177*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81177*0 + 3*179*FLEN/8, x4, x1, x2)

inst_27060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300000ffffffff; valaddr_reg:x3; val_offset:81180*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81180*0 + 3*180*FLEN/8, x4, x1, x2)

inst_27061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300001ffffffff; valaddr_reg:x3; val_offset:81183*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81183*0 + 3*181*FLEN/8, x4, x1, x2)

inst_27062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300003ffffffff; valaddr_reg:x3; val_offset:81186*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81186*0 + 3*182*FLEN/8, x4, x1, x2)

inst_27063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300007ffffffff; valaddr_reg:x3; val_offset:81189*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81189*0 + 3*183*FLEN/8, x4, x1, x2)

inst_27064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130000fffffffff; valaddr_reg:x3; val_offset:81192*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81192*0 + 3*184*FLEN/8, x4, x1, x2)

inst_27065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130001fffffffff; valaddr_reg:x3; val_offset:81195*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81195*0 + 3*185*FLEN/8, x4, x1, x2)

inst_27066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130003fffffffff; valaddr_reg:x3; val_offset:81198*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81198*0 + 3*186*FLEN/8, x4, x1, x2)

inst_27067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130007fffffffff; valaddr_reg:x3; val_offset:81201*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81201*0 + 3*187*FLEN/8, x4, x1, x2)

inst_27068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13000ffffffffff; valaddr_reg:x3; val_offset:81204*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81204*0 + 3*188*FLEN/8, x4, x1, x2)

inst_27069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13001ffffffffff; valaddr_reg:x3; val_offset:81207*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81207*0 + 3*189*FLEN/8, x4, x1, x2)

inst_27070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13003ffffffffff; valaddr_reg:x3; val_offset:81210*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81210*0 + 3*190*FLEN/8, x4, x1, x2)

inst_27071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13007ffffffffff; valaddr_reg:x3; val_offset:81213*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81213*0 + 3*191*FLEN/8, x4, x1, x2)

inst_27072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1300fffffffffff; valaddr_reg:x3; val_offset:81216*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81216*0 + 3*192*FLEN/8, x4, x1, x2)

inst_27073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1301fffffffffff; valaddr_reg:x3; val_offset:81219*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81219*0 + 3*193*FLEN/8, x4, x1, x2)

inst_27074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1303fffffffffff; valaddr_reg:x3; val_offset:81222*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81222*0 + 3*194*FLEN/8, x4, x1, x2)

inst_27075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x1307fffffffffff; valaddr_reg:x3; val_offset:81225*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81225*0 + 3*195*FLEN/8, x4, x1, x2)

inst_27076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x130ffffffffffff; valaddr_reg:x3; val_offset:81228*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81228*0 + 3*196*FLEN/8, x4, x1, x2)

inst_27077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x131ffffffffffff; valaddr_reg:x3; val_offset:81231*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81231*0 + 3*197*FLEN/8, x4, x1, x2)

inst_27078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x133ffffffffffff; valaddr_reg:x3; val_offset:81234*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81234*0 + 3*198*FLEN/8, x4, x1, x2)

inst_27079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x137ffffffffffff; valaddr_reg:x3; val_offset:81237*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81237*0 + 3*199*FLEN/8, x4, x1, x2)

inst_27080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x138000000000000; valaddr_reg:x3; val_offset:81240*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81240*0 + 3*200*FLEN/8, x4, x1, x2)

inst_27081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13c000000000000; valaddr_reg:x3; val_offset:81243*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81243*0 + 3*201*FLEN/8, x4, x1, x2)

inst_27082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13e000000000000; valaddr_reg:x3; val_offset:81246*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81246*0 + 3*202*FLEN/8, x4, x1, x2)

inst_27083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13f000000000000; valaddr_reg:x3; val_offset:81249*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81249*0 + 3*203*FLEN/8, x4, x1, x2)

inst_27084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13f800000000000; valaddr_reg:x3; val_offset:81252*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81252*0 + 3*204*FLEN/8, x4, x1, x2)

inst_27085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fc00000000000; valaddr_reg:x3; val_offset:81255*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81255*0 + 3*205*FLEN/8, x4, x1, x2)

inst_27086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fe00000000000; valaddr_reg:x3; val_offset:81258*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81258*0 + 3*206*FLEN/8, x4, x1, x2)

inst_27087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ff00000000000; valaddr_reg:x3; val_offset:81261*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81261*0 + 3*207*FLEN/8, x4, x1, x2)

inst_27088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ff80000000000; valaddr_reg:x3; val_offset:81264*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81264*0 + 3*208*FLEN/8, x4, x1, x2)

inst_27089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffc0000000000; valaddr_reg:x3; val_offset:81267*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81267*0 + 3*209*FLEN/8, x4, x1, x2)

inst_27090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffe0000000000; valaddr_reg:x3; val_offset:81270*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81270*0 + 3*210*FLEN/8, x4, x1, x2)

inst_27091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fff0000000000; valaddr_reg:x3; val_offset:81273*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81273*0 + 3*211*FLEN/8, x4, x1, x2)

inst_27092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fff8000000000; valaddr_reg:x3; val_offset:81276*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81276*0 + 3*212*FLEN/8, x4, x1, x2)

inst_27093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffc000000000; valaddr_reg:x3; val_offset:81279*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81279*0 + 3*213*FLEN/8, x4, x1, x2)

inst_27094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffe000000000; valaddr_reg:x3; val_offset:81282*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81282*0 + 3*214*FLEN/8, x4, x1, x2)

inst_27095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffff000000000; valaddr_reg:x3; val_offset:81285*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81285*0 + 3*215*FLEN/8, x4, x1, x2)

inst_27096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffff800000000; valaddr_reg:x3; val_offset:81288*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81288*0 + 3*216*FLEN/8, x4, x1, x2)

inst_27097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffc00000000; valaddr_reg:x3; val_offset:81291*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81291*0 + 3*217*FLEN/8, x4, x1, x2)

inst_27098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffe00000000; valaddr_reg:x3; val_offset:81294*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81294*0 + 3*218*FLEN/8, x4, x1, x2)

inst_27099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffff00000000; valaddr_reg:x3; val_offset:81297*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81297*0 + 3*219*FLEN/8, x4, x1, x2)

inst_27100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffff80000000; valaddr_reg:x3; val_offset:81300*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81300*0 + 3*220*FLEN/8, x4, x1, x2)

inst_27101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffc0000000; valaddr_reg:x3; val_offset:81303*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81303*0 + 3*221*FLEN/8, x4, x1, x2)

inst_27102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffe0000000; valaddr_reg:x3; val_offset:81306*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81306*0 + 3*222*FLEN/8, x4, x1, x2)

inst_27103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffff0000000; valaddr_reg:x3; val_offset:81309*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81309*0 + 3*223*FLEN/8, x4, x1, x2)

inst_27104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffff8000000; valaddr_reg:x3; val_offset:81312*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81312*0 + 3*224*FLEN/8, x4, x1, x2)

inst_27105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffc000000; valaddr_reg:x3; val_offset:81315*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81315*0 + 3*225*FLEN/8, x4, x1, x2)

inst_27106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffe000000; valaddr_reg:x3; val_offset:81318*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81318*0 + 3*226*FLEN/8, x4, x1, x2)

inst_27107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffff000000; valaddr_reg:x3; val_offset:81321*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81321*0 + 3*227*FLEN/8, x4, x1, x2)

inst_27108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffff800000; valaddr_reg:x3; val_offset:81324*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81324*0 + 3*228*FLEN/8, x4, x1, x2)

inst_27109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffc00000; valaddr_reg:x3; val_offset:81327*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81327*0 + 3*229*FLEN/8, x4, x1, x2)

inst_27110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffe00000; valaddr_reg:x3; val_offset:81330*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81330*0 + 3*230*FLEN/8, x4, x1, x2)

inst_27111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffff00000; valaddr_reg:x3; val_offset:81333*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81333*0 + 3*231*FLEN/8, x4, x1, x2)

inst_27112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffff80000; valaddr_reg:x3; val_offset:81336*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81336*0 + 3*232*FLEN/8, x4, x1, x2)

inst_27113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffc0000; valaddr_reg:x3; val_offset:81339*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81339*0 + 3*233*FLEN/8, x4, x1, x2)

inst_27114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffe0000; valaddr_reg:x3; val_offset:81342*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81342*0 + 3*234*FLEN/8, x4, x1, x2)

inst_27115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffff0000; valaddr_reg:x3; val_offset:81345*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81345*0 + 3*235*FLEN/8, x4, x1, x2)

inst_27116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffff8000; valaddr_reg:x3; val_offset:81348*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81348*0 + 3*236*FLEN/8, x4, x1, x2)

inst_27117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffffc000; valaddr_reg:x3; val_offset:81351*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81351*0 + 3*237*FLEN/8, x4, x1, x2)

inst_27118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffffe000; valaddr_reg:x3; val_offset:81354*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81354*0 + 3*238*FLEN/8, x4, x1, x2)

inst_27119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffff000; valaddr_reg:x3; val_offset:81357*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81357*0 + 3*239*FLEN/8, x4, x1, x2)

inst_27120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffff800; valaddr_reg:x3; val_offset:81360*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81360*0 + 3*240*FLEN/8, x4, x1, x2)

inst_27121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffffc00; valaddr_reg:x3; val_offset:81363*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81363*0 + 3*241*FLEN/8, x4, x1, x2)

inst_27122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffffe00; valaddr_reg:x3; val_offset:81366*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81366*0 + 3*242*FLEN/8, x4, x1, x2)

inst_27123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffffff00; valaddr_reg:x3; val_offset:81369*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81369*0 + 3*243*FLEN/8, x4, x1, x2)

inst_27124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffffff80; valaddr_reg:x3; val_offset:81372*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81372*0 + 3*244*FLEN/8, x4, x1, x2)

inst_27125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffffffc0; valaddr_reg:x3; val_offset:81375*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81375*0 + 3*245*FLEN/8, x4, x1, x2)

inst_27126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffffffe0; valaddr_reg:x3; val_offset:81378*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81378*0 + 3*246*FLEN/8, x4, x1, x2)

inst_27127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffffff0; valaddr_reg:x3; val_offset:81381*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81381*0 + 3*247*FLEN/8, x4, x1, x2)

inst_27128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffffff8; valaddr_reg:x3; val_offset:81384*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81384*0 + 3*248*FLEN/8, x4, x1, x2)

inst_27129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffffffc; valaddr_reg:x3; val_offset:81387*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81387*0 + 3*249*FLEN/8, x4, x1, x2)

inst_27130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13ffffffffffffe; valaddr_reg:x3; val_offset:81390*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81390*0 + 3*250*FLEN/8, x4, x1, x2)

inst_27131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x12678efc1baeb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f912678efc1baeb; op2val:0x0;
op3val:0x13fffffffffffff; valaddr_reg:x3; val_offset:81393*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81393*0 + 3*251*FLEN/8, x4, x1, x2)

inst_27132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000000000; valaddr_reg:x3; val_offset:81396*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81396*0 + 3*252*FLEN/8, x4, x1, x2)

inst_27133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000000001; valaddr_reg:x3; val_offset:81399*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81399*0 + 3*253*FLEN/8, x4, x1, x2)

inst_27134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000000003; valaddr_reg:x3; val_offset:81402*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81402*0 + 3*254*FLEN/8, x4, x1, x2)

inst_27135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000000007; valaddr_reg:x3; val_offset:81405*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81405*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_27136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000000000f; valaddr_reg:x3; val_offset:81408*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81408*0 + 3*256*FLEN/8, x4, x1, x2)

inst_27137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000000001f; valaddr_reg:x3; val_offset:81411*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81411*0 + 3*257*FLEN/8, x4, x1, x2)

inst_27138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000000003f; valaddr_reg:x3; val_offset:81414*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81414*0 + 3*258*FLEN/8, x4, x1, x2)

inst_27139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000000007f; valaddr_reg:x3; val_offset:81417*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81417*0 + 3*259*FLEN/8, x4, x1, x2)

inst_27140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000000000ff; valaddr_reg:x3; val_offset:81420*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81420*0 + 3*260*FLEN/8, x4, x1, x2)

inst_27141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000000001ff; valaddr_reg:x3; val_offset:81423*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81423*0 + 3*261*FLEN/8, x4, x1, x2)

inst_27142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000000003ff; valaddr_reg:x3; val_offset:81426*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81426*0 + 3*262*FLEN/8, x4, x1, x2)

inst_27143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000000007ff; valaddr_reg:x3; val_offset:81429*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81429*0 + 3*263*FLEN/8, x4, x1, x2)

inst_27144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000000fff; valaddr_reg:x3; val_offset:81432*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81432*0 + 3*264*FLEN/8, x4, x1, x2)

inst_27145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000001fff; valaddr_reg:x3; val_offset:81435*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81435*0 + 3*265*FLEN/8, x4, x1, x2)

inst_27146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000003fff; valaddr_reg:x3; val_offset:81438*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81438*0 + 3*266*FLEN/8, x4, x1, x2)

inst_27147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000007fff; valaddr_reg:x3; val_offset:81441*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81441*0 + 3*267*FLEN/8, x4, x1, x2)

inst_27148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000000ffff; valaddr_reg:x3; val_offset:81444*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81444*0 + 3*268*FLEN/8, x4, x1, x2)

inst_27149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000001ffff; valaddr_reg:x3; val_offset:81447*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81447*0 + 3*269*FLEN/8, x4, x1, x2)

inst_27150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000003ffff; valaddr_reg:x3; val_offset:81450*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81450*0 + 3*270*FLEN/8, x4, x1, x2)

inst_27151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000007ffff; valaddr_reg:x3; val_offset:81453*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81453*0 + 3*271*FLEN/8, x4, x1, x2)

inst_27152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000000fffff; valaddr_reg:x3; val_offset:81456*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81456*0 + 3*272*FLEN/8, x4, x1, x2)

inst_27153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000001fffff; valaddr_reg:x3; val_offset:81459*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81459*0 + 3*273*FLEN/8, x4, x1, x2)

inst_27154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000003fffff; valaddr_reg:x3; val_offset:81462*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81462*0 + 3*274*FLEN/8, x4, x1, x2)

inst_27155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000007fffff; valaddr_reg:x3; val_offset:81465*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81465*0 + 3*275*FLEN/8, x4, x1, x2)

inst_27156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000000ffffff; valaddr_reg:x3; val_offset:81468*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81468*0 + 3*276*FLEN/8, x4, x1, x2)

inst_27157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000001ffffff; valaddr_reg:x3; val_offset:81471*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81471*0 + 3*277*FLEN/8, x4, x1, x2)

inst_27158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000003ffffff; valaddr_reg:x3; val_offset:81474*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81474*0 + 3*278*FLEN/8, x4, x1, x2)

inst_27159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000007ffffff; valaddr_reg:x3; val_offset:81477*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81477*0 + 3*279*FLEN/8, x4, x1, x2)

inst_27160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000000fffffff; valaddr_reg:x3; val_offset:81480*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81480*0 + 3*280*FLEN/8, x4, x1, x2)

inst_27161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000001fffffff; valaddr_reg:x3; val_offset:81483*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81483*0 + 3*281*FLEN/8, x4, x1, x2)

inst_27162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000003fffffff; valaddr_reg:x3; val_offset:81486*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81486*0 + 3*282*FLEN/8, x4, x1, x2)

inst_27163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000007fffffff; valaddr_reg:x3; val_offset:81489*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81489*0 + 3*283*FLEN/8, x4, x1, x2)

inst_27164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400000ffffffff; valaddr_reg:x3; val_offset:81492*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81492*0 + 3*284*FLEN/8, x4, x1, x2)

inst_27165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400001ffffffff; valaddr_reg:x3; val_offset:81495*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81495*0 + 3*285*FLEN/8, x4, x1, x2)

inst_27166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400003ffffffff; valaddr_reg:x3; val_offset:81498*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81498*0 + 3*286*FLEN/8, x4, x1, x2)

inst_27167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400007ffffffff; valaddr_reg:x3; val_offset:81501*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81501*0 + 3*287*FLEN/8, x4, x1, x2)

inst_27168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40000fffffffff; valaddr_reg:x3; val_offset:81504*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81504*0 + 3*288*FLEN/8, x4, x1, x2)

inst_27169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40001fffffffff; valaddr_reg:x3; val_offset:81507*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81507*0 + 3*289*FLEN/8, x4, x1, x2)

inst_27170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40003fffffffff; valaddr_reg:x3; val_offset:81510*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81510*0 + 3*290*FLEN/8, x4, x1, x2)

inst_27171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40007fffffffff; valaddr_reg:x3; val_offset:81513*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81513*0 + 3*291*FLEN/8, x4, x1, x2)

inst_27172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4000ffffffffff; valaddr_reg:x3; val_offset:81516*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81516*0 + 3*292*FLEN/8, x4, x1, x2)

inst_27173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4001ffffffffff; valaddr_reg:x3; val_offset:81519*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81519*0 + 3*293*FLEN/8, x4, x1, x2)

inst_27174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4003ffffffffff; valaddr_reg:x3; val_offset:81522*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81522*0 + 3*294*FLEN/8, x4, x1, x2)

inst_27175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4007ffffffffff; valaddr_reg:x3; val_offset:81525*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81525*0 + 3*295*FLEN/8, x4, x1, x2)

inst_27176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d400fffffffffff; valaddr_reg:x3; val_offset:81528*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81528*0 + 3*296*FLEN/8, x4, x1, x2)

inst_27177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d401fffffffffff; valaddr_reg:x3; val_offset:81531*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81531*0 + 3*297*FLEN/8, x4, x1, x2)

inst_27178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d403fffffffffff; valaddr_reg:x3; val_offset:81534*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81534*0 + 3*298*FLEN/8, x4, x1, x2)

inst_27179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d407fffffffffff; valaddr_reg:x3; val_offset:81537*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81537*0 + 3*299*FLEN/8, x4, x1, x2)

inst_27180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d40ffffffffffff; valaddr_reg:x3; val_offset:81540*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81540*0 + 3*300*FLEN/8, x4, x1, x2)

inst_27181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d41ffffffffffff; valaddr_reg:x3; val_offset:81543*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81543*0 + 3*301*FLEN/8, x4, x1, x2)

inst_27182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d43ffffffffffff; valaddr_reg:x3; val_offset:81546*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81546*0 + 3*302*FLEN/8, x4, x1, x2)

inst_27183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d47ffffffffffff; valaddr_reg:x3; val_offset:81549*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81549*0 + 3*303*FLEN/8, x4, x1, x2)

inst_27184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d48000000000000; valaddr_reg:x3; val_offset:81552*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81552*0 + 3*304*FLEN/8, x4, x1, x2)

inst_27185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4c000000000000; valaddr_reg:x3; val_offset:81555*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81555*0 + 3*305*FLEN/8, x4, x1, x2)

inst_27186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4e000000000000; valaddr_reg:x3; val_offset:81558*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81558*0 + 3*306*FLEN/8, x4, x1, x2)

inst_27187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4f000000000000; valaddr_reg:x3; val_offset:81561*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81561*0 + 3*307*FLEN/8, x4, x1, x2)

inst_27188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4f800000000000; valaddr_reg:x3; val_offset:81564*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81564*0 + 3*308*FLEN/8, x4, x1, x2)

inst_27189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fc00000000000; valaddr_reg:x3; val_offset:81567*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81567*0 + 3*309*FLEN/8, x4, x1, x2)

inst_27190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fe00000000000; valaddr_reg:x3; val_offset:81570*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81570*0 + 3*310*FLEN/8, x4, x1, x2)

inst_27191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ff00000000000; valaddr_reg:x3; val_offset:81573*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81573*0 + 3*311*FLEN/8, x4, x1, x2)

inst_27192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ff80000000000; valaddr_reg:x3; val_offset:81576*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81576*0 + 3*312*FLEN/8, x4, x1, x2)

inst_27193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffc0000000000; valaddr_reg:x3; val_offset:81579*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81579*0 + 3*313*FLEN/8, x4, x1, x2)

inst_27194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffe0000000000; valaddr_reg:x3; val_offset:81582*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81582*0 + 3*314*FLEN/8, x4, x1, x2)

inst_27195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fff0000000000; valaddr_reg:x3; val_offset:81585*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81585*0 + 3*315*FLEN/8, x4, x1, x2)

inst_27196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fff8000000000; valaddr_reg:x3; val_offset:81588*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81588*0 + 3*316*FLEN/8, x4, x1, x2)

inst_27197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffc000000000; valaddr_reg:x3; val_offset:81591*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81591*0 + 3*317*FLEN/8, x4, x1, x2)

inst_27198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffe000000000; valaddr_reg:x3; val_offset:81594*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81594*0 + 3*318*FLEN/8, x4, x1, x2)

inst_27199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffff000000000; valaddr_reg:x3; val_offset:81597*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81597*0 + 3*319*FLEN/8, x4, x1, x2)

inst_27200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffff800000000; valaddr_reg:x3; val_offset:81600*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81600*0 + 3*320*FLEN/8, x4, x1, x2)

inst_27201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffc00000000; valaddr_reg:x3; val_offset:81603*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81603*0 + 3*321*FLEN/8, x4, x1, x2)

inst_27202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffe00000000; valaddr_reg:x3; val_offset:81606*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81606*0 + 3*322*FLEN/8, x4, x1, x2)

inst_27203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffff00000000; valaddr_reg:x3; val_offset:81609*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81609*0 + 3*323*FLEN/8, x4, x1, x2)

inst_27204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffff80000000; valaddr_reg:x3; val_offset:81612*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81612*0 + 3*324*FLEN/8, x4, x1, x2)

inst_27205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffc0000000; valaddr_reg:x3; val_offset:81615*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81615*0 + 3*325*FLEN/8, x4, x1, x2)

inst_27206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffe0000000; valaddr_reg:x3; val_offset:81618*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81618*0 + 3*326*FLEN/8, x4, x1, x2)

inst_27207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffff0000000; valaddr_reg:x3; val_offset:81621*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81621*0 + 3*327*FLEN/8, x4, x1, x2)

inst_27208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffff8000000; valaddr_reg:x3; val_offset:81624*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81624*0 + 3*328*FLEN/8, x4, x1, x2)

inst_27209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffc000000; valaddr_reg:x3; val_offset:81627*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81627*0 + 3*329*FLEN/8, x4, x1, x2)

inst_27210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffe000000; valaddr_reg:x3; val_offset:81630*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81630*0 + 3*330*FLEN/8, x4, x1, x2)

inst_27211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffff000000; valaddr_reg:x3; val_offset:81633*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81633*0 + 3*331*FLEN/8, x4, x1, x2)

inst_27212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffff800000; valaddr_reg:x3; val_offset:81636*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81636*0 + 3*332*FLEN/8, x4, x1, x2)

inst_27213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffc00000; valaddr_reg:x3; val_offset:81639*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81639*0 + 3*333*FLEN/8, x4, x1, x2)

inst_27214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffe00000; valaddr_reg:x3; val_offset:81642*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81642*0 + 3*334*FLEN/8, x4, x1, x2)

inst_27215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffff00000; valaddr_reg:x3; val_offset:81645*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81645*0 + 3*335*FLEN/8, x4, x1, x2)

inst_27216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffff80000; valaddr_reg:x3; val_offset:81648*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81648*0 + 3*336*FLEN/8, x4, x1, x2)

inst_27217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffc0000; valaddr_reg:x3; val_offset:81651*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81651*0 + 3*337*FLEN/8, x4, x1, x2)

inst_27218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffe0000; valaddr_reg:x3; val_offset:81654*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81654*0 + 3*338*FLEN/8, x4, x1, x2)

inst_27219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffff0000; valaddr_reg:x3; val_offset:81657*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81657*0 + 3*339*FLEN/8, x4, x1, x2)

inst_27220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffff8000; valaddr_reg:x3; val_offset:81660*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81660*0 + 3*340*FLEN/8, x4, x1, x2)

inst_27221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffffc000; valaddr_reg:x3; val_offset:81663*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81663*0 + 3*341*FLEN/8, x4, x1, x2)

inst_27222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffffe000; valaddr_reg:x3; val_offset:81666*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81666*0 + 3*342*FLEN/8, x4, x1, x2)

inst_27223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffff000; valaddr_reg:x3; val_offset:81669*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81669*0 + 3*343*FLEN/8, x4, x1, x2)

inst_27224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffff800; valaddr_reg:x3; val_offset:81672*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81672*0 + 3*344*FLEN/8, x4, x1, x2)

inst_27225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffffc00; valaddr_reg:x3; val_offset:81675*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81675*0 + 3*345*FLEN/8, x4, x1, x2)

inst_27226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffffe00; valaddr_reg:x3; val_offset:81678*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81678*0 + 3*346*FLEN/8, x4, x1, x2)

inst_27227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffffff00; valaddr_reg:x3; val_offset:81681*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81681*0 + 3*347*FLEN/8, x4, x1, x2)

inst_27228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffffff80; valaddr_reg:x3; val_offset:81684*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81684*0 + 3*348*FLEN/8, x4, x1, x2)

inst_27229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffffffc0; valaddr_reg:x3; val_offset:81687*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81687*0 + 3*349*FLEN/8, x4, x1, x2)

inst_27230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffffffe0; valaddr_reg:x3; val_offset:81690*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81690*0 + 3*350*FLEN/8, x4, x1, x2)

inst_27231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffffff0; valaddr_reg:x3; val_offset:81693*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81693*0 + 3*351*FLEN/8, x4, x1, x2)

inst_27232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffffff8; valaddr_reg:x3; val_offset:81696*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81696*0 + 3*352*FLEN/8, x4, x1, x2)

inst_27233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffffffc; valaddr_reg:x3; val_offset:81699*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81699*0 + 3*353*FLEN/8, x4, x1, x2)

inst_27234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4ffffffffffffe; valaddr_reg:x3; val_offset:81702*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81702*0 + 3*354*FLEN/8, x4, x1, x2)

inst_27235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3d4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3d4fffffffffffff; valaddr_reg:x3; val_offset:81705*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81705*0 + 3*355*FLEN/8, x4, x1, x2)

inst_27236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:81708*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81708*0 + 3*356*FLEN/8, x4, x1, x2)

inst_27237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:81711*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81711*0 + 3*357*FLEN/8, x4, x1, x2)

inst_27238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:81714*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81714*0 + 3*358*FLEN/8, x4, x1, x2)

inst_27239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:81717*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81717*0 + 3*359*FLEN/8, x4, x1, x2)

inst_27240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:81720*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81720*0 + 3*360*FLEN/8, x4, x1, x2)

inst_27241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:81723*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81723*0 + 3*361*FLEN/8, x4, x1, x2)

inst_27242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:81726*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81726*0 + 3*362*FLEN/8, x4, x1, x2)

inst_27243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:81729*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81729*0 + 3*363*FLEN/8, x4, x1, x2)

inst_27244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:81732*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81732*0 + 3*364*FLEN/8, x4, x1, x2)

inst_27245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:81735*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81735*0 + 3*365*FLEN/8, x4, x1, x2)

inst_27246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:81738*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81738*0 + 3*366*FLEN/8, x4, x1, x2)

inst_27247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:81741*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81741*0 + 3*367*FLEN/8, x4, x1, x2)

inst_27248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:81744*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81744*0 + 3*368*FLEN/8, x4, x1, x2)

inst_27249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:81747*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81747*0 + 3*369*FLEN/8, x4, x1, x2)

inst_27250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:81750*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81750*0 + 3*370*FLEN/8, x4, x1, x2)

inst_27251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:81753*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81753*0 + 3*371*FLEN/8, x4, x1, x2)

inst_27252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:81756*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81756*0 + 3*372*FLEN/8, x4, x1, x2)

inst_27253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:81759*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81759*0 + 3*373*FLEN/8, x4, x1, x2)

inst_27254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:81762*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81762*0 + 3*374*FLEN/8, x4, x1, x2)

inst_27255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:81765*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81765*0 + 3*375*FLEN/8, x4, x1, x2)

inst_27256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:81768*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81768*0 + 3*376*FLEN/8, x4, x1, x2)

inst_27257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x127132e12ab7f and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdd981ec4cc5bc and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9127132e12ab7f; op2val:0x204dd981ec4cc5bc;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:81771*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81771*0 + 3*377*FLEN/8, x4, x1, x2)

inst_27258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:81774*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81774*0 + 3*378*FLEN/8, x4, x1, x2)

inst_27259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:81777*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81777*0 + 3*379*FLEN/8, x4, x1, x2)

inst_27260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:81780*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81780*0 + 3*380*FLEN/8, x4, x1, x2)

inst_27261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:81783*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81783*0 + 3*381*FLEN/8, x4, x1, x2)

inst_27262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:81786*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81786*0 + 3*382*FLEN/8, x4, x1, x2)

inst_27263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:81789*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81789*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_27264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:81792*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81792*0 + 3*384*FLEN/8, x4, x1, x2)

inst_27265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:81795*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81795*0 + 3*385*FLEN/8, x4, x1, x2)

inst_27266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:81798*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81798*0 + 3*386*FLEN/8, x4, x1, x2)

inst_27267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:81801*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81801*0 + 3*387*FLEN/8, x4, x1, x2)

inst_27268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:81804*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81804*0 + 3*388*FLEN/8, x4, x1, x2)

inst_27269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:81807*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81807*0 + 3*389*FLEN/8, x4, x1, x2)

inst_27270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:81810*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81810*0 + 3*390*FLEN/8, x4, x1, x2)

inst_27271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:81813*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81813*0 + 3*391*FLEN/8, x4, x1, x2)

inst_27272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:81816*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81816*0 + 3*392*FLEN/8, x4, x1, x2)

inst_27273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:81819*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81819*0 + 3*393*FLEN/8, x4, x1, x2)

inst_27274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:81822*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81822*0 + 3*394*FLEN/8, x4, x1, x2)

inst_27275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:81825*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81825*0 + 3*395*FLEN/8, x4, x1, x2)

inst_27276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:81828*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81828*0 + 3*396*FLEN/8, x4, x1, x2)

inst_27277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:81831*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81831*0 + 3*397*FLEN/8, x4, x1, x2)

inst_27278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:81834*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81834*0 + 3*398*FLEN/8, x4, x1, x2)

inst_27279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:81837*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81837*0 + 3*399*FLEN/8, x4, x1, x2)

inst_27280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:81840*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81840*0 + 3*400*FLEN/8, x4, x1, x2)

inst_27281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:81843*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81843*0 + 3*401*FLEN/8, x4, x1, x2)

inst_27282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:81846*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81846*0 + 3*402*FLEN/8, x4, x1, x2)

inst_27283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:81849*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81849*0 + 3*403*FLEN/8, x4, x1, x2)

inst_27284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:81852*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81852*0 + 3*404*FLEN/8, x4, x1, x2)

inst_27285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:81855*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81855*0 + 3*405*FLEN/8, x4, x1, x2)

inst_27286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:81858*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81858*0 + 3*406*FLEN/8, x4, x1, x2)

inst_27287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:81861*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81861*0 + 3*407*FLEN/8, x4, x1, x2)

inst_27288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:81864*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81864*0 + 3*408*FLEN/8, x4, x1, x2)

inst_27289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:81867*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81867*0 + 3*409*FLEN/8, x4, x1, x2)

inst_27290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:81870*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81870*0 + 3*410*FLEN/8, x4, x1, x2)

inst_27291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:81873*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81873*0 + 3*411*FLEN/8, x4, x1, x2)

inst_27292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:81876*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81876*0 + 3*412*FLEN/8, x4, x1, x2)

inst_27293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:81879*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81879*0 + 3*413*FLEN/8, x4, x1, x2)

inst_27294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:81882*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81882*0 + 3*414*FLEN/8, x4, x1, x2)

inst_27295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:81885*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81885*0 + 3*415*FLEN/8, x4, x1, x2)

inst_27296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:81888*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81888*0 + 3*416*FLEN/8, x4, x1, x2)

inst_27297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:81891*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81891*0 + 3*417*FLEN/8, x4, x1, x2)

inst_27298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:81894*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81894*0 + 3*418*FLEN/8, x4, x1, x2)

inst_27299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:81897*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81897*0 + 3*419*FLEN/8, x4, x1, x2)

inst_27300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:81900*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81900*0 + 3*420*FLEN/8, x4, x1, x2)

inst_27301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:81903*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81903*0 + 3*421*FLEN/8, x4, x1, x2)

inst_27302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:81906*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81906*0 + 3*422*FLEN/8, x4, x1, x2)

inst_27303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:81909*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81909*0 + 3*423*FLEN/8, x4, x1, x2)

inst_27304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:81912*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81912*0 + 3*424*FLEN/8, x4, x1, x2)

inst_27305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:81915*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81915*0 + 3*425*FLEN/8, x4, x1, x2)

inst_27306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:81918*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81918*0 + 3*426*FLEN/8, x4, x1, x2)

inst_27307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:81921*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81921*0 + 3*427*FLEN/8, x4, x1, x2)

inst_27308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:81924*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81924*0 + 3*428*FLEN/8, x4, x1, x2)

inst_27309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:81927*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81927*0 + 3*429*FLEN/8, x4, x1, x2)

inst_27310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:81930*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81930*0 + 3*430*FLEN/8, x4, x1, x2)

inst_27311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:81933*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81933*0 + 3*431*FLEN/8, x4, x1, x2)

inst_27312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:81936*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81936*0 + 3*432*FLEN/8, x4, x1, x2)

inst_27313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:81939*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81939*0 + 3*433*FLEN/8, x4, x1, x2)

inst_27314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:81942*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81942*0 + 3*434*FLEN/8, x4, x1, x2)

inst_27315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:81945*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81945*0 + 3*435*FLEN/8, x4, x1, x2)

inst_27316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:81948*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81948*0 + 3*436*FLEN/8, x4, x1, x2)

inst_27317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:81951*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81951*0 + 3*437*FLEN/8, x4, x1, x2)

inst_27318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:81954*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81954*0 + 3*438*FLEN/8, x4, x1, x2)

inst_27319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:81957*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81957*0 + 3*439*FLEN/8, x4, x1, x2)

inst_27320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:81960*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81960*0 + 3*440*FLEN/8, x4, x1, x2)

inst_27321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:81963*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81963*0 + 3*441*FLEN/8, x4, x1, x2)

inst_27322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:81966*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81966*0 + 3*442*FLEN/8, x4, x1, x2)

inst_27323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:81969*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81969*0 + 3*443*FLEN/8, x4, x1, x2)

inst_27324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:81972*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81972*0 + 3*444*FLEN/8, x4, x1, x2)

inst_27325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:81975*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81975*0 + 3*445*FLEN/8, x4, x1, x2)

inst_27326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:81978*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81978*0 + 3*446*FLEN/8, x4, x1, x2)

inst_27327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:81981*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81981*0 + 3*447*FLEN/8, x4, x1, x2)

inst_27328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:81984*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81984*0 + 3*448*FLEN/8, x4, x1, x2)

inst_27329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:81987*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81987*0 + 3*449*FLEN/8, x4, x1, x2)

inst_27330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:81990*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81990*0 + 3*450*FLEN/8, x4, x1, x2)

inst_27331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:81993*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81993*0 + 3*451*FLEN/8, x4, x1, x2)

inst_27332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:81996*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81996*0 + 3*452*FLEN/8, x4, x1, x2)

inst_27333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:81999*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 81999*0 + 3*453*FLEN/8, x4, x1, x2)

inst_27334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:82002*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82002*0 + 3*454*FLEN/8, x4, x1, x2)

inst_27335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:82005*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82005*0 + 3*455*FLEN/8, x4, x1, x2)

inst_27336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:82008*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82008*0 + 3*456*FLEN/8, x4, x1, x2)

inst_27337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:82011*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82011*0 + 3*457*FLEN/8, x4, x1, x2)

inst_27338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:82014*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82014*0 + 3*458*FLEN/8, x4, x1, x2)

inst_27339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:82017*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82017*0 + 3*459*FLEN/8, x4, x1, x2)

inst_27340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:82020*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82020*0 + 3*460*FLEN/8, x4, x1, x2)

inst_27341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:82023*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82023*0 + 3*461*FLEN/8, x4, x1, x2)

inst_27342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:82026*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82026*0 + 3*462*FLEN/8, x4, x1, x2)

inst_27343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:82029*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82029*0 + 3*463*FLEN/8, x4, x1, x2)

inst_27344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:82032*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82032*0 + 3*464*FLEN/8, x4, x1, x2)

inst_27345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:82035*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82035*0 + 3*465*FLEN/8, x4, x1, x2)

inst_27346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:82038*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82038*0 + 3*466*FLEN/8, x4, x1, x2)

inst_27347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:82041*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82041*0 + 3*467*FLEN/8, x4, x1, x2)

inst_27348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:82044*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82044*0 + 3*468*FLEN/8, x4, x1, x2)

inst_27349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:82047*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82047*0 + 3*469*FLEN/8, x4, x1, x2)

inst_27350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:82050*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82050*0 + 3*470*FLEN/8, x4, x1, x2)

inst_27351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:82053*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82053*0 + 3*471*FLEN/8, x4, x1, x2)

inst_27352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:82056*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82056*0 + 3*472*FLEN/8, x4, x1, x2)

inst_27353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:82059*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82059*0 + 3*473*FLEN/8, x4, x1, x2)

inst_27354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:82062*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82062*0 + 3*474*FLEN/8, x4, x1, x2)

inst_27355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:82065*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82065*0 + 3*475*FLEN/8, x4, x1, x2)

inst_27356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:82068*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82068*0 + 3*476*FLEN/8, x4, x1, x2)

inst_27357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:82071*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82071*0 + 3*477*FLEN/8, x4, x1, x2)

inst_27358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:82074*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82074*0 + 3*478*FLEN/8, x4, x1, x2)

inst_27359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:82077*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82077*0 + 3*479*FLEN/8, x4, x1, x2)

inst_27360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:82080*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82080*0 + 3*480*FLEN/8, x4, x1, x2)

inst_27361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:82083*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82083*0 + 3*481*FLEN/8, x4, x1, x2)

inst_27362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:82086*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82086*0 + 3*482*FLEN/8, x4, x1, x2)

inst_27363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:82089*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82089*0 + 3*483*FLEN/8, x4, x1, x2)

inst_27364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:82092*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82092*0 + 3*484*FLEN/8, x4, x1, x2)

inst_27365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:82095*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82095*0 + 3*485*FLEN/8, x4, x1, x2)

inst_27366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:82098*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82098*0 + 3*486*FLEN/8, x4, x1, x2)

inst_27367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:82101*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82101*0 + 3*487*FLEN/8, x4, x1, x2)

inst_27368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:82104*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82104*0 + 3*488*FLEN/8, x4, x1, x2)

inst_27369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:82107*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82107*0 + 3*489*FLEN/8, x4, x1, x2)

inst_27370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:82110*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82110*0 + 3*490*FLEN/8, x4, x1, x2)

inst_27371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:82113*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82113*0 + 3*491*FLEN/8, x4, x1, x2)

inst_27372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:82116*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82116*0 + 3*492*FLEN/8, x4, x1, x2)

inst_27373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:82119*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82119*0 + 3*493*FLEN/8, x4, x1, x2)

inst_27374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:82122*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82122*0 + 3*494*FLEN/8, x4, x1, x2)

inst_27375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:82125*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82125*0 + 3*495*FLEN/8, x4, x1, x2)

inst_27376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:82128*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82128*0 + 3*496*FLEN/8, x4, x1, x2)

inst_27377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:82131*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82131*0 + 3*497*FLEN/8, x4, x1, x2)

inst_27378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:82134*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82134*0 + 3*498*FLEN/8, x4, x1, x2)

inst_27379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:82137*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82137*0 + 3*499*FLEN/8, x4, x1, x2)

inst_27380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:82140*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82140*0 + 3*500*FLEN/8, x4, x1, x2)

inst_27381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:82143*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82143*0 + 3*501*FLEN/8, x4, x1, x2)

inst_27382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:82146*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82146*0 + 3*502*FLEN/8, x4, x1, x2)

inst_27383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13bdffd461269 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913bdffd461269; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:82149*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82149*0 + 3*503*FLEN/8, x4, x1, x2)

inst_27384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:82152*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82152*0 + 3*504*FLEN/8, x4, x1, x2)

inst_27385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:82155*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82155*0 + 3*505*FLEN/8, x4, x1, x2)

inst_27386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:82158*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82158*0 + 3*506*FLEN/8, x4, x1, x2)

inst_27387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:82161*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82161*0 + 3*507*FLEN/8, x4, x1, x2)

inst_27388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:82164*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82164*0 + 3*508*FLEN/8, x4, x1, x2)

inst_27389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:82167*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82167*0 + 3*509*FLEN/8, x4, x1, x2)

inst_27390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:82170*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82170*0 + 3*510*FLEN/8, x4, x1, x2)

inst_27391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:82173*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82173*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_27392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:82176*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82176*0 + 3*512*FLEN/8, x4, x1, x2)

inst_27393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:82179*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82179*0 + 3*513*FLEN/8, x4, x1, x2)

inst_27394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:82182*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82182*0 + 3*514*FLEN/8, x4, x1, x2)

inst_27395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:82185*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82185*0 + 3*515*FLEN/8, x4, x1, x2)

inst_27396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:82188*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82188*0 + 3*516*FLEN/8, x4, x1, x2)

inst_27397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:82191*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82191*0 + 3*517*FLEN/8, x4, x1, x2)

inst_27398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:82194*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82194*0 + 3*518*FLEN/8, x4, x1, x2)

inst_27399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:82197*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82197*0 + 3*519*FLEN/8, x4, x1, x2)

inst_27400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:82200*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82200*0 + 3*520*FLEN/8, x4, x1, x2)

inst_27401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:82203*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82203*0 + 3*521*FLEN/8, x4, x1, x2)

inst_27402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:82206*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82206*0 + 3*522*FLEN/8, x4, x1, x2)

inst_27403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:82209*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82209*0 + 3*523*FLEN/8, x4, x1, x2)

inst_27404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:82212*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82212*0 + 3*524*FLEN/8, x4, x1, x2)

inst_27405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:82215*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82215*0 + 3*525*FLEN/8, x4, x1, x2)

inst_27406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000000000; valaddr_reg:x3; val_offset:82218*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82218*0 + 3*526*FLEN/8, x4, x1, x2)

inst_27407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000000001; valaddr_reg:x3; val_offset:82221*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82221*0 + 3*527*FLEN/8, x4, x1, x2)

inst_27408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000000003; valaddr_reg:x3; val_offset:82224*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82224*0 + 3*528*FLEN/8, x4, x1, x2)

inst_27409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000000007; valaddr_reg:x3; val_offset:82227*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82227*0 + 3*529*FLEN/8, x4, x1, x2)

inst_27410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000000000f; valaddr_reg:x3; val_offset:82230*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82230*0 + 3*530*FLEN/8, x4, x1, x2)

inst_27411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000000001f; valaddr_reg:x3; val_offset:82233*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82233*0 + 3*531*FLEN/8, x4, x1, x2)

inst_27412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000000003f; valaddr_reg:x3; val_offset:82236*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82236*0 + 3*532*FLEN/8, x4, x1, x2)

inst_27413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000000007f; valaddr_reg:x3; val_offset:82239*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82239*0 + 3*533*FLEN/8, x4, x1, x2)

inst_27414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000000000ff; valaddr_reg:x3; val_offset:82242*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82242*0 + 3*534*FLEN/8, x4, x1, x2)

inst_27415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000000001ff; valaddr_reg:x3; val_offset:82245*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82245*0 + 3*535*FLEN/8, x4, x1, x2)

inst_27416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000000003ff; valaddr_reg:x3; val_offset:82248*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82248*0 + 3*536*FLEN/8, x4, x1, x2)

inst_27417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000000007ff; valaddr_reg:x3; val_offset:82251*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82251*0 + 3*537*FLEN/8, x4, x1, x2)

inst_27418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000000fff; valaddr_reg:x3; val_offset:82254*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82254*0 + 3*538*FLEN/8, x4, x1, x2)

inst_27419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000001fff; valaddr_reg:x3; val_offset:82257*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82257*0 + 3*539*FLEN/8, x4, x1, x2)

inst_27420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000003fff; valaddr_reg:x3; val_offset:82260*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82260*0 + 3*540*FLEN/8, x4, x1, x2)

inst_27421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000007fff; valaddr_reg:x3; val_offset:82263*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82263*0 + 3*541*FLEN/8, x4, x1, x2)

inst_27422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000000ffff; valaddr_reg:x3; val_offset:82266*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82266*0 + 3*542*FLEN/8, x4, x1, x2)

inst_27423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000001ffff; valaddr_reg:x3; val_offset:82269*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82269*0 + 3*543*FLEN/8, x4, x1, x2)

inst_27424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000003ffff; valaddr_reg:x3; val_offset:82272*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82272*0 + 3*544*FLEN/8, x4, x1, x2)

inst_27425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000007ffff; valaddr_reg:x3; val_offset:82275*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82275*0 + 3*545*FLEN/8, x4, x1, x2)

inst_27426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000000fffff; valaddr_reg:x3; val_offset:82278*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82278*0 + 3*546*FLEN/8, x4, x1, x2)

inst_27427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000001fffff; valaddr_reg:x3; val_offset:82281*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82281*0 + 3*547*FLEN/8, x4, x1, x2)

inst_27428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000003fffff; valaddr_reg:x3; val_offset:82284*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82284*0 + 3*548*FLEN/8, x4, x1, x2)

inst_27429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000007fffff; valaddr_reg:x3; val_offset:82287*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82287*0 + 3*549*FLEN/8, x4, x1, x2)

inst_27430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000000ffffff; valaddr_reg:x3; val_offset:82290*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82290*0 + 3*550*FLEN/8, x4, x1, x2)

inst_27431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000001ffffff; valaddr_reg:x3; val_offset:82293*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82293*0 + 3*551*FLEN/8, x4, x1, x2)

inst_27432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000003ffffff; valaddr_reg:x3; val_offset:82296*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82296*0 + 3*552*FLEN/8, x4, x1, x2)

inst_27433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000007ffffff; valaddr_reg:x3; val_offset:82299*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82299*0 + 3*553*FLEN/8, x4, x1, x2)

inst_27434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000000fffffff; valaddr_reg:x3; val_offset:82302*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82302*0 + 3*554*FLEN/8, x4, x1, x2)

inst_27435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000001fffffff; valaddr_reg:x3; val_offset:82305*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82305*0 + 3*555*FLEN/8, x4, x1, x2)

inst_27436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000003fffffff; valaddr_reg:x3; val_offset:82308*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82308*0 + 3*556*FLEN/8, x4, x1, x2)

inst_27437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000007fffffff; valaddr_reg:x3; val_offset:82311*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82311*0 + 3*557*FLEN/8, x4, x1, x2)

inst_27438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00000ffffffff; valaddr_reg:x3; val_offset:82314*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82314*0 + 3*558*FLEN/8, x4, x1, x2)

inst_27439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00001ffffffff; valaddr_reg:x3; val_offset:82317*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82317*0 + 3*559*FLEN/8, x4, x1, x2)

inst_27440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00003ffffffff; valaddr_reg:x3; val_offset:82320*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82320*0 + 3*560*FLEN/8, x4, x1, x2)

inst_27441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00007ffffffff; valaddr_reg:x3; val_offset:82323*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82323*0 + 3*561*FLEN/8, x4, x1, x2)

inst_27442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0000fffffffff; valaddr_reg:x3; val_offset:82326*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82326*0 + 3*562*FLEN/8, x4, x1, x2)

inst_27443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0001fffffffff; valaddr_reg:x3; val_offset:82329*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82329*0 + 3*563*FLEN/8, x4, x1, x2)

inst_27444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0003fffffffff; valaddr_reg:x3; val_offset:82332*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82332*0 + 3*564*FLEN/8, x4, x1, x2)

inst_27445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0007fffffffff; valaddr_reg:x3; val_offset:82335*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82335*0 + 3*565*FLEN/8, x4, x1, x2)

inst_27446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d000ffffffffff; valaddr_reg:x3; val_offset:82338*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82338*0 + 3*566*FLEN/8, x4, x1, x2)

inst_27447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d001ffffffffff; valaddr_reg:x3; val_offset:82341*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82341*0 + 3*567*FLEN/8, x4, x1, x2)

inst_27448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d003ffffffffff; valaddr_reg:x3; val_offset:82344*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82344*0 + 3*568*FLEN/8, x4, x1, x2)

inst_27449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d007ffffffffff; valaddr_reg:x3; val_offset:82347*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82347*0 + 3*569*FLEN/8, x4, x1, x2)

inst_27450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d00fffffffffff; valaddr_reg:x3; val_offset:82350*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82350*0 + 3*570*FLEN/8, x4, x1, x2)

inst_27451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d01fffffffffff; valaddr_reg:x3; val_offset:82353*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82353*0 + 3*571*FLEN/8, x4, x1, x2)

inst_27452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d03fffffffffff; valaddr_reg:x3; val_offset:82356*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82356*0 + 3*572*FLEN/8, x4, x1, x2)

inst_27453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d07fffffffffff; valaddr_reg:x3; val_offset:82359*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82359*0 + 3*573*FLEN/8, x4, x1, x2)

inst_27454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d0ffffffffffff; valaddr_reg:x3; val_offset:82362*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82362*0 + 3*574*FLEN/8, x4, x1, x2)

inst_27455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d1ffffffffffff; valaddr_reg:x3; val_offset:82365*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82365*0 + 3*575*FLEN/8, x4, x1, x2)

inst_27456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d3ffffffffffff; valaddr_reg:x3; val_offset:82368*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82368*0 + 3*576*FLEN/8, x4, x1, x2)

inst_27457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d7ffffffffffff; valaddr_reg:x3; val_offset:82371*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82371*0 + 3*577*FLEN/8, x4, x1, x2)

inst_27458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3d8000000000000; valaddr_reg:x3; val_offset:82374*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82374*0 + 3*578*FLEN/8, x4, x1, x2)

inst_27459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dc000000000000; valaddr_reg:x3; val_offset:82377*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82377*0 + 3*579*FLEN/8, x4, x1, x2)

inst_27460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3de000000000000; valaddr_reg:x3; val_offset:82380*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82380*0 + 3*580*FLEN/8, x4, x1, x2)

inst_27461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3df000000000000; valaddr_reg:x3; val_offset:82383*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82383*0 + 3*581*FLEN/8, x4, x1, x2)

inst_27462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3df800000000000; valaddr_reg:x3; val_offset:82386*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82386*0 + 3*582*FLEN/8, x4, x1, x2)

inst_27463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfc00000000000; valaddr_reg:x3; val_offset:82389*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82389*0 + 3*583*FLEN/8, x4, x1, x2)

inst_27464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfe00000000000; valaddr_reg:x3; val_offset:82392*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82392*0 + 3*584*FLEN/8, x4, x1, x2)

inst_27465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dff00000000000; valaddr_reg:x3; val_offset:82395*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82395*0 + 3*585*FLEN/8, x4, x1, x2)

inst_27466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dff80000000000; valaddr_reg:x3; val_offset:82398*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82398*0 + 3*586*FLEN/8, x4, x1, x2)

inst_27467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffc0000000000; valaddr_reg:x3; val_offset:82401*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82401*0 + 3*587*FLEN/8, x4, x1, x2)

inst_27468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffe0000000000; valaddr_reg:x3; val_offset:82404*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82404*0 + 3*588*FLEN/8, x4, x1, x2)

inst_27469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfff0000000000; valaddr_reg:x3; val_offset:82407*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82407*0 + 3*589*FLEN/8, x4, x1, x2)

inst_27470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfff8000000000; valaddr_reg:x3; val_offset:82410*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82410*0 + 3*590*FLEN/8, x4, x1, x2)

inst_27471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffc000000000; valaddr_reg:x3; val_offset:82413*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82413*0 + 3*591*FLEN/8, x4, x1, x2)

inst_27472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffe000000000; valaddr_reg:x3; val_offset:82416*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82416*0 + 3*592*FLEN/8, x4, x1, x2)

inst_27473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffff000000000; valaddr_reg:x3; val_offset:82419*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82419*0 + 3*593*FLEN/8, x4, x1, x2)

inst_27474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffff800000000; valaddr_reg:x3; val_offset:82422*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82422*0 + 3*594*FLEN/8, x4, x1, x2)

inst_27475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffc00000000; valaddr_reg:x3; val_offset:82425*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82425*0 + 3*595*FLEN/8, x4, x1, x2)

inst_27476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffe00000000; valaddr_reg:x3; val_offset:82428*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82428*0 + 3*596*FLEN/8, x4, x1, x2)

inst_27477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffff00000000; valaddr_reg:x3; val_offset:82431*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82431*0 + 3*597*FLEN/8, x4, x1, x2)

inst_27478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffff80000000; valaddr_reg:x3; val_offset:82434*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82434*0 + 3*598*FLEN/8, x4, x1, x2)

inst_27479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffc0000000; valaddr_reg:x3; val_offset:82437*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82437*0 + 3*599*FLEN/8, x4, x1, x2)

inst_27480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffe0000000; valaddr_reg:x3; val_offset:82440*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82440*0 + 3*600*FLEN/8, x4, x1, x2)

inst_27481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffff0000000; valaddr_reg:x3; val_offset:82443*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82443*0 + 3*601*FLEN/8, x4, x1, x2)

inst_27482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffff8000000; valaddr_reg:x3; val_offset:82446*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82446*0 + 3*602*FLEN/8, x4, x1, x2)

inst_27483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffc000000; valaddr_reg:x3; val_offset:82449*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82449*0 + 3*603*FLEN/8, x4, x1, x2)

inst_27484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffe000000; valaddr_reg:x3; val_offset:82452*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82452*0 + 3*604*FLEN/8, x4, x1, x2)

inst_27485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffff000000; valaddr_reg:x3; val_offset:82455*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82455*0 + 3*605*FLEN/8, x4, x1, x2)

inst_27486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffff800000; valaddr_reg:x3; val_offset:82458*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82458*0 + 3*606*FLEN/8, x4, x1, x2)

inst_27487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffc00000; valaddr_reg:x3; val_offset:82461*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82461*0 + 3*607*FLEN/8, x4, x1, x2)

inst_27488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffe00000; valaddr_reg:x3; val_offset:82464*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82464*0 + 3*608*FLEN/8, x4, x1, x2)

inst_27489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffff00000; valaddr_reg:x3; val_offset:82467*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82467*0 + 3*609*FLEN/8, x4, x1, x2)

inst_27490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffff80000; valaddr_reg:x3; val_offset:82470*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82470*0 + 3*610*FLEN/8, x4, x1, x2)

inst_27491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffc0000; valaddr_reg:x3; val_offset:82473*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82473*0 + 3*611*FLEN/8, x4, x1, x2)

inst_27492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffe0000; valaddr_reg:x3; val_offset:82476*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82476*0 + 3*612*FLEN/8, x4, x1, x2)

inst_27493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffff0000; valaddr_reg:x3; val_offset:82479*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82479*0 + 3*613*FLEN/8, x4, x1, x2)

inst_27494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffff8000; valaddr_reg:x3; val_offset:82482*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82482*0 + 3*614*FLEN/8, x4, x1, x2)

inst_27495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffffc000; valaddr_reg:x3; val_offset:82485*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82485*0 + 3*615*FLEN/8, x4, x1, x2)

inst_27496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffffe000; valaddr_reg:x3; val_offset:82488*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82488*0 + 3*616*FLEN/8, x4, x1, x2)

inst_27497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffff000; valaddr_reg:x3; val_offset:82491*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82491*0 + 3*617*FLEN/8, x4, x1, x2)

inst_27498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffff800; valaddr_reg:x3; val_offset:82494*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82494*0 + 3*618*FLEN/8, x4, x1, x2)

inst_27499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffffc00; valaddr_reg:x3; val_offset:82497*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82497*0 + 3*619*FLEN/8, x4, x1, x2)

inst_27500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffffe00; valaddr_reg:x3; val_offset:82500*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82500*0 + 3*620*FLEN/8, x4, x1, x2)

inst_27501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffffff00; valaddr_reg:x3; val_offset:82503*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82503*0 + 3*621*FLEN/8, x4, x1, x2)

inst_27502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffffff80; valaddr_reg:x3; val_offset:82506*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82506*0 + 3*622*FLEN/8, x4, x1, x2)

inst_27503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffffffc0; valaddr_reg:x3; val_offset:82509*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82509*0 + 3*623*FLEN/8, x4, x1, x2)

inst_27504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffffffe0; valaddr_reg:x3; val_offset:82512*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82512*0 + 3*624*FLEN/8, x4, x1, x2)

inst_27505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffffff0; valaddr_reg:x3; val_offset:82515*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82515*0 + 3*625*FLEN/8, x4, x1, x2)

inst_27506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffffff8; valaddr_reg:x3; val_offset:82518*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82518*0 + 3*626*FLEN/8, x4, x1, x2)

inst_27507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffffffc; valaddr_reg:x3; val_offset:82521*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82521*0 + 3*627*FLEN/8, x4, x1, x2)

inst_27508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dffffffffffffe; valaddr_reg:x3; val_offset:82524*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82524*0 + 3*628*FLEN/8, x4, x1, x2)

inst_27509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14781f8b9175b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914781f8b9175b; op2val:0x0;
op3val:0x3dfffffffffffff; valaddr_reg:x3; val_offset:82527*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82527*0 + 3*629*FLEN/8, x4, x1, x2)

inst_27510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:82530*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82530*0 + 3*630*FLEN/8, x4, x1, x2)

inst_27511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:82533*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82533*0 + 3*631*FLEN/8, x4, x1, x2)

inst_27512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:82536*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82536*0 + 3*632*FLEN/8, x4, x1, x2)

inst_27513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:82539*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82539*0 + 3*633*FLEN/8, x4, x1, x2)

inst_27514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:82542*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82542*0 + 3*634*FLEN/8, x4, x1, x2)

inst_27515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:82545*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82545*0 + 3*635*FLEN/8, x4, x1, x2)

inst_27516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:82548*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82548*0 + 3*636*FLEN/8, x4, x1, x2)

inst_27517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:82551*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82551*0 + 3*637*FLEN/8, x4, x1, x2)

inst_27518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:82554*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82554*0 + 3*638*FLEN/8, x4, x1, x2)

inst_27519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:82557*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82557*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_27520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:82560*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82560*0 + 3*640*FLEN/8, x4, x1, x2)

inst_27521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:82563*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82563*0 + 3*641*FLEN/8, x4, x1, x2)

inst_27522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:82566*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82566*0 + 3*642*FLEN/8, x4, x1, x2)

inst_27523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:82569*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82569*0 + 3*643*FLEN/8, x4, x1, x2)

inst_27524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:82572*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82572*0 + 3*644*FLEN/8, x4, x1, x2)

inst_27525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:82575*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82575*0 + 3*645*FLEN/8, x4, x1, x2)

inst_27526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:82578*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82578*0 + 3*646*FLEN/8, x4, x1, x2)

inst_27527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:82581*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82581*0 + 3*647*FLEN/8, x4, x1, x2)

inst_27528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:82584*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82584*0 + 3*648*FLEN/8, x4, x1, x2)

inst_27529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:82587*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82587*0 + 3*649*FLEN/8, x4, x1, x2)

inst_27530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:82590*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82590*0 + 3*650*FLEN/8, x4, x1, x2)

inst_27531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:82593*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82593*0 + 3*651*FLEN/8, x4, x1, x2)

inst_27532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000000000; valaddr_reg:x3; val_offset:82596*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82596*0 + 3*652*FLEN/8, x4, x1, x2)

inst_27533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000000001; valaddr_reg:x3; val_offset:82599*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82599*0 + 3*653*FLEN/8, x4, x1, x2)

inst_27534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000000003; valaddr_reg:x3; val_offset:82602*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82602*0 + 3*654*FLEN/8, x4, x1, x2)

inst_27535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000000007; valaddr_reg:x3; val_offset:82605*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82605*0 + 3*655*FLEN/8, x4, x1, x2)

inst_27536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000000000f; valaddr_reg:x3; val_offset:82608*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82608*0 + 3*656*FLEN/8, x4, x1, x2)

inst_27537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000000001f; valaddr_reg:x3; val_offset:82611*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82611*0 + 3*657*FLEN/8, x4, x1, x2)

inst_27538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000000003f; valaddr_reg:x3; val_offset:82614*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82614*0 + 3*658*FLEN/8, x4, x1, x2)

inst_27539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000000007f; valaddr_reg:x3; val_offset:82617*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82617*0 + 3*659*FLEN/8, x4, x1, x2)

inst_27540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000000000ff; valaddr_reg:x3; val_offset:82620*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82620*0 + 3*660*FLEN/8, x4, x1, x2)

inst_27541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000000001ff; valaddr_reg:x3; val_offset:82623*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82623*0 + 3*661*FLEN/8, x4, x1, x2)

inst_27542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000000003ff; valaddr_reg:x3; val_offset:82626*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82626*0 + 3*662*FLEN/8, x4, x1, x2)

inst_27543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000000007ff; valaddr_reg:x3; val_offset:82629*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82629*0 + 3*663*FLEN/8, x4, x1, x2)

inst_27544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000000fff; valaddr_reg:x3; val_offset:82632*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82632*0 + 3*664*FLEN/8, x4, x1, x2)

inst_27545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000001fff; valaddr_reg:x3; val_offset:82635*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82635*0 + 3*665*FLEN/8, x4, x1, x2)

inst_27546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000003fff; valaddr_reg:x3; val_offset:82638*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82638*0 + 3*666*FLEN/8, x4, x1, x2)

inst_27547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000007fff; valaddr_reg:x3; val_offset:82641*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82641*0 + 3*667*FLEN/8, x4, x1, x2)

inst_27548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000000ffff; valaddr_reg:x3; val_offset:82644*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82644*0 + 3*668*FLEN/8, x4, x1, x2)

inst_27549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000001ffff; valaddr_reg:x3; val_offset:82647*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82647*0 + 3*669*FLEN/8, x4, x1, x2)

inst_27550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000003ffff; valaddr_reg:x3; val_offset:82650*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82650*0 + 3*670*FLEN/8, x4, x1, x2)

inst_27551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000007ffff; valaddr_reg:x3; val_offset:82653*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82653*0 + 3*671*FLEN/8, x4, x1, x2)

inst_27552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000000fffff; valaddr_reg:x3; val_offset:82656*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82656*0 + 3*672*FLEN/8, x4, x1, x2)

inst_27553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000001fffff; valaddr_reg:x3; val_offset:82659*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82659*0 + 3*673*FLEN/8, x4, x1, x2)

inst_27554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000003fffff; valaddr_reg:x3; val_offset:82662*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82662*0 + 3*674*FLEN/8, x4, x1, x2)

inst_27555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000007fffff; valaddr_reg:x3; val_offset:82665*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82665*0 + 3*675*FLEN/8, x4, x1, x2)

inst_27556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000000ffffff; valaddr_reg:x3; val_offset:82668*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82668*0 + 3*676*FLEN/8, x4, x1, x2)

inst_27557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000001ffffff; valaddr_reg:x3; val_offset:82671*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82671*0 + 3*677*FLEN/8, x4, x1, x2)

inst_27558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000003ffffff; valaddr_reg:x3; val_offset:82674*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82674*0 + 3*678*FLEN/8, x4, x1, x2)

inst_27559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000007ffffff; valaddr_reg:x3; val_offset:82677*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82677*0 + 3*679*FLEN/8, x4, x1, x2)

inst_27560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000000fffffff; valaddr_reg:x3; val_offset:82680*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82680*0 + 3*680*FLEN/8, x4, x1, x2)

inst_27561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000001fffffff; valaddr_reg:x3; val_offset:82683*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82683*0 + 3*681*FLEN/8, x4, x1, x2)

inst_27562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000003fffffff; valaddr_reg:x3; val_offset:82686*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82686*0 + 3*682*FLEN/8, x4, x1, x2)

inst_27563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000007fffffff; valaddr_reg:x3; val_offset:82689*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82689*0 + 3*683*FLEN/8, x4, x1, x2)

inst_27564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700000ffffffff; valaddr_reg:x3; val_offset:82692*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82692*0 + 3*684*FLEN/8, x4, x1, x2)

inst_27565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700001ffffffff; valaddr_reg:x3; val_offset:82695*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82695*0 + 3*685*FLEN/8, x4, x1, x2)

inst_27566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700003ffffffff; valaddr_reg:x3; val_offset:82698*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82698*0 + 3*686*FLEN/8, x4, x1, x2)

inst_27567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700007ffffffff; valaddr_reg:x3; val_offset:82701*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82701*0 + 3*687*FLEN/8, x4, x1, x2)

inst_27568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70000fffffffff; valaddr_reg:x3; val_offset:82704*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82704*0 + 3*688*FLEN/8, x4, x1, x2)

inst_27569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70001fffffffff; valaddr_reg:x3; val_offset:82707*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82707*0 + 3*689*FLEN/8, x4, x1, x2)

inst_27570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70003fffffffff; valaddr_reg:x3; val_offset:82710*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82710*0 + 3*690*FLEN/8, x4, x1, x2)

inst_27571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70007fffffffff; valaddr_reg:x3; val_offset:82713*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82713*0 + 3*691*FLEN/8, x4, x1, x2)

inst_27572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7000ffffffffff; valaddr_reg:x3; val_offset:82716*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82716*0 + 3*692*FLEN/8, x4, x1, x2)

inst_27573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7001ffffffffff; valaddr_reg:x3; val_offset:82719*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82719*0 + 3*693*FLEN/8, x4, x1, x2)

inst_27574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7003ffffffffff; valaddr_reg:x3; val_offset:82722*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82722*0 + 3*694*FLEN/8, x4, x1, x2)

inst_27575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7007ffffffffff; valaddr_reg:x3; val_offset:82725*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82725*0 + 3*695*FLEN/8, x4, x1, x2)

inst_27576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x700fffffffffff; valaddr_reg:x3; val_offset:82728*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82728*0 + 3*696*FLEN/8, x4, x1, x2)

inst_27577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x701fffffffffff; valaddr_reg:x3; val_offset:82731*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82731*0 + 3*697*FLEN/8, x4, x1, x2)

inst_27578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x703fffffffffff; valaddr_reg:x3; val_offset:82734*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82734*0 + 3*698*FLEN/8, x4, x1, x2)

inst_27579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x707fffffffffff; valaddr_reg:x3; val_offset:82737*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82737*0 + 3*699*FLEN/8, x4, x1, x2)

inst_27580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x70ffffffffffff; valaddr_reg:x3; val_offset:82740*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82740*0 + 3*700*FLEN/8, x4, x1, x2)

inst_27581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x71ffffffffffff; valaddr_reg:x3; val_offset:82743*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82743*0 + 3*701*FLEN/8, x4, x1, x2)

inst_27582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x73ffffffffffff; valaddr_reg:x3; val_offset:82746*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82746*0 + 3*702*FLEN/8, x4, x1, x2)

inst_27583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x77ffffffffffff; valaddr_reg:x3; val_offset:82749*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82749*0 + 3*703*FLEN/8, x4, x1, x2)

inst_27584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x78000000000000; valaddr_reg:x3; val_offset:82752*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82752*0 + 3*704*FLEN/8, x4, x1, x2)

inst_27585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7c000000000000; valaddr_reg:x3; val_offset:82755*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82755*0 + 3*705*FLEN/8, x4, x1, x2)

inst_27586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7e000000000000; valaddr_reg:x3; val_offset:82758*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82758*0 + 3*706*FLEN/8, x4, x1, x2)

inst_27587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7f000000000000; valaddr_reg:x3; val_offset:82761*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82761*0 + 3*707*FLEN/8, x4, x1, x2)

inst_27588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7f800000000000; valaddr_reg:x3; val_offset:82764*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82764*0 + 3*708*FLEN/8, x4, x1, x2)

inst_27589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fc00000000000; valaddr_reg:x3; val_offset:82767*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82767*0 + 3*709*FLEN/8, x4, x1, x2)

inst_27590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fe00000000000; valaddr_reg:x3; val_offset:82770*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82770*0 + 3*710*FLEN/8, x4, x1, x2)

inst_27591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ff00000000000; valaddr_reg:x3; val_offset:82773*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82773*0 + 3*711*FLEN/8, x4, x1, x2)

inst_27592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ff80000000000; valaddr_reg:x3; val_offset:82776*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82776*0 + 3*712*FLEN/8, x4, x1, x2)

inst_27593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffc0000000000; valaddr_reg:x3; val_offset:82779*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82779*0 + 3*713*FLEN/8, x4, x1, x2)

inst_27594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffe0000000000; valaddr_reg:x3; val_offset:82782*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82782*0 + 3*714*FLEN/8, x4, x1, x2)

inst_27595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fff0000000000; valaddr_reg:x3; val_offset:82785*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82785*0 + 3*715*FLEN/8, x4, x1, x2)

inst_27596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fff8000000000; valaddr_reg:x3; val_offset:82788*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82788*0 + 3*716*FLEN/8, x4, x1, x2)

inst_27597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffc000000000; valaddr_reg:x3; val_offset:82791*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82791*0 + 3*717*FLEN/8, x4, x1, x2)

inst_27598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffe000000000; valaddr_reg:x3; val_offset:82794*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82794*0 + 3*718*FLEN/8, x4, x1, x2)

inst_27599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffff000000000; valaddr_reg:x3; val_offset:82797*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82797*0 + 3*719*FLEN/8, x4, x1, x2)

inst_27600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffff800000000; valaddr_reg:x3; val_offset:82800*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82800*0 + 3*720*FLEN/8, x4, x1, x2)

inst_27601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffc00000000; valaddr_reg:x3; val_offset:82803*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82803*0 + 3*721*FLEN/8, x4, x1, x2)

inst_27602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffe00000000; valaddr_reg:x3; val_offset:82806*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82806*0 + 3*722*FLEN/8, x4, x1, x2)

inst_27603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffff00000000; valaddr_reg:x3; val_offset:82809*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82809*0 + 3*723*FLEN/8, x4, x1, x2)

inst_27604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffff80000000; valaddr_reg:x3; val_offset:82812*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82812*0 + 3*724*FLEN/8, x4, x1, x2)

inst_27605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffc0000000; valaddr_reg:x3; val_offset:82815*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82815*0 + 3*725*FLEN/8, x4, x1, x2)

inst_27606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffe0000000; valaddr_reg:x3; val_offset:82818*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82818*0 + 3*726*FLEN/8, x4, x1, x2)

inst_27607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffff0000000; valaddr_reg:x3; val_offset:82821*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82821*0 + 3*727*FLEN/8, x4, x1, x2)

inst_27608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffff8000000; valaddr_reg:x3; val_offset:82824*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82824*0 + 3*728*FLEN/8, x4, x1, x2)

inst_27609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffc000000; valaddr_reg:x3; val_offset:82827*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82827*0 + 3*729*FLEN/8, x4, x1, x2)

inst_27610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffe000000; valaddr_reg:x3; val_offset:82830*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82830*0 + 3*730*FLEN/8, x4, x1, x2)

inst_27611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffff000000; valaddr_reg:x3; val_offset:82833*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82833*0 + 3*731*FLEN/8, x4, x1, x2)

inst_27612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffff800000; valaddr_reg:x3; val_offset:82836*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82836*0 + 3*732*FLEN/8, x4, x1, x2)

inst_27613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffc00000; valaddr_reg:x3; val_offset:82839*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82839*0 + 3*733*FLEN/8, x4, x1, x2)

inst_27614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffe00000; valaddr_reg:x3; val_offset:82842*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82842*0 + 3*734*FLEN/8, x4, x1, x2)

inst_27615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffff00000; valaddr_reg:x3; val_offset:82845*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82845*0 + 3*735*FLEN/8, x4, x1, x2)

inst_27616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffff80000; valaddr_reg:x3; val_offset:82848*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82848*0 + 3*736*FLEN/8, x4, x1, x2)

inst_27617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffc0000; valaddr_reg:x3; val_offset:82851*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82851*0 + 3*737*FLEN/8, x4, x1, x2)

inst_27618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffe0000; valaddr_reg:x3; val_offset:82854*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82854*0 + 3*738*FLEN/8, x4, x1, x2)

inst_27619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffff0000; valaddr_reg:x3; val_offset:82857*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82857*0 + 3*739*FLEN/8, x4, x1, x2)

inst_27620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffff8000; valaddr_reg:x3; val_offset:82860*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82860*0 + 3*740*FLEN/8, x4, x1, x2)

inst_27621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffffc000; valaddr_reg:x3; val_offset:82863*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82863*0 + 3*741*FLEN/8, x4, x1, x2)

inst_27622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffffe000; valaddr_reg:x3; val_offset:82866*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82866*0 + 3*742*FLEN/8, x4, x1, x2)

inst_27623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffff000; valaddr_reg:x3; val_offset:82869*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82869*0 + 3*743*FLEN/8, x4, x1, x2)

inst_27624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffff800; valaddr_reg:x3; val_offset:82872*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82872*0 + 3*744*FLEN/8, x4, x1, x2)

inst_27625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffffc00; valaddr_reg:x3; val_offset:82875*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82875*0 + 3*745*FLEN/8, x4, x1, x2)

inst_27626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffffe00; valaddr_reg:x3; val_offset:82878*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82878*0 + 3*746*FLEN/8, x4, x1, x2)

inst_27627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffffff00; valaddr_reg:x3; val_offset:82881*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82881*0 + 3*747*FLEN/8, x4, x1, x2)

inst_27628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffffff80; valaddr_reg:x3; val_offset:82884*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82884*0 + 3*748*FLEN/8, x4, x1, x2)

inst_27629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffffffc0; valaddr_reg:x3; val_offset:82887*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82887*0 + 3*749*FLEN/8, x4, x1, x2)

inst_27630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffffffe0; valaddr_reg:x3; val_offset:82890*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82890*0 + 3*750*FLEN/8, x4, x1, x2)

inst_27631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffffff0; valaddr_reg:x3; val_offset:82893*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82893*0 + 3*751*FLEN/8, x4, x1, x2)

inst_27632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffffff8; valaddr_reg:x3; val_offset:82896*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82896*0 + 3*752*FLEN/8, x4, x1, x2)

inst_27633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffffffc; valaddr_reg:x3; val_offset:82899*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82899*0 + 3*753*FLEN/8, x4, x1, x2)

inst_27634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7ffffffffffffe; valaddr_reg:x3; val_offset:82902*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82902*0 + 3*754*FLEN/8, x4, x1, x2)

inst_27635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14beb26c5282f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914beb26c5282f; op2val:0x0;
op3val:0x7fffffffffffff; valaddr_reg:x3; val_offset:82905*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82905*0 + 3*755*FLEN/8, x4, x1, x2)

inst_27636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:82908*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82908*0 + 3*756*FLEN/8, x4, x1, x2)

inst_27637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:82911*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82911*0 + 3*757*FLEN/8, x4, x1, x2)

inst_27638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:82914*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82914*0 + 3*758*FLEN/8, x4, x1, x2)

inst_27639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:82917*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82917*0 + 3*759*FLEN/8, x4, x1, x2)

inst_27640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:82920*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82920*0 + 3*760*FLEN/8, x4, x1, x2)

inst_27641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:82923*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82923*0 + 3*761*FLEN/8, x4, x1, x2)

inst_27642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:82926*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82926*0 + 3*762*FLEN/8, x4, x1, x2)

inst_27643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:82929*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82929*0 + 3*763*FLEN/8, x4, x1, x2)

inst_27644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:82932*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82932*0 + 3*764*FLEN/8, x4, x1, x2)

inst_27645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:82935*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82935*0 + 3*765*FLEN/8, x4, x1, x2)

inst_27646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:82938*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82938*0 + 3*766*FLEN/8, x4, x1, x2)

inst_27647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1551f64150e29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91551f64150e29; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:82941*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 82941*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708352,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708353,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708355,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708359,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708367,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708383,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708415,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708479,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708607,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708863,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212709375,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212710399,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212712447,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212716543,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212724735,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212741119,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212773887,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212839423,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212970495,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213232639,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186213756927,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186214805503,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186216902655,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186221096959,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186229485567,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186246262783,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186279817215,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186346926079,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186481143807,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186749579263,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633187286450175,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633188360191999,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633190507675647,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633194802642943,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633203392577535,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633220572446719,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633254932185087,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633323651661823,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633461090615295,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633735968522239,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166634285724336127,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166635385235963903,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166637584259219455,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166641982305730559,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166650778398752767,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166668370584797183,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166703554956886015,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166773923701063679,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166914661189419007,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167196136166129663,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(167759086119550975,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393599,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(168884986026393600,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170010885933236224,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170573835886657536,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170855310863368192,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(170996048351723520,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171066417095901184,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171101601467990016,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171119193654034432,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171127989747056640,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171132387793567744,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171134586816823296,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171135686328451072,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136236084264960,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136510962171904,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136648401125376,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136717120602112,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136751480340480,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136768660209664,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136777250144256,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136781545111552,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136783692595200,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136784766337024,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785303207936,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785571643392,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785705861120,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785772969984,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785806524416,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785823301632,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785831690240,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785835884544,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785837981696,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839030272,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839554560,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839816704,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785839947776,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840013312,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840046080,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840062464,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840070656,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840074752,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840076800,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840077824,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078336,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078592,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078720,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078784,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078816,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078832,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078840,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078844,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078846,64,FLEN)
NAN_BOXED(6886311786617912929,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078847,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039424,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039425,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039427,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039431,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039439,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039455,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039487,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039551,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039679,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039935,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920040447,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920041471,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920043519,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920047615,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920055807,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920072191,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920104959,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920170495,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920301567,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920563711,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392921087999,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392922136575,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392924233727,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392928428031,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392936816639,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392953593855,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392987148287,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393054257151,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393188474879,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393456910335,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568393993781247,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568395067523071,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568397215006719,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568401509974015,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568410099908607,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568427279777791,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568461639516159,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568530358992895,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568667797946367,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568942675853311,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85569492431667199,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85570591943294975,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85572790966550527,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85577189013061631,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85585985106083839,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85603577292128255,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85638761664217087,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85709130408394751,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85849867896750079,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86131342873460735,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(86694292826882047,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724671,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(87820192733724672,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(88946092640567296,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89509042593988608,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89790517570699264,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(89931255059054592,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90001623803232256,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90036808175321088,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90054400361365504,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90063196454387712,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90067594500898816,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90069793524154368,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90070893035782144,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071442791596032,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071717669502976,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071855108456448,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071923827933184,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071958187671552,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071975367540736,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071983957475328,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071988252442624,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071990399926272,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071991473668096,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992010539008,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992278974464,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992413192192,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992480301056,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992513855488,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992530632704,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992539021312,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992543215616,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992545312768,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546361344,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992546885632,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547147776,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547278848,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547344384,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547377152,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547393536,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547401728,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547405824,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547407872,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547408896,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409408,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409664,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409792,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409856,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409888,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409904,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409912,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409916,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409918,64,FLEN)
NAN_BOXED(6886327606086580971,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409919,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086080,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086081,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086083,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086087,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086095,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086111,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086143,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086207,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086335,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823086591,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823087103,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823088127,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823090175,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823094271,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823102463,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823118847,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823151615,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823217151,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823348223,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634823610367,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634824134655,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634825183231,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634827280383,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634831474687,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634839863295,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634856640511,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634890194943,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527634957303807,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527635091521535,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527635359956991,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527635896827903,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527636970569727,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527639118053375,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527643413020671,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527652002955263,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527669182824447,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527703542562815,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527772262039551,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413527909700993023,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413528184578899967,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413528734334713855,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413529833846341631,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413532032869597183,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413536430916108287,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413545227009130495,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413562819195174911,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413598003567263743,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413668372311441407,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4413809109799796735,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4414090584776507391,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4414653534729928703,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4415779434636771327,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4415779434636771328,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4416905334543613952,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4417468284497035264,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4417749759473745920,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4417890496962101248,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4417960865706278912,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4417996050078367744,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418013642264412160,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418022438357434368,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418026836403945472,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418029035427201024,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418030134938828800,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418030684694642688,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418030959572549632,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031097011503104,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031165730979840,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031200090718208,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031217270587392,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031225860521984,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031230155489280,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031232302972928,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031233376714752,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031233913585664,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234182021120,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234316238848,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234383347712,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234416902144,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234433679360,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234442067968,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234446262272,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234448359424,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234449408000,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234449932288,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450194432,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450325504,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450391040,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450423808,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450440192,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450448384,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450452480,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450454528,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450455552,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456064,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456320,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456448,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456512,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456544,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456560,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456568,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456572,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456574,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4418031234450456575,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6886328268557036415,64,FLEN)
NAN_BOXED(2327755734458877372,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308938230751559680,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939330263187456,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939880019001344,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940154896908288,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940292335861760,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940361055338496,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940395415076864,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940412594946048,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940421184880640,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940425479847936,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940427627331584,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940428701073408,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429237944320,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429506379776,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429640597504,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429707706368,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429741260800,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429758038016,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429766426624,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429770620928,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429772718080,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429773766656,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774290944,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774553088,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774684160,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774749696,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774782464,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774798848,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774807040,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774811136,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774813184,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814208,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814720,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814976,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815104,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815168,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815200,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815216,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815224,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815228,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815230,64,FLEN)
NAN_BOXED(6886351138439172713,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815231,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600256,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600257,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600259,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600263,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600271,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600287,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600319,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600383,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600511,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269600767,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269601279,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269602303,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269604351,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269608447,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269616639,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269633023,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269665791,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269731327,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577269862399,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270124543,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577270648831,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577271697407,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577273794559,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577277988863,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577286377471,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577303154687,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577336709119,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577403817983,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577538035711,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719577806471167,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719578343342079,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719579417083903,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719581564567551,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719585859534847,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719594449469439,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719611629338623,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719645989076991,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719714708553727,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274719852147507199,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720127025414143,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274720676781228031,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274721776292855807,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274723975316111359,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274728373362622463,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274737169455644671,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274754761641689087,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274789946013777919,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274860314757955583,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275001052246310911,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275282527223021567,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(275845477176442879,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285503,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(276971377083285504,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278097276990128128,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278660226943549440,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(278941701920260096,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279082439408615424,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279152808152793088,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279187992524881920,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279205584710926336,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279214380803948544,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279218778850459648,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279220977873715200,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222077385342976,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222627141156864,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279222902019063808,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223039458017280,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223108177494016,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223142537232384,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223159717101568,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223168307036160,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223172602003456,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223174749487104,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223175823228928,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176360099840,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176628535296,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176762753024,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176829861888,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176863416320,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176880193536,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176888582144,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176892776448,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176894873600,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176895922176,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896446464,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896708608,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896839680,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896905216,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896937984,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896954368,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896962560,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896966656,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896968704,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896969728,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970240,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970496,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970624,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970688,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970720,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970736,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970744,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970748,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970750,64,FLEN)
NAN_BOXED(6886363928775432027,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970751,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593472,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593473,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593475,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593479,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593487,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593503,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593535,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593599,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593727,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593983,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391594495,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391595519,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391597567,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391601663,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391609855,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391626239,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391659007,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391724543,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391855615,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197392117759,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197392642047,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197393690623,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197395787775,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197399982079,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197408370687,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197425147903,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197458702335,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197525811199,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197660028927,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197928464383,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525198465335295,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525199539077119,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525201686560767,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525205981528063,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525214571462655,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525231751331839,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525266111070207,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525334830546943,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525472269500415,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525747147407359,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31526296903221247,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31527396414849023,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31529595438104575,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31533993484615679,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31542789577637887,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31560381763682303,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31595566135771135,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31665934879948799,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31806672368304127,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32088147345014783,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32651097298436095,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278719,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278720,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34902897112121344,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35465847065542656,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35747322042253312,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35888059530608640,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35958428274786304,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35993612646875136,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36011204832919552,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36020000925941760,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36024398972452864,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36026597995708416,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36027697507336192,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028247263150080,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028522141057024,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028659580010496,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028728299487232,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028762659225600,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028779839094784,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028788429029376,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028792723996672,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028794871480320,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028795945222144,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796482093056,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796750528512,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796884746240,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796951855104,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796985409536,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797002186752,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797010575360,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797014769664,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797016866816,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797017915392,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018439680,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018701824,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018832896,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018898432,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018931200,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018947584,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018955776,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018959872,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018961920,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018962944,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963456,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963712,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963840,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963904,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963936,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963952,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963960,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963964,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963966,64,FLEN)
NAN_BOXED(6886368778566051887,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963967,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886378898537647657,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
