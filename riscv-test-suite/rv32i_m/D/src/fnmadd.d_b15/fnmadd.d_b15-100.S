
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_76032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffe0000000; valaddr_reg:x3; val_offset:228096*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228096*0 + 3*0*FLEN/8, x4, x1, x2)

inst_76033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffff0000000; valaddr_reg:x3; val_offset:228099*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228099*0 + 3*1*FLEN/8, x4, x1, x2)

inst_76034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffff8000000; valaddr_reg:x3; val_offset:228102*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228102*0 + 3*2*FLEN/8, x4, x1, x2)

inst_76035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffc000000; valaddr_reg:x3; val_offset:228105*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228105*0 + 3*3*FLEN/8, x4, x1, x2)

inst_76036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffe000000; valaddr_reg:x3; val_offset:228108*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228108*0 + 3*4*FLEN/8, x4, x1, x2)

inst_76037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffff000000; valaddr_reg:x3; val_offset:228111*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228111*0 + 3*5*FLEN/8, x4, x1, x2)

inst_76038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffff800000; valaddr_reg:x3; val_offset:228114*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228114*0 + 3*6*FLEN/8, x4, x1, x2)

inst_76039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffc00000; valaddr_reg:x3; val_offset:228117*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228117*0 + 3*7*FLEN/8, x4, x1, x2)

inst_76040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffe00000; valaddr_reg:x3; val_offset:228120*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228120*0 + 3*8*FLEN/8, x4, x1, x2)

inst_76041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffff00000; valaddr_reg:x3; val_offset:228123*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228123*0 + 3*9*FLEN/8, x4, x1, x2)

inst_76042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffff80000; valaddr_reg:x3; val_offset:228126*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228126*0 + 3*10*FLEN/8, x4, x1, x2)

inst_76043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffc0000; valaddr_reg:x3; val_offset:228129*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228129*0 + 3*11*FLEN/8, x4, x1, x2)

inst_76044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffe0000; valaddr_reg:x3; val_offset:228132*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228132*0 + 3*12*FLEN/8, x4, x1, x2)

inst_76045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffff0000; valaddr_reg:x3; val_offset:228135*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228135*0 + 3*13*FLEN/8, x4, x1, x2)

inst_76046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffff8000; valaddr_reg:x3; val_offset:228138*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228138*0 + 3*14*FLEN/8, x4, x1, x2)

inst_76047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffffc000; valaddr_reg:x3; val_offset:228141*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228141*0 + 3*15*FLEN/8, x4, x1, x2)

inst_76048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffffe000; valaddr_reg:x3; val_offset:228144*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228144*0 + 3*16*FLEN/8, x4, x1, x2)

inst_76049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffff000; valaddr_reg:x3; val_offset:228147*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228147*0 + 3*17*FLEN/8, x4, x1, x2)

inst_76050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffff800; valaddr_reg:x3; val_offset:228150*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228150*0 + 3*18*FLEN/8, x4, x1, x2)

inst_76051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffffc00; valaddr_reg:x3; val_offset:228153*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228153*0 + 3*19*FLEN/8, x4, x1, x2)

inst_76052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffffe00; valaddr_reg:x3; val_offset:228156*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228156*0 + 3*20*FLEN/8, x4, x1, x2)

inst_76053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffffff00; valaddr_reg:x3; val_offset:228159*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228159*0 + 3*21*FLEN/8, x4, x1, x2)

inst_76054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffffff80; valaddr_reg:x3; val_offset:228162*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228162*0 + 3*22*FLEN/8, x4, x1, x2)

inst_76055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffffffc0; valaddr_reg:x3; val_offset:228165*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228165*0 + 3*23*FLEN/8, x4, x1, x2)

inst_76056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffffffe0; valaddr_reg:x3; val_offset:228168*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228168*0 + 3*24*FLEN/8, x4, x1, x2)

inst_76057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffffff0; valaddr_reg:x3; val_offset:228171*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228171*0 + 3*25*FLEN/8, x4, x1, x2)

inst_76058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffffff8; valaddr_reg:x3; val_offset:228174*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228174*0 + 3*26*FLEN/8, x4, x1, x2)

inst_76059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffffffc; valaddr_reg:x3; val_offset:228177*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228177*0 + 3*27*FLEN/8, x4, x1, x2)

inst_76060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28ffffffffffffe; valaddr_reg:x3; val_offset:228180*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228180*0 + 3*28*FLEN/8, x4, x1, x2)

inst_76061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c7db8154ae0a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x028 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7c7db8154ae0a; op2val:0x0;
op3val:0x28fffffffffffff; valaddr_reg:x3; val_offset:228183*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228183*0 + 3*29*FLEN/8, x4, x1, x2)

inst_76062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:228186*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228186*0 + 3*30*FLEN/8, x4, x1, x2)

inst_76063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:228189*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228189*0 + 3*31*FLEN/8, x4, x1, x2)

inst_76064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:228192*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228192*0 + 3*32*FLEN/8, x4, x1, x2)

inst_76065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:228195*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228195*0 + 3*33*FLEN/8, x4, x1, x2)

inst_76066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:228198*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228198*0 + 3*34*FLEN/8, x4, x1, x2)

inst_76067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:228201*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228201*0 + 3*35*FLEN/8, x4, x1, x2)

inst_76068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:228204*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228204*0 + 3*36*FLEN/8, x4, x1, x2)

inst_76069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:228207*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228207*0 + 3*37*FLEN/8, x4, x1, x2)

inst_76070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:228210*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228210*0 + 3*38*FLEN/8, x4, x1, x2)

inst_76071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:228213*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228213*0 + 3*39*FLEN/8, x4, x1, x2)

inst_76072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:228216*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228216*0 + 3*40*FLEN/8, x4, x1, x2)

inst_76073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:228219*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228219*0 + 3*41*FLEN/8, x4, x1, x2)

inst_76074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:228222*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228222*0 + 3*42*FLEN/8, x4, x1, x2)

inst_76075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:228225*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228225*0 + 3*43*FLEN/8, x4, x1, x2)

inst_76076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:228228*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228228*0 + 3*44*FLEN/8, x4, x1, x2)

inst_76077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:228231*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228231*0 + 3*45*FLEN/8, x4, x1, x2)

inst_76078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:228234*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228234*0 + 3*46*FLEN/8, x4, x1, x2)

inst_76079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:228237*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228237*0 + 3*47*FLEN/8, x4, x1, x2)

inst_76080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:228240*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228240*0 + 3*48*FLEN/8, x4, x1, x2)

inst_76081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:228243*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228243*0 + 3*49*FLEN/8, x4, x1, x2)

inst_76082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:228246*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228246*0 + 3*50*FLEN/8, x4, x1, x2)

inst_76083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:228249*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228249*0 + 3*51*FLEN/8, x4, x1, x2)

inst_76084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:228252*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228252*0 + 3*52*FLEN/8, x4, x1, x2)

inst_76085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:228255*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228255*0 + 3*53*FLEN/8, x4, x1, x2)

inst_76086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:228258*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228258*0 + 3*54*FLEN/8, x4, x1, x2)

inst_76087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:228261*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228261*0 + 3*55*FLEN/8, x4, x1, x2)

inst_76088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:228264*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228264*0 + 3*56*FLEN/8, x4, x1, x2)

inst_76089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:228267*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228267*0 + 3*57*FLEN/8, x4, x1, x2)

inst_76090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:228270*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228270*0 + 3*58*FLEN/8, x4, x1, x2)

inst_76091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:228273*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228273*0 + 3*59*FLEN/8, x4, x1, x2)

inst_76092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:228276*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228276*0 + 3*60*FLEN/8, x4, x1, x2)

inst_76093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:228279*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228279*0 + 3*61*FLEN/8, x4, x1, x2)

inst_76094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:228282*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228282*0 + 3*62*FLEN/8, x4, x1, x2)

inst_76095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:228285*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228285*0 + 3*63*FLEN/8, x4, x1, x2)

inst_76096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:228288*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228288*0 + 3*64*FLEN/8, x4, x1, x2)

inst_76097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:228291*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228291*0 + 3*65*FLEN/8, x4, x1, x2)

inst_76098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:228294*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228294*0 + 3*66*FLEN/8, x4, x1, x2)

inst_76099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:228297*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228297*0 + 3*67*FLEN/8, x4, x1, x2)

inst_76100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:228300*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228300*0 + 3*68*FLEN/8, x4, x1, x2)

inst_76101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:228303*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228303*0 + 3*69*FLEN/8, x4, x1, x2)

inst_76102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:228306*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228306*0 + 3*70*FLEN/8, x4, x1, x2)

inst_76103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:228309*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228309*0 + 3*71*FLEN/8, x4, x1, x2)

inst_76104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:228312*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228312*0 + 3*72*FLEN/8, x4, x1, x2)

inst_76105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:228315*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228315*0 + 3*73*FLEN/8, x4, x1, x2)

inst_76106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:228318*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228318*0 + 3*74*FLEN/8, x4, x1, x2)

inst_76107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:228321*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228321*0 + 3*75*FLEN/8, x4, x1, x2)

inst_76108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:228324*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228324*0 + 3*76*FLEN/8, x4, x1, x2)

inst_76109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:228327*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228327*0 + 3*77*FLEN/8, x4, x1, x2)

inst_76110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:228330*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228330*0 + 3*78*FLEN/8, x4, x1, x2)

inst_76111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:228333*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228333*0 + 3*79*FLEN/8, x4, x1, x2)

inst_76112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:228336*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228336*0 + 3*80*FLEN/8, x4, x1, x2)

inst_76113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:228339*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228339*0 + 3*81*FLEN/8, x4, x1, x2)

inst_76114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:228342*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228342*0 + 3*82*FLEN/8, x4, x1, x2)

inst_76115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:228345*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228345*0 + 3*83*FLEN/8, x4, x1, x2)

inst_76116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:228348*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228348*0 + 3*84*FLEN/8, x4, x1, x2)

inst_76117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:228351*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228351*0 + 3*85*FLEN/8, x4, x1, x2)

inst_76118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:228354*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228354*0 + 3*86*FLEN/8, x4, x1, x2)

inst_76119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:228357*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228357*0 + 3*87*FLEN/8, x4, x1, x2)

inst_76120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:228360*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228360*0 + 3*88*FLEN/8, x4, x1, x2)

inst_76121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:228363*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228363*0 + 3*89*FLEN/8, x4, x1, x2)

inst_76122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:228366*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228366*0 + 3*90*FLEN/8, x4, x1, x2)

inst_76123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:228369*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228369*0 + 3*91*FLEN/8, x4, x1, x2)

inst_76124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:228372*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228372*0 + 3*92*FLEN/8, x4, x1, x2)

inst_76125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:228375*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228375*0 + 3*93*FLEN/8, x4, x1, x2)

inst_76126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:228378*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228378*0 + 3*94*FLEN/8, x4, x1, x2)

inst_76127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:228381*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228381*0 + 3*95*FLEN/8, x4, x1, x2)

inst_76128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:228384*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228384*0 + 3*96*FLEN/8, x4, x1, x2)

inst_76129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:228387*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228387*0 + 3*97*FLEN/8, x4, x1, x2)

inst_76130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:228390*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228390*0 + 3*98*FLEN/8, x4, x1, x2)

inst_76131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:228393*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228393*0 + 3*99*FLEN/8, x4, x1, x2)

inst_76132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:228396*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228396*0 + 3*100*FLEN/8, x4, x1, x2)

inst_76133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:228399*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228399*0 + 3*101*FLEN/8, x4, x1, x2)

inst_76134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:228402*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228402*0 + 3*102*FLEN/8, x4, x1, x2)

inst_76135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:228405*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228405*0 + 3*103*FLEN/8, x4, x1, x2)

inst_76136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:228408*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228408*0 + 3*104*FLEN/8, x4, x1, x2)

inst_76137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:228411*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228411*0 + 3*105*FLEN/8, x4, x1, x2)

inst_76138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:228414*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228414*0 + 3*106*FLEN/8, x4, x1, x2)

inst_76139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:228417*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228417*0 + 3*107*FLEN/8, x4, x1, x2)

inst_76140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:228420*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228420*0 + 3*108*FLEN/8, x4, x1, x2)

inst_76141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:228423*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228423*0 + 3*109*FLEN/8, x4, x1, x2)

inst_76142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:228426*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228426*0 + 3*110*FLEN/8, x4, x1, x2)

inst_76143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:228429*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228429*0 + 3*111*FLEN/8, x4, x1, x2)

inst_76144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:228432*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228432*0 + 3*112*FLEN/8, x4, x1, x2)

inst_76145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:228435*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228435*0 + 3*113*FLEN/8, x4, x1, x2)

inst_76146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:228438*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228438*0 + 3*114*FLEN/8, x4, x1, x2)

inst_76147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:228441*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228441*0 + 3*115*FLEN/8, x4, x1, x2)

inst_76148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:228444*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228444*0 + 3*116*FLEN/8, x4, x1, x2)

inst_76149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:228447*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228447*0 + 3*117*FLEN/8, x4, x1, x2)

inst_76150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:228450*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228450*0 + 3*118*FLEN/8, x4, x1, x2)

inst_76151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:228453*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228453*0 + 3*119*FLEN/8, x4, x1, x2)

inst_76152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:228456*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228456*0 + 3*120*FLEN/8, x4, x1, x2)

inst_76153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:228459*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228459*0 + 3*121*FLEN/8, x4, x1, x2)

inst_76154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:228462*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228462*0 + 3*122*FLEN/8, x4, x1, x2)

inst_76155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:228465*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228465*0 + 3*123*FLEN/8, x4, x1, x2)

inst_76156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:228468*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228468*0 + 3*124*FLEN/8, x4, x1, x2)

inst_76157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:228471*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228471*0 + 3*125*FLEN/8, x4, x1, x2)

inst_76158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:228474*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228474*0 + 3*126*FLEN/8, x4, x1, x2)

inst_76159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:228477*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228477*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_76160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:228480*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228480*0 + 3*128*FLEN/8, x4, x1, x2)

inst_76161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:228483*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228483*0 + 3*129*FLEN/8, x4, x1, x2)

inst_76162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:228486*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228486*0 + 3*130*FLEN/8, x4, x1, x2)

inst_76163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:228489*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228489*0 + 3*131*FLEN/8, x4, x1, x2)

inst_76164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffff800000; valaddr_reg:x3; val_offset:228492*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228492*0 + 3*132*FLEN/8, x4, x1, x2)

inst_76165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffc00000; valaddr_reg:x3; val_offset:228495*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228495*0 + 3*133*FLEN/8, x4, x1, x2)

inst_76166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffe00000; valaddr_reg:x3; val_offset:228498*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228498*0 + 3*134*FLEN/8, x4, x1, x2)

inst_76167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffff00000; valaddr_reg:x3; val_offset:228501*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228501*0 + 3*135*FLEN/8, x4, x1, x2)

inst_76168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffff80000; valaddr_reg:x3; val_offset:228504*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228504*0 + 3*136*FLEN/8, x4, x1, x2)

inst_76169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffc0000; valaddr_reg:x3; val_offset:228507*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228507*0 + 3*137*FLEN/8, x4, x1, x2)

inst_76170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffe0000; valaddr_reg:x3; val_offset:228510*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228510*0 + 3*138*FLEN/8, x4, x1, x2)

inst_76171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffff0000; valaddr_reg:x3; val_offset:228513*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228513*0 + 3*139*FLEN/8, x4, x1, x2)

inst_76172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffff8000; valaddr_reg:x3; val_offset:228516*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228516*0 + 3*140*FLEN/8, x4, x1, x2)

inst_76173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffffc000; valaddr_reg:x3; val_offset:228519*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228519*0 + 3*141*FLEN/8, x4, x1, x2)

inst_76174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffffe000; valaddr_reg:x3; val_offset:228522*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228522*0 + 3*142*FLEN/8, x4, x1, x2)

inst_76175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffff000; valaddr_reg:x3; val_offset:228525*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228525*0 + 3*143*FLEN/8, x4, x1, x2)

inst_76176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffff800; valaddr_reg:x3; val_offset:228528*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228528*0 + 3*144*FLEN/8, x4, x1, x2)

inst_76177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffffc00; valaddr_reg:x3; val_offset:228531*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228531*0 + 3*145*FLEN/8, x4, x1, x2)

inst_76178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffffe00; valaddr_reg:x3; val_offset:228534*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228534*0 + 3*146*FLEN/8, x4, x1, x2)

inst_76179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffffff00; valaddr_reg:x3; val_offset:228537*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228537*0 + 3*147*FLEN/8, x4, x1, x2)

inst_76180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffffff80; valaddr_reg:x3; val_offset:228540*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228540*0 + 3*148*FLEN/8, x4, x1, x2)

inst_76181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffffffc0; valaddr_reg:x3; val_offset:228543*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228543*0 + 3*149*FLEN/8, x4, x1, x2)

inst_76182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffffffe0; valaddr_reg:x3; val_offset:228546*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228546*0 + 3*150*FLEN/8, x4, x1, x2)

inst_76183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffffff0; valaddr_reg:x3; val_offset:228549*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228549*0 + 3*151*FLEN/8, x4, x1, x2)

inst_76184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffffff8; valaddr_reg:x3; val_offset:228552*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228552*0 + 3*152*FLEN/8, x4, x1, x2)

inst_76185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffffffc; valaddr_reg:x3; val_offset:228555*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228555*0 + 3*153*FLEN/8, x4, x1, x2)

inst_76186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37ffffffffffffe; valaddr_reg:x3; val_offset:228558*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228558*0 + 3*154*FLEN/8, x4, x1, x2)

inst_76187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cca43b308abc and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cca43b308abc; op2val:0x0;
op3val:0x37fffffffffffff; valaddr_reg:x3; val_offset:228561*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228561*0 + 3*155*FLEN/8, x4, x1, x2)

inst_76188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000000000; valaddr_reg:x3; val_offset:228564*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228564*0 + 3*156*FLEN/8, x4, x1, x2)

inst_76189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000000001; valaddr_reg:x3; val_offset:228567*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228567*0 + 3*157*FLEN/8, x4, x1, x2)

inst_76190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000000003; valaddr_reg:x3; val_offset:228570*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228570*0 + 3*158*FLEN/8, x4, x1, x2)

inst_76191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000000007; valaddr_reg:x3; val_offset:228573*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228573*0 + 3*159*FLEN/8, x4, x1, x2)

inst_76192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000000000f; valaddr_reg:x3; val_offset:228576*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228576*0 + 3*160*FLEN/8, x4, x1, x2)

inst_76193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000000001f; valaddr_reg:x3; val_offset:228579*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228579*0 + 3*161*FLEN/8, x4, x1, x2)

inst_76194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000000003f; valaddr_reg:x3; val_offset:228582*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228582*0 + 3*162*FLEN/8, x4, x1, x2)

inst_76195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000000007f; valaddr_reg:x3; val_offset:228585*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228585*0 + 3*163*FLEN/8, x4, x1, x2)

inst_76196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000000000ff; valaddr_reg:x3; val_offset:228588*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228588*0 + 3*164*FLEN/8, x4, x1, x2)

inst_76197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000000001ff; valaddr_reg:x3; val_offset:228591*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228591*0 + 3*165*FLEN/8, x4, x1, x2)

inst_76198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000000003ff; valaddr_reg:x3; val_offset:228594*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228594*0 + 3*166*FLEN/8, x4, x1, x2)

inst_76199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000000007ff; valaddr_reg:x3; val_offset:228597*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228597*0 + 3*167*FLEN/8, x4, x1, x2)

inst_76200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000000fff; valaddr_reg:x3; val_offset:228600*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228600*0 + 3*168*FLEN/8, x4, x1, x2)

inst_76201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000001fff; valaddr_reg:x3; val_offset:228603*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228603*0 + 3*169*FLEN/8, x4, x1, x2)

inst_76202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000003fff; valaddr_reg:x3; val_offset:228606*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228606*0 + 3*170*FLEN/8, x4, x1, x2)

inst_76203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000007fff; valaddr_reg:x3; val_offset:228609*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228609*0 + 3*171*FLEN/8, x4, x1, x2)

inst_76204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000000ffff; valaddr_reg:x3; val_offset:228612*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228612*0 + 3*172*FLEN/8, x4, x1, x2)

inst_76205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000001ffff; valaddr_reg:x3; val_offset:228615*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228615*0 + 3*173*FLEN/8, x4, x1, x2)

inst_76206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000003ffff; valaddr_reg:x3; val_offset:228618*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228618*0 + 3*174*FLEN/8, x4, x1, x2)

inst_76207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000007ffff; valaddr_reg:x3; val_offset:228621*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228621*0 + 3*175*FLEN/8, x4, x1, x2)

inst_76208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000000fffff; valaddr_reg:x3; val_offset:228624*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228624*0 + 3*176*FLEN/8, x4, x1, x2)

inst_76209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000001fffff; valaddr_reg:x3; val_offset:228627*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228627*0 + 3*177*FLEN/8, x4, x1, x2)

inst_76210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000003fffff; valaddr_reg:x3; val_offset:228630*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228630*0 + 3*178*FLEN/8, x4, x1, x2)

inst_76211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000007fffff; valaddr_reg:x3; val_offset:228633*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228633*0 + 3*179*FLEN/8, x4, x1, x2)

inst_76212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000000ffffff; valaddr_reg:x3; val_offset:228636*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228636*0 + 3*180*FLEN/8, x4, x1, x2)

inst_76213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000001ffffff; valaddr_reg:x3; val_offset:228639*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228639*0 + 3*181*FLEN/8, x4, x1, x2)

inst_76214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000003ffffff; valaddr_reg:x3; val_offset:228642*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228642*0 + 3*182*FLEN/8, x4, x1, x2)

inst_76215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000007ffffff; valaddr_reg:x3; val_offset:228645*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228645*0 + 3*183*FLEN/8, x4, x1, x2)

inst_76216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000000fffffff; valaddr_reg:x3; val_offset:228648*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228648*0 + 3*184*FLEN/8, x4, x1, x2)

inst_76217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000001fffffff; valaddr_reg:x3; val_offset:228651*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228651*0 + 3*185*FLEN/8, x4, x1, x2)

inst_76218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000003fffffff; valaddr_reg:x3; val_offset:228654*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228654*0 + 3*186*FLEN/8, x4, x1, x2)

inst_76219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000007fffffff; valaddr_reg:x3; val_offset:228657*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228657*0 + 3*187*FLEN/8, x4, x1, x2)

inst_76220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700000ffffffff; valaddr_reg:x3; val_offset:228660*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228660*0 + 3*188*FLEN/8, x4, x1, x2)

inst_76221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700001ffffffff; valaddr_reg:x3; val_offset:228663*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228663*0 + 3*189*FLEN/8, x4, x1, x2)

inst_76222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700003ffffffff; valaddr_reg:x3; val_offset:228666*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228666*0 + 3*190*FLEN/8, x4, x1, x2)

inst_76223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700007ffffffff; valaddr_reg:x3; val_offset:228669*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228669*0 + 3*191*FLEN/8, x4, x1, x2)

inst_76224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770000fffffffff; valaddr_reg:x3; val_offset:228672*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228672*0 + 3*192*FLEN/8, x4, x1, x2)

inst_76225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770001fffffffff; valaddr_reg:x3; val_offset:228675*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228675*0 + 3*193*FLEN/8, x4, x1, x2)

inst_76226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770003fffffffff; valaddr_reg:x3; val_offset:228678*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228678*0 + 3*194*FLEN/8, x4, x1, x2)

inst_76227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770007fffffffff; valaddr_reg:x3; val_offset:228681*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228681*0 + 3*195*FLEN/8, x4, x1, x2)

inst_76228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77000ffffffffff; valaddr_reg:x3; val_offset:228684*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228684*0 + 3*196*FLEN/8, x4, x1, x2)

inst_76229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77001ffffffffff; valaddr_reg:x3; val_offset:228687*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228687*0 + 3*197*FLEN/8, x4, x1, x2)

inst_76230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77003ffffffffff; valaddr_reg:x3; val_offset:228690*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228690*0 + 3*198*FLEN/8, x4, x1, x2)

inst_76231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77007ffffffffff; valaddr_reg:x3; val_offset:228693*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228693*0 + 3*199*FLEN/8, x4, x1, x2)

inst_76232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7700fffffffffff; valaddr_reg:x3; val_offset:228696*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228696*0 + 3*200*FLEN/8, x4, x1, x2)

inst_76233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7701fffffffffff; valaddr_reg:x3; val_offset:228699*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228699*0 + 3*201*FLEN/8, x4, x1, x2)

inst_76234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7703fffffffffff; valaddr_reg:x3; val_offset:228702*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228702*0 + 3*202*FLEN/8, x4, x1, x2)

inst_76235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb7707fffffffffff; valaddr_reg:x3; val_offset:228705*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228705*0 + 3*203*FLEN/8, x4, x1, x2)

inst_76236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb770ffffffffffff; valaddr_reg:x3; val_offset:228708*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228708*0 + 3*204*FLEN/8, x4, x1, x2)

inst_76237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb771ffffffffffff; valaddr_reg:x3; val_offset:228711*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228711*0 + 3*205*FLEN/8, x4, x1, x2)

inst_76238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb773ffffffffffff; valaddr_reg:x3; val_offset:228714*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228714*0 + 3*206*FLEN/8, x4, x1, x2)

inst_76239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb777ffffffffffff; valaddr_reg:x3; val_offset:228717*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228717*0 + 3*207*FLEN/8, x4, x1, x2)

inst_76240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb778000000000000; valaddr_reg:x3; val_offset:228720*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228720*0 + 3*208*FLEN/8, x4, x1, x2)

inst_76241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77c000000000000; valaddr_reg:x3; val_offset:228723*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228723*0 + 3*209*FLEN/8, x4, x1, x2)

inst_76242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77e000000000000; valaddr_reg:x3; val_offset:228726*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228726*0 + 3*210*FLEN/8, x4, x1, x2)

inst_76243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77f000000000000; valaddr_reg:x3; val_offset:228729*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228729*0 + 3*211*FLEN/8, x4, x1, x2)

inst_76244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77f800000000000; valaddr_reg:x3; val_offset:228732*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228732*0 + 3*212*FLEN/8, x4, x1, x2)

inst_76245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fc00000000000; valaddr_reg:x3; val_offset:228735*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228735*0 + 3*213*FLEN/8, x4, x1, x2)

inst_76246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fe00000000000; valaddr_reg:x3; val_offset:228738*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228738*0 + 3*214*FLEN/8, x4, x1, x2)

inst_76247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ff00000000000; valaddr_reg:x3; val_offset:228741*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228741*0 + 3*215*FLEN/8, x4, x1, x2)

inst_76248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ff80000000000; valaddr_reg:x3; val_offset:228744*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228744*0 + 3*216*FLEN/8, x4, x1, x2)

inst_76249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffc0000000000; valaddr_reg:x3; val_offset:228747*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228747*0 + 3*217*FLEN/8, x4, x1, x2)

inst_76250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffe0000000000; valaddr_reg:x3; val_offset:228750*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228750*0 + 3*218*FLEN/8, x4, x1, x2)

inst_76251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fff0000000000; valaddr_reg:x3; val_offset:228753*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228753*0 + 3*219*FLEN/8, x4, x1, x2)

inst_76252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fff8000000000; valaddr_reg:x3; val_offset:228756*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228756*0 + 3*220*FLEN/8, x4, x1, x2)

inst_76253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffc000000000; valaddr_reg:x3; val_offset:228759*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228759*0 + 3*221*FLEN/8, x4, x1, x2)

inst_76254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffe000000000; valaddr_reg:x3; val_offset:228762*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228762*0 + 3*222*FLEN/8, x4, x1, x2)

inst_76255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffff000000000; valaddr_reg:x3; val_offset:228765*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228765*0 + 3*223*FLEN/8, x4, x1, x2)

inst_76256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffff800000000; valaddr_reg:x3; val_offset:228768*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228768*0 + 3*224*FLEN/8, x4, x1, x2)

inst_76257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffc00000000; valaddr_reg:x3; val_offset:228771*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228771*0 + 3*225*FLEN/8, x4, x1, x2)

inst_76258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffe00000000; valaddr_reg:x3; val_offset:228774*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228774*0 + 3*226*FLEN/8, x4, x1, x2)

inst_76259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffff00000000; valaddr_reg:x3; val_offset:228777*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228777*0 + 3*227*FLEN/8, x4, x1, x2)

inst_76260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffff80000000; valaddr_reg:x3; val_offset:228780*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228780*0 + 3*228*FLEN/8, x4, x1, x2)

inst_76261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffc0000000; valaddr_reg:x3; val_offset:228783*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228783*0 + 3*229*FLEN/8, x4, x1, x2)

inst_76262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffe0000000; valaddr_reg:x3; val_offset:228786*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228786*0 + 3*230*FLEN/8, x4, x1, x2)

inst_76263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffff0000000; valaddr_reg:x3; val_offset:228789*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228789*0 + 3*231*FLEN/8, x4, x1, x2)

inst_76264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffff8000000; valaddr_reg:x3; val_offset:228792*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228792*0 + 3*232*FLEN/8, x4, x1, x2)

inst_76265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffc000000; valaddr_reg:x3; val_offset:228795*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228795*0 + 3*233*FLEN/8, x4, x1, x2)

inst_76266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffe000000; valaddr_reg:x3; val_offset:228798*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228798*0 + 3*234*FLEN/8, x4, x1, x2)

inst_76267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffff000000; valaddr_reg:x3; val_offset:228801*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228801*0 + 3*235*FLEN/8, x4, x1, x2)

inst_76268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffff800000; valaddr_reg:x3; val_offset:228804*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228804*0 + 3*236*FLEN/8, x4, x1, x2)

inst_76269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffc00000; valaddr_reg:x3; val_offset:228807*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228807*0 + 3*237*FLEN/8, x4, x1, x2)

inst_76270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffe00000; valaddr_reg:x3; val_offset:228810*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228810*0 + 3*238*FLEN/8, x4, x1, x2)

inst_76271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffff00000; valaddr_reg:x3; val_offset:228813*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228813*0 + 3*239*FLEN/8, x4, x1, x2)

inst_76272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffff80000; valaddr_reg:x3; val_offset:228816*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228816*0 + 3*240*FLEN/8, x4, x1, x2)

inst_76273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffc0000; valaddr_reg:x3; val_offset:228819*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228819*0 + 3*241*FLEN/8, x4, x1, x2)

inst_76274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffe0000; valaddr_reg:x3; val_offset:228822*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228822*0 + 3*242*FLEN/8, x4, x1, x2)

inst_76275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffff0000; valaddr_reg:x3; val_offset:228825*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228825*0 + 3*243*FLEN/8, x4, x1, x2)

inst_76276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffff8000; valaddr_reg:x3; val_offset:228828*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228828*0 + 3*244*FLEN/8, x4, x1, x2)

inst_76277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffffc000; valaddr_reg:x3; val_offset:228831*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228831*0 + 3*245*FLEN/8, x4, x1, x2)

inst_76278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffffe000; valaddr_reg:x3; val_offset:228834*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228834*0 + 3*246*FLEN/8, x4, x1, x2)

inst_76279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffff000; valaddr_reg:x3; val_offset:228837*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228837*0 + 3*247*FLEN/8, x4, x1, x2)

inst_76280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffff800; valaddr_reg:x3; val_offset:228840*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228840*0 + 3*248*FLEN/8, x4, x1, x2)

inst_76281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffffc00; valaddr_reg:x3; val_offset:228843*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228843*0 + 3*249*FLEN/8, x4, x1, x2)

inst_76282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffffe00; valaddr_reg:x3; val_offset:228846*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228846*0 + 3*250*FLEN/8, x4, x1, x2)

inst_76283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffffff00; valaddr_reg:x3; val_offset:228849*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228849*0 + 3*251*FLEN/8, x4, x1, x2)

inst_76284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffffff80; valaddr_reg:x3; val_offset:228852*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228852*0 + 3*252*FLEN/8, x4, x1, x2)

inst_76285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffffffc0; valaddr_reg:x3; val_offset:228855*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228855*0 + 3*253*FLEN/8, x4, x1, x2)

inst_76286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffffffe0; valaddr_reg:x3; val_offset:228858*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228858*0 + 3*254*FLEN/8, x4, x1, x2)

inst_76287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffffff0; valaddr_reg:x3; val_offset:228861*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228861*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_76288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffffff8; valaddr_reg:x3; val_offset:228864*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228864*0 + 3*256*FLEN/8, x4, x1, x2)

inst_76289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffffffc; valaddr_reg:x3; val_offset:228867*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228867*0 + 3*257*FLEN/8, x4, x1, x2)

inst_76290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77ffffffffffffe; valaddr_reg:x3; val_offset:228870*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228870*0 + 3*258*FLEN/8, x4, x1, x2)

inst_76291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x377 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xb77fffffffffffff; valaddr_reg:x3; val_offset:228873*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228873*0 + 3*259*FLEN/8, x4, x1, x2)

inst_76292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:228876*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228876*0 + 3*260*FLEN/8, x4, x1, x2)

inst_76293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:228879*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228879*0 + 3*261*FLEN/8, x4, x1, x2)

inst_76294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:228882*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228882*0 + 3*262*FLEN/8, x4, x1, x2)

inst_76295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:228885*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228885*0 + 3*263*FLEN/8, x4, x1, x2)

inst_76296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:228888*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228888*0 + 3*264*FLEN/8, x4, x1, x2)

inst_76297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:228891*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228891*0 + 3*265*FLEN/8, x4, x1, x2)

inst_76298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:228894*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228894*0 + 3*266*FLEN/8, x4, x1, x2)

inst_76299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:228897*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228897*0 + 3*267*FLEN/8, x4, x1, x2)

inst_76300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:228900*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228900*0 + 3*268*FLEN/8, x4, x1, x2)

inst_76301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:228903*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228903*0 + 3*269*FLEN/8, x4, x1, x2)

inst_76302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:228906*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228906*0 + 3*270*FLEN/8, x4, x1, x2)

inst_76303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:228909*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228909*0 + 3*271*FLEN/8, x4, x1, x2)

inst_76304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:228912*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228912*0 + 3*272*FLEN/8, x4, x1, x2)

inst_76305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:228915*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228915*0 + 3*273*FLEN/8, x4, x1, x2)

inst_76306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:228918*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228918*0 + 3*274*FLEN/8, x4, x1, x2)

inst_76307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:228921*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228921*0 + 3*275*FLEN/8, x4, x1, x2)

inst_76308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:228924*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228924*0 + 3*276*FLEN/8, x4, x1, x2)

inst_76309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:228927*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228927*0 + 3*277*FLEN/8, x4, x1, x2)

inst_76310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:228930*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228930*0 + 3*278*FLEN/8, x4, x1, x2)

inst_76311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:228933*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228933*0 + 3*279*FLEN/8, x4, x1, x2)

inst_76312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:228936*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228936*0 + 3*280*FLEN/8, x4, x1, x2)

inst_76313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7cee68b614ca1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x58154306f35e5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7cee68b614ca1; op2val:0x9fc58154306f35e5;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:228939*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228939*0 + 3*281*FLEN/8, x4, x1, x2)

inst_76314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:228942*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228942*0 + 3*282*FLEN/8, x4, x1, x2)

inst_76315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:228945*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228945*0 + 3*283*FLEN/8, x4, x1, x2)

inst_76316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:228948*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228948*0 + 3*284*FLEN/8, x4, x1, x2)

inst_76317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:228951*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228951*0 + 3*285*FLEN/8, x4, x1, x2)

inst_76318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:228954*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228954*0 + 3*286*FLEN/8, x4, x1, x2)

inst_76319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:228957*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228957*0 + 3*287*FLEN/8, x4, x1, x2)

inst_76320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:228960*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228960*0 + 3*288*FLEN/8, x4, x1, x2)

inst_76321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:228963*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228963*0 + 3*289*FLEN/8, x4, x1, x2)

inst_76322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:228966*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228966*0 + 3*290*FLEN/8, x4, x1, x2)

inst_76323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:228969*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228969*0 + 3*291*FLEN/8, x4, x1, x2)

inst_76324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:228972*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228972*0 + 3*292*FLEN/8, x4, x1, x2)

inst_76325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:228975*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228975*0 + 3*293*FLEN/8, x4, x1, x2)

inst_76326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:228978*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228978*0 + 3*294*FLEN/8, x4, x1, x2)

inst_76327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:228981*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228981*0 + 3*295*FLEN/8, x4, x1, x2)

inst_76328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:228984*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228984*0 + 3*296*FLEN/8, x4, x1, x2)

inst_76329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:228987*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228987*0 + 3*297*FLEN/8, x4, x1, x2)

inst_76330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:228990*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228990*0 + 3*298*FLEN/8, x4, x1, x2)

inst_76331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:228993*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228993*0 + 3*299*FLEN/8, x4, x1, x2)

inst_76332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:228996*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228996*0 + 3*300*FLEN/8, x4, x1, x2)

inst_76333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:228999*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228999*0 + 3*301*FLEN/8, x4, x1, x2)

inst_76334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:229002*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229002*0 + 3*302*FLEN/8, x4, x1, x2)

inst_76335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:229005*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229005*0 + 3*303*FLEN/8, x4, x1, x2)

inst_76336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000000000; valaddr_reg:x3; val_offset:229008*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229008*0 + 3*304*FLEN/8, x4, x1, x2)

inst_76337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000000001; valaddr_reg:x3; val_offset:229011*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229011*0 + 3*305*FLEN/8, x4, x1, x2)

inst_76338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000000003; valaddr_reg:x3; val_offset:229014*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229014*0 + 3*306*FLEN/8, x4, x1, x2)

inst_76339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000000007; valaddr_reg:x3; val_offset:229017*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229017*0 + 3*307*FLEN/8, x4, x1, x2)

inst_76340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000000000f; valaddr_reg:x3; val_offset:229020*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229020*0 + 3*308*FLEN/8, x4, x1, x2)

inst_76341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000000001f; valaddr_reg:x3; val_offset:229023*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229023*0 + 3*309*FLEN/8, x4, x1, x2)

inst_76342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000000003f; valaddr_reg:x3; val_offset:229026*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229026*0 + 3*310*FLEN/8, x4, x1, x2)

inst_76343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000000007f; valaddr_reg:x3; val_offset:229029*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229029*0 + 3*311*FLEN/8, x4, x1, x2)

inst_76344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000000000ff; valaddr_reg:x3; val_offset:229032*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229032*0 + 3*312*FLEN/8, x4, x1, x2)

inst_76345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000000001ff; valaddr_reg:x3; val_offset:229035*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229035*0 + 3*313*FLEN/8, x4, x1, x2)

inst_76346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000000003ff; valaddr_reg:x3; val_offset:229038*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229038*0 + 3*314*FLEN/8, x4, x1, x2)

inst_76347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000000007ff; valaddr_reg:x3; val_offset:229041*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229041*0 + 3*315*FLEN/8, x4, x1, x2)

inst_76348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000000fff; valaddr_reg:x3; val_offset:229044*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229044*0 + 3*316*FLEN/8, x4, x1, x2)

inst_76349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000001fff; valaddr_reg:x3; val_offset:229047*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229047*0 + 3*317*FLEN/8, x4, x1, x2)

inst_76350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000003fff; valaddr_reg:x3; val_offset:229050*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229050*0 + 3*318*FLEN/8, x4, x1, x2)

inst_76351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000007fff; valaddr_reg:x3; val_offset:229053*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229053*0 + 3*319*FLEN/8, x4, x1, x2)

inst_76352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000000ffff; valaddr_reg:x3; val_offset:229056*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229056*0 + 3*320*FLEN/8, x4, x1, x2)

inst_76353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000001ffff; valaddr_reg:x3; val_offset:229059*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229059*0 + 3*321*FLEN/8, x4, x1, x2)

inst_76354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000003ffff; valaddr_reg:x3; val_offset:229062*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229062*0 + 3*322*FLEN/8, x4, x1, x2)

inst_76355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000007ffff; valaddr_reg:x3; val_offset:229065*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229065*0 + 3*323*FLEN/8, x4, x1, x2)

inst_76356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000000fffff; valaddr_reg:x3; val_offset:229068*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229068*0 + 3*324*FLEN/8, x4, x1, x2)

inst_76357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000001fffff; valaddr_reg:x3; val_offset:229071*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229071*0 + 3*325*FLEN/8, x4, x1, x2)

inst_76358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000003fffff; valaddr_reg:x3; val_offset:229074*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229074*0 + 3*326*FLEN/8, x4, x1, x2)

inst_76359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000007fffff; valaddr_reg:x3; val_offset:229077*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229077*0 + 3*327*FLEN/8, x4, x1, x2)

inst_76360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000000ffffff; valaddr_reg:x3; val_offset:229080*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229080*0 + 3*328*FLEN/8, x4, x1, x2)

inst_76361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000001ffffff; valaddr_reg:x3; val_offset:229083*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229083*0 + 3*329*FLEN/8, x4, x1, x2)

inst_76362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000003ffffff; valaddr_reg:x3; val_offset:229086*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229086*0 + 3*330*FLEN/8, x4, x1, x2)

inst_76363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000007ffffff; valaddr_reg:x3; val_offset:229089*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229089*0 + 3*331*FLEN/8, x4, x1, x2)

inst_76364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000000fffffff; valaddr_reg:x3; val_offset:229092*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229092*0 + 3*332*FLEN/8, x4, x1, x2)

inst_76365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000001fffffff; valaddr_reg:x3; val_offset:229095*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229095*0 + 3*333*FLEN/8, x4, x1, x2)

inst_76366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000003fffffff; valaddr_reg:x3; val_offset:229098*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229098*0 + 3*334*FLEN/8, x4, x1, x2)

inst_76367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000007fffffff; valaddr_reg:x3; val_offset:229101*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229101*0 + 3*335*FLEN/8, x4, x1, x2)

inst_76368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100000ffffffff; valaddr_reg:x3; val_offset:229104*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229104*0 + 3*336*FLEN/8, x4, x1, x2)

inst_76369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100001ffffffff; valaddr_reg:x3; val_offset:229107*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229107*0 + 3*337*FLEN/8, x4, x1, x2)

inst_76370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100003ffffffff; valaddr_reg:x3; val_offset:229110*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229110*0 + 3*338*FLEN/8, x4, x1, x2)

inst_76371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100007ffffffff; valaddr_reg:x3; val_offset:229113*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229113*0 + 3*339*FLEN/8, x4, x1, x2)

inst_76372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310000fffffffff; valaddr_reg:x3; val_offset:229116*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229116*0 + 3*340*FLEN/8, x4, x1, x2)

inst_76373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310001fffffffff; valaddr_reg:x3; val_offset:229119*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229119*0 + 3*341*FLEN/8, x4, x1, x2)

inst_76374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310003fffffffff; valaddr_reg:x3; val_offset:229122*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229122*0 + 3*342*FLEN/8, x4, x1, x2)

inst_76375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310007fffffffff; valaddr_reg:x3; val_offset:229125*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229125*0 + 3*343*FLEN/8, x4, x1, x2)

inst_76376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831000ffffffffff; valaddr_reg:x3; val_offset:229128*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229128*0 + 3*344*FLEN/8, x4, x1, x2)

inst_76377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831001ffffffffff; valaddr_reg:x3; val_offset:229131*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229131*0 + 3*345*FLEN/8, x4, x1, x2)

inst_76378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831003ffffffffff; valaddr_reg:x3; val_offset:229134*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229134*0 + 3*346*FLEN/8, x4, x1, x2)

inst_76379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831007ffffffffff; valaddr_reg:x3; val_offset:229137*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229137*0 + 3*347*FLEN/8, x4, x1, x2)

inst_76380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83100fffffffffff; valaddr_reg:x3; val_offset:229140*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229140*0 + 3*348*FLEN/8, x4, x1, x2)

inst_76381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83101fffffffffff; valaddr_reg:x3; val_offset:229143*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229143*0 + 3*349*FLEN/8, x4, x1, x2)

inst_76382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83103fffffffffff; valaddr_reg:x3; val_offset:229146*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229146*0 + 3*350*FLEN/8, x4, x1, x2)

inst_76383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x83107fffffffffff; valaddr_reg:x3; val_offset:229149*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229149*0 + 3*351*FLEN/8, x4, x1, x2)

inst_76384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8310ffffffffffff; valaddr_reg:x3; val_offset:229152*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229152*0 + 3*352*FLEN/8, x4, x1, x2)

inst_76385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8311ffffffffffff; valaddr_reg:x3; val_offset:229155*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229155*0 + 3*353*FLEN/8, x4, x1, x2)

inst_76386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8313ffffffffffff; valaddr_reg:x3; val_offset:229158*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229158*0 + 3*354*FLEN/8, x4, x1, x2)

inst_76387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8317ffffffffffff; valaddr_reg:x3; val_offset:229161*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229161*0 + 3*355*FLEN/8, x4, x1, x2)

inst_76388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x8318000000000000; valaddr_reg:x3; val_offset:229164*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229164*0 + 3*356*FLEN/8, x4, x1, x2)

inst_76389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831c000000000000; valaddr_reg:x3; val_offset:229167*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229167*0 + 3*357*FLEN/8, x4, x1, x2)

inst_76390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831e000000000000; valaddr_reg:x3; val_offset:229170*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229170*0 + 3*358*FLEN/8, x4, x1, x2)

inst_76391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831f000000000000; valaddr_reg:x3; val_offset:229173*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229173*0 + 3*359*FLEN/8, x4, x1, x2)

inst_76392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831f800000000000; valaddr_reg:x3; val_offset:229176*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229176*0 + 3*360*FLEN/8, x4, x1, x2)

inst_76393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fc00000000000; valaddr_reg:x3; val_offset:229179*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229179*0 + 3*361*FLEN/8, x4, x1, x2)

inst_76394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fe00000000000; valaddr_reg:x3; val_offset:229182*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229182*0 + 3*362*FLEN/8, x4, x1, x2)

inst_76395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ff00000000000; valaddr_reg:x3; val_offset:229185*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229185*0 + 3*363*FLEN/8, x4, x1, x2)

inst_76396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ff80000000000; valaddr_reg:x3; val_offset:229188*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229188*0 + 3*364*FLEN/8, x4, x1, x2)

inst_76397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffc0000000000; valaddr_reg:x3; val_offset:229191*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229191*0 + 3*365*FLEN/8, x4, x1, x2)

inst_76398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffe0000000000; valaddr_reg:x3; val_offset:229194*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229194*0 + 3*366*FLEN/8, x4, x1, x2)

inst_76399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fff0000000000; valaddr_reg:x3; val_offset:229197*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229197*0 + 3*367*FLEN/8, x4, x1, x2)

inst_76400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fff8000000000; valaddr_reg:x3; val_offset:229200*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229200*0 + 3*368*FLEN/8, x4, x1, x2)

inst_76401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffc000000000; valaddr_reg:x3; val_offset:229203*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229203*0 + 3*369*FLEN/8, x4, x1, x2)

inst_76402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffe000000000; valaddr_reg:x3; val_offset:229206*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229206*0 + 3*370*FLEN/8, x4, x1, x2)

inst_76403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffff000000000; valaddr_reg:x3; val_offset:229209*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229209*0 + 3*371*FLEN/8, x4, x1, x2)

inst_76404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:229212*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229212*0 + 3*372*FLEN/8, x4, x1, x2)

inst_76405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:229215*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229215*0 + 3*373*FLEN/8, x4, x1, x2)

inst_76406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:229218*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229218*0 + 3*374*FLEN/8, x4, x1, x2)

inst_76407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:229221*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229221*0 + 3*375*FLEN/8, x4, x1, x2)

inst_76408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:229224*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229224*0 + 3*376*FLEN/8, x4, x1, x2)

inst_76409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:229227*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229227*0 + 3*377*FLEN/8, x4, x1, x2)

inst_76410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:229230*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229230*0 + 3*378*FLEN/8, x4, x1, x2)

inst_76411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:229233*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229233*0 + 3*379*FLEN/8, x4, x1, x2)

inst_76412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:229236*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229236*0 + 3*380*FLEN/8, x4, x1, x2)

inst_76413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:229239*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229239*0 + 3*381*FLEN/8, x4, x1, x2)

inst_76414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:229242*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229242*0 + 3*382*FLEN/8, x4, x1, x2)

inst_76415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:229245*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229245*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_76416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffff800000; valaddr_reg:x3; val_offset:229248*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229248*0 + 3*384*FLEN/8, x4, x1, x2)

inst_76417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffc00000; valaddr_reg:x3; val_offset:229251*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229251*0 + 3*385*FLEN/8, x4, x1, x2)

inst_76418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffe00000; valaddr_reg:x3; val_offset:229254*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229254*0 + 3*386*FLEN/8, x4, x1, x2)

inst_76419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffff00000; valaddr_reg:x3; val_offset:229257*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229257*0 + 3*387*FLEN/8, x4, x1, x2)

inst_76420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffff80000; valaddr_reg:x3; val_offset:229260*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229260*0 + 3*388*FLEN/8, x4, x1, x2)

inst_76421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffc0000; valaddr_reg:x3; val_offset:229263*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229263*0 + 3*389*FLEN/8, x4, x1, x2)

inst_76422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffe0000; valaddr_reg:x3; val_offset:229266*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229266*0 + 3*390*FLEN/8, x4, x1, x2)

inst_76423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffff0000; valaddr_reg:x3; val_offset:229269*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229269*0 + 3*391*FLEN/8, x4, x1, x2)

inst_76424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffff8000; valaddr_reg:x3; val_offset:229272*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229272*0 + 3*392*FLEN/8, x4, x1, x2)

inst_76425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffffc000; valaddr_reg:x3; val_offset:229275*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229275*0 + 3*393*FLEN/8, x4, x1, x2)

inst_76426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffffe000; valaddr_reg:x3; val_offset:229278*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229278*0 + 3*394*FLEN/8, x4, x1, x2)

inst_76427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffff000; valaddr_reg:x3; val_offset:229281*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229281*0 + 3*395*FLEN/8, x4, x1, x2)

inst_76428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffff800; valaddr_reg:x3; val_offset:229284*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229284*0 + 3*396*FLEN/8, x4, x1, x2)

inst_76429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffffc00; valaddr_reg:x3; val_offset:229287*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229287*0 + 3*397*FLEN/8, x4, x1, x2)

inst_76430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffffe00; valaddr_reg:x3; val_offset:229290*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229290*0 + 3*398*FLEN/8, x4, x1, x2)

inst_76431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffffff00; valaddr_reg:x3; val_offset:229293*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229293*0 + 3*399*FLEN/8, x4, x1, x2)

inst_76432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffffff80; valaddr_reg:x3; val_offset:229296*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229296*0 + 3*400*FLEN/8, x4, x1, x2)

inst_76433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffffffc0; valaddr_reg:x3; val_offset:229299*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229299*0 + 3*401*FLEN/8, x4, x1, x2)

inst_76434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffffffe0; valaddr_reg:x3; val_offset:229302*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229302*0 + 3*402*FLEN/8, x4, x1, x2)

inst_76435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffffff0; valaddr_reg:x3; val_offset:229305*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229305*0 + 3*403*FLEN/8, x4, x1, x2)

inst_76436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffffff8; valaddr_reg:x3; val_offset:229308*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229308*0 + 3*404*FLEN/8, x4, x1, x2)

inst_76437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffffffc; valaddr_reg:x3; val_offset:229311*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229311*0 + 3*405*FLEN/8, x4, x1, x2)

inst_76438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831ffffffffffffe; valaddr_reg:x3; val_offset:229314*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229314*0 + 3*406*FLEN/8, x4, x1, x2)

inst_76439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7d40396d9385b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7d40396d9385b; op2val:0x8000;
op3val:0x831fffffffffffff; valaddr_reg:x3; val_offset:229317*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229317*0 + 3*407*FLEN/8, x4, x1, x2)

inst_76440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000000000; valaddr_reg:x3; val_offset:229320*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229320*0 + 3*408*FLEN/8, x4, x1, x2)

inst_76441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000000001; valaddr_reg:x3; val_offset:229323*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229323*0 + 3*409*FLEN/8, x4, x1, x2)

inst_76442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000000003; valaddr_reg:x3; val_offset:229326*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229326*0 + 3*410*FLEN/8, x4, x1, x2)

inst_76443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000000007; valaddr_reg:x3; val_offset:229329*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229329*0 + 3*411*FLEN/8, x4, x1, x2)

inst_76444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000000000f; valaddr_reg:x3; val_offset:229332*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229332*0 + 3*412*FLEN/8, x4, x1, x2)

inst_76445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000000001f; valaddr_reg:x3; val_offset:229335*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229335*0 + 3*413*FLEN/8, x4, x1, x2)

inst_76446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000000003f; valaddr_reg:x3; val_offset:229338*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229338*0 + 3*414*FLEN/8, x4, x1, x2)

inst_76447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000000007f; valaddr_reg:x3; val_offset:229341*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229341*0 + 3*415*FLEN/8, x4, x1, x2)

inst_76448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000000000ff; valaddr_reg:x3; val_offset:229344*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229344*0 + 3*416*FLEN/8, x4, x1, x2)

inst_76449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000000001ff; valaddr_reg:x3; val_offset:229347*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229347*0 + 3*417*FLEN/8, x4, x1, x2)

inst_76450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000000003ff; valaddr_reg:x3; val_offset:229350*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229350*0 + 3*418*FLEN/8, x4, x1, x2)

inst_76451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000000007ff; valaddr_reg:x3; val_offset:229353*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229353*0 + 3*419*FLEN/8, x4, x1, x2)

inst_76452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000000fff; valaddr_reg:x3; val_offset:229356*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229356*0 + 3*420*FLEN/8, x4, x1, x2)

inst_76453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000001fff; valaddr_reg:x3; val_offset:229359*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229359*0 + 3*421*FLEN/8, x4, x1, x2)

inst_76454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000003fff; valaddr_reg:x3; val_offset:229362*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229362*0 + 3*422*FLEN/8, x4, x1, x2)

inst_76455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000007fff; valaddr_reg:x3; val_offset:229365*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229365*0 + 3*423*FLEN/8, x4, x1, x2)

inst_76456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000000ffff; valaddr_reg:x3; val_offset:229368*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229368*0 + 3*424*FLEN/8, x4, x1, x2)

inst_76457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000001ffff; valaddr_reg:x3; val_offset:229371*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229371*0 + 3*425*FLEN/8, x4, x1, x2)

inst_76458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000003ffff; valaddr_reg:x3; val_offset:229374*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229374*0 + 3*426*FLEN/8, x4, x1, x2)

inst_76459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000007ffff; valaddr_reg:x3; val_offset:229377*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229377*0 + 3*427*FLEN/8, x4, x1, x2)

inst_76460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000000fffff; valaddr_reg:x3; val_offset:229380*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229380*0 + 3*428*FLEN/8, x4, x1, x2)

inst_76461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000001fffff; valaddr_reg:x3; val_offset:229383*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229383*0 + 3*429*FLEN/8, x4, x1, x2)

inst_76462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000003fffff; valaddr_reg:x3; val_offset:229386*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229386*0 + 3*430*FLEN/8, x4, x1, x2)

inst_76463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000007fffff; valaddr_reg:x3; val_offset:229389*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229389*0 + 3*431*FLEN/8, x4, x1, x2)

inst_76464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000000ffffff; valaddr_reg:x3; val_offset:229392*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229392*0 + 3*432*FLEN/8, x4, x1, x2)

inst_76465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000001ffffff; valaddr_reg:x3; val_offset:229395*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229395*0 + 3*433*FLEN/8, x4, x1, x2)

inst_76466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000003ffffff; valaddr_reg:x3; val_offset:229398*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229398*0 + 3*434*FLEN/8, x4, x1, x2)

inst_76467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000007ffffff; valaddr_reg:x3; val_offset:229401*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229401*0 + 3*435*FLEN/8, x4, x1, x2)

inst_76468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000000fffffff; valaddr_reg:x3; val_offset:229404*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229404*0 + 3*436*FLEN/8, x4, x1, x2)

inst_76469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000001fffffff; valaddr_reg:x3; val_offset:229407*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229407*0 + 3*437*FLEN/8, x4, x1, x2)

inst_76470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000003fffffff; valaddr_reg:x3; val_offset:229410*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229410*0 + 3*438*FLEN/8, x4, x1, x2)

inst_76471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000007fffffff; valaddr_reg:x3; val_offset:229413*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229413*0 + 3*439*FLEN/8, x4, x1, x2)

inst_76472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00000ffffffff; valaddr_reg:x3; val_offset:229416*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229416*0 + 3*440*FLEN/8, x4, x1, x2)

inst_76473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00001ffffffff; valaddr_reg:x3; val_offset:229419*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229419*0 + 3*441*FLEN/8, x4, x1, x2)

inst_76474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00003ffffffff; valaddr_reg:x3; val_offset:229422*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229422*0 + 3*442*FLEN/8, x4, x1, x2)

inst_76475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00007ffffffff; valaddr_reg:x3; val_offset:229425*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229425*0 + 3*443*FLEN/8, x4, x1, x2)

inst_76476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0000fffffffff; valaddr_reg:x3; val_offset:229428*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229428*0 + 3*444*FLEN/8, x4, x1, x2)

inst_76477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0001fffffffff; valaddr_reg:x3; val_offset:229431*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229431*0 + 3*445*FLEN/8, x4, x1, x2)

inst_76478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0003fffffffff; valaddr_reg:x3; val_offset:229434*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229434*0 + 3*446*FLEN/8, x4, x1, x2)

inst_76479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0007fffffffff; valaddr_reg:x3; val_offset:229437*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229437*0 + 3*447*FLEN/8, x4, x1, x2)

inst_76480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd000ffffffffff; valaddr_reg:x3; val_offset:229440*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229440*0 + 3*448*FLEN/8, x4, x1, x2)

inst_76481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd001ffffffffff; valaddr_reg:x3; val_offset:229443*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229443*0 + 3*449*FLEN/8, x4, x1, x2)

inst_76482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd003ffffffffff; valaddr_reg:x3; val_offset:229446*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229446*0 + 3*450*FLEN/8, x4, x1, x2)

inst_76483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd007ffffffffff; valaddr_reg:x3; val_offset:229449*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229449*0 + 3*451*FLEN/8, x4, x1, x2)

inst_76484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd00fffffffffff; valaddr_reg:x3; val_offset:229452*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229452*0 + 3*452*FLEN/8, x4, x1, x2)

inst_76485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd01fffffffffff; valaddr_reg:x3; val_offset:229455*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229455*0 + 3*453*FLEN/8, x4, x1, x2)

inst_76486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd03fffffffffff; valaddr_reg:x3; val_offset:229458*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229458*0 + 3*454*FLEN/8, x4, x1, x2)

inst_76487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd07fffffffffff; valaddr_reg:x3; val_offset:229461*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229461*0 + 3*455*FLEN/8, x4, x1, x2)

inst_76488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd0ffffffffffff; valaddr_reg:x3; val_offset:229464*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229464*0 + 3*456*FLEN/8, x4, x1, x2)

inst_76489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd1ffffffffffff; valaddr_reg:x3; val_offset:229467*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229467*0 + 3*457*FLEN/8, x4, x1, x2)

inst_76490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd3ffffffffffff; valaddr_reg:x3; val_offset:229470*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229470*0 + 3*458*FLEN/8, x4, x1, x2)

inst_76491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd7ffffffffffff; valaddr_reg:x3; val_offset:229473*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229473*0 + 3*459*FLEN/8, x4, x1, x2)

inst_76492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcd8000000000000; valaddr_reg:x3; val_offset:229476*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229476*0 + 3*460*FLEN/8, x4, x1, x2)

inst_76493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdc000000000000; valaddr_reg:x3; val_offset:229479*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229479*0 + 3*461*FLEN/8, x4, x1, x2)

inst_76494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcde000000000000; valaddr_reg:x3; val_offset:229482*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229482*0 + 3*462*FLEN/8, x4, x1, x2)

inst_76495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdf000000000000; valaddr_reg:x3; val_offset:229485*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229485*0 + 3*463*FLEN/8, x4, x1, x2)

inst_76496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdf800000000000; valaddr_reg:x3; val_offset:229488*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229488*0 + 3*464*FLEN/8, x4, x1, x2)

inst_76497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfc00000000000; valaddr_reg:x3; val_offset:229491*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229491*0 + 3*465*FLEN/8, x4, x1, x2)

inst_76498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfe00000000000; valaddr_reg:x3; val_offset:229494*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229494*0 + 3*466*FLEN/8, x4, x1, x2)

inst_76499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdff00000000000; valaddr_reg:x3; val_offset:229497*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229497*0 + 3*467*FLEN/8, x4, x1, x2)

inst_76500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdff80000000000; valaddr_reg:x3; val_offset:229500*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229500*0 + 3*468*FLEN/8, x4, x1, x2)

inst_76501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffc0000000000; valaddr_reg:x3; val_offset:229503*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229503*0 + 3*469*FLEN/8, x4, x1, x2)

inst_76502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffe0000000000; valaddr_reg:x3; val_offset:229506*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229506*0 + 3*470*FLEN/8, x4, x1, x2)

inst_76503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfff0000000000; valaddr_reg:x3; val_offset:229509*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229509*0 + 3*471*FLEN/8, x4, x1, x2)

inst_76504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfff8000000000; valaddr_reg:x3; val_offset:229512*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229512*0 + 3*472*FLEN/8, x4, x1, x2)

inst_76505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffc000000000; valaddr_reg:x3; val_offset:229515*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229515*0 + 3*473*FLEN/8, x4, x1, x2)

inst_76506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffe000000000; valaddr_reg:x3; val_offset:229518*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229518*0 + 3*474*FLEN/8, x4, x1, x2)

inst_76507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffff000000000; valaddr_reg:x3; val_offset:229521*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229521*0 + 3*475*FLEN/8, x4, x1, x2)

inst_76508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffff800000000; valaddr_reg:x3; val_offset:229524*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229524*0 + 3*476*FLEN/8, x4, x1, x2)

inst_76509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffc00000000; valaddr_reg:x3; val_offset:229527*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229527*0 + 3*477*FLEN/8, x4, x1, x2)

inst_76510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffe00000000; valaddr_reg:x3; val_offset:229530*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229530*0 + 3*478*FLEN/8, x4, x1, x2)

inst_76511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffff00000000; valaddr_reg:x3; val_offset:229533*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229533*0 + 3*479*FLEN/8, x4, x1, x2)

inst_76512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffff80000000; valaddr_reg:x3; val_offset:229536*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229536*0 + 3*480*FLEN/8, x4, x1, x2)

inst_76513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffc0000000; valaddr_reg:x3; val_offset:229539*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229539*0 + 3*481*FLEN/8, x4, x1, x2)

inst_76514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffe0000000; valaddr_reg:x3; val_offset:229542*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229542*0 + 3*482*FLEN/8, x4, x1, x2)

inst_76515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffff0000000; valaddr_reg:x3; val_offset:229545*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229545*0 + 3*483*FLEN/8, x4, x1, x2)

inst_76516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffff8000000; valaddr_reg:x3; val_offset:229548*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229548*0 + 3*484*FLEN/8, x4, x1, x2)

inst_76517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffc000000; valaddr_reg:x3; val_offset:229551*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229551*0 + 3*485*FLEN/8, x4, x1, x2)

inst_76518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffe000000; valaddr_reg:x3; val_offset:229554*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229554*0 + 3*486*FLEN/8, x4, x1, x2)

inst_76519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffff000000; valaddr_reg:x3; val_offset:229557*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229557*0 + 3*487*FLEN/8, x4, x1, x2)

inst_76520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffff800000; valaddr_reg:x3; val_offset:229560*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229560*0 + 3*488*FLEN/8, x4, x1, x2)

inst_76521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffc00000; valaddr_reg:x3; val_offset:229563*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229563*0 + 3*489*FLEN/8, x4, x1, x2)

inst_76522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffe00000; valaddr_reg:x3; val_offset:229566*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229566*0 + 3*490*FLEN/8, x4, x1, x2)

inst_76523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffff00000; valaddr_reg:x3; val_offset:229569*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229569*0 + 3*491*FLEN/8, x4, x1, x2)

inst_76524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffff80000; valaddr_reg:x3; val_offset:229572*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229572*0 + 3*492*FLEN/8, x4, x1, x2)

inst_76525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffc0000; valaddr_reg:x3; val_offset:229575*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229575*0 + 3*493*FLEN/8, x4, x1, x2)

inst_76526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffe0000; valaddr_reg:x3; val_offset:229578*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229578*0 + 3*494*FLEN/8, x4, x1, x2)

inst_76527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffff0000; valaddr_reg:x3; val_offset:229581*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229581*0 + 3*495*FLEN/8, x4, x1, x2)

inst_76528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffff8000; valaddr_reg:x3; val_offset:229584*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229584*0 + 3*496*FLEN/8, x4, x1, x2)

inst_76529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffffc000; valaddr_reg:x3; val_offset:229587*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229587*0 + 3*497*FLEN/8, x4, x1, x2)

inst_76530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffffe000; valaddr_reg:x3; val_offset:229590*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229590*0 + 3*498*FLEN/8, x4, x1, x2)

inst_76531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffff000; valaddr_reg:x3; val_offset:229593*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229593*0 + 3*499*FLEN/8, x4, x1, x2)

inst_76532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffff800; valaddr_reg:x3; val_offset:229596*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229596*0 + 3*500*FLEN/8, x4, x1, x2)

inst_76533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffffc00; valaddr_reg:x3; val_offset:229599*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229599*0 + 3*501*FLEN/8, x4, x1, x2)

inst_76534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffffe00; valaddr_reg:x3; val_offset:229602*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229602*0 + 3*502*FLEN/8, x4, x1, x2)

inst_76535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffffff00; valaddr_reg:x3; val_offset:229605*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229605*0 + 3*503*FLEN/8, x4, x1, x2)

inst_76536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffffff80; valaddr_reg:x3; val_offset:229608*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229608*0 + 3*504*FLEN/8, x4, x1, x2)

inst_76537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffffffc0; valaddr_reg:x3; val_offset:229611*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229611*0 + 3*505*FLEN/8, x4, x1, x2)

inst_76538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffffffe0; valaddr_reg:x3; val_offset:229614*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229614*0 + 3*506*FLEN/8, x4, x1, x2)

inst_76539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffffff0; valaddr_reg:x3; val_offset:229617*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229617*0 + 3*507*FLEN/8, x4, x1, x2)

inst_76540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffffff8; valaddr_reg:x3; val_offset:229620*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229620*0 + 3*508*FLEN/8, x4, x1, x2)

inst_76541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffffffc; valaddr_reg:x3; val_offset:229623*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229623*0 + 3*509*FLEN/8, x4, x1, x2)

inst_76542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdffffffffffffe; valaddr_reg:x3; val_offset:229626*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229626*0 + 3*510*FLEN/8, x4, x1, x2)

inst_76543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3cd and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbcdfffffffffffff; valaddr_reg:x3; val_offset:229629*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229629*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_76544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:229632*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229632*0 + 3*512*FLEN/8, x4, x1, x2)

inst_76545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:229635*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229635*0 + 3*513*FLEN/8, x4, x1, x2)

inst_76546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:229638*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229638*0 + 3*514*FLEN/8, x4, x1, x2)

inst_76547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:229641*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229641*0 + 3*515*FLEN/8, x4, x1, x2)

inst_76548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:229644*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229644*0 + 3*516*FLEN/8, x4, x1, x2)

inst_76549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:229647*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229647*0 + 3*517*FLEN/8, x4, x1, x2)

inst_76550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:229650*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229650*0 + 3*518*FLEN/8, x4, x1, x2)

inst_76551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:229653*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229653*0 + 3*519*FLEN/8, x4, x1, x2)

inst_76552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:229656*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229656*0 + 3*520*FLEN/8, x4, x1, x2)

inst_76553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:229659*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229659*0 + 3*521*FLEN/8, x4, x1, x2)

inst_76554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:229662*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229662*0 + 3*522*FLEN/8, x4, x1, x2)

inst_76555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:229665*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229665*0 + 3*523*FLEN/8, x4, x1, x2)

inst_76556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:229668*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229668*0 + 3*524*FLEN/8, x4, x1, x2)

inst_76557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:229671*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229671*0 + 3*525*FLEN/8, x4, x1, x2)

inst_76558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:229674*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229674*0 + 3*526*FLEN/8, x4, x1, x2)

inst_76559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:229677*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229677*0 + 3*527*FLEN/8, x4, x1, x2)

inst_76560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:229680*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229680*0 + 3*528*FLEN/8, x4, x1, x2)

inst_76561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:229683*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229683*0 + 3*529*FLEN/8, x4, x1, x2)

inst_76562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:229686*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229686*0 + 3*530*FLEN/8, x4, x1, x2)

inst_76563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:229689*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229689*0 + 3*531*FLEN/8, x4, x1, x2)

inst_76564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:229692*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229692*0 + 3*532*FLEN/8, x4, x1, x2)

inst_76565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e0bf1ff29f2c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x5714195926ea5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e0bf1ff29f2c; op2val:0x9fc5714195926ea5;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:229695*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229695*0 + 3*533*FLEN/8, x4, x1, x2)

inst_76566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:229698*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229698*0 + 3*534*FLEN/8, x4, x1, x2)

inst_76567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:229701*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229701*0 + 3*535*FLEN/8, x4, x1, x2)

inst_76568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:229704*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229704*0 + 3*536*FLEN/8, x4, x1, x2)

inst_76569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:229707*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229707*0 + 3*537*FLEN/8, x4, x1, x2)

inst_76570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:229710*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229710*0 + 3*538*FLEN/8, x4, x1, x2)

inst_76571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:229713*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229713*0 + 3*539*FLEN/8, x4, x1, x2)

inst_76572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:229716*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229716*0 + 3*540*FLEN/8, x4, x1, x2)

inst_76573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:229719*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229719*0 + 3*541*FLEN/8, x4, x1, x2)

inst_76574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:229722*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229722*0 + 3*542*FLEN/8, x4, x1, x2)

inst_76575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:229725*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229725*0 + 3*543*FLEN/8, x4, x1, x2)

inst_76576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:229728*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229728*0 + 3*544*FLEN/8, x4, x1, x2)

inst_76577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:229731*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229731*0 + 3*545*FLEN/8, x4, x1, x2)

inst_76578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:229734*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229734*0 + 3*546*FLEN/8, x4, x1, x2)

inst_76579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:229737*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229737*0 + 3*547*FLEN/8, x4, x1, x2)

inst_76580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:229740*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229740*0 + 3*548*FLEN/8, x4, x1, x2)

inst_76581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:229743*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229743*0 + 3*549*FLEN/8, x4, x1, x2)

inst_76582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:229746*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229746*0 + 3*550*FLEN/8, x4, x1, x2)

inst_76583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:229749*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229749*0 + 3*551*FLEN/8, x4, x1, x2)

inst_76584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:229752*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229752*0 + 3*552*FLEN/8, x4, x1, x2)

inst_76585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:229755*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229755*0 + 3*553*FLEN/8, x4, x1, x2)

inst_76586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:229758*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229758*0 + 3*554*FLEN/8, x4, x1, x2)

inst_76587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:229761*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229761*0 + 3*555*FLEN/8, x4, x1, x2)

inst_76588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000000000; valaddr_reg:x3; val_offset:229764*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229764*0 + 3*556*FLEN/8, x4, x1, x2)

inst_76589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000000001; valaddr_reg:x3; val_offset:229767*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229767*0 + 3*557*FLEN/8, x4, x1, x2)

inst_76590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000000003; valaddr_reg:x3; val_offset:229770*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229770*0 + 3*558*FLEN/8, x4, x1, x2)

inst_76591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000000007; valaddr_reg:x3; val_offset:229773*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229773*0 + 3*559*FLEN/8, x4, x1, x2)

inst_76592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000000000f; valaddr_reg:x3; val_offset:229776*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229776*0 + 3*560*FLEN/8, x4, x1, x2)

inst_76593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000000001f; valaddr_reg:x3; val_offset:229779*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229779*0 + 3*561*FLEN/8, x4, x1, x2)

inst_76594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000000003f; valaddr_reg:x3; val_offset:229782*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229782*0 + 3*562*FLEN/8, x4, x1, x2)

inst_76595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000000007f; valaddr_reg:x3; val_offset:229785*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229785*0 + 3*563*FLEN/8, x4, x1, x2)

inst_76596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000000000ff; valaddr_reg:x3; val_offset:229788*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229788*0 + 3*564*FLEN/8, x4, x1, x2)

inst_76597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000000001ff; valaddr_reg:x3; val_offset:229791*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229791*0 + 3*565*FLEN/8, x4, x1, x2)

inst_76598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000000003ff; valaddr_reg:x3; val_offset:229794*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229794*0 + 3*566*FLEN/8, x4, x1, x2)

inst_76599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000000007ff; valaddr_reg:x3; val_offset:229797*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229797*0 + 3*567*FLEN/8, x4, x1, x2)

inst_76600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000000fff; valaddr_reg:x3; val_offset:229800*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229800*0 + 3*568*FLEN/8, x4, x1, x2)

inst_76601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000001fff; valaddr_reg:x3; val_offset:229803*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229803*0 + 3*569*FLEN/8, x4, x1, x2)

inst_76602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000003fff; valaddr_reg:x3; val_offset:229806*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229806*0 + 3*570*FLEN/8, x4, x1, x2)

inst_76603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000007fff; valaddr_reg:x3; val_offset:229809*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229809*0 + 3*571*FLEN/8, x4, x1, x2)

inst_76604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000000ffff; valaddr_reg:x3; val_offset:229812*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229812*0 + 3*572*FLEN/8, x4, x1, x2)

inst_76605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000001ffff; valaddr_reg:x3; val_offset:229815*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229815*0 + 3*573*FLEN/8, x4, x1, x2)

inst_76606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000003ffff; valaddr_reg:x3; val_offset:229818*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229818*0 + 3*574*FLEN/8, x4, x1, x2)

inst_76607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000007ffff; valaddr_reg:x3; val_offset:229821*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229821*0 + 3*575*FLEN/8, x4, x1, x2)

inst_76608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000000fffff; valaddr_reg:x3; val_offset:229824*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229824*0 + 3*576*FLEN/8, x4, x1, x2)

inst_76609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000001fffff; valaddr_reg:x3; val_offset:229827*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229827*0 + 3*577*FLEN/8, x4, x1, x2)

inst_76610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000003fffff; valaddr_reg:x3; val_offset:229830*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229830*0 + 3*578*FLEN/8, x4, x1, x2)

inst_76611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000007fffff; valaddr_reg:x3; val_offset:229833*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229833*0 + 3*579*FLEN/8, x4, x1, x2)

inst_76612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000000ffffff; valaddr_reg:x3; val_offset:229836*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229836*0 + 3*580*FLEN/8, x4, x1, x2)

inst_76613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000001ffffff; valaddr_reg:x3; val_offset:229839*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229839*0 + 3*581*FLEN/8, x4, x1, x2)

inst_76614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000003ffffff; valaddr_reg:x3; val_offset:229842*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229842*0 + 3*582*FLEN/8, x4, x1, x2)

inst_76615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000007ffffff; valaddr_reg:x3; val_offset:229845*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229845*0 + 3*583*FLEN/8, x4, x1, x2)

inst_76616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000000fffffff; valaddr_reg:x3; val_offset:229848*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229848*0 + 3*584*FLEN/8, x4, x1, x2)

inst_76617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000001fffffff; valaddr_reg:x3; val_offset:229851*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229851*0 + 3*585*FLEN/8, x4, x1, x2)

inst_76618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000003fffffff; valaddr_reg:x3; val_offset:229854*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229854*0 + 3*586*FLEN/8, x4, x1, x2)

inst_76619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000007fffffff; valaddr_reg:x3; val_offset:229857*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229857*0 + 3*587*FLEN/8, x4, x1, x2)

inst_76620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00000ffffffff; valaddr_reg:x3; val_offset:229860*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229860*0 + 3*588*FLEN/8, x4, x1, x2)

inst_76621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00001ffffffff; valaddr_reg:x3; val_offset:229863*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229863*0 + 3*589*FLEN/8, x4, x1, x2)

inst_76622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00003ffffffff; valaddr_reg:x3; val_offset:229866*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229866*0 + 3*590*FLEN/8, x4, x1, x2)

inst_76623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00007ffffffff; valaddr_reg:x3; val_offset:229869*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229869*0 + 3*591*FLEN/8, x4, x1, x2)

inst_76624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0000fffffffff; valaddr_reg:x3; val_offset:229872*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229872*0 + 3*592*FLEN/8, x4, x1, x2)

inst_76625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0001fffffffff; valaddr_reg:x3; val_offset:229875*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229875*0 + 3*593*FLEN/8, x4, x1, x2)

inst_76626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0003fffffffff; valaddr_reg:x3; val_offset:229878*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229878*0 + 3*594*FLEN/8, x4, x1, x2)

inst_76627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0007fffffffff; valaddr_reg:x3; val_offset:229881*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229881*0 + 3*595*FLEN/8, x4, x1, x2)

inst_76628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c000ffffffffff; valaddr_reg:x3; val_offset:229884*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229884*0 + 3*596*FLEN/8, x4, x1, x2)

inst_76629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c001ffffffffff; valaddr_reg:x3; val_offset:229887*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229887*0 + 3*597*FLEN/8, x4, x1, x2)

inst_76630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c003ffffffffff; valaddr_reg:x3; val_offset:229890*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229890*0 + 3*598*FLEN/8, x4, x1, x2)

inst_76631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c007ffffffffff; valaddr_reg:x3; val_offset:229893*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229893*0 + 3*599*FLEN/8, x4, x1, x2)

inst_76632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c00fffffffffff; valaddr_reg:x3; val_offset:229896*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229896*0 + 3*600*FLEN/8, x4, x1, x2)

inst_76633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c01fffffffffff; valaddr_reg:x3; val_offset:229899*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229899*0 + 3*601*FLEN/8, x4, x1, x2)

inst_76634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c03fffffffffff; valaddr_reg:x3; val_offset:229902*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229902*0 + 3*602*FLEN/8, x4, x1, x2)

inst_76635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c07fffffffffff; valaddr_reg:x3; val_offset:229905*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229905*0 + 3*603*FLEN/8, x4, x1, x2)

inst_76636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c0ffffffffffff; valaddr_reg:x3; val_offset:229908*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229908*0 + 3*604*FLEN/8, x4, x1, x2)

inst_76637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c1ffffffffffff; valaddr_reg:x3; val_offset:229911*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229911*0 + 3*605*FLEN/8, x4, x1, x2)

inst_76638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c3ffffffffffff; valaddr_reg:x3; val_offset:229914*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229914*0 + 3*606*FLEN/8, x4, x1, x2)

inst_76639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c7ffffffffffff; valaddr_reg:x3; val_offset:229917*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229917*0 + 3*607*FLEN/8, x4, x1, x2)

inst_76640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83c8000000000000; valaddr_reg:x3; val_offset:229920*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229920*0 + 3*608*FLEN/8, x4, x1, x2)

inst_76641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cc000000000000; valaddr_reg:x3; val_offset:229923*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229923*0 + 3*609*FLEN/8, x4, x1, x2)

inst_76642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83ce000000000000; valaddr_reg:x3; val_offset:229926*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229926*0 + 3*610*FLEN/8, x4, x1, x2)

inst_76643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cf000000000000; valaddr_reg:x3; val_offset:229929*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229929*0 + 3*611*FLEN/8, x4, x1, x2)

inst_76644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cf800000000000; valaddr_reg:x3; val_offset:229932*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229932*0 + 3*612*FLEN/8, x4, x1, x2)

inst_76645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfc00000000000; valaddr_reg:x3; val_offset:229935*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229935*0 + 3*613*FLEN/8, x4, x1, x2)

inst_76646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfe00000000000; valaddr_reg:x3; val_offset:229938*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229938*0 + 3*614*FLEN/8, x4, x1, x2)

inst_76647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cff00000000000; valaddr_reg:x3; val_offset:229941*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229941*0 + 3*615*FLEN/8, x4, x1, x2)

inst_76648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cff80000000000; valaddr_reg:x3; val_offset:229944*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229944*0 + 3*616*FLEN/8, x4, x1, x2)

inst_76649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffc0000000000; valaddr_reg:x3; val_offset:229947*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229947*0 + 3*617*FLEN/8, x4, x1, x2)

inst_76650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffe0000000000; valaddr_reg:x3; val_offset:229950*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229950*0 + 3*618*FLEN/8, x4, x1, x2)

inst_76651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfff0000000000; valaddr_reg:x3; val_offset:229953*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229953*0 + 3*619*FLEN/8, x4, x1, x2)

inst_76652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfff8000000000; valaddr_reg:x3; val_offset:229956*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229956*0 + 3*620*FLEN/8, x4, x1, x2)

inst_76653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffc000000000; valaddr_reg:x3; val_offset:229959*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229959*0 + 3*621*FLEN/8, x4, x1, x2)

inst_76654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffe000000000; valaddr_reg:x3; val_offset:229962*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229962*0 + 3*622*FLEN/8, x4, x1, x2)

inst_76655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffff000000000; valaddr_reg:x3; val_offset:229965*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229965*0 + 3*623*FLEN/8, x4, x1, x2)

inst_76656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffff800000000; valaddr_reg:x3; val_offset:229968*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229968*0 + 3*624*FLEN/8, x4, x1, x2)

inst_76657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffc00000000; valaddr_reg:x3; val_offset:229971*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229971*0 + 3*625*FLEN/8, x4, x1, x2)

inst_76658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffe00000000; valaddr_reg:x3; val_offset:229974*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229974*0 + 3*626*FLEN/8, x4, x1, x2)

inst_76659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffff00000000; valaddr_reg:x3; val_offset:229977*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229977*0 + 3*627*FLEN/8, x4, x1, x2)

inst_76660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffff80000000; valaddr_reg:x3; val_offset:229980*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229980*0 + 3*628*FLEN/8, x4, x1, x2)

inst_76661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffc0000000; valaddr_reg:x3; val_offset:229983*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229983*0 + 3*629*FLEN/8, x4, x1, x2)

inst_76662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffe0000000; valaddr_reg:x3; val_offset:229986*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229986*0 + 3*630*FLEN/8, x4, x1, x2)

inst_76663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffff0000000; valaddr_reg:x3; val_offset:229989*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229989*0 + 3*631*FLEN/8, x4, x1, x2)

inst_76664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffff8000000; valaddr_reg:x3; val_offset:229992*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229992*0 + 3*632*FLEN/8, x4, x1, x2)

inst_76665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffc000000; valaddr_reg:x3; val_offset:229995*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229995*0 + 3*633*FLEN/8, x4, x1, x2)

inst_76666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffe000000; valaddr_reg:x3; val_offset:229998*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 229998*0 + 3*634*FLEN/8, x4, x1, x2)

inst_76667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffff000000; valaddr_reg:x3; val_offset:230001*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230001*0 + 3*635*FLEN/8, x4, x1, x2)

inst_76668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffff800000; valaddr_reg:x3; val_offset:230004*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230004*0 + 3*636*FLEN/8, x4, x1, x2)

inst_76669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffc00000; valaddr_reg:x3; val_offset:230007*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230007*0 + 3*637*FLEN/8, x4, x1, x2)

inst_76670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffe00000; valaddr_reg:x3; val_offset:230010*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230010*0 + 3*638*FLEN/8, x4, x1, x2)

inst_76671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffff00000; valaddr_reg:x3; val_offset:230013*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230013*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_76672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffff80000; valaddr_reg:x3; val_offset:230016*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230016*0 + 3*640*FLEN/8, x4, x1, x2)

inst_76673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffc0000; valaddr_reg:x3; val_offset:230019*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230019*0 + 3*641*FLEN/8, x4, x1, x2)

inst_76674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffe0000; valaddr_reg:x3; val_offset:230022*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230022*0 + 3*642*FLEN/8, x4, x1, x2)

inst_76675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffff0000; valaddr_reg:x3; val_offset:230025*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230025*0 + 3*643*FLEN/8, x4, x1, x2)

inst_76676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffff8000; valaddr_reg:x3; val_offset:230028*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230028*0 + 3*644*FLEN/8, x4, x1, x2)

inst_76677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffffc000; valaddr_reg:x3; val_offset:230031*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230031*0 + 3*645*FLEN/8, x4, x1, x2)

inst_76678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffffe000; valaddr_reg:x3; val_offset:230034*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230034*0 + 3*646*FLEN/8, x4, x1, x2)

inst_76679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffff000; valaddr_reg:x3; val_offset:230037*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230037*0 + 3*647*FLEN/8, x4, x1, x2)

inst_76680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffff800; valaddr_reg:x3; val_offset:230040*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230040*0 + 3*648*FLEN/8, x4, x1, x2)

inst_76681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffffc00; valaddr_reg:x3; val_offset:230043*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230043*0 + 3*649*FLEN/8, x4, x1, x2)

inst_76682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffffe00; valaddr_reg:x3; val_offset:230046*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230046*0 + 3*650*FLEN/8, x4, x1, x2)

inst_76683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffffff00; valaddr_reg:x3; val_offset:230049*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230049*0 + 3*651*FLEN/8, x4, x1, x2)

inst_76684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffffff80; valaddr_reg:x3; val_offset:230052*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230052*0 + 3*652*FLEN/8, x4, x1, x2)

inst_76685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffffffc0; valaddr_reg:x3; val_offset:230055*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230055*0 + 3*653*FLEN/8, x4, x1, x2)

inst_76686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffffffe0; valaddr_reg:x3; val_offset:230058*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230058*0 + 3*654*FLEN/8, x4, x1, x2)

inst_76687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffffff0; valaddr_reg:x3; val_offset:230061*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230061*0 + 3*655*FLEN/8, x4, x1, x2)

inst_76688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffffff8; valaddr_reg:x3; val_offset:230064*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230064*0 + 3*656*FLEN/8, x4, x1, x2)

inst_76689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffffffc; valaddr_reg:x3; val_offset:230067*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230067*0 + 3*657*FLEN/8, x4, x1, x2)

inst_76690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cffffffffffffe; valaddr_reg:x3; val_offset:230070*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230070*0 + 3*658*FLEN/8, x4, x1, x2)

inst_76691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e48c855ac6c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e48c855ac6c3; op2val:0x8000;
op3val:0x83cfffffffffffff; valaddr_reg:x3; val_offset:230073*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230073*0 + 3*659*FLEN/8, x4, x1, x2)

inst_76692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:230076*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230076*0 + 3*660*FLEN/8, x4, x1, x2)

inst_76693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:230079*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230079*0 + 3*661*FLEN/8, x4, x1, x2)

inst_76694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:230082*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230082*0 + 3*662*FLEN/8, x4, x1, x2)

inst_76695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:230085*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230085*0 + 3*663*FLEN/8, x4, x1, x2)

inst_76696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:230088*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230088*0 + 3*664*FLEN/8, x4, x1, x2)

inst_76697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:230091*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230091*0 + 3*665*FLEN/8, x4, x1, x2)

inst_76698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:230094*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230094*0 + 3*666*FLEN/8, x4, x1, x2)

inst_76699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:230097*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230097*0 + 3*667*FLEN/8, x4, x1, x2)

inst_76700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:230100*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230100*0 + 3*668*FLEN/8, x4, x1, x2)

inst_76701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:230103*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230103*0 + 3*669*FLEN/8, x4, x1, x2)

inst_76702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:230106*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230106*0 + 3*670*FLEN/8, x4, x1, x2)

inst_76703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:230109*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230109*0 + 3*671*FLEN/8, x4, x1, x2)

inst_76704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:230112*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230112*0 + 3*672*FLEN/8, x4, x1, x2)

inst_76705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:230115*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230115*0 + 3*673*FLEN/8, x4, x1, x2)

inst_76706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:230118*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230118*0 + 3*674*FLEN/8, x4, x1, x2)

inst_76707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:230121*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230121*0 + 3*675*FLEN/8, x4, x1, x2)

inst_76708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:230124*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230124*0 + 3*676*FLEN/8, x4, x1, x2)

inst_76709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:230127*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230127*0 + 3*677*FLEN/8, x4, x1, x2)

inst_76710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:230130*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230130*0 + 3*678*FLEN/8, x4, x1, x2)

inst_76711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:230133*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230133*0 + 3*679*FLEN/8, x4, x1, x2)

inst_76712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:230136*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230136*0 + 3*680*FLEN/8, x4, x1, x2)

inst_76713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:230139*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230139*0 + 3*681*FLEN/8, x4, x1, x2)

inst_76714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000000000; valaddr_reg:x3; val_offset:230142*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230142*0 + 3*682*FLEN/8, x4, x1, x2)

inst_76715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000000001; valaddr_reg:x3; val_offset:230145*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230145*0 + 3*683*FLEN/8, x4, x1, x2)

inst_76716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000000003; valaddr_reg:x3; val_offset:230148*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230148*0 + 3*684*FLEN/8, x4, x1, x2)

inst_76717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000000007; valaddr_reg:x3; val_offset:230151*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230151*0 + 3*685*FLEN/8, x4, x1, x2)

inst_76718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000000000f; valaddr_reg:x3; val_offset:230154*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230154*0 + 3*686*FLEN/8, x4, x1, x2)

inst_76719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000000001f; valaddr_reg:x3; val_offset:230157*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230157*0 + 3*687*FLEN/8, x4, x1, x2)

inst_76720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000000003f; valaddr_reg:x3; val_offset:230160*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230160*0 + 3*688*FLEN/8, x4, x1, x2)

inst_76721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000000007f; valaddr_reg:x3; val_offset:230163*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230163*0 + 3*689*FLEN/8, x4, x1, x2)

inst_76722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000000000ff; valaddr_reg:x3; val_offset:230166*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230166*0 + 3*690*FLEN/8, x4, x1, x2)

inst_76723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000000001ff; valaddr_reg:x3; val_offset:230169*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230169*0 + 3*691*FLEN/8, x4, x1, x2)

inst_76724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000000003ff; valaddr_reg:x3; val_offset:230172*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230172*0 + 3*692*FLEN/8, x4, x1, x2)

inst_76725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000000007ff; valaddr_reg:x3; val_offset:230175*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230175*0 + 3*693*FLEN/8, x4, x1, x2)

inst_76726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000000fff; valaddr_reg:x3; val_offset:230178*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230178*0 + 3*694*FLEN/8, x4, x1, x2)

inst_76727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000001fff; valaddr_reg:x3; val_offset:230181*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230181*0 + 3*695*FLEN/8, x4, x1, x2)

inst_76728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000003fff; valaddr_reg:x3; val_offset:230184*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230184*0 + 3*696*FLEN/8, x4, x1, x2)

inst_76729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000007fff; valaddr_reg:x3; val_offset:230187*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230187*0 + 3*697*FLEN/8, x4, x1, x2)

inst_76730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000000ffff; valaddr_reg:x3; val_offset:230190*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230190*0 + 3*698*FLEN/8, x4, x1, x2)

inst_76731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000001ffff; valaddr_reg:x3; val_offset:230193*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230193*0 + 3*699*FLEN/8, x4, x1, x2)

inst_76732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000003ffff; valaddr_reg:x3; val_offset:230196*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230196*0 + 3*700*FLEN/8, x4, x1, x2)

inst_76733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000007ffff; valaddr_reg:x3; val_offset:230199*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230199*0 + 3*701*FLEN/8, x4, x1, x2)

inst_76734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000000fffff; valaddr_reg:x3; val_offset:230202*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230202*0 + 3*702*FLEN/8, x4, x1, x2)

inst_76735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000001fffff; valaddr_reg:x3; val_offset:230205*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230205*0 + 3*703*FLEN/8, x4, x1, x2)

inst_76736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000003fffff; valaddr_reg:x3; val_offset:230208*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230208*0 + 3*704*FLEN/8, x4, x1, x2)

inst_76737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000007fffff; valaddr_reg:x3; val_offset:230211*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230211*0 + 3*705*FLEN/8, x4, x1, x2)

inst_76738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000000ffffff; valaddr_reg:x3; val_offset:230214*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230214*0 + 3*706*FLEN/8, x4, x1, x2)

inst_76739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000001ffffff; valaddr_reg:x3; val_offset:230217*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230217*0 + 3*707*FLEN/8, x4, x1, x2)

inst_76740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000003ffffff; valaddr_reg:x3; val_offset:230220*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230220*0 + 3*708*FLEN/8, x4, x1, x2)

inst_76741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000007ffffff; valaddr_reg:x3; val_offset:230223*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230223*0 + 3*709*FLEN/8, x4, x1, x2)

inst_76742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000000fffffff; valaddr_reg:x3; val_offset:230226*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230226*0 + 3*710*FLEN/8, x4, x1, x2)

inst_76743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000001fffffff; valaddr_reg:x3; val_offset:230229*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230229*0 + 3*711*FLEN/8, x4, x1, x2)

inst_76744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000003fffffff; valaddr_reg:x3; val_offset:230232*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230232*0 + 3*712*FLEN/8, x4, x1, x2)

inst_76745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000007fffffff; valaddr_reg:x3; val_offset:230235*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230235*0 + 3*713*FLEN/8, x4, x1, x2)

inst_76746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000000ffffffff; valaddr_reg:x3; val_offset:230238*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230238*0 + 3*714*FLEN/8, x4, x1, x2)

inst_76747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000001ffffffff; valaddr_reg:x3; val_offset:230241*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230241*0 + 3*715*FLEN/8, x4, x1, x2)

inst_76748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000003ffffffff; valaddr_reg:x3; val_offset:230244*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230244*0 + 3*716*FLEN/8, x4, x1, x2)

inst_76749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000007ffffffff; valaddr_reg:x3; val_offset:230247*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230247*0 + 3*717*FLEN/8, x4, x1, x2)

inst_76750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100000fffffffff; valaddr_reg:x3; val_offset:230250*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230250*0 + 3*718*FLEN/8, x4, x1, x2)

inst_76751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100001fffffffff; valaddr_reg:x3; val_offset:230253*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230253*0 + 3*719*FLEN/8, x4, x1, x2)

inst_76752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100003fffffffff; valaddr_reg:x3; val_offset:230256*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230256*0 + 3*720*FLEN/8, x4, x1, x2)

inst_76753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100007fffffffff; valaddr_reg:x3; val_offset:230259*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230259*0 + 3*721*FLEN/8, x4, x1, x2)

inst_76754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810000ffffffffff; valaddr_reg:x3; val_offset:230262*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230262*0 + 3*722*FLEN/8, x4, x1, x2)

inst_76755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810001ffffffffff; valaddr_reg:x3; val_offset:230265*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230265*0 + 3*723*FLEN/8, x4, x1, x2)

inst_76756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810003ffffffffff; valaddr_reg:x3; val_offset:230268*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230268*0 + 3*724*FLEN/8, x4, x1, x2)

inst_76757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810007ffffffffff; valaddr_reg:x3; val_offset:230271*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230271*0 + 3*725*FLEN/8, x4, x1, x2)

inst_76758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81000fffffffffff; valaddr_reg:x3; val_offset:230274*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230274*0 + 3*726*FLEN/8, x4, x1, x2)

inst_76759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81001fffffffffff; valaddr_reg:x3; val_offset:230277*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230277*0 + 3*727*FLEN/8, x4, x1, x2)

inst_76760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81003fffffffffff; valaddr_reg:x3; val_offset:230280*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230280*0 + 3*728*FLEN/8, x4, x1, x2)

inst_76761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x81007fffffffffff; valaddr_reg:x3; val_offset:230283*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230283*0 + 3*729*FLEN/8, x4, x1, x2)

inst_76762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8100ffffffffffff; valaddr_reg:x3; val_offset:230286*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230286*0 + 3*730*FLEN/8, x4, x1, x2)

inst_76763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8101ffffffffffff; valaddr_reg:x3; val_offset:230289*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230289*0 + 3*731*FLEN/8, x4, x1, x2)

inst_76764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8103ffffffffffff; valaddr_reg:x3; val_offset:230292*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230292*0 + 3*732*FLEN/8, x4, x1, x2)

inst_76765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8107ffffffffffff; valaddr_reg:x3; val_offset:230295*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230295*0 + 3*733*FLEN/8, x4, x1, x2)

inst_76766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x8108000000000000; valaddr_reg:x3; val_offset:230298*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230298*0 + 3*734*FLEN/8, x4, x1, x2)

inst_76767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810c000000000000; valaddr_reg:x3; val_offset:230301*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230301*0 + 3*735*FLEN/8, x4, x1, x2)

inst_76768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810e000000000000; valaddr_reg:x3; val_offset:230304*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230304*0 + 3*736*FLEN/8, x4, x1, x2)

inst_76769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810f000000000000; valaddr_reg:x3; val_offset:230307*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230307*0 + 3*737*FLEN/8, x4, x1, x2)

inst_76770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810f800000000000; valaddr_reg:x3; val_offset:230310*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230310*0 + 3*738*FLEN/8, x4, x1, x2)

inst_76771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fc00000000000; valaddr_reg:x3; val_offset:230313*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230313*0 + 3*739*FLEN/8, x4, x1, x2)

inst_76772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fe00000000000; valaddr_reg:x3; val_offset:230316*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230316*0 + 3*740*FLEN/8, x4, x1, x2)

inst_76773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ff00000000000; valaddr_reg:x3; val_offset:230319*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230319*0 + 3*741*FLEN/8, x4, x1, x2)

inst_76774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ff80000000000; valaddr_reg:x3; val_offset:230322*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230322*0 + 3*742*FLEN/8, x4, x1, x2)

inst_76775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffc0000000000; valaddr_reg:x3; val_offset:230325*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230325*0 + 3*743*FLEN/8, x4, x1, x2)

inst_76776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffe0000000000; valaddr_reg:x3; val_offset:230328*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230328*0 + 3*744*FLEN/8, x4, x1, x2)

inst_76777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fff0000000000; valaddr_reg:x3; val_offset:230331*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230331*0 + 3*745*FLEN/8, x4, x1, x2)

inst_76778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fff8000000000; valaddr_reg:x3; val_offset:230334*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230334*0 + 3*746*FLEN/8, x4, x1, x2)

inst_76779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffc000000000; valaddr_reg:x3; val_offset:230337*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230337*0 + 3*747*FLEN/8, x4, x1, x2)

inst_76780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffe000000000; valaddr_reg:x3; val_offset:230340*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230340*0 + 3*748*FLEN/8, x4, x1, x2)

inst_76781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffff000000000; valaddr_reg:x3; val_offset:230343*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230343*0 + 3*749*FLEN/8, x4, x1, x2)

inst_76782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffff800000000; valaddr_reg:x3; val_offset:230346*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230346*0 + 3*750*FLEN/8, x4, x1, x2)

inst_76783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffc00000000; valaddr_reg:x3; val_offset:230349*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230349*0 + 3*751*FLEN/8, x4, x1, x2)

inst_76784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffe00000000; valaddr_reg:x3; val_offset:230352*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230352*0 + 3*752*FLEN/8, x4, x1, x2)

inst_76785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffff00000000; valaddr_reg:x3; val_offset:230355*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230355*0 + 3*753*FLEN/8, x4, x1, x2)

inst_76786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffff80000000; valaddr_reg:x3; val_offset:230358*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230358*0 + 3*754*FLEN/8, x4, x1, x2)

inst_76787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffc0000000; valaddr_reg:x3; val_offset:230361*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230361*0 + 3*755*FLEN/8, x4, x1, x2)

inst_76788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffe0000000; valaddr_reg:x3; val_offset:230364*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230364*0 + 3*756*FLEN/8, x4, x1, x2)

inst_76789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffff0000000; valaddr_reg:x3; val_offset:230367*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230367*0 + 3*757*FLEN/8, x4, x1, x2)

inst_76790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffff8000000; valaddr_reg:x3; val_offset:230370*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230370*0 + 3*758*FLEN/8, x4, x1, x2)

inst_76791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffc000000; valaddr_reg:x3; val_offset:230373*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230373*0 + 3*759*FLEN/8, x4, x1, x2)

inst_76792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffe000000; valaddr_reg:x3; val_offset:230376*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230376*0 + 3*760*FLEN/8, x4, x1, x2)

inst_76793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffff000000; valaddr_reg:x3; val_offset:230379*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230379*0 + 3*761*FLEN/8, x4, x1, x2)

inst_76794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffff800000; valaddr_reg:x3; val_offset:230382*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230382*0 + 3*762*FLEN/8, x4, x1, x2)

inst_76795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffc00000; valaddr_reg:x3; val_offset:230385*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230385*0 + 3*763*FLEN/8, x4, x1, x2)

inst_76796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810fffffffe00000; valaddr_reg:x3; val_offset:230388*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230388*0 + 3*764*FLEN/8, x4, x1, x2)

inst_76797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffff00000; valaddr_reg:x3; val_offset:230391*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230391*0 + 3*765*FLEN/8, x4, x1, x2)

inst_76798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffff80000; valaddr_reg:x3; val_offset:230394*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230394*0 + 3*766*FLEN/8, x4, x1, x2)

inst_76799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7e998c80d887d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7e998c80d887d; op2val:0x8000;
op3val:0x810ffffffffc0000; valaddr_reg:x3; val_offset:230397*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 230397*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584185319424,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584453754880,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584587972608,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584655081472,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584688635904,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584705413120,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584713801728,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584717996032,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584720093184,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721141760,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721666048,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584721928192,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722059264,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722124800,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722157568,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722173952,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722182144,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722186240,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722188288,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189312,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722189824,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190080,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190208,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190272,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190304,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190320,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190328,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190332,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190334,64,FLEN)
NAN_BOXED(6892697500295409162,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190335,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579124359168,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579128553472,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579130650624,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579131699200,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132223488,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132485632,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132616704,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132682240,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132715008,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132731392,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132739584,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132743680,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132745728,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132746752,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747264,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747520,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747648,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747712,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747744,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747760,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747768,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747772,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747774,64,FLEN)
NAN_BOXED(6892702760453573308,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747775,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405760,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405761,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405763,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405767,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405775,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405791,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405823,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332405887,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332406015,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332406271,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332406783,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332407807,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332409855,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332413951,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332422143,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332438527,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332471295,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332536831,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332667903,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906332930047,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906333454335,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906334502911,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906336600063,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906340794367,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906349182975,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906365960191,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906399514623,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906466623487,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906600841215,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064906869276671,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064907406147583,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064908479889407,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064910627373055,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064914922340351,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064923512274943,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064940692144127,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218064975051882495,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218065043771359231,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218065181210312703,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218065456088219647,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218066005844033535,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218067105355661311,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218069304378916863,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218073702425427967,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218082498518450175,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218100090704494591,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218135275076583423,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218205643820761087,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218346381309116415,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13218627856285827071,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13219190806239248383,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13220316706146091007,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13220316706146091008,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13221442606052933632,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222005556006354944,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222287030983065600,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222427768471420928,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222498137215598592,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222533321587687424,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222550913773731840,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222559709866754048,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222564107913265152,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222566306936520704,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222567406448148480,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222567956203962368,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568231081869312,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568368520822784,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568437240299520,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568471600037888,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568488779907072,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568497369841664,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568501664808960,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568503812292608,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568504886034432,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505422905344,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505691340800,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505825558528,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505892667392,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505926221824,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505942999040,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505951387648,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505955581952,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505957679104,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505958727680,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959251968,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959514112,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959645184,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959710720,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959743488,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959759872,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959768064,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959772160,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959774208,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959775232,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959775744,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776000,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776128,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776192,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776224,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776240,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776248,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776252,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776254,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13222568505959776255,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892705244290043041,64,FLEN)
NAN_BOXED(11512750221032371685,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930112,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930113,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930115,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930119,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930127,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930143,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930175,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930239,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930367,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930623,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595931135,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595932159,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595934207,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595938303,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595946495,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595962879,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595995647,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596061183,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596192255,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596454399,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596978687,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418598027263,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418600124415,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418604318719,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418612707327,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418629484543,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418663038975,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418730147839,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418864365567,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419132801023,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419669671935,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048420743413759,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048422890897407,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048427185864703,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048435775799295,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048452955668479,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048487315406847,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048556034883583,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048693473837055,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048968351743999,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444049518107557887,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444050617619185663,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444052816642441215,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444057214688952319,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444066010781974527,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444083602968018943,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444118787340107775,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444189156084285439,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444329893572640767,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444611368549351423,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9445174318502772735,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615359,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615360,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447426118316457984,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447989068269879296,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448270543246589952,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448411280734945280,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448481649479122944,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448516833851211776,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448534426037256192,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448543222130278400,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448547620176789504,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448549819200045056,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448550918711672832,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551468467486720,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551743345393664,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551880784347136,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551949503823872,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018214912000,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018219106304,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018221203456,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222252032,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222776320,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223038464,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223169536,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223235072,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223267840,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223284224,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223292416,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223296512,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223298560,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223299584,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300096,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300352,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300480,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300544,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300576,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300592,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300600,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300604,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300606,64,FLEN)
NAN_BOXED(6892710866594642011,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300607,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268416,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268417,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268419,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268423,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268431,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268447,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268479,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268543,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268671,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286268927,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286269439,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286270463,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286272511,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286276607,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286284799,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286301183,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286333951,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286399487,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286530559,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474286792703,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474287316991,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474288365567,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474290462719,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474294657023,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474303045631,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474319822847,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474353377279,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474420486143,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474554703871,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374474823139327,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374475360010239,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374476433752063,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374478581235711,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374482876203007,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374491466137599,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374508646006783,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374543005745151,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374611725221887,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605374749164175359,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605375024042082303,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605375573797896191,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605376673309523967,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605378872332779519,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605383270379290623,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605392066472312831,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605409658658357247,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605444843030446079,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605515211774623743,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605655949262979071,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13605937424239689727,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13606500374193111039,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13607626274099953663,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13607626274099953664,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13608752174006796288,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609315123960217600,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609596598936928256,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609737336425283584,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609807705169461248,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609842889541550080,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609860481727594496,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609869277820616704,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609873675867127808,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609875874890383360,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609876974402011136,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609877524157825024,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609877799035731968,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609877936474685440,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878005194162176,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878039553900544,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878056733769728,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878065323704320,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878069618671616,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878071766155264,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878072839897088,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073376768000,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073645203456,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073779421184,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073846530048,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073880084480,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073896861696,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073905250304,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073909444608,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073911541760,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073912590336,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913114624,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913376768,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913507840,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913573376,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913606144,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913622528,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913630720,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913634816,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913636864,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913637888,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638400,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638656,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638784,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638848,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638880,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638896,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638904,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638908,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638910,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13609878073913638911,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892724866193202988,64,FLEN)
NAN_BOXED(11512732548938755749,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005568,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005569,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005571,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005575,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005583,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005599,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005631,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005695,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497005823,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006079,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497006591,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497007615,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497009663,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497013759,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497021951,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497038335,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497071103,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497136639,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497267711,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014497529855,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014498054143,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014499102719,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014501199871,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014505394175,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014513782783,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014530559999,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014564114431,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014631223295,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588014765441023,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015033876479,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588015570747391,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588016644489215,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588018791972863,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588023086940159,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588031676874751,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588048856743935,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588083216482303,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588151935959039,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588289374912511,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493588564252819455,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493589114008633343,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493590213520261119,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493592412543516671,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493596810590027775,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493605606683049983,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493623198869094399,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493658383241183231,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493728751985360895,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9493869489473716223,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494150964450426879,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9494713914403848191,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690815,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9495839814310690816,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9496965714217533440,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497528664170954752,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497810139147665408,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9497950876636020736,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498021245380198400,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498056429752287232,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498074021938331648,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498082818031353856,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498087216077864960,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498089415101120512,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498090514612748288,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091064368562176,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091339246469120,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091476685422592,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091545404899328,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091579764637696,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091596944506880,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091605534441472,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091609829408768,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091611976892416,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613050634240,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613587505152,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613855940608,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091613990158336,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614057267200,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614090821632,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614107598848,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614115987456,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614120181760,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614122278912,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123327488,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614123851776,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124113920,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124244992,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124310528,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124343296,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124359680,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124367872,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124371968,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124374016,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375040,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375552,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375808,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124375936,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376000,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376032,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376048,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376056,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376060,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376062,64,FLEN)
NAN_BOXED(6892729046897706691,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9498091614124376063,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703744,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703745,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703747,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703751,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703759,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703775,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703807,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703871,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703999,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704255,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704767,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892705791,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892707839,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892711935,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892720127,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892736511,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892769279,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892834815,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892965887,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893228031,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893752319,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630894800895,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630896898047,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630901092351,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630909480959,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630926258175,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630959812607,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631026921471,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631161139199,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631429574655,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631966445567,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429633040187391,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429635187671039,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429639482638335,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429648072572927,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429665252442111,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429699612180479,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429768331657215,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429905770610687,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430180648517631,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430730404331519,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295431829915959295,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295434028939214847,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295438426985725951,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295447223078748159,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295464815264792575,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295499999636881407,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295570368381059071,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295711105869414399,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295992580846125055,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9296555530799546367,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388991,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388992,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9298807330613231616,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299370280566652928,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299651755543363584,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299792493031718912,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299862861775896576,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299898046147985408,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299915638334029824,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299924434427052032,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299928832473563136,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299931031496818688,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932131008446464,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932680764260352,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932955642167296,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933093081120768,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933161800597504,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933196160335872,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933213340205056,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933221930139648,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933226225106944,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933228372590592,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229446332416,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229983203328,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230251638784,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230385856512,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230452965376,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230486519808,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230503297024,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230511685632,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230515879936,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230517977088,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519025664,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519549952,64,FLEN)
NAN_BOXED(6892734597114464381,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519812096,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
