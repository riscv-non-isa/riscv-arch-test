
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_46080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffe0000000000; valaddr_reg:x3; val_offset:138240*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138240*0 + 3*0*FLEN/8, x4, x1, x2)

inst_46081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffff0000000000; valaddr_reg:x3; val_offset:138243*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138243*0 + 3*1*FLEN/8, x4, x1, x2)

inst_46082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffff8000000000; valaddr_reg:x3; val_offset:138246*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138246*0 + 3*2*FLEN/8, x4, x1, x2)

inst_46083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffc000000000; valaddr_reg:x3; val_offset:138249*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138249*0 + 3*3*FLEN/8, x4, x1, x2)

inst_46084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffe000000000; valaddr_reg:x3; val_offset:138252*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138252*0 + 3*4*FLEN/8, x4, x1, x2)

inst_46085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffff000000000; valaddr_reg:x3; val_offset:138255*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138255*0 + 3*5*FLEN/8, x4, x1, x2)

inst_46086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffff800000000; valaddr_reg:x3; val_offset:138258*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138258*0 + 3*6*FLEN/8, x4, x1, x2)

inst_46087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffc00000000; valaddr_reg:x3; val_offset:138261*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138261*0 + 3*7*FLEN/8, x4, x1, x2)

inst_46088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffe00000000; valaddr_reg:x3; val_offset:138264*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138264*0 + 3*8*FLEN/8, x4, x1, x2)

inst_46089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffff00000000; valaddr_reg:x3; val_offset:138267*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138267*0 + 3*9*FLEN/8, x4, x1, x2)

inst_46090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffff80000000; valaddr_reg:x3; val_offset:138270*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138270*0 + 3*10*FLEN/8, x4, x1, x2)

inst_46091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffc0000000; valaddr_reg:x3; val_offset:138273*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138273*0 + 3*11*FLEN/8, x4, x1, x2)

inst_46092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffe0000000; valaddr_reg:x3; val_offset:138276*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138276*0 + 3*12*FLEN/8, x4, x1, x2)

inst_46093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffff0000000; valaddr_reg:x3; val_offset:138279*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138279*0 + 3*13*FLEN/8, x4, x1, x2)

inst_46094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffff8000000; valaddr_reg:x3; val_offset:138282*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138282*0 + 3*14*FLEN/8, x4, x1, x2)

inst_46095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffc000000; valaddr_reg:x3; val_offset:138285*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138285*0 + 3*15*FLEN/8, x4, x1, x2)

inst_46096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffe000000; valaddr_reg:x3; val_offset:138288*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138288*0 + 3*16*FLEN/8, x4, x1, x2)

inst_46097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffff000000; valaddr_reg:x3; val_offset:138291*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138291*0 + 3*17*FLEN/8, x4, x1, x2)

inst_46098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffff800000; valaddr_reg:x3; val_offset:138294*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138294*0 + 3*18*FLEN/8, x4, x1, x2)

inst_46099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffc00000; valaddr_reg:x3; val_offset:138297*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138297*0 + 3*19*FLEN/8, x4, x1, x2)

inst_46100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffe00000; valaddr_reg:x3; val_offset:138300*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138300*0 + 3*20*FLEN/8, x4, x1, x2)

inst_46101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffff00000; valaddr_reg:x3; val_offset:138303*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138303*0 + 3*21*FLEN/8, x4, x1, x2)

inst_46102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffff80000; valaddr_reg:x3; val_offset:138306*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138306*0 + 3*22*FLEN/8, x4, x1, x2)

inst_46103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffc0000; valaddr_reg:x3; val_offset:138309*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138309*0 + 3*23*FLEN/8, x4, x1, x2)

inst_46104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffe0000; valaddr_reg:x3; val_offset:138312*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138312*0 + 3*24*FLEN/8, x4, x1, x2)

inst_46105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffff0000; valaddr_reg:x3; val_offset:138315*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138315*0 + 3*25*FLEN/8, x4, x1, x2)

inst_46106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffff8000; valaddr_reg:x3; val_offset:138318*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138318*0 + 3*26*FLEN/8, x4, x1, x2)

inst_46107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffffc000; valaddr_reg:x3; val_offset:138321*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138321*0 + 3*27*FLEN/8, x4, x1, x2)

inst_46108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffffe000; valaddr_reg:x3; val_offset:138324*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138324*0 + 3*28*FLEN/8, x4, x1, x2)

inst_46109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffff000; valaddr_reg:x3; val_offset:138327*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138327*0 + 3*29*FLEN/8, x4, x1, x2)

inst_46110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffff800; valaddr_reg:x3; val_offset:138330*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138330*0 + 3*30*FLEN/8, x4, x1, x2)

inst_46111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffffc00; valaddr_reg:x3; val_offset:138333*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138333*0 + 3*31*FLEN/8, x4, x1, x2)

inst_46112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffffe00; valaddr_reg:x3; val_offset:138336*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138336*0 + 3*32*FLEN/8, x4, x1, x2)

inst_46113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffffff00; valaddr_reg:x3; val_offset:138339*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138339*0 + 3*33*FLEN/8, x4, x1, x2)

inst_46114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffffff80; valaddr_reg:x3; val_offset:138342*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138342*0 + 3*34*FLEN/8, x4, x1, x2)

inst_46115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffffffc0; valaddr_reg:x3; val_offset:138345*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138345*0 + 3*35*FLEN/8, x4, x1, x2)

inst_46116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffffffe0; valaddr_reg:x3; val_offset:138348*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138348*0 + 3*36*FLEN/8, x4, x1, x2)

inst_46117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffffff0; valaddr_reg:x3; val_offset:138351*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138351*0 + 3*37*FLEN/8, x4, x1, x2)

inst_46118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffffff8; valaddr_reg:x3; val_offset:138354*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138354*0 + 3*38*FLEN/8, x4, x1, x2)

inst_46119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffffffc; valaddr_reg:x3; val_offset:138357*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138357*0 + 3*39*FLEN/8, x4, x1, x2)

inst_46120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80fffffffffffffe; valaddr_reg:x3; val_offset:138360*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138360*0 + 3*40*FLEN/8, x4, x1, x2)

inst_46121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcb60dec30a1ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cb60dec30a1ef; op2val:0x8000;
op3val:0x80ffffffffffffff; valaddr_reg:x3; val_offset:138363*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138363*0 + 3*41*FLEN/8, x4, x1, x2)

inst_46122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:138366*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138366*0 + 3*42*FLEN/8, x4, x1, x2)

inst_46123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:138369*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138369*0 + 3*43*FLEN/8, x4, x1, x2)

inst_46124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:138372*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138372*0 + 3*44*FLEN/8, x4, x1, x2)

inst_46125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:138375*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138375*0 + 3*45*FLEN/8, x4, x1, x2)

inst_46126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:138378*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138378*0 + 3*46*FLEN/8, x4, x1, x2)

inst_46127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:138381*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138381*0 + 3*47*FLEN/8, x4, x1, x2)

inst_46128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:138384*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138384*0 + 3*48*FLEN/8, x4, x1, x2)

inst_46129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:138387*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138387*0 + 3*49*FLEN/8, x4, x1, x2)

inst_46130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:138390*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138390*0 + 3*50*FLEN/8, x4, x1, x2)

inst_46131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:138393*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138393*0 + 3*51*FLEN/8, x4, x1, x2)

inst_46132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:138396*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138396*0 + 3*52*FLEN/8, x4, x1, x2)

inst_46133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:138399*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138399*0 + 3*53*FLEN/8, x4, x1, x2)

inst_46134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:138402*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138402*0 + 3*54*FLEN/8, x4, x1, x2)

inst_46135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:138405*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138405*0 + 3*55*FLEN/8, x4, x1, x2)

inst_46136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:138408*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138408*0 + 3*56*FLEN/8, x4, x1, x2)

inst_46137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:138411*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138411*0 + 3*57*FLEN/8, x4, x1, x2)

inst_46138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:138414*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138414*0 + 3*58*FLEN/8, x4, x1, x2)

inst_46139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:138417*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138417*0 + 3*59*FLEN/8, x4, x1, x2)

inst_46140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:138420*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138420*0 + 3*60*FLEN/8, x4, x1, x2)

inst_46141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:138423*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138423*0 + 3*61*FLEN/8, x4, x1, x2)

inst_46142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:138426*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138426*0 + 3*62*FLEN/8, x4, x1, x2)

inst_46143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:138429*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138429*0 + 3*63*FLEN/8, x4, x1, x2)

inst_46144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000000000; valaddr_reg:x3; val_offset:138432*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138432*0 + 3*64*FLEN/8, x4, x1, x2)

inst_46145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000000001; valaddr_reg:x3; val_offset:138435*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138435*0 + 3*65*FLEN/8, x4, x1, x2)

inst_46146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000000003; valaddr_reg:x3; val_offset:138438*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138438*0 + 3*66*FLEN/8, x4, x1, x2)

inst_46147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000000007; valaddr_reg:x3; val_offset:138441*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138441*0 + 3*67*FLEN/8, x4, x1, x2)

inst_46148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000000000f; valaddr_reg:x3; val_offset:138444*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138444*0 + 3*68*FLEN/8, x4, x1, x2)

inst_46149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000000001f; valaddr_reg:x3; val_offset:138447*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138447*0 + 3*69*FLEN/8, x4, x1, x2)

inst_46150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000000003f; valaddr_reg:x3; val_offset:138450*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138450*0 + 3*70*FLEN/8, x4, x1, x2)

inst_46151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000000007f; valaddr_reg:x3; val_offset:138453*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138453*0 + 3*71*FLEN/8, x4, x1, x2)

inst_46152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000000000ff; valaddr_reg:x3; val_offset:138456*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138456*0 + 3*72*FLEN/8, x4, x1, x2)

inst_46153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000000001ff; valaddr_reg:x3; val_offset:138459*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138459*0 + 3*73*FLEN/8, x4, x1, x2)

inst_46154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000000003ff; valaddr_reg:x3; val_offset:138462*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138462*0 + 3*74*FLEN/8, x4, x1, x2)

inst_46155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000000007ff; valaddr_reg:x3; val_offset:138465*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138465*0 + 3*75*FLEN/8, x4, x1, x2)

inst_46156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000000fff; valaddr_reg:x3; val_offset:138468*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138468*0 + 3*76*FLEN/8, x4, x1, x2)

inst_46157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000001fff; valaddr_reg:x3; val_offset:138471*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138471*0 + 3*77*FLEN/8, x4, x1, x2)

inst_46158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000003fff; valaddr_reg:x3; val_offset:138474*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138474*0 + 3*78*FLEN/8, x4, x1, x2)

inst_46159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000007fff; valaddr_reg:x3; val_offset:138477*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138477*0 + 3*79*FLEN/8, x4, x1, x2)

inst_46160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000000ffff; valaddr_reg:x3; val_offset:138480*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138480*0 + 3*80*FLEN/8, x4, x1, x2)

inst_46161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000001ffff; valaddr_reg:x3; val_offset:138483*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138483*0 + 3*81*FLEN/8, x4, x1, x2)

inst_46162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000003ffff; valaddr_reg:x3; val_offset:138486*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138486*0 + 3*82*FLEN/8, x4, x1, x2)

inst_46163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000007ffff; valaddr_reg:x3; val_offset:138489*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138489*0 + 3*83*FLEN/8, x4, x1, x2)

inst_46164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000000fffff; valaddr_reg:x3; val_offset:138492*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138492*0 + 3*84*FLEN/8, x4, x1, x2)

inst_46165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000001fffff; valaddr_reg:x3; val_offset:138495*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138495*0 + 3*85*FLEN/8, x4, x1, x2)

inst_46166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000003fffff; valaddr_reg:x3; val_offset:138498*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138498*0 + 3*86*FLEN/8, x4, x1, x2)

inst_46167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000007fffff; valaddr_reg:x3; val_offset:138501*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138501*0 + 3*87*FLEN/8, x4, x1, x2)

inst_46168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000000ffffff; valaddr_reg:x3; val_offset:138504*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138504*0 + 3*88*FLEN/8, x4, x1, x2)

inst_46169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000001ffffff; valaddr_reg:x3; val_offset:138507*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138507*0 + 3*89*FLEN/8, x4, x1, x2)

inst_46170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000003ffffff; valaddr_reg:x3; val_offset:138510*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138510*0 + 3*90*FLEN/8, x4, x1, x2)

inst_46171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000007ffffff; valaddr_reg:x3; val_offset:138513*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138513*0 + 3*91*FLEN/8, x4, x1, x2)

inst_46172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000000fffffff; valaddr_reg:x3; val_offset:138516*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138516*0 + 3*92*FLEN/8, x4, x1, x2)

inst_46173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000001fffffff; valaddr_reg:x3; val_offset:138519*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138519*0 + 3*93*FLEN/8, x4, x1, x2)

inst_46174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000003fffffff; valaddr_reg:x3; val_offset:138522*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138522*0 + 3*94*FLEN/8, x4, x1, x2)

inst_46175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000007fffffff; valaddr_reg:x3; val_offset:138525*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138525*0 + 3*95*FLEN/8, x4, x1, x2)

inst_46176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00000ffffffff; valaddr_reg:x3; val_offset:138528*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138528*0 + 3*96*FLEN/8, x4, x1, x2)

inst_46177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00001ffffffff; valaddr_reg:x3; val_offset:138531*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138531*0 + 3*97*FLEN/8, x4, x1, x2)

inst_46178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00003ffffffff; valaddr_reg:x3; val_offset:138534*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138534*0 + 3*98*FLEN/8, x4, x1, x2)

inst_46179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00007ffffffff; valaddr_reg:x3; val_offset:138537*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138537*0 + 3*99*FLEN/8, x4, x1, x2)

inst_46180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0000fffffffff; valaddr_reg:x3; val_offset:138540*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138540*0 + 3*100*FLEN/8, x4, x1, x2)

inst_46181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0001fffffffff; valaddr_reg:x3; val_offset:138543*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138543*0 + 3*101*FLEN/8, x4, x1, x2)

inst_46182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0003fffffffff; valaddr_reg:x3; val_offset:138546*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138546*0 + 3*102*FLEN/8, x4, x1, x2)

inst_46183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0007fffffffff; valaddr_reg:x3; val_offset:138549*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138549*0 + 3*103*FLEN/8, x4, x1, x2)

inst_46184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e000ffffffffff; valaddr_reg:x3; val_offset:138552*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138552*0 + 3*104*FLEN/8, x4, x1, x2)

inst_46185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e001ffffffffff; valaddr_reg:x3; val_offset:138555*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138555*0 + 3*105*FLEN/8, x4, x1, x2)

inst_46186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e003ffffffffff; valaddr_reg:x3; val_offset:138558*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138558*0 + 3*106*FLEN/8, x4, x1, x2)

inst_46187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e007ffffffffff; valaddr_reg:x3; val_offset:138561*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138561*0 + 3*107*FLEN/8, x4, x1, x2)

inst_46188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e00fffffffffff; valaddr_reg:x3; val_offset:138564*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138564*0 + 3*108*FLEN/8, x4, x1, x2)

inst_46189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e01fffffffffff; valaddr_reg:x3; val_offset:138567*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138567*0 + 3*109*FLEN/8, x4, x1, x2)

inst_46190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e03fffffffffff; valaddr_reg:x3; val_offset:138570*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138570*0 + 3*110*FLEN/8, x4, x1, x2)

inst_46191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e07fffffffffff; valaddr_reg:x3; val_offset:138573*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138573*0 + 3*111*FLEN/8, x4, x1, x2)

inst_46192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e0ffffffffffff; valaddr_reg:x3; val_offset:138576*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138576*0 + 3*112*FLEN/8, x4, x1, x2)

inst_46193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e1ffffffffffff; valaddr_reg:x3; val_offset:138579*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138579*0 + 3*113*FLEN/8, x4, x1, x2)

inst_46194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e3ffffffffffff; valaddr_reg:x3; val_offset:138582*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138582*0 + 3*114*FLEN/8, x4, x1, x2)

inst_46195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e7ffffffffffff; valaddr_reg:x3; val_offset:138585*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138585*0 + 3*115*FLEN/8, x4, x1, x2)

inst_46196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81e8000000000000; valaddr_reg:x3; val_offset:138588*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138588*0 + 3*116*FLEN/8, x4, x1, x2)

inst_46197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81ec000000000000; valaddr_reg:x3; val_offset:138591*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138591*0 + 3*117*FLEN/8, x4, x1, x2)

inst_46198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81ee000000000000; valaddr_reg:x3; val_offset:138594*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138594*0 + 3*118*FLEN/8, x4, x1, x2)

inst_46199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81ef000000000000; valaddr_reg:x3; val_offset:138597*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138597*0 + 3*119*FLEN/8, x4, x1, x2)

inst_46200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81ef800000000000; valaddr_reg:x3; val_offset:138600*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138600*0 + 3*120*FLEN/8, x4, x1, x2)

inst_46201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efc00000000000; valaddr_reg:x3; val_offset:138603*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138603*0 + 3*121*FLEN/8, x4, x1, x2)

inst_46202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efe00000000000; valaddr_reg:x3; val_offset:138606*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138606*0 + 3*122*FLEN/8, x4, x1, x2)

inst_46203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81eff00000000000; valaddr_reg:x3; val_offset:138609*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138609*0 + 3*123*FLEN/8, x4, x1, x2)

inst_46204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81eff80000000000; valaddr_reg:x3; val_offset:138612*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138612*0 + 3*124*FLEN/8, x4, x1, x2)

inst_46205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effc0000000000; valaddr_reg:x3; val_offset:138615*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138615*0 + 3*125*FLEN/8, x4, x1, x2)

inst_46206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effe0000000000; valaddr_reg:x3; val_offset:138618*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138618*0 + 3*126*FLEN/8, x4, x1, x2)

inst_46207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efff0000000000; valaddr_reg:x3; val_offset:138621*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138621*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_46208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efff8000000000; valaddr_reg:x3; val_offset:138624*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138624*0 + 3*128*FLEN/8, x4, x1, x2)

inst_46209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffc000000000; valaddr_reg:x3; val_offset:138627*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138627*0 + 3*129*FLEN/8, x4, x1, x2)

inst_46210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffe000000000; valaddr_reg:x3; val_offset:138630*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138630*0 + 3*130*FLEN/8, x4, x1, x2)

inst_46211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effff000000000; valaddr_reg:x3; val_offset:138633*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138633*0 + 3*131*FLEN/8, x4, x1, x2)

inst_46212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effff800000000; valaddr_reg:x3; val_offset:138636*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138636*0 + 3*132*FLEN/8, x4, x1, x2)

inst_46213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffc00000000; valaddr_reg:x3; val_offset:138639*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138639*0 + 3*133*FLEN/8, x4, x1, x2)

inst_46214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffe00000000; valaddr_reg:x3; val_offset:138642*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138642*0 + 3*134*FLEN/8, x4, x1, x2)

inst_46215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffff00000000; valaddr_reg:x3; val_offset:138645*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138645*0 + 3*135*FLEN/8, x4, x1, x2)

inst_46216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffff80000000; valaddr_reg:x3; val_offset:138648*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138648*0 + 3*136*FLEN/8, x4, x1, x2)

inst_46217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffc0000000; valaddr_reg:x3; val_offset:138651*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138651*0 + 3*137*FLEN/8, x4, x1, x2)

inst_46218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffe0000000; valaddr_reg:x3; val_offset:138654*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138654*0 + 3*138*FLEN/8, x4, x1, x2)

inst_46219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffff0000000; valaddr_reg:x3; val_offset:138657*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138657*0 + 3*139*FLEN/8, x4, x1, x2)

inst_46220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffff8000000; valaddr_reg:x3; val_offset:138660*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138660*0 + 3*140*FLEN/8, x4, x1, x2)

inst_46221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffc000000; valaddr_reg:x3; val_offset:138663*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138663*0 + 3*141*FLEN/8, x4, x1, x2)

inst_46222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffe000000; valaddr_reg:x3; val_offset:138666*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138666*0 + 3*142*FLEN/8, x4, x1, x2)

inst_46223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffff000000; valaddr_reg:x3; val_offset:138669*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138669*0 + 3*143*FLEN/8, x4, x1, x2)

inst_46224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffff800000; valaddr_reg:x3; val_offset:138672*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138672*0 + 3*144*FLEN/8, x4, x1, x2)

inst_46225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffc00000; valaddr_reg:x3; val_offset:138675*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138675*0 + 3*145*FLEN/8, x4, x1, x2)

inst_46226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffe00000; valaddr_reg:x3; val_offset:138678*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138678*0 + 3*146*FLEN/8, x4, x1, x2)

inst_46227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffff00000; valaddr_reg:x3; val_offset:138681*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138681*0 + 3*147*FLEN/8, x4, x1, x2)

inst_46228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffff80000; valaddr_reg:x3; val_offset:138684*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138684*0 + 3*148*FLEN/8, x4, x1, x2)

inst_46229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffc0000; valaddr_reg:x3; val_offset:138687*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138687*0 + 3*149*FLEN/8, x4, x1, x2)

inst_46230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffe0000; valaddr_reg:x3; val_offset:138690*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138690*0 + 3*150*FLEN/8, x4, x1, x2)

inst_46231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffff0000; valaddr_reg:x3; val_offset:138693*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138693*0 + 3*151*FLEN/8, x4, x1, x2)

inst_46232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffff8000; valaddr_reg:x3; val_offset:138696*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138696*0 + 3*152*FLEN/8, x4, x1, x2)

inst_46233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffffc000; valaddr_reg:x3; val_offset:138699*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138699*0 + 3*153*FLEN/8, x4, x1, x2)

inst_46234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffffe000; valaddr_reg:x3; val_offset:138702*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138702*0 + 3*154*FLEN/8, x4, x1, x2)

inst_46235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffff000; valaddr_reg:x3; val_offset:138705*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138705*0 + 3*155*FLEN/8, x4, x1, x2)

inst_46236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffff800; valaddr_reg:x3; val_offset:138708*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138708*0 + 3*156*FLEN/8, x4, x1, x2)

inst_46237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffffc00; valaddr_reg:x3; val_offset:138711*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138711*0 + 3*157*FLEN/8, x4, x1, x2)

inst_46238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffffe00; valaddr_reg:x3; val_offset:138714*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138714*0 + 3*158*FLEN/8, x4, x1, x2)

inst_46239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffffff00; valaddr_reg:x3; val_offset:138717*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138717*0 + 3*159*FLEN/8, x4, x1, x2)

inst_46240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffffff80; valaddr_reg:x3; val_offset:138720*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138720*0 + 3*160*FLEN/8, x4, x1, x2)

inst_46241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffffffc0; valaddr_reg:x3; val_offset:138723*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138723*0 + 3*161*FLEN/8, x4, x1, x2)

inst_46242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffffffe0; valaddr_reg:x3; val_offset:138726*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138726*0 + 3*162*FLEN/8, x4, x1, x2)

inst_46243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffffff0; valaddr_reg:x3; val_offset:138729*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138729*0 + 3*163*FLEN/8, x4, x1, x2)

inst_46244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffffff8; valaddr_reg:x3; val_offset:138732*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138732*0 + 3*164*FLEN/8, x4, x1, x2)

inst_46245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffffffc; valaddr_reg:x3; val_offset:138735*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138735*0 + 3*165*FLEN/8, x4, x1, x2)

inst_46246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81effffffffffffe; valaddr_reg:x3; val_offset:138738*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138738*0 + 3*166*FLEN/8, x4, x1, x2)

inst_46247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcc5765acd3c57 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cc5765acd3c57; op2val:0x8000;
op3val:0x81efffffffffffff; valaddr_reg:x3; val_offset:138741*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138741*0 + 3*167*FLEN/8, x4, x1, x2)

inst_46248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000000000; valaddr_reg:x3; val_offset:138744*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138744*0 + 3*168*FLEN/8, x4, x1, x2)

inst_46249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000000001; valaddr_reg:x3; val_offset:138747*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138747*0 + 3*169*FLEN/8, x4, x1, x2)

inst_46250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000000003; valaddr_reg:x3; val_offset:138750*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138750*0 + 3*170*FLEN/8, x4, x1, x2)

inst_46251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000000007; valaddr_reg:x3; val_offset:138753*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138753*0 + 3*171*FLEN/8, x4, x1, x2)

inst_46252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000000000f; valaddr_reg:x3; val_offset:138756*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138756*0 + 3*172*FLEN/8, x4, x1, x2)

inst_46253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000000001f; valaddr_reg:x3; val_offset:138759*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138759*0 + 3*173*FLEN/8, x4, x1, x2)

inst_46254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000000003f; valaddr_reg:x3; val_offset:138762*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138762*0 + 3*174*FLEN/8, x4, x1, x2)

inst_46255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000000007f; valaddr_reg:x3; val_offset:138765*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138765*0 + 3*175*FLEN/8, x4, x1, x2)

inst_46256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000000000ff; valaddr_reg:x3; val_offset:138768*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138768*0 + 3*176*FLEN/8, x4, x1, x2)

inst_46257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000000001ff; valaddr_reg:x3; val_offset:138771*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138771*0 + 3*177*FLEN/8, x4, x1, x2)

inst_46258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000000003ff; valaddr_reg:x3; val_offset:138774*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138774*0 + 3*178*FLEN/8, x4, x1, x2)

inst_46259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000000007ff; valaddr_reg:x3; val_offset:138777*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138777*0 + 3*179*FLEN/8, x4, x1, x2)

inst_46260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000000fff; valaddr_reg:x3; val_offset:138780*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138780*0 + 3*180*FLEN/8, x4, x1, x2)

inst_46261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000001fff; valaddr_reg:x3; val_offset:138783*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138783*0 + 3*181*FLEN/8, x4, x1, x2)

inst_46262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000003fff; valaddr_reg:x3; val_offset:138786*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138786*0 + 3*182*FLEN/8, x4, x1, x2)

inst_46263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000007fff; valaddr_reg:x3; val_offset:138789*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138789*0 + 3*183*FLEN/8, x4, x1, x2)

inst_46264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000000ffff; valaddr_reg:x3; val_offset:138792*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138792*0 + 3*184*FLEN/8, x4, x1, x2)

inst_46265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000001ffff; valaddr_reg:x3; val_offset:138795*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138795*0 + 3*185*FLEN/8, x4, x1, x2)

inst_46266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000003ffff; valaddr_reg:x3; val_offset:138798*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138798*0 + 3*186*FLEN/8, x4, x1, x2)

inst_46267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000007ffff; valaddr_reg:x3; val_offset:138801*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138801*0 + 3*187*FLEN/8, x4, x1, x2)

inst_46268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000000fffff; valaddr_reg:x3; val_offset:138804*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138804*0 + 3*188*FLEN/8, x4, x1, x2)

inst_46269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000001fffff; valaddr_reg:x3; val_offset:138807*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138807*0 + 3*189*FLEN/8, x4, x1, x2)

inst_46270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000003fffff; valaddr_reg:x3; val_offset:138810*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138810*0 + 3*190*FLEN/8, x4, x1, x2)

inst_46271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000007fffff; valaddr_reg:x3; val_offset:138813*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138813*0 + 3*191*FLEN/8, x4, x1, x2)

inst_46272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000000ffffff; valaddr_reg:x3; val_offset:138816*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138816*0 + 3*192*FLEN/8, x4, x1, x2)

inst_46273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000001ffffff; valaddr_reg:x3; val_offset:138819*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138819*0 + 3*193*FLEN/8, x4, x1, x2)

inst_46274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000003ffffff; valaddr_reg:x3; val_offset:138822*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138822*0 + 3*194*FLEN/8, x4, x1, x2)

inst_46275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000007ffffff; valaddr_reg:x3; val_offset:138825*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138825*0 + 3*195*FLEN/8, x4, x1, x2)

inst_46276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000000fffffff; valaddr_reg:x3; val_offset:138828*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138828*0 + 3*196*FLEN/8, x4, x1, x2)

inst_46277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000001fffffff; valaddr_reg:x3; val_offset:138831*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138831*0 + 3*197*FLEN/8, x4, x1, x2)

inst_46278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000003fffffff; valaddr_reg:x3; val_offset:138834*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138834*0 + 3*198*FLEN/8, x4, x1, x2)

inst_46279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000007fffffff; valaddr_reg:x3; val_offset:138837*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138837*0 + 3*199*FLEN/8, x4, x1, x2)

inst_46280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700000ffffffff; valaddr_reg:x3; val_offset:138840*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138840*0 + 3*200*FLEN/8, x4, x1, x2)

inst_46281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700001ffffffff; valaddr_reg:x3; val_offset:138843*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138843*0 + 3*201*FLEN/8, x4, x1, x2)

inst_46282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700003ffffffff; valaddr_reg:x3; val_offset:138846*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138846*0 + 3*202*FLEN/8, x4, x1, x2)

inst_46283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700007ffffffff; valaddr_reg:x3; val_offset:138849*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138849*0 + 3*203*FLEN/8, x4, x1, x2)

inst_46284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870000fffffffff; valaddr_reg:x3; val_offset:138852*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138852*0 + 3*204*FLEN/8, x4, x1, x2)

inst_46285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870001fffffffff; valaddr_reg:x3; val_offset:138855*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138855*0 + 3*205*FLEN/8, x4, x1, x2)

inst_46286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870003fffffffff; valaddr_reg:x3; val_offset:138858*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138858*0 + 3*206*FLEN/8, x4, x1, x2)

inst_46287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870007fffffffff; valaddr_reg:x3; val_offset:138861*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138861*0 + 3*207*FLEN/8, x4, x1, x2)

inst_46288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87000ffffffffff; valaddr_reg:x3; val_offset:138864*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138864*0 + 3*208*FLEN/8, x4, x1, x2)

inst_46289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87001ffffffffff; valaddr_reg:x3; val_offset:138867*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138867*0 + 3*209*FLEN/8, x4, x1, x2)

inst_46290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87003ffffffffff; valaddr_reg:x3; val_offset:138870*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138870*0 + 3*210*FLEN/8, x4, x1, x2)

inst_46291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87007ffffffffff; valaddr_reg:x3; val_offset:138873*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138873*0 + 3*211*FLEN/8, x4, x1, x2)

inst_46292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8700fffffffffff; valaddr_reg:x3; val_offset:138876*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138876*0 + 3*212*FLEN/8, x4, x1, x2)

inst_46293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8701fffffffffff; valaddr_reg:x3; val_offset:138879*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138879*0 + 3*213*FLEN/8, x4, x1, x2)

inst_46294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8703fffffffffff; valaddr_reg:x3; val_offset:138882*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138882*0 + 3*214*FLEN/8, x4, x1, x2)

inst_46295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb8707fffffffffff; valaddr_reg:x3; val_offset:138885*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138885*0 + 3*215*FLEN/8, x4, x1, x2)

inst_46296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb870ffffffffffff; valaddr_reg:x3; val_offset:138888*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138888*0 + 3*216*FLEN/8, x4, x1, x2)

inst_46297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb871ffffffffffff; valaddr_reg:x3; val_offset:138891*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138891*0 + 3*217*FLEN/8, x4, x1, x2)

inst_46298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb873ffffffffffff; valaddr_reg:x3; val_offset:138894*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138894*0 + 3*218*FLEN/8, x4, x1, x2)

inst_46299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb877ffffffffffff; valaddr_reg:x3; val_offset:138897*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138897*0 + 3*219*FLEN/8, x4, x1, x2)

inst_46300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb878000000000000; valaddr_reg:x3; val_offset:138900*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138900*0 + 3*220*FLEN/8, x4, x1, x2)

inst_46301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87c000000000000; valaddr_reg:x3; val_offset:138903*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138903*0 + 3*221*FLEN/8, x4, x1, x2)

inst_46302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87e000000000000; valaddr_reg:x3; val_offset:138906*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138906*0 + 3*222*FLEN/8, x4, x1, x2)

inst_46303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87f000000000000; valaddr_reg:x3; val_offset:138909*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138909*0 + 3*223*FLEN/8, x4, x1, x2)

inst_46304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87f800000000000; valaddr_reg:x3; val_offset:138912*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138912*0 + 3*224*FLEN/8, x4, x1, x2)

inst_46305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fc00000000000; valaddr_reg:x3; val_offset:138915*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138915*0 + 3*225*FLEN/8, x4, x1, x2)

inst_46306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fe00000000000; valaddr_reg:x3; val_offset:138918*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138918*0 + 3*226*FLEN/8, x4, x1, x2)

inst_46307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ff00000000000; valaddr_reg:x3; val_offset:138921*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138921*0 + 3*227*FLEN/8, x4, x1, x2)

inst_46308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ff80000000000; valaddr_reg:x3; val_offset:138924*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138924*0 + 3*228*FLEN/8, x4, x1, x2)

inst_46309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffc0000000000; valaddr_reg:x3; val_offset:138927*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138927*0 + 3*229*FLEN/8, x4, x1, x2)

inst_46310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffe0000000000; valaddr_reg:x3; val_offset:138930*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138930*0 + 3*230*FLEN/8, x4, x1, x2)

inst_46311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fff0000000000; valaddr_reg:x3; val_offset:138933*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138933*0 + 3*231*FLEN/8, x4, x1, x2)

inst_46312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fff8000000000; valaddr_reg:x3; val_offset:138936*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138936*0 + 3*232*FLEN/8, x4, x1, x2)

inst_46313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffc000000000; valaddr_reg:x3; val_offset:138939*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138939*0 + 3*233*FLEN/8, x4, x1, x2)

inst_46314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffe000000000; valaddr_reg:x3; val_offset:138942*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138942*0 + 3*234*FLEN/8, x4, x1, x2)

inst_46315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffff000000000; valaddr_reg:x3; val_offset:138945*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138945*0 + 3*235*FLEN/8, x4, x1, x2)

inst_46316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffff800000000; valaddr_reg:x3; val_offset:138948*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138948*0 + 3*236*FLEN/8, x4, x1, x2)

inst_46317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffc00000000; valaddr_reg:x3; val_offset:138951*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138951*0 + 3*237*FLEN/8, x4, x1, x2)

inst_46318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffe00000000; valaddr_reg:x3; val_offset:138954*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138954*0 + 3*238*FLEN/8, x4, x1, x2)

inst_46319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffff00000000; valaddr_reg:x3; val_offset:138957*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138957*0 + 3*239*FLEN/8, x4, x1, x2)

inst_46320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffff80000000; valaddr_reg:x3; val_offset:138960*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138960*0 + 3*240*FLEN/8, x4, x1, x2)

inst_46321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffc0000000; valaddr_reg:x3; val_offset:138963*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138963*0 + 3*241*FLEN/8, x4, x1, x2)

inst_46322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffe0000000; valaddr_reg:x3; val_offset:138966*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138966*0 + 3*242*FLEN/8, x4, x1, x2)

inst_46323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffff0000000; valaddr_reg:x3; val_offset:138969*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138969*0 + 3*243*FLEN/8, x4, x1, x2)

inst_46324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffff8000000; valaddr_reg:x3; val_offset:138972*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138972*0 + 3*244*FLEN/8, x4, x1, x2)

inst_46325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffc000000; valaddr_reg:x3; val_offset:138975*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138975*0 + 3*245*FLEN/8, x4, x1, x2)

inst_46326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffe000000; valaddr_reg:x3; val_offset:138978*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138978*0 + 3*246*FLEN/8, x4, x1, x2)

inst_46327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffff000000; valaddr_reg:x3; val_offset:138981*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138981*0 + 3*247*FLEN/8, x4, x1, x2)

inst_46328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffff800000; valaddr_reg:x3; val_offset:138984*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138984*0 + 3*248*FLEN/8, x4, x1, x2)

inst_46329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffc00000; valaddr_reg:x3; val_offset:138987*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138987*0 + 3*249*FLEN/8, x4, x1, x2)

inst_46330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffe00000; valaddr_reg:x3; val_offset:138990*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138990*0 + 3*250*FLEN/8, x4, x1, x2)

inst_46331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffff00000; valaddr_reg:x3; val_offset:138993*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138993*0 + 3*251*FLEN/8, x4, x1, x2)

inst_46332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffff80000; valaddr_reg:x3; val_offset:138996*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138996*0 + 3*252*FLEN/8, x4, x1, x2)

inst_46333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffc0000; valaddr_reg:x3; val_offset:138999*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138999*0 + 3*253*FLEN/8, x4, x1, x2)

inst_46334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffe0000; valaddr_reg:x3; val_offset:139002*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139002*0 + 3*254*FLEN/8, x4, x1, x2)

inst_46335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffff0000; valaddr_reg:x3; val_offset:139005*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139005*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_46336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffff8000; valaddr_reg:x3; val_offset:139008*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139008*0 + 3*256*FLEN/8, x4, x1, x2)

inst_46337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffffc000; valaddr_reg:x3; val_offset:139011*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139011*0 + 3*257*FLEN/8, x4, x1, x2)

inst_46338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffffe000; valaddr_reg:x3; val_offset:139014*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139014*0 + 3*258*FLEN/8, x4, x1, x2)

inst_46339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffff000; valaddr_reg:x3; val_offset:139017*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139017*0 + 3*259*FLEN/8, x4, x1, x2)

inst_46340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffff800; valaddr_reg:x3; val_offset:139020*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139020*0 + 3*260*FLEN/8, x4, x1, x2)

inst_46341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffffc00; valaddr_reg:x3; val_offset:139023*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139023*0 + 3*261*FLEN/8, x4, x1, x2)

inst_46342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffffe00; valaddr_reg:x3; val_offset:139026*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139026*0 + 3*262*FLEN/8, x4, x1, x2)

inst_46343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffffff00; valaddr_reg:x3; val_offset:139029*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139029*0 + 3*263*FLEN/8, x4, x1, x2)

inst_46344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffffff80; valaddr_reg:x3; val_offset:139032*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139032*0 + 3*264*FLEN/8, x4, x1, x2)

inst_46345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffffffc0; valaddr_reg:x3; val_offset:139035*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139035*0 + 3*265*FLEN/8, x4, x1, x2)

inst_46346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffffffe0; valaddr_reg:x3; val_offset:139038*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139038*0 + 3*266*FLEN/8, x4, x1, x2)

inst_46347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffffff0; valaddr_reg:x3; val_offset:139041*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139041*0 + 3*267*FLEN/8, x4, x1, x2)

inst_46348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffffff8; valaddr_reg:x3; val_offset:139044*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139044*0 + 3*268*FLEN/8, x4, x1, x2)

inst_46349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffffffc; valaddr_reg:x3; val_offset:139047*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139047*0 + 3*269*FLEN/8, x4, x1, x2)

inst_46350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87ffffffffffffe; valaddr_reg:x3; val_offset:139050*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139050*0 + 3*270*FLEN/8, x4, x1, x2)

inst_46351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x387 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xb87fffffffffffff; valaddr_reg:x3; val_offset:139053*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139053*0 + 3*271*FLEN/8, x4, x1, x2)

inst_46352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:139056*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139056*0 + 3*272*FLEN/8, x4, x1, x2)

inst_46353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:139059*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139059*0 + 3*273*FLEN/8, x4, x1, x2)

inst_46354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:139062*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139062*0 + 3*274*FLEN/8, x4, x1, x2)

inst_46355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:139065*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139065*0 + 3*275*FLEN/8, x4, x1, x2)

inst_46356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:139068*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139068*0 + 3*276*FLEN/8, x4, x1, x2)

inst_46357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:139071*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139071*0 + 3*277*FLEN/8, x4, x1, x2)

inst_46358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:139074*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139074*0 + 3*278*FLEN/8, x4, x1, x2)

inst_46359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:139077*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139077*0 + 3*279*FLEN/8, x4, x1, x2)

inst_46360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:139080*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139080*0 + 3*280*FLEN/8, x4, x1, x2)

inst_46361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:139083*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139083*0 + 3*281*FLEN/8, x4, x1, x2)

inst_46362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:139086*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139086*0 + 3*282*FLEN/8, x4, x1, x2)

inst_46363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:139089*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139089*0 + 3*283*FLEN/8, x4, x1, x2)

inst_46364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:139092*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139092*0 + 3*284*FLEN/8, x4, x1, x2)

inst_46365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:139095*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139095*0 + 3*285*FLEN/8, x4, x1, x2)

inst_46366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:139098*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139098*0 + 3*286*FLEN/8, x4, x1, x2)

inst_46367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:139101*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139101*0 + 3*287*FLEN/8, x4, x1, x2)

inst_46368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:139104*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139104*0 + 3*288*FLEN/8, x4, x1, x2)

inst_46369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:139107*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139107*0 + 3*289*FLEN/8, x4, x1, x2)

inst_46370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:139110*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139110*0 + 3*290*FLEN/8, x4, x1, x2)

inst_46371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:139113*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139113*0 + 3*291*FLEN/8, x4, x1, x2)

inst_46372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:139116*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139116*0 + 3*292*FLEN/8, x4, x1, x2)

inst_46373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcca40bb2151a9 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1c8af1865333d and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cca40bb2151a9; op2val:0x9fd1c8af1865333d;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:139119*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139119*0 + 3*293*FLEN/8, x4, x1, x2)

inst_46374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000000000; valaddr_reg:x3; val_offset:139122*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139122*0 + 3*294*FLEN/8, x4, x1, x2)

inst_46375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000000001; valaddr_reg:x3; val_offset:139125*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139125*0 + 3*295*FLEN/8, x4, x1, x2)

inst_46376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000000003; valaddr_reg:x3; val_offset:139128*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139128*0 + 3*296*FLEN/8, x4, x1, x2)

inst_46377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000000007; valaddr_reg:x3; val_offset:139131*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139131*0 + 3*297*FLEN/8, x4, x1, x2)

inst_46378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000000000f; valaddr_reg:x3; val_offset:139134*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139134*0 + 3*298*FLEN/8, x4, x1, x2)

inst_46379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000000001f; valaddr_reg:x3; val_offset:139137*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139137*0 + 3*299*FLEN/8, x4, x1, x2)

inst_46380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000000003f; valaddr_reg:x3; val_offset:139140*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139140*0 + 3*300*FLEN/8, x4, x1, x2)

inst_46381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000000007f; valaddr_reg:x3; val_offset:139143*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139143*0 + 3*301*FLEN/8, x4, x1, x2)

inst_46382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000000000ff; valaddr_reg:x3; val_offset:139146*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139146*0 + 3*302*FLEN/8, x4, x1, x2)

inst_46383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000000001ff; valaddr_reg:x3; val_offset:139149*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139149*0 + 3*303*FLEN/8, x4, x1, x2)

inst_46384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000000003ff; valaddr_reg:x3; val_offset:139152*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139152*0 + 3*304*FLEN/8, x4, x1, x2)

inst_46385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000000007ff; valaddr_reg:x3; val_offset:139155*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139155*0 + 3*305*FLEN/8, x4, x1, x2)

inst_46386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000000fff; valaddr_reg:x3; val_offset:139158*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139158*0 + 3*306*FLEN/8, x4, x1, x2)

inst_46387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000001fff; valaddr_reg:x3; val_offset:139161*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139161*0 + 3*307*FLEN/8, x4, x1, x2)

inst_46388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000003fff; valaddr_reg:x3; val_offset:139164*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139164*0 + 3*308*FLEN/8, x4, x1, x2)

inst_46389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000007fff; valaddr_reg:x3; val_offset:139167*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139167*0 + 3*309*FLEN/8, x4, x1, x2)

inst_46390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000000ffff; valaddr_reg:x3; val_offset:139170*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139170*0 + 3*310*FLEN/8, x4, x1, x2)

inst_46391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000001ffff; valaddr_reg:x3; val_offset:139173*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139173*0 + 3*311*FLEN/8, x4, x1, x2)

inst_46392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000003ffff; valaddr_reg:x3; val_offset:139176*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139176*0 + 3*312*FLEN/8, x4, x1, x2)

inst_46393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000007ffff; valaddr_reg:x3; val_offset:139179*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139179*0 + 3*313*FLEN/8, x4, x1, x2)

inst_46394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000000fffff; valaddr_reg:x3; val_offset:139182*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139182*0 + 3*314*FLEN/8, x4, x1, x2)

inst_46395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000001fffff; valaddr_reg:x3; val_offset:139185*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139185*0 + 3*315*FLEN/8, x4, x1, x2)

inst_46396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000003fffff; valaddr_reg:x3; val_offset:139188*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139188*0 + 3*316*FLEN/8, x4, x1, x2)

inst_46397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000007fffff; valaddr_reg:x3; val_offset:139191*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139191*0 + 3*317*FLEN/8, x4, x1, x2)

inst_46398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000000ffffff; valaddr_reg:x3; val_offset:139194*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139194*0 + 3*318*FLEN/8, x4, x1, x2)

inst_46399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000001ffffff; valaddr_reg:x3; val_offset:139197*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139197*0 + 3*319*FLEN/8, x4, x1, x2)

inst_46400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000003ffffff; valaddr_reg:x3; val_offset:139200*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139200*0 + 3*320*FLEN/8, x4, x1, x2)

inst_46401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000007ffffff; valaddr_reg:x3; val_offset:139203*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139203*0 + 3*321*FLEN/8, x4, x1, x2)

inst_46402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000000fffffff; valaddr_reg:x3; val_offset:139206*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139206*0 + 3*322*FLEN/8, x4, x1, x2)

inst_46403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000001fffffff; valaddr_reg:x3; val_offset:139209*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139209*0 + 3*323*FLEN/8, x4, x1, x2)

inst_46404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000003fffffff; valaddr_reg:x3; val_offset:139212*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139212*0 + 3*324*FLEN/8, x4, x1, x2)

inst_46405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000007fffffff; valaddr_reg:x3; val_offset:139215*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139215*0 + 3*325*FLEN/8, x4, x1, x2)

inst_46406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600000ffffffff; valaddr_reg:x3; val_offset:139218*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139218*0 + 3*326*FLEN/8, x4, x1, x2)

inst_46407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600001ffffffff; valaddr_reg:x3; val_offset:139221*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139221*0 + 3*327*FLEN/8, x4, x1, x2)

inst_46408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600003ffffffff; valaddr_reg:x3; val_offset:139224*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139224*0 + 3*328*FLEN/8, x4, x1, x2)

inst_46409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600007ffffffff; valaddr_reg:x3; val_offset:139227*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139227*0 + 3*329*FLEN/8, x4, x1, x2)

inst_46410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960000fffffffff; valaddr_reg:x3; val_offset:139230*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139230*0 + 3*330*FLEN/8, x4, x1, x2)

inst_46411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960001fffffffff; valaddr_reg:x3; val_offset:139233*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139233*0 + 3*331*FLEN/8, x4, x1, x2)

inst_46412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960003fffffffff; valaddr_reg:x3; val_offset:139236*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139236*0 + 3*332*FLEN/8, x4, x1, x2)

inst_46413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960007fffffffff; valaddr_reg:x3; val_offset:139239*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139239*0 + 3*333*FLEN/8, x4, x1, x2)

inst_46414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396000ffffffffff; valaddr_reg:x3; val_offset:139242*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139242*0 + 3*334*FLEN/8, x4, x1, x2)

inst_46415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396001ffffffffff; valaddr_reg:x3; val_offset:139245*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139245*0 + 3*335*FLEN/8, x4, x1, x2)

inst_46416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396003ffffffffff; valaddr_reg:x3; val_offset:139248*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139248*0 + 3*336*FLEN/8, x4, x1, x2)

inst_46417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396007ffffffffff; valaddr_reg:x3; val_offset:139251*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139251*0 + 3*337*FLEN/8, x4, x1, x2)

inst_46418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39600fffffffffff; valaddr_reg:x3; val_offset:139254*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139254*0 + 3*338*FLEN/8, x4, x1, x2)

inst_46419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39601fffffffffff; valaddr_reg:x3; val_offset:139257*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139257*0 + 3*339*FLEN/8, x4, x1, x2)

inst_46420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39603fffffffffff; valaddr_reg:x3; val_offset:139260*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139260*0 + 3*340*FLEN/8, x4, x1, x2)

inst_46421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x39607fffffffffff; valaddr_reg:x3; val_offset:139263*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139263*0 + 3*341*FLEN/8, x4, x1, x2)

inst_46422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3960ffffffffffff; valaddr_reg:x3; val_offset:139266*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139266*0 + 3*342*FLEN/8, x4, x1, x2)

inst_46423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3961ffffffffffff; valaddr_reg:x3; val_offset:139269*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139269*0 + 3*343*FLEN/8, x4, x1, x2)

inst_46424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3963ffffffffffff; valaddr_reg:x3; val_offset:139272*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139272*0 + 3*344*FLEN/8, x4, x1, x2)

inst_46425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3967ffffffffffff; valaddr_reg:x3; val_offset:139275*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139275*0 + 3*345*FLEN/8, x4, x1, x2)

inst_46426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3968000000000000; valaddr_reg:x3; val_offset:139278*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139278*0 + 3*346*FLEN/8, x4, x1, x2)

inst_46427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396c000000000000; valaddr_reg:x3; val_offset:139281*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139281*0 + 3*347*FLEN/8, x4, x1, x2)

inst_46428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396e000000000000; valaddr_reg:x3; val_offset:139284*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139284*0 + 3*348*FLEN/8, x4, x1, x2)

inst_46429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396f000000000000; valaddr_reg:x3; val_offset:139287*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139287*0 + 3*349*FLEN/8, x4, x1, x2)

inst_46430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396f800000000000; valaddr_reg:x3; val_offset:139290*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139290*0 + 3*350*FLEN/8, x4, x1, x2)

inst_46431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fc00000000000; valaddr_reg:x3; val_offset:139293*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139293*0 + 3*351*FLEN/8, x4, x1, x2)

inst_46432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fe00000000000; valaddr_reg:x3; val_offset:139296*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139296*0 + 3*352*FLEN/8, x4, x1, x2)

inst_46433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ff00000000000; valaddr_reg:x3; val_offset:139299*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139299*0 + 3*353*FLEN/8, x4, x1, x2)

inst_46434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ff80000000000; valaddr_reg:x3; val_offset:139302*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139302*0 + 3*354*FLEN/8, x4, x1, x2)

inst_46435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffc0000000000; valaddr_reg:x3; val_offset:139305*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139305*0 + 3*355*FLEN/8, x4, x1, x2)

inst_46436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffe0000000000; valaddr_reg:x3; val_offset:139308*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139308*0 + 3*356*FLEN/8, x4, x1, x2)

inst_46437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fff0000000000; valaddr_reg:x3; val_offset:139311*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139311*0 + 3*357*FLEN/8, x4, x1, x2)

inst_46438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fff8000000000; valaddr_reg:x3; val_offset:139314*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139314*0 + 3*358*FLEN/8, x4, x1, x2)

inst_46439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffc000000000; valaddr_reg:x3; val_offset:139317*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139317*0 + 3*359*FLEN/8, x4, x1, x2)

inst_46440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffe000000000; valaddr_reg:x3; val_offset:139320*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139320*0 + 3*360*FLEN/8, x4, x1, x2)

inst_46441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffff000000000; valaddr_reg:x3; val_offset:139323*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139323*0 + 3*361*FLEN/8, x4, x1, x2)

inst_46442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffff800000000; valaddr_reg:x3; val_offset:139326*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139326*0 + 3*362*FLEN/8, x4, x1, x2)

inst_46443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffc00000000; valaddr_reg:x3; val_offset:139329*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139329*0 + 3*363*FLEN/8, x4, x1, x2)

inst_46444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffe00000000; valaddr_reg:x3; val_offset:139332*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139332*0 + 3*364*FLEN/8, x4, x1, x2)

inst_46445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffff00000000; valaddr_reg:x3; val_offset:139335*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139335*0 + 3*365*FLEN/8, x4, x1, x2)

inst_46446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffff80000000; valaddr_reg:x3; val_offset:139338*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139338*0 + 3*366*FLEN/8, x4, x1, x2)

inst_46447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffc0000000; valaddr_reg:x3; val_offset:139341*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139341*0 + 3*367*FLEN/8, x4, x1, x2)

inst_46448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffe0000000; valaddr_reg:x3; val_offset:139344*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139344*0 + 3*368*FLEN/8, x4, x1, x2)

inst_46449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffff0000000; valaddr_reg:x3; val_offset:139347*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139347*0 + 3*369*FLEN/8, x4, x1, x2)

inst_46450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffff8000000; valaddr_reg:x3; val_offset:139350*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139350*0 + 3*370*FLEN/8, x4, x1, x2)

inst_46451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffc000000; valaddr_reg:x3; val_offset:139353*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139353*0 + 3*371*FLEN/8, x4, x1, x2)

inst_46452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffe000000; valaddr_reg:x3; val_offset:139356*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139356*0 + 3*372*FLEN/8, x4, x1, x2)

inst_46453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffff000000; valaddr_reg:x3; val_offset:139359*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139359*0 + 3*373*FLEN/8, x4, x1, x2)

inst_46454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffff800000; valaddr_reg:x3; val_offset:139362*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139362*0 + 3*374*FLEN/8, x4, x1, x2)

inst_46455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffc00000; valaddr_reg:x3; val_offset:139365*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139365*0 + 3*375*FLEN/8, x4, x1, x2)

inst_46456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffe00000; valaddr_reg:x3; val_offset:139368*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139368*0 + 3*376*FLEN/8, x4, x1, x2)

inst_46457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffff00000; valaddr_reg:x3; val_offset:139371*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139371*0 + 3*377*FLEN/8, x4, x1, x2)

inst_46458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffff80000; valaddr_reg:x3; val_offset:139374*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139374*0 + 3*378*FLEN/8, x4, x1, x2)

inst_46459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffc0000; valaddr_reg:x3; val_offset:139377*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139377*0 + 3*379*FLEN/8, x4, x1, x2)

inst_46460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffe0000; valaddr_reg:x3; val_offset:139380*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139380*0 + 3*380*FLEN/8, x4, x1, x2)

inst_46461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffff0000; valaddr_reg:x3; val_offset:139383*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139383*0 + 3*381*FLEN/8, x4, x1, x2)

inst_46462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffff8000; valaddr_reg:x3; val_offset:139386*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139386*0 + 3*382*FLEN/8, x4, x1, x2)

inst_46463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffffc000; valaddr_reg:x3; val_offset:139389*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139389*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_46464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffffe000; valaddr_reg:x3; val_offset:139392*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139392*0 + 3*384*FLEN/8, x4, x1, x2)

inst_46465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffff000; valaddr_reg:x3; val_offset:139395*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139395*0 + 3*385*FLEN/8, x4, x1, x2)

inst_46466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffff800; valaddr_reg:x3; val_offset:139398*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139398*0 + 3*386*FLEN/8, x4, x1, x2)

inst_46467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffffc00; valaddr_reg:x3; val_offset:139401*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139401*0 + 3*387*FLEN/8, x4, x1, x2)

inst_46468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffffe00; valaddr_reg:x3; val_offset:139404*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139404*0 + 3*388*FLEN/8, x4, x1, x2)

inst_46469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffffff00; valaddr_reg:x3; val_offset:139407*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139407*0 + 3*389*FLEN/8, x4, x1, x2)

inst_46470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffffff80; valaddr_reg:x3; val_offset:139410*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139410*0 + 3*390*FLEN/8, x4, x1, x2)

inst_46471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffffffc0; valaddr_reg:x3; val_offset:139413*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139413*0 + 3*391*FLEN/8, x4, x1, x2)

inst_46472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffffffe0; valaddr_reg:x3; val_offset:139416*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139416*0 + 3*392*FLEN/8, x4, x1, x2)

inst_46473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffffff0; valaddr_reg:x3; val_offset:139419*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139419*0 + 3*393*FLEN/8, x4, x1, x2)

inst_46474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffffff8; valaddr_reg:x3; val_offset:139422*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139422*0 + 3*394*FLEN/8, x4, x1, x2)

inst_46475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffffffc; valaddr_reg:x3; val_offset:139425*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139425*0 + 3*395*FLEN/8, x4, x1, x2)

inst_46476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396ffffffffffffe; valaddr_reg:x3; val_offset:139428*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139428*0 + 3*396*FLEN/8, x4, x1, x2)

inst_46477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x396fffffffffffff; valaddr_reg:x3; val_offset:139431*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139431*0 + 3*397*FLEN/8, x4, x1, x2)

inst_46478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:139434*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139434*0 + 3*398*FLEN/8, x4, x1, x2)

inst_46479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:139437*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139437*0 + 3*399*FLEN/8, x4, x1, x2)

inst_46480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:139440*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139440*0 + 3*400*FLEN/8, x4, x1, x2)

inst_46481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:139443*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139443*0 + 3*401*FLEN/8, x4, x1, x2)

inst_46482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:139446*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139446*0 + 3*402*FLEN/8, x4, x1, x2)

inst_46483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:139449*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139449*0 + 3*403*FLEN/8, x4, x1, x2)

inst_46484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:139452*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139452*0 + 3*404*FLEN/8, x4, x1, x2)

inst_46485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:139455*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139455*0 + 3*405*FLEN/8, x4, x1, x2)

inst_46486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:139458*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139458*0 + 3*406*FLEN/8, x4, x1, x2)

inst_46487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:139461*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139461*0 + 3*407*FLEN/8, x4, x1, x2)

inst_46488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:139464*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139464*0 + 3*408*FLEN/8, x4, x1, x2)

inst_46489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:139467*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139467*0 + 3*409*FLEN/8, x4, x1, x2)

inst_46490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:139470*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139470*0 + 3*410*FLEN/8, x4, x1, x2)

inst_46491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:139473*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139473*0 + 3*411*FLEN/8, x4, x1, x2)

inst_46492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:139476*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139476*0 + 3*412*FLEN/8, x4, x1, x2)

inst_46493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:139479*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139479*0 + 3*413*FLEN/8, x4, x1, x2)

inst_46494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:139482*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139482*0 + 3*414*FLEN/8, x4, x1, x2)

inst_46495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:139485*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139485*0 + 3*415*FLEN/8, x4, x1, x2)

inst_46496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:139488*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139488*0 + 3*416*FLEN/8, x4, x1, x2)

inst_46497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:139491*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139491*0 + 3*417*FLEN/8, x4, x1, x2)

inst_46498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:139494*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139494*0 + 3*418*FLEN/8, x4, x1, x2)

inst_46499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xcdaa519c91add and fs2 == 0 and fe2 == 0x204 and fm2 == 0x1be94b487f570 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9cdaa519c91add; op2val:0x2041be94b487f570;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:139497*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139497*0 + 3*419*FLEN/8, x4, x1, x2)

inst_46500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000000000; valaddr_reg:x3; val_offset:139500*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139500*0 + 3*420*FLEN/8, x4, x1, x2)

inst_46501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000000001; valaddr_reg:x3; val_offset:139503*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139503*0 + 3*421*FLEN/8, x4, x1, x2)

inst_46502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000000003; valaddr_reg:x3; val_offset:139506*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139506*0 + 3*422*FLEN/8, x4, x1, x2)

inst_46503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000000007; valaddr_reg:x3; val_offset:139509*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139509*0 + 3*423*FLEN/8, x4, x1, x2)

inst_46504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000000000f; valaddr_reg:x3; val_offset:139512*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139512*0 + 3*424*FLEN/8, x4, x1, x2)

inst_46505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000000001f; valaddr_reg:x3; val_offset:139515*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139515*0 + 3*425*FLEN/8, x4, x1, x2)

inst_46506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000000003f; valaddr_reg:x3; val_offset:139518*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139518*0 + 3*426*FLEN/8, x4, x1, x2)

inst_46507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000000007f; valaddr_reg:x3; val_offset:139521*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139521*0 + 3*427*FLEN/8, x4, x1, x2)

inst_46508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000000000ff; valaddr_reg:x3; val_offset:139524*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139524*0 + 3*428*FLEN/8, x4, x1, x2)

inst_46509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000000001ff; valaddr_reg:x3; val_offset:139527*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139527*0 + 3*429*FLEN/8, x4, x1, x2)

inst_46510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000000003ff; valaddr_reg:x3; val_offset:139530*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139530*0 + 3*430*FLEN/8, x4, x1, x2)

inst_46511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000000007ff; valaddr_reg:x3; val_offset:139533*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139533*0 + 3*431*FLEN/8, x4, x1, x2)

inst_46512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000000fff; valaddr_reg:x3; val_offset:139536*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139536*0 + 3*432*FLEN/8, x4, x1, x2)

inst_46513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000001fff; valaddr_reg:x3; val_offset:139539*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139539*0 + 3*433*FLEN/8, x4, x1, x2)

inst_46514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000003fff; valaddr_reg:x3; val_offset:139542*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139542*0 + 3*434*FLEN/8, x4, x1, x2)

inst_46515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000007fff; valaddr_reg:x3; val_offset:139545*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139545*0 + 3*435*FLEN/8, x4, x1, x2)

inst_46516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000000ffff; valaddr_reg:x3; val_offset:139548*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139548*0 + 3*436*FLEN/8, x4, x1, x2)

inst_46517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000001ffff; valaddr_reg:x3; val_offset:139551*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139551*0 + 3*437*FLEN/8, x4, x1, x2)

inst_46518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000003ffff; valaddr_reg:x3; val_offset:139554*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139554*0 + 3*438*FLEN/8, x4, x1, x2)

inst_46519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000007ffff; valaddr_reg:x3; val_offset:139557*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139557*0 + 3*439*FLEN/8, x4, x1, x2)

inst_46520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000000fffff; valaddr_reg:x3; val_offset:139560*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139560*0 + 3*440*FLEN/8, x4, x1, x2)

inst_46521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000001fffff; valaddr_reg:x3; val_offset:139563*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139563*0 + 3*441*FLEN/8, x4, x1, x2)

inst_46522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000003fffff; valaddr_reg:x3; val_offset:139566*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139566*0 + 3*442*FLEN/8, x4, x1, x2)

inst_46523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000007fffff; valaddr_reg:x3; val_offset:139569*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139569*0 + 3*443*FLEN/8, x4, x1, x2)

inst_46524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000000ffffff; valaddr_reg:x3; val_offset:139572*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139572*0 + 3*444*FLEN/8, x4, x1, x2)

inst_46525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000001ffffff; valaddr_reg:x3; val_offset:139575*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139575*0 + 3*445*FLEN/8, x4, x1, x2)

inst_46526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000003ffffff; valaddr_reg:x3; val_offset:139578*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139578*0 + 3*446*FLEN/8, x4, x1, x2)

inst_46527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000007ffffff; valaddr_reg:x3; val_offset:139581*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139581*0 + 3*447*FLEN/8, x4, x1, x2)

inst_46528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000000fffffff; valaddr_reg:x3; val_offset:139584*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139584*0 + 3*448*FLEN/8, x4, x1, x2)

inst_46529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000001fffffff; valaddr_reg:x3; val_offset:139587*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139587*0 + 3*449*FLEN/8, x4, x1, x2)

inst_46530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000003fffffff; valaddr_reg:x3; val_offset:139590*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139590*0 + 3*450*FLEN/8, x4, x1, x2)

inst_46531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000007fffffff; valaddr_reg:x3; val_offset:139593*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139593*0 + 3*451*FLEN/8, x4, x1, x2)

inst_46532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00000ffffffff; valaddr_reg:x3; val_offset:139596*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139596*0 + 3*452*FLEN/8, x4, x1, x2)

inst_46533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00001ffffffff; valaddr_reg:x3; val_offset:139599*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139599*0 + 3*453*FLEN/8, x4, x1, x2)

inst_46534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00003ffffffff; valaddr_reg:x3; val_offset:139602*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139602*0 + 3*454*FLEN/8, x4, x1, x2)

inst_46535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00007ffffffff; valaddr_reg:x3; val_offset:139605*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139605*0 + 3*455*FLEN/8, x4, x1, x2)

inst_46536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0000fffffffff; valaddr_reg:x3; val_offset:139608*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139608*0 + 3*456*FLEN/8, x4, x1, x2)

inst_46537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0001fffffffff; valaddr_reg:x3; val_offset:139611*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139611*0 + 3*457*FLEN/8, x4, x1, x2)

inst_46538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0003fffffffff; valaddr_reg:x3; val_offset:139614*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139614*0 + 3*458*FLEN/8, x4, x1, x2)

inst_46539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0007fffffffff; valaddr_reg:x3; val_offset:139617*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139617*0 + 3*459*FLEN/8, x4, x1, x2)

inst_46540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb000ffffffffff; valaddr_reg:x3; val_offset:139620*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139620*0 + 3*460*FLEN/8, x4, x1, x2)

inst_46541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb001ffffffffff; valaddr_reg:x3; val_offset:139623*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139623*0 + 3*461*FLEN/8, x4, x1, x2)

inst_46542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb003ffffffffff; valaddr_reg:x3; val_offset:139626*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139626*0 + 3*462*FLEN/8, x4, x1, x2)

inst_46543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb007ffffffffff; valaddr_reg:x3; val_offset:139629*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139629*0 + 3*463*FLEN/8, x4, x1, x2)

inst_46544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb00fffffffffff; valaddr_reg:x3; val_offset:139632*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139632*0 + 3*464*FLEN/8, x4, x1, x2)

inst_46545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb01fffffffffff; valaddr_reg:x3; val_offset:139635*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139635*0 + 3*465*FLEN/8, x4, x1, x2)

inst_46546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb03fffffffffff; valaddr_reg:x3; val_offset:139638*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139638*0 + 3*466*FLEN/8, x4, x1, x2)

inst_46547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb07fffffffffff; valaddr_reg:x3; val_offset:139641*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139641*0 + 3*467*FLEN/8, x4, x1, x2)

inst_46548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb0ffffffffffff; valaddr_reg:x3; val_offset:139644*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139644*0 + 3*468*FLEN/8, x4, x1, x2)

inst_46549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb1ffffffffffff; valaddr_reg:x3; val_offset:139647*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139647*0 + 3*469*FLEN/8, x4, x1, x2)

inst_46550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb3ffffffffffff; valaddr_reg:x3; val_offset:139650*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139650*0 + 3*470*FLEN/8, x4, x1, x2)

inst_46551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb7ffffffffffff; valaddr_reg:x3; val_offset:139653*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139653*0 + 3*471*FLEN/8, x4, x1, x2)

inst_46552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdb8000000000000; valaddr_reg:x3; val_offset:139656*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139656*0 + 3*472*FLEN/8, x4, x1, x2)

inst_46553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbc000000000000; valaddr_reg:x3; val_offset:139659*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139659*0 + 3*473*FLEN/8, x4, x1, x2)

inst_46554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbe000000000000; valaddr_reg:x3; val_offset:139662*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139662*0 + 3*474*FLEN/8, x4, x1, x2)

inst_46555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbf000000000000; valaddr_reg:x3; val_offset:139665*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139665*0 + 3*475*FLEN/8, x4, x1, x2)

inst_46556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbf800000000000; valaddr_reg:x3; val_offset:139668*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139668*0 + 3*476*FLEN/8, x4, x1, x2)

inst_46557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfc00000000000; valaddr_reg:x3; val_offset:139671*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139671*0 + 3*477*FLEN/8, x4, x1, x2)

inst_46558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfe00000000000; valaddr_reg:x3; val_offset:139674*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139674*0 + 3*478*FLEN/8, x4, x1, x2)

inst_46559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbff00000000000; valaddr_reg:x3; val_offset:139677*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139677*0 + 3*479*FLEN/8, x4, x1, x2)

inst_46560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbff80000000000; valaddr_reg:x3; val_offset:139680*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139680*0 + 3*480*FLEN/8, x4, x1, x2)

inst_46561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffc0000000000; valaddr_reg:x3; val_offset:139683*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139683*0 + 3*481*FLEN/8, x4, x1, x2)

inst_46562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffe0000000000; valaddr_reg:x3; val_offset:139686*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139686*0 + 3*482*FLEN/8, x4, x1, x2)

inst_46563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfff0000000000; valaddr_reg:x3; val_offset:139689*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139689*0 + 3*483*FLEN/8, x4, x1, x2)

inst_46564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfff8000000000; valaddr_reg:x3; val_offset:139692*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139692*0 + 3*484*FLEN/8, x4, x1, x2)

inst_46565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffc000000000; valaddr_reg:x3; val_offset:139695*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139695*0 + 3*485*FLEN/8, x4, x1, x2)

inst_46566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffe000000000; valaddr_reg:x3; val_offset:139698*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139698*0 + 3*486*FLEN/8, x4, x1, x2)

inst_46567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffff000000000; valaddr_reg:x3; val_offset:139701*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139701*0 + 3*487*FLEN/8, x4, x1, x2)

inst_46568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffff800000000; valaddr_reg:x3; val_offset:139704*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139704*0 + 3*488*FLEN/8, x4, x1, x2)

inst_46569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffc00000000; valaddr_reg:x3; val_offset:139707*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139707*0 + 3*489*FLEN/8, x4, x1, x2)

inst_46570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffe00000000; valaddr_reg:x3; val_offset:139710*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139710*0 + 3*490*FLEN/8, x4, x1, x2)

inst_46571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffff00000000; valaddr_reg:x3; val_offset:139713*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139713*0 + 3*491*FLEN/8, x4, x1, x2)

inst_46572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffff80000000; valaddr_reg:x3; val_offset:139716*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139716*0 + 3*492*FLEN/8, x4, x1, x2)

inst_46573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffc0000000; valaddr_reg:x3; val_offset:139719*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139719*0 + 3*493*FLEN/8, x4, x1, x2)

inst_46574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffe0000000; valaddr_reg:x3; val_offset:139722*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139722*0 + 3*494*FLEN/8, x4, x1, x2)

inst_46575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffff0000000; valaddr_reg:x3; val_offset:139725*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139725*0 + 3*495*FLEN/8, x4, x1, x2)

inst_46576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffff8000000; valaddr_reg:x3; val_offset:139728*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139728*0 + 3*496*FLEN/8, x4, x1, x2)

inst_46577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffc000000; valaddr_reg:x3; val_offset:139731*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139731*0 + 3*497*FLEN/8, x4, x1, x2)

inst_46578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffe000000; valaddr_reg:x3; val_offset:139734*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139734*0 + 3*498*FLEN/8, x4, x1, x2)

inst_46579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffff000000; valaddr_reg:x3; val_offset:139737*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139737*0 + 3*499*FLEN/8, x4, x1, x2)

inst_46580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffff800000; valaddr_reg:x3; val_offset:139740*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139740*0 + 3*500*FLEN/8, x4, x1, x2)

inst_46581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffc00000; valaddr_reg:x3; val_offset:139743*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139743*0 + 3*501*FLEN/8, x4, x1, x2)

inst_46582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffe00000; valaddr_reg:x3; val_offset:139746*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139746*0 + 3*502*FLEN/8, x4, x1, x2)

inst_46583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffff00000; valaddr_reg:x3; val_offset:139749*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139749*0 + 3*503*FLEN/8, x4, x1, x2)

inst_46584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffff80000; valaddr_reg:x3; val_offset:139752*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139752*0 + 3*504*FLEN/8, x4, x1, x2)

inst_46585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffc0000; valaddr_reg:x3; val_offset:139755*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139755*0 + 3*505*FLEN/8, x4, x1, x2)

inst_46586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffe0000; valaddr_reg:x3; val_offset:139758*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139758*0 + 3*506*FLEN/8, x4, x1, x2)

inst_46587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffff0000; valaddr_reg:x3; val_offset:139761*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139761*0 + 3*507*FLEN/8, x4, x1, x2)

inst_46588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffff8000; valaddr_reg:x3; val_offset:139764*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139764*0 + 3*508*FLEN/8, x4, x1, x2)

inst_46589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffffc000; valaddr_reg:x3; val_offset:139767*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139767*0 + 3*509*FLEN/8, x4, x1, x2)

inst_46590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffffe000; valaddr_reg:x3; val_offset:139770*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139770*0 + 3*510*FLEN/8, x4, x1, x2)

inst_46591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffff000; valaddr_reg:x3; val_offset:139773*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139773*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_46592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffff800; valaddr_reg:x3; val_offset:139776*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139776*0 + 3*512*FLEN/8, x4, x1, x2)

inst_46593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffffc00; valaddr_reg:x3; val_offset:139779*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139779*0 + 3*513*FLEN/8, x4, x1, x2)

inst_46594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffffe00; valaddr_reg:x3; val_offset:139782*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139782*0 + 3*514*FLEN/8, x4, x1, x2)

inst_46595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffffff00; valaddr_reg:x3; val_offset:139785*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139785*0 + 3*515*FLEN/8, x4, x1, x2)

inst_46596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffffff80; valaddr_reg:x3; val_offset:139788*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139788*0 + 3*516*FLEN/8, x4, x1, x2)

inst_46597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffffffc0; valaddr_reg:x3; val_offset:139791*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139791*0 + 3*517*FLEN/8, x4, x1, x2)

inst_46598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffffffe0; valaddr_reg:x3; val_offset:139794*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139794*0 + 3*518*FLEN/8, x4, x1, x2)

inst_46599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffffff0; valaddr_reg:x3; val_offset:139797*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139797*0 + 3*519*FLEN/8, x4, x1, x2)

inst_46600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffffff8; valaddr_reg:x3; val_offset:139800*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139800*0 + 3*520*FLEN/8, x4, x1, x2)

inst_46601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffffffc; valaddr_reg:x3; val_offset:139803*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139803*0 + 3*521*FLEN/8, x4, x1, x2)

inst_46602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbffffffffffffe; valaddr_reg:x3; val_offset:139806*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139806*0 + 3*522*FLEN/8, x4, x1, x2)

inst_46603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3db and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbdbfffffffffffff; valaddr_reg:x3; val_offset:139809*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139809*0 + 3*523*FLEN/8, x4, x1, x2)

inst_46604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:139812*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139812*0 + 3*524*FLEN/8, x4, x1, x2)

inst_46605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:139815*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139815*0 + 3*525*FLEN/8, x4, x1, x2)

inst_46606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:139818*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139818*0 + 3*526*FLEN/8, x4, x1, x2)

inst_46607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:139821*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139821*0 + 3*527*FLEN/8, x4, x1, x2)

inst_46608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:139824*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139824*0 + 3*528*FLEN/8, x4, x1, x2)

inst_46609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:139827*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139827*0 + 3*529*FLEN/8, x4, x1, x2)

inst_46610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:139830*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139830*0 + 3*530*FLEN/8, x4, x1, x2)

inst_46611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:139833*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139833*0 + 3*531*FLEN/8, x4, x1, x2)

inst_46612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:139836*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139836*0 + 3*532*FLEN/8, x4, x1, x2)

inst_46613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:139839*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139839*0 + 3*533*FLEN/8, x4, x1, x2)

inst_46614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:139842*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139842*0 + 3*534*FLEN/8, x4, x1, x2)

inst_46615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:139845*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139845*0 + 3*535*FLEN/8, x4, x1, x2)

inst_46616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:139848*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139848*0 + 3*536*FLEN/8, x4, x1, x2)

inst_46617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:139851*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139851*0 + 3*537*FLEN/8, x4, x1, x2)

inst_46618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:139854*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139854*0 + 3*538*FLEN/8, x4, x1, x2)

inst_46619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:139857*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139857*0 + 3*539*FLEN/8, x4, x1, x2)

inst_46620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:139860*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139860*0 + 3*540*FLEN/8, x4, x1, x2)

inst_46621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:139863*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139863*0 + 3*541*FLEN/8, x4, x1, x2)

inst_46622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:139866*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139866*0 + 3*542*FLEN/8, x4, x1, x2)

inst_46623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:139869*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139869*0 + 3*543*FLEN/8, x4, x1, x2)

inst_46624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:139872*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139872*0 + 3*544*FLEN/8, x4, x1, x2)

inst_46625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd03069816412f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x1a5e1ffd10576 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d03069816412f; op2val:0x9fd1a5e1ffd10576;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:139875*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139875*0 + 3*545*FLEN/8, x4, x1, x2)

inst_46626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:139878*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139878*0 + 3*546*FLEN/8, x4, x1, x2)

inst_46627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:139881*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139881*0 + 3*547*FLEN/8, x4, x1, x2)

inst_46628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:139884*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139884*0 + 3*548*FLEN/8, x4, x1, x2)

inst_46629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:139887*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139887*0 + 3*549*FLEN/8, x4, x1, x2)

inst_46630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:139890*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139890*0 + 3*550*FLEN/8, x4, x1, x2)

inst_46631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:139893*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139893*0 + 3*551*FLEN/8, x4, x1, x2)

inst_46632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:139896*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139896*0 + 3*552*FLEN/8, x4, x1, x2)

inst_46633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:139899*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139899*0 + 3*553*FLEN/8, x4, x1, x2)

inst_46634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:139902*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139902*0 + 3*554*FLEN/8, x4, x1, x2)

inst_46635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:139905*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139905*0 + 3*555*FLEN/8, x4, x1, x2)

inst_46636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:139908*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139908*0 + 3*556*FLEN/8, x4, x1, x2)

inst_46637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:139911*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139911*0 + 3*557*FLEN/8, x4, x1, x2)

inst_46638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:139914*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139914*0 + 3*558*FLEN/8, x4, x1, x2)

inst_46639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:139917*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139917*0 + 3*559*FLEN/8, x4, x1, x2)

inst_46640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:139920*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139920*0 + 3*560*FLEN/8, x4, x1, x2)

inst_46641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:139923*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139923*0 + 3*561*FLEN/8, x4, x1, x2)

inst_46642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:139926*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139926*0 + 3*562*FLEN/8, x4, x1, x2)

inst_46643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:139929*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139929*0 + 3*563*FLEN/8, x4, x1, x2)

inst_46644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:139932*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139932*0 + 3*564*FLEN/8, x4, x1, x2)

inst_46645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:139935*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139935*0 + 3*565*FLEN/8, x4, x1, x2)

inst_46646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:139938*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139938*0 + 3*566*FLEN/8, x4, x1, x2)

inst_46647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:139941*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139941*0 + 3*567*FLEN/8, x4, x1, x2)

inst_46648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000000000; valaddr_reg:x3; val_offset:139944*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139944*0 + 3*568*FLEN/8, x4, x1, x2)

inst_46649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000000001; valaddr_reg:x3; val_offset:139947*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139947*0 + 3*569*FLEN/8, x4, x1, x2)

inst_46650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000000003; valaddr_reg:x3; val_offset:139950*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139950*0 + 3*570*FLEN/8, x4, x1, x2)

inst_46651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000000007; valaddr_reg:x3; val_offset:139953*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139953*0 + 3*571*FLEN/8, x4, x1, x2)

inst_46652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000000000f; valaddr_reg:x3; val_offset:139956*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139956*0 + 3*572*FLEN/8, x4, x1, x2)

inst_46653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000000001f; valaddr_reg:x3; val_offset:139959*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139959*0 + 3*573*FLEN/8, x4, x1, x2)

inst_46654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000000003f; valaddr_reg:x3; val_offset:139962*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139962*0 + 3*574*FLEN/8, x4, x1, x2)

inst_46655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000000007f; valaddr_reg:x3; val_offset:139965*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139965*0 + 3*575*FLEN/8, x4, x1, x2)

inst_46656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000000000ff; valaddr_reg:x3; val_offset:139968*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139968*0 + 3*576*FLEN/8, x4, x1, x2)

inst_46657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000000001ff; valaddr_reg:x3; val_offset:139971*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139971*0 + 3*577*FLEN/8, x4, x1, x2)

inst_46658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000000003ff; valaddr_reg:x3; val_offset:139974*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139974*0 + 3*578*FLEN/8, x4, x1, x2)

inst_46659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000000007ff; valaddr_reg:x3; val_offset:139977*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139977*0 + 3*579*FLEN/8, x4, x1, x2)

inst_46660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000000fff; valaddr_reg:x3; val_offset:139980*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139980*0 + 3*580*FLEN/8, x4, x1, x2)

inst_46661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000001fff; valaddr_reg:x3; val_offset:139983*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139983*0 + 3*581*FLEN/8, x4, x1, x2)

inst_46662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000003fff; valaddr_reg:x3; val_offset:139986*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139986*0 + 3*582*FLEN/8, x4, x1, x2)

inst_46663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000007fff; valaddr_reg:x3; val_offset:139989*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139989*0 + 3*583*FLEN/8, x4, x1, x2)

inst_46664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000000ffff; valaddr_reg:x3; val_offset:139992*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139992*0 + 3*584*FLEN/8, x4, x1, x2)

inst_46665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000001ffff; valaddr_reg:x3; val_offset:139995*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139995*0 + 3*585*FLEN/8, x4, x1, x2)

inst_46666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000003ffff; valaddr_reg:x3; val_offset:139998*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 139998*0 + 3*586*FLEN/8, x4, x1, x2)

inst_46667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000007ffff; valaddr_reg:x3; val_offset:140001*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140001*0 + 3*587*FLEN/8, x4, x1, x2)

inst_46668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000000fffff; valaddr_reg:x3; val_offset:140004*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140004*0 + 3*588*FLEN/8, x4, x1, x2)

inst_46669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000001fffff; valaddr_reg:x3; val_offset:140007*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140007*0 + 3*589*FLEN/8, x4, x1, x2)

inst_46670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000003fffff; valaddr_reg:x3; val_offset:140010*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140010*0 + 3*590*FLEN/8, x4, x1, x2)

inst_46671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000007fffff; valaddr_reg:x3; val_offset:140013*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140013*0 + 3*591*FLEN/8, x4, x1, x2)

inst_46672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000000ffffff; valaddr_reg:x3; val_offset:140016*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140016*0 + 3*592*FLEN/8, x4, x1, x2)

inst_46673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000001ffffff; valaddr_reg:x3; val_offset:140019*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140019*0 + 3*593*FLEN/8, x4, x1, x2)

inst_46674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000003ffffff; valaddr_reg:x3; val_offset:140022*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140022*0 + 3*594*FLEN/8, x4, x1, x2)

inst_46675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000007ffffff; valaddr_reg:x3; val_offset:140025*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140025*0 + 3*595*FLEN/8, x4, x1, x2)

inst_46676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000000fffffff; valaddr_reg:x3; val_offset:140028*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140028*0 + 3*596*FLEN/8, x4, x1, x2)

inst_46677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000001fffffff; valaddr_reg:x3; val_offset:140031*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140031*0 + 3*597*FLEN/8, x4, x1, x2)

inst_46678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000003fffffff; valaddr_reg:x3; val_offset:140034*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140034*0 + 3*598*FLEN/8, x4, x1, x2)

inst_46679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000007fffffff; valaddr_reg:x3; val_offset:140037*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140037*0 + 3*599*FLEN/8, x4, x1, x2)

inst_46680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900000ffffffff; valaddr_reg:x3; val_offset:140040*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140040*0 + 3*600*FLEN/8, x4, x1, x2)

inst_46681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900001ffffffff; valaddr_reg:x3; val_offset:140043*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140043*0 + 3*601*FLEN/8, x4, x1, x2)

inst_46682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900003ffffffff; valaddr_reg:x3; val_offset:140046*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140046*0 + 3*602*FLEN/8, x4, x1, x2)

inst_46683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900007ffffffff; valaddr_reg:x3; val_offset:140049*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140049*0 + 3*603*FLEN/8, x4, x1, x2)

inst_46684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290000fffffffff; valaddr_reg:x3; val_offset:140052*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140052*0 + 3*604*FLEN/8, x4, x1, x2)

inst_46685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290001fffffffff; valaddr_reg:x3; val_offset:140055*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140055*0 + 3*605*FLEN/8, x4, x1, x2)

inst_46686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290003fffffffff; valaddr_reg:x3; val_offset:140058*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140058*0 + 3*606*FLEN/8, x4, x1, x2)

inst_46687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290007fffffffff; valaddr_reg:x3; val_offset:140061*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140061*0 + 3*607*FLEN/8, x4, x1, x2)

inst_46688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829000ffffffffff; valaddr_reg:x3; val_offset:140064*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140064*0 + 3*608*FLEN/8, x4, x1, x2)

inst_46689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829001ffffffffff; valaddr_reg:x3; val_offset:140067*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140067*0 + 3*609*FLEN/8, x4, x1, x2)

inst_46690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829003ffffffffff; valaddr_reg:x3; val_offset:140070*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140070*0 + 3*610*FLEN/8, x4, x1, x2)

inst_46691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829007ffffffffff; valaddr_reg:x3; val_offset:140073*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140073*0 + 3*611*FLEN/8, x4, x1, x2)

inst_46692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82900fffffffffff; valaddr_reg:x3; val_offset:140076*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140076*0 + 3*612*FLEN/8, x4, x1, x2)

inst_46693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82901fffffffffff; valaddr_reg:x3; val_offset:140079*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140079*0 + 3*613*FLEN/8, x4, x1, x2)

inst_46694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82903fffffffffff; valaddr_reg:x3; val_offset:140082*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140082*0 + 3*614*FLEN/8, x4, x1, x2)

inst_46695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x82907fffffffffff; valaddr_reg:x3; val_offset:140085*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140085*0 + 3*615*FLEN/8, x4, x1, x2)

inst_46696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8290ffffffffffff; valaddr_reg:x3; val_offset:140088*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140088*0 + 3*616*FLEN/8, x4, x1, x2)

inst_46697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8291ffffffffffff; valaddr_reg:x3; val_offset:140091*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140091*0 + 3*617*FLEN/8, x4, x1, x2)

inst_46698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8293ffffffffffff; valaddr_reg:x3; val_offset:140094*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140094*0 + 3*618*FLEN/8, x4, x1, x2)

inst_46699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8297ffffffffffff; valaddr_reg:x3; val_offset:140097*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140097*0 + 3*619*FLEN/8, x4, x1, x2)

inst_46700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x8298000000000000; valaddr_reg:x3; val_offset:140100*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140100*0 + 3*620*FLEN/8, x4, x1, x2)

inst_46701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829c000000000000; valaddr_reg:x3; val_offset:140103*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140103*0 + 3*621*FLEN/8, x4, x1, x2)

inst_46702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829e000000000000; valaddr_reg:x3; val_offset:140106*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140106*0 + 3*622*FLEN/8, x4, x1, x2)

inst_46703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829f000000000000; valaddr_reg:x3; val_offset:140109*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140109*0 + 3*623*FLEN/8, x4, x1, x2)

inst_46704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829f800000000000; valaddr_reg:x3; val_offset:140112*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140112*0 + 3*624*FLEN/8, x4, x1, x2)

inst_46705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fc00000000000; valaddr_reg:x3; val_offset:140115*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140115*0 + 3*625*FLEN/8, x4, x1, x2)

inst_46706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fe00000000000; valaddr_reg:x3; val_offset:140118*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140118*0 + 3*626*FLEN/8, x4, x1, x2)

inst_46707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ff00000000000; valaddr_reg:x3; val_offset:140121*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140121*0 + 3*627*FLEN/8, x4, x1, x2)

inst_46708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ff80000000000; valaddr_reg:x3; val_offset:140124*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140124*0 + 3*628*FLEN/8, x4, x1, x2)

inst_46709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffc0000000000; valaddr_reg:x3; val_offset:140127*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140127*0 + 3*629*FLEN/8, x4, x1, x2)

inst_46710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffe0000000000; valaddr_reg:x3; val_offset:140130*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140130*0 + 3*630*FLEN/8, x4, x1, x2)

inst_46711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fff0000000000; valaddr_reg:x3; val_offset:140133*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140133*0 + 3*631*FLEN/8, x4, x1, x2)

inst_46712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fff8000000000; valaddr_reg:x3; val_offset:140136*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140136*0 + 3*632*FLEN/8, x4, x1, x2)

inst_46713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffc000000000; valaddr_reg:x3; val_offset:140139*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140139*0 + 3*633*FLEN/8, x4, x1, x2)

inst_46714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffe000000000; valaddr_reg:x3; val_offset:140142*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140142*0 + 3*634*FLEN/8, x4, x1, x2)

inst_46715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffff000000000; valaddr_reg:x3; val_offset:140145*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140145*0 + 3*635*FLEN/8, x4, x1, x2)

inst_46716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffff800000000; valaddr_reg:x3; val_offset:140148*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140148*0 + 3*636*FLEN/8, x4, x1, x2)

inst_46717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffc00000000; valaddr_reg:x3; val_offset:140151*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140151*0 + 3*637*FLEN/8, x4, x1, x2)

inst_46718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffe00000000; valaddr_reg:x3; val_offset:140154*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140154*0 + 3*638*FLEN/8, x4, x1, x2)

inst_46719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffff00000000; valaddr_reg:x3; val_offset:140157*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140157*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_46720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffff80000000; valaddr_reg:x3; val_offset:140160*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140160*0 + 3*640*FLEN/8, x4, x1, x2)

inst_46721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffc0000000; valaddr_reg:x3; val_offset:140163*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140163*0 + 3*641*FLEN/8, x4, x1, x2)

inst_46722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffe0000000; valaddr_reg:x3; val_offset:140166*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140166*0 + 3*642*FLEN/8, x4, x1, x2)

inst_46723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffff0000000; valaddr_reg:x3; val_offset:140169*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140169*0 + 3*643*FLEN/8, x4, x1, x2)

inst_46724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffff8000000; valaddr_reg:x3; val_offset:140172*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140172*0 + 3*644*FLEN/8, x4, x1, x2)

inst_46725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffc000000; valaddr_reg:x3; val_offset:140175*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140175*0 + 3*645*FLEN/8, x4, x1, x2)

inst_46726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffe000000; valaddr_reg:x3; val_offset:140178*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140178*0 + 3*646*FLEN/8, x4, x1, x2)

inst_46727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffff000000; valaddr_reg:x3; val_offset:140181*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140181*0 + 3*647*FLEN/8, x4, x1, x2)

inst_46728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffff800000; valaddr_reg:x3; val_offset:140184*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140184*0 + 3*648*FLEN/8, x4, x1, x2)

inst_46729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffc00000; valaddr_reg:x3; val_offset:140187*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140187*0 + 3*649*FLEN/8, x4, x1, x2)

inst_46730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffe00000; valaddr_reg:x3; val_offset:140190*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140190*0 + 3*650*FLEN/8, x4, x1, x2)

inst_46731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffff00000; valaddr_reg:x3; val_offset:140193*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140193*0 + 3*651*FLEN/8, x4, x1, x2)

inst_46732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffff80000; valaddr_reg:x3; val_offset:140196*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140196*0 + 3*652*FLEN/8, x4, x1, x2)

inst_46733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffc0000; valaddr_reg:x3; val_offset:140199*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140199*0 + 3*653*FLEN/8, x4, x1, x2)

inst_46734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffe0000; valaddr_reg:x3; val_offset:140202*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140202*0 + 3*654*FLEN/8, x4, x1, x2)

inst_46735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffff0000; valaddr_reg:x3; val_offset:140205*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140205*0 + 3*655*FLEN/8, x4, x1, x2)

inst_46736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffff8000; valaddr_reg:x3; val_offset:140208*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140208*0 + 3*656*FLEN/8, x4, x1, x2)

inst_46737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffffc000; valaddr_reg:x3; val_offset:140211*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140211*0 + 3*657*FLEN/8, x4, x1, x2)

inst_46738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffffe000; valaddr_reg:x3; val_offset:140214*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140214*0 + 3*658*FLEN/8, x4, x1, x2)

inst_46739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffff000; valaddr_reg:x3; val_offset:140217*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140217*0 + 3*659*FLEN/8, x4, x1, x2)

inst_46740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffff800; valaddr_reg:x3; val_offset:140220*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140220*0 + 3*660*FLEN/8, x4, x1, x2)

inst_46741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffffc00; valaddr_reg:x3; val_offset:140223*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140223*0 + 3*661*FLEN/8, x4, x1, x2)

inst_46742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffffe00; valaddr_reg:x3; val_offset:140226*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140226*0 + 3*662*FLEN/8, x4, x1, x2)

inst_46743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffffff00; valaddr_reg:x3; val_offset:140229*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140229*0 + 3*663*FLEN/8, x4, x1, x2)

inst_46744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffffff80; valaddr_reg:x3; val_offset:140232*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140232*0 + 3*664*FLEN/8, x4, x1, x2)

inst_46745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffffffc0; valaddr_reg:x3; val_offset:140235*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140235*0 + 3*665*FLEN/8, x4, x1, x2)

inst_46746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffffffe0; valaddr_reg:x3; val_offset:140238*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140238*0 + 3*666*FLEN/8, x4, x1, x2)

inst_46747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffffff0; valaddr_reg:x3; val_offset:140241*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140241*0 + 3*667*FLEN/8, x4, x1, x2)

inst_46748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffffff8; valaddr_reg:x3; val_offset:140244*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140244*0 + 3*668*FLEN/8, x4, x1, x2)

inst_46749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffffffc; valaddr_reg:x3; val_offset:140247*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140247*0 + 3*669*FLEN/8, x4, x1, x2)

inst_46750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829ffffffffffffe; valaddr_reg:x3; val_offset:140250*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140250*0 + 3*670*FLEN/8, x4, x1, x2)

inst_46751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd5246f4cc80df and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d5246f4cc80df; op2val:0x8000;
op3val:0x829fffffffffffff; valaddr_reg:x3; val_offset:140253*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140253*0 + 3*671*FLEN/8, x4, x1, x2)

inst_46752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:140256*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140256*0 + 3*672*FLEN/8, x4, x1, x2)

inst_46753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:140259*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140259*0 + 3*673*FLEN/8, x4, x1, x2)

inst_46754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:140262*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140262*0 + 3*674*FLEN/8, x4, x1, x2)

inst_46755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:140265*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140265*0 + 3*675*FLEN/8, x4, x1, x2)

inst_46756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:140268*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140268*0 + 3*676*FLEN/8, x4, x1, x2)

inst_46757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:140271*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140271*0 + 3*677*FLEN/8, x4, x1, x2)

inst_46758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:140274*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140274*0 + 3*678*FLEN/8, x4, x1, x2)

inst_46759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:140277*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140277*0 + 3*679*FLEN/8, x4, x1, x2)

inst_46760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:140280*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140280*0 + 3*680*FLEN/8, x4, x1, x2)

inst_46761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:140283*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140283*0 + 3*681*FLEN/8, x4, x1, x2)

inst_46762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:140286*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140286*0 + 3*682*FLEN/8, x4, x1, x2)

inst_46763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:140289*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140289*0 + 3*683*FLEN/8, x4, x1, x2)

inst_46764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:140292*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140292*0 + 3*684*FLEN/8, x4, x1, x2)

inst_46765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:140295*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140295*0 + 3*685*FLEN/8, x4, x1, x2)

inst_46766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:140298*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140298*0 + 3*686*FLEN/8, x4, x1, x2)

inst_46767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:140301*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140301*0 + 3*687*FLEN/8, x4, x1, x2)

inst_46768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:140304*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140304*0 + 3*688*FLEN/8, x4, x1, x2)

inst_46769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:140307*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140307*0 + 3*689*FLEN/8, x4, x1, x2)

inst_46770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:140310*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140310*0 + 3*690*FLEN/8, x4, x1, x2)

inst_46771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:140313*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140313*0 + 3*691*FLEN/8, x4, x1, x2)

inst_46772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:140316*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140316*0 + 3*692*FLEN/8, x4, x1, x2)

inst_46773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:140319*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140319*0 + 3*693*FLEN/8, x4, x1, x2)

inst_46774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000000000; valaddr_reg:x3; val_offset:140322*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140322*0 + 3*694*FLEN/8, x4, x1, x2)

inst_46775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000000001; valaddr_reg:x3; val_offset:140325*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140325*0 + 3*695*FLEN/8, x4, x1, x2)

inst_46776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000000003; valaddr_reg:x3; val_offset:140328*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140328*0 + 3*696*FLEN/8, x4, x1, x2)

inst_46777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000000007; valaddr_reg:x3; val_offset:140331*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140331*0 + 3*697*FLEN/8, x4, x1, x2)

inst_46778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000000000f; valaddr_reg:x3; val_offset:140334*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140334*0 + 3*698*FLEN/8, x4, x1, x2)

inst_46779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000000001f; valaddr_reg:x3; val_offset:140337*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140337*0 + 3*699*FLEN/8, x4, x1, x2)

inst_46780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000000003f; valaddr_reg:x3; val_offset:140340*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140340*0 + 3*700*FLEN/8, x4, x1, x2)

inst_46781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000000007f; valaddr_reg:x3; val_offset:140343*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140343*0 + 3*701*FLEN/8, x4, x1, x2)

inst_46782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000000000ff; valaddr_reg:x3; val_offset:140346*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140346*0 + 3*702*FLEN/8, x4, x1, x2)

inst_46783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000000001ff; valaddr_reg:x3; val_offset:140349*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140349*0 + 3*703*FLEN/8, x4, x1, x2)

inst_46784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000000003ff; valaddr_reg:x3; val_offset:140352*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140352*0 + 3*704*FLEN/8, x4, x1, x2)

inst_46785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000000007ff; valaddr_reg:x3; val_offset:140355*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140355*0 + 3*705*FLEN/8, x4, x1, x2)

inst_46786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000000fff; valaddr_reg:x3; val_offset:140358*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140358*0 + 3*706*FLEN/8, x4, x1, x2)

inst_46787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000001fff; valaddr_reg:x3; val_offset:140361*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140361*0 + 3*707*FLEN/8, x4, x1, x2)

inst_46788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000003fff; valaddr_reg:x3; val_offset:140364*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140364*0 + 3*708*FLEN/8, x4, x1, x2)

inst_46789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000007fff; valaddr_reg:x3; val_offset:140367*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140367*0 + 3*709*FLEN/8, x4, x1, x2)

inst_46790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000000ffff; valaddr_reg:x3; val_offset:140370*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140370*0 + 3*710*FLEN/8, x4, x1, x2)

inst_46791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000001ffff; valaddr_reg:x3; val_offset:140373*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140373*0 + 3*711*FLEN/8, x4, x1, x2)

inst_46792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000003ffff; valaddr_reg:x3; val_offset:140376*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140376*0 + 3*712*FLEN/8, x4, x1, x2)

inst_46793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000007ffff; valaddr_reg:x3; val_offset:140379*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140379*0 + 3*713*FLEN/8, x4, x1, x2)

inst_46794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000000fffff; valaddr_reg:x3; val_offset:140382*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140382*0 + 3*714*FLEN/8, x4, x1, x2)

inst_46795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000001fffff; valaddr_reg:x3; val_offset:140385*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140385*0 + 3*715*FLEN/8, x4, x1, x2)

inst_46796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000003fffff; valaddr_reg:x3; val_offset:140388*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140388*0 + 3*716*FLEN/8, x4, x1, x2)

inst_46797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000007fffff; valaddr_reg:x3; val_offset:140391*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140391*0 + 3*717*FLEN/8, x4, x1, x2)

inst_46798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000000ffffff; valaddr_reg:x3; val_offset:140394*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140394*0 + 3*718*FLEN/8, x4, x1, x2)

inst_46799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000001ffffff; valaddr_reg:x3; val_offset:140397*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140397*0 + 3*719*FLEN/8, x4, x1, x2)

inst_46800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000003ffffff; valaddr_reg:x3; val_offset:140400*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140400*0 + 3*720*FLEN/8, x4, x1, x2)

inst_46801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000007ffffff; valaddr_reg:x3; val_offset:140403*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140403*0 + 3*721*FLEN/8, x4, x1, x2)

inst_46802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000000fffffff; valaddr_reg:x3; val_offset:140406*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140406*0 + 3*722*FLEN/8, x4, x1, x2)

inst_46803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000001fffffff; valaddr_reg:x3; val_offset:140409*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140409*0 + 3*723*FLEN/8, x4, x1, x2)

inst_46804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000003fffffff; valaddr_reg:x3; val_offset:140412*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140412*0 + 3*724*FLEN/8, x4, x1, x2)

inst_46805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000007fffffff; valaddr_reg:x3; val_offset:140415*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140415*0 + 3*725*FLEN/8, x4, x1, x2)

inst_46806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100000ffffffff; valaddr_reg:x3; val_offset:140418*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140418*0 + 3*726*FLEN/8, x4, x1, x2)

inst_46807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100001ffffffff; valaddr_reg:x3; val_offset:140421*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140421*0 + 3*727*FLEN/8, x4, x1, x2)

inst_46808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100003ffffffff; valaddr_reg:x3; val_offset:140424*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140424*0 + 3*728*FLEN/8, x4, x1, x2)

inst_46809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100007ffffffff; valaddr_reg:x3; val_offset:140427*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140427*0 + 3*729*FLEN/8, x4, x1, x2)

inst_46810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110000fffffffff; valaddr_reg:x3; val_offset:140430*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140430*0 + 3*730*FLEN/8, x4, x1, x2)

inst_46811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110001fffffffff; valaddr_reg:x3; val_offset:140433*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140433*0 + 3*731*FLEN/8, x4, x1, x2)

inst_46812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110003fffffffff; valaddr_reg:x3; val_offset:140436*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140436*0 + 3*732*FLEN/8, x4, x1, x2)

inst_46813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110007fffffffff; valaddr_reg:x3; val_offset:140439*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140439*0 + 3*733*FLEN/8, x4, x1, x2)

inst_46814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811000ffffffffff; valaddr_reg:x3; val_offset:140442*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140442*0 + 3*734*FLEN/8, x4, x1, x2)

inst_46815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811001ffffffffff; valaddr_reg:x3; val_offset:140445*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140445*0 + 3*735*FLEN/8, x4, x1, x2)

inst_46816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811003ffffffffff; valaddr_reg:x3; val_offset:140448*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140448*0 + 3*736*FLEN/8, x4, x1, x2)

inst_46817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811007ffffffffff; valaddr_reg:x3; val_offset:140451*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140451*0 + 3*737*FLEN/8, x4, x1, x2)

inst_46818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81100fffffffffff; valaddr_reg:x3; val_offset:140454*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140454*0 + 3*738*FLEN/8, x4, x1, x2)

inst_46819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81101fffffffffff; valaddr_reg:x3; val_offset:140457*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140457*0 + 3*739*FLEN/8, x4, x1, x2)

inst_46820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81103fffffffffff; valaddr_reg:x3; val_offset:140460*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140460*0 + 3*740*FLEN/8, x4, x1, x2)

inst_46821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x81107fffffffffff; valaddr_reg:x3; val_offset:140463*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140463*0 + 3*741*FLEN/8, x4, x1, x2)

inst_46822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8110ffffffffffff; valaddr_reg:x3; val_offset:140466*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140466*0 + 3*742*FLEN/8, x4, x1, x2)

inst_46823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8111ffffffffffff; valaddr_reg:x3; val_offset:140469*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140469*0 + 3*743*FLEN/8, x4, x1, x2)

inst_46824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8113ffffffffffff; valaddr_reg:x3; val_offset:140472*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140472*0 + 3*744*FLEN/8, x4, x1, x2)

inst_46825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8117ffffffffffff; valaddr_reg:x3; val_offset:140475*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140475*0 + 3*745*FLEN/8, x4, x1, x2)

inst_46826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x8118000000000000; valaddr_reg:x3; val_offset:140478*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140478*0 + 3*746*FLEN/8, x4, x1, x2)

inst_46827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811c000000000000; valaddr_reg:x3; val_offset:140481*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140481*0 + 3*747*FLEN/8, x4, x1, x2)

inst_46828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811e000000000000; valaddr_reg:x3; val_offset:140484*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140484*0 + 3*748*FLEN/8, x4, x1, x2)

inst_46829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811f000000000000; valaddr_reg:x3; val_offset:140487*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140487*0 + 3*749*FLEN/8, x4, x1, x2)

inst_46830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811f800000000000; valaddr_reg:x3; val_offset:140490*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140490*0 + 3*750*FLEN/8, x4, x1, x2)

inst_46831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fc00000000000; valaddr_reg:x3; val_offset:140493*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140493*0 + 3*751*FLEN/8, x4, x1, x2)

inst_46832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fe00000000000; valaddr_reg:x3; val_offset:140496*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140496*0 + 3*752*FLEN/8, x4, x1, x2)

inst_46833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ff00000000000; valaddr_reg:x3; val_offset:140499*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140499*0 + 3*753*FLEN/8, x4, x1, x2)

inst_46834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ff80000000000; valaddr_reg:x3; val_offset:140502*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140502*0 + 3*754*FLEN/8, x4, x1, x2)

inst_46835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ffc0000000000; valaddr_reg:x3; val_offset:140505*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140505*0 + 3*755*FLEN/8, x4, x1, x2)

inst_46836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ffe0000000000; valaddr_reg:x3; val_offset:140508*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140508*0 + 3*756*FLEN/8, x4, x1, x2)

inst_46837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fff0000000000; valaddr_reg:x3; val_offset:140511*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140511*0 + 3*757*FLEN/8, x4, x1, x2)

inst_46838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fff8000000000; valaddr_reg:x3; val_offset:140514*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140514*0 + 3*758*FLEN/8, x4, x1, x2)

inst_46839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fffc000000000; valaddr_reg:x3; val_offset:140517*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140517*0 + 3*759*FLEN/8, x4, x1, x2)

inst_46840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fffe000000000; valaddr_reg:x3; val_offset:140520*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140520*0 + 3*760*FLEN/8, x4, x1, x2)

inst_46841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ffff000000000; valaddr_reg:x3; val_offset:140523*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140523*0 + 3*761*FLEN/8, x4, x1, x2)

inst_46842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ffff800000000; valaddr_reg:x3; val_offset:140526*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140526*0 + 3*762*FLEN/8, x4, x1, x2)

inst_46843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ffffc00000000; valaddr_reg:x3; val_offset:140529*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140529*0 + 3*763*FLEN/8, x4, x1, x2)

inst_46844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811ffffe00000000; valaddr_reg:x3; val_offset:140532*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140532*0 + 3*764*FLEN/8, x4, x1, x2)

inst_46845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fffff00000000; valaddr_reg:x3; val_offset:140535*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140535*0 + 3*765*FLEN/8, x4, x1, x2)

inst_46846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fffff80000000; valaddr_reg:x3; val_offset:140538*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140538*0 + 3*766*FLEN/8, x4, x1, x2)

inst_46847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xd626a0f472da1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9d626a0f472da1; op2val:0x8000;
op3val:0x811fffffc0000000; valaddr_reg:x3; val_offset:140541*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140541*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295427431869448192,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295428531381075968,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429081136889856,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429356014796800,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429493453750272,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429562173227008,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429596532965376,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429613712834560,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429622302769152,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429626597736448,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429628745220096,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429629818961920,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630355832832,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630624268288,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630758486016,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630825594880,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630859149312,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630875926528,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630884315136,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630888509440,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630890606592,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630891655168,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892179456,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892441600,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892572672,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892638208,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892670976,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892687360,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892695552,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892699648,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892701696,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892702720,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703232,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703488,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703616,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703680,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703712,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703728,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703736,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703740,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703742,64,FLEN)
NAN_BOXED(6889581700883456495,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703743,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890688,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890689,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890691,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890695,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890703,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890719,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890751,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890815,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890943,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675891199,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675891711,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675892735,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675894783,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675898879,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675907071,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675923455,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675956223,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025676021759,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025676152831,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025676414975,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025676939263,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025677987839,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025680084991,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025684279295,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025692667903,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025709445119,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025742999551,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025810108415,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025944326143,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480026212761599,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480026749632511,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480027823374335,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480029970857983,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480034265825279,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480042855759871,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480060035629055,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480094395367423,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480163114844159,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480300553797631,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480575431704575,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358481125187518463,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358482224699146239,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358484423722401791,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358488821768912895,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358497617861935103,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358515210047979519,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358550394420068351,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358620763164246015,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358761500652601343,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9359042975629311999,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9359605925582733311,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9360731825489575935,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9360731825489575936,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9361857725396418560,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362420675349839872,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362702150326550528,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362842887814905856,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362913256559083520,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362948440931172352,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362966033117216768,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362974829210238976,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362979227256750080,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362981426280005632,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362982525791633408,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983075547447296,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983350425354240,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983487864307712,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983556583784448,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983590943522816,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983608123392000,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983616713326592,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983621008293888,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983623155777536,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983624229519360,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983624766390272,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625034825728,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625169043456,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625236152320,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625269706752,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625286483968,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625294872576,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625299066880,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625301164032,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625302212608,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625302736896,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625302999040,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303130112,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303195648,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303228416,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303244800,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303252992,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303257088,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303259136,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303260160,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303260672,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303260928,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261056,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261120,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261152,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261168,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261176,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261180,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261182,64,FLEN)
NAN_BOXED(6889598642090228823,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261183,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333696,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333697,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333699,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333703,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333711,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333727,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333759,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333823,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370333951,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370334207,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370334719,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370335743,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370337791,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370341887,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370350079,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370366463,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370399231,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370464767,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370595839,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500370857983,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500371382271,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500372430847,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500374527999,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500378722303,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500387110911,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500403888127,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500437442559,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500504551423,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500638769151,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122500907204607,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122501444075519,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122502517817343,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122504665300991,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122508960268287,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122517550202879,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122534730072063,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122569089810431,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122637809287167,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290122775248240639,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290123050126147583,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290123599881961471,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290124699393589247,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290126898416844799,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290131296463355903,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290140092556378111,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290157684742422527,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290192869114511359,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290263237858689023,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290403975347044351,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13290685450323755007,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13291248400277176319,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13292374300184018943,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13292374300184018944,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13293500200090861568,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294063150044282880,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294344625020993536,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294485362509348864,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294555731253526528,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294590915625615360,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294608507811659776,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294617303904681984,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294621701951193088,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294623900974448640,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294625000486076416,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294625550241890304,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294625825119797248,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294625962558750720,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626031278227456,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626065637965824,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626082817835008,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626091407769600,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626095702736896,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626097850220544,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626098923962368,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099460833280,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099729268736,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099863486464,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099930595328,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099964149760,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099980926976,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099989315584,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099993509888,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099995607040,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099996655616,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997179904,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997442048,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997573120,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997638656,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997671424,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997687808,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997696000,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997700096,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997702144,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997703168,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997703680,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997703936,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704064,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704128,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704160,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704176,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704184,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704188,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704190,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13294626099997704191,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889603909336256937,64,FLEN)
NAN_BOXED(11516206376517186365,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115328,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115329,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115331,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115335,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115343,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115359,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115391,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115455,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115583,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926115839,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926116351,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926117375,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926119423,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926123519,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926131711,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926148095,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926180863,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926246399,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926377471,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457926639615,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457927163903,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457928212479,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457930309631,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457934503935,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457942892543,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457959669759,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304457993224191,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304458060333055,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304458194550783,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304458462986239,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304458999857151,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304460073598975,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304462221082623,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304466516049919,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304475105984511,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304492285853695,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304526645592063,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304595365068799,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134304732804022271,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134305007681929215,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134305557437743103,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134306656949370879,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134308855972626431,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134313254019137535,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134322050112159743,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134339642298204159,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134374826670292991,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134445195414470655,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134585932902825983,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4134867407879536639,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4135430357832957951,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4136556257739800575,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4136556257739800576,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4137682157646643200,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138245107600064512,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138526582576775168,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138667320065130496,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138737688809308160,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138772873181396992,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138790465367441408,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138799261460463616,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138803659506974720,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138805858530230272,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138806958041858048,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138807507797671936,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138807782675578880,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138807920114532352,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138807988834009088,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808023193747456,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808040373616640,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808048963551232,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808053258518528,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808055406002176,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808056479744000,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057016614912,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057285050368,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057419268096,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057486376960,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057519931392,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057536708608,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057545097216,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057549291520,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057551388672,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057552437248,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057552961536,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553223680,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553354752,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553420288,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553453056,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553469440,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553477632,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553481728,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553483776,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553484800,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485312,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485568,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485696,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485760,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485792,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485808,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485816,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485820,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485822,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4138808057553485823,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889621932607085277,64,FLEN)
NAN_BOXED(2324348428593132912,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455360,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455361,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455363,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455367,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455375,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455391,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455423,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455487,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455615,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069455871,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069456383,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069457407,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069459455,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069463551,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069471743,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069488127,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069520895,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069586431,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069717503,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869069979647,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869070503935,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869071552511,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869073649663,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869077843967,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869086232575,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869103009791,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869136564223,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869203673087,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869337890815,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424869606326271,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424870143197183,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424871216939007,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424873364422655,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424877659389951,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424886249324543,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424903429193727,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668424937788932095,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668425006508408831,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668425143947362303,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668425418825269247,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668425968581083135,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668427068092710911,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668429267115966463,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668433665162477567,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668442461255499775,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668460053441544191,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668495237813633023,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668565606557810687,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668706344046166015,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13668987819022876671,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13669550768976297983,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13670676668883140607,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13670676668883140608,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13671802568789983232,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672365518743404544,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672646993720115200,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672787731208470528,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672858099952648192,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672893284324737024,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672910876510781440,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672919672603803648,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672924070650314752,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672926269673570304,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672927369185198080,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672927918941011968,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928193818918912,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928331257872384,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928399977349120,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928434337087488,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928451516956672,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928460106891264,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928464401858560,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928466549342208,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928467623084032,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468159954944,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468428390400,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468562608128,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468629716992,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468663271424,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468680048640,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468688437248,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468692631552,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468694728704,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468695777280,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696301568,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696563712,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696694784,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696760320,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696793088,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696809472,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696817664,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696821760,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696823808,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696824832,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825344,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825600,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825728,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825792,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825824,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825840,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825848,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825852,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825854,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13672928468696825855,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889666331803009327,64,FLEN)
NAN_BOXED(11516168112241182070,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966144,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966145,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966147,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966151,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966159,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966175,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966207,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966271,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966399,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576966655,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576967167,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576968191,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576970239,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576974335,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576982527,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621576998911,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577031679,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577097215,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577228287,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621577490431,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621578014719,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621579063295,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621581160447,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621585354751,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621593743359,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621610520575,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621644075007,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621711183871,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019621845401599,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622113837055,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019622650707967,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019623724449791,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019625871933439,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019630166900735,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019638756835327,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019655936704511,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019690296442879,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019759015919615,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408019896454873087,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020171332780031,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408020721088593919,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408021820600221695,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408024019623477247,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408028417669988351,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408037213763010559,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408054805949054975,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408089990321143807,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408160359065321471,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408301096553676799,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9408582571530387455,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9409145521483808767,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651391,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9410271421390651392,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411397321297494016,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9411960271250915328,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412241746227625984,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412382483715981312,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412452852460158976,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412488036832247808,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412505629018292224,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412514425111314432,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412518823157825536,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412521022181081088,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522121692708864,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522671448522752,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412522946326429696,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523083765383168,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523152484859904,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523186844598272,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523204024467456,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523212614402048,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523216909369344,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523219056852992,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220130594816,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220667465728,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523220935901184,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221070118912,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221137227776,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221170782208,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221187559424,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221195948032,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221200142336,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221202239488,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203288064,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221203812352,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204074496,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204205568,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204271104,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204303872,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204320256,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204328448,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204332544,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204334592,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204335616,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336128,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336384,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336512,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336576,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336608,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336624,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336632,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336636,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336638,64,FLEN)
NAN_BOXED(6889753469654958303,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336639,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074240,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074241,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074243,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074247,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074255,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074271,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074303,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074367,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074495,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074751,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520075263,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520076287,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520078335,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520082431,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520090623,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520107007,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520139775,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520205311,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520336383,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520598527,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230521122815,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230522171391,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230524268543,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230528462847,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230536851455,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230553628671,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230587183103,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230654291967,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230788509695,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231056945151,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231593816063,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933232667557887,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933234815041535,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933239110008831,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933247699943423,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933264879812607,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933299239550975,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933367959027711,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933505397981183,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933780275888127,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299934330031702015,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299935429543329791,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299937628566585343,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299942026613096447,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299950822706118655,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299968414892163071,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300003599264251903,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300073968008429567,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300214705496784895,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300496180473495551,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9301059130426916863,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759487,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759488,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303310930240602112,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303873880194023424,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304155355170734080,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304296092659089408,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304366461403267072,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304401645775355904,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304419237961400320,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304428034054422528,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304432432100933632,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304434631124189184,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304435730635816960,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436280391630848,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436555269537792,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436692708491264,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436761427968000,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436795787706368,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436812967575552,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436821557510144,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436825852477440,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436827999961088,64,FLEN)
NAN_BOXED(6889771212609105313,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829073702912,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
