
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_66816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ff800000000000; valaddr_reg:x3; val_offset:200448*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200448*0 + 3*0*FLEN/8, x4, x1, x2)

inst_66817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffc00000000000; valaddr_reg:x3; val_offset:200451*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200451*0 + 3*1*FLEN/8, x4, x1, x2)

inst_66818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffe00000000000; valaddr_reg:x3; val_offset:200454*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200454*0 + 3*2*FLEN/8, x4, x1, x2)

inst_66819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fff00000000000; valaddr_reg:x3; val_offset:200457*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200457*0 + 3*3*FLEN/8, x4, x1, x2)

inst_66820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fff80000000000; valaddr_reg:x3; val_offset:200460*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200460*0 + 3*4*FLEN/8, x4, x1, x2)

inst_66821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffc0000000000; valaddr_reg:x3; val_offset:200463*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200463*0 + 3*5*FLEN/8, x4, x1, x2)

inst_66822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffe0000000000; valaddr_reg:x3; val_offset:200466*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200466*0 + 3*6*FLEN/8, x4, x1, x2)

inst_66823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffff0000000000; valaddr_reg:x3; val_offset:200469*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200469*0 + 3*7*FLEN/8, x4, x1, x2)

inst_66824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffff8000000000; valaddr_reg:x3; val_offset:200472*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200472*0 + 3*8*FLEN/8, x4, x1, x2)

inst_66825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffc000000000; valaddr_reg:x3; val_offset:200475*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200475*0 + 3*9*FLEN/8, x4, x1, x2)

inst_66826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffe000000000; valaddr_reg:x3; val_offset:200478*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200478*0 + 3*10*FLEN/8, x4, x1, x2)

inst_66827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffff000000000; valaddr_reg:x3; val_offset:200481*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200481*0 + 3*11*FLEN/8, x4, x1, x2)

inst_66828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffff800000000; valaddr_reg:x3; val_offset:200484*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200484*0 + 3*12*FLEN/8, x4, x1, x2)

inst_66829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffc00000000; valaddr_reg:x3; val_offset:200487*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200487*0 + 3*13*FLEN/8, x4, x1, x2)

inst_66830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffe00000000; valaddr_reg:x3; val_offset:200490*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200490*0 + 3*14*FLEN/8, x4, x1, x2)

inst_66831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffff00000000; valaddr_reg:x3; val_offset:200493*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200493*0 + 3*15*FLEN/8, x4, x1, x2)

inst_66832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffff80000000; valaddr_reg:x3; val_offset:200496*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200496*0 + 3*16*FLEN/8, x4, x1, x2)

inst_66833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffc0000000; valaddr_reg:x3; val_offset:200499*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200499*0 + 3*17*FLEN/8, x4, x1, x2)

inst_66834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffe0000000; valaddr_reg:x3; val_offset:200502*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200502*0 + 3*18*FLEN/8, x4, x1, x2)

inst_66835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffff0000000; valaddr_reg:x3; val_offset:200505*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200505*0 + 3*19*FLEN/8, x4, x1, x2)

inst_66836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffff8000000; valaddr_reg:x3; val_offset:200508*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200508*0 + 3*20*FLEN/8, x4, x1, x2)

inst_66837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffc000000; valaddr_reg:x3; val_offset:200511*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200511*0 + 3*21*FLEN/8, x4, x1, x2)

inst_66838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffe000000; valaddr_reg:x3; val_offset:200514*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200514*0 + 3*22*FLEN/8, x4, x1, x2)

inst_66839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffff000000; valaddr_reg:x3; val_offset:200517*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200517*0 + 3*23*FLEN/8, x4, x1, x2)

inst_66840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffff800000; valaddr_reg:x3; val_offset:200520*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200520*0 + 3*24*FLEN/8, x4, x1, x2)

inst_66841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffc00000; valaddr_reg:x3; val_offset:200523*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200523*0 + 3*25*FLEN/8, x4, x1, x2)

inst_66842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffe00000; valaddr_reg:x3; val_offset:200526*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200526*0 + 3*26*FLEN/8, x4, x1, x2)

inst_66843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffff00000; valaddr_reg:x3; val_offset:200529*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200529*0 + 3*27*FLEN/8, x4, x1, x2)

inst_66844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffff80000; valaddr_reg:x3; val_offset:200532*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200532*0 + 3*28*FLEN/8, x4, x1, x2)

inst_66845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffc0000; valaddr_reg:x3; val_offset:200535*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200535*0 + 3*29*FLEN/8, x4, x1, x2)

inst_66846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffe0000; valaddr_reg:x3; val_offset:200538*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200538*0 + 3*30*FLEN/8, x4, x1, x2)

inst_66847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffff0000; valaddr_reg:x3; val_offset:200541*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200541*0 + 3*31*FLEN/8, x4, x1, x2)

inst_66848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffff8000; valaddr_reg:x3; val_offset:200544*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200544*0 + 3*32*FLEN/8, x4, x1, x2)

inst_66849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffffc000; valaddr_reg:x3; val_offset:200547*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200547*0 + 3*33*FLEN/8, x4, x1, x2)

inst_66850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffffe000; valaddr_reg:x3; val_offset:200550*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200550*0 + 3*34*FLEN/8, x4, x1, x2)

inst_66851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffff000; valaddr_reg:x3; val_offset:200553*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200553*0 + 3*35*FLEN/8, x4, x1, x2)

inst_66852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffff800; valaddr_reg:x3; val_offset:200556*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200556*0 + 3*36*FLEN/8, x4, x1, x2)

inst_66853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffffc00; valaddr_reg:x3; val_offset:200559*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200559*0 + 3*37*FLEN/8, x4, x1, x2)

inst_66854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffffe00; valaddr_reg:x3; val_offset:200562*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200562*0 + 3*38*FLEN/8, x4, x1, x2)

inst_66855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffffff00; valaddr_reg:x3; val_offset:200565*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200565*0 + 3*39*FLEN/8, x4, x1, x2)

inst_66856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffffff80; valaddr_reg:x3; val_offset:200568*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200568*0 + 3*40*FLEN/8, x4, x1, x2)

inst_66857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffffffc0; valaddr_reg:x3; val_offset:200571*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200571*0 + 3*41*FLEN/8, x4, x1, x2)

inst_66858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffffffe0; valaddr_reg:x3; val_offset:200574*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200574*0 + 3*42*FLEN/8, x4, x1, x2)

inst_66859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffffff0; valaddr_reg:x3; val_offset:200577*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200577*0 + 3*43*FLEN/8, x4, x1, x2)

inst_66860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffffff8; valaddr_reg:x3; val_offset:200580*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200580*0 + 3*44*FLEN/8, x4, x1, x2)

inst_66861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffffffc; valaddr_reg:x3; val_offset:200583*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200583*0 + 3*45*FLEN/8, x4, x1, x2)

inst_66862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2fffffffffffffe; valaddr_reg:x3; val_offset:200586*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200586*0 + 3*46*FLEN/8, x4, x1, x2)

inst_66863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4634f605d6844 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4634f605d6844; op2val:0x0;
op3val:0x2ffffffffffffff; valaddr_reg:x3; val_offset:200589*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200589*0 + 3*47*FLEN/8, x4, x1, x2)

inst_66864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:200592*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200592*0 + 3*48*FLEN/8, x4, x1, x2)

inst_66865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:200595*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200595*0 + 3*49*FLEN/8, x4, x1, x2)

inst_66866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:200598*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200598*0 + 3*50*FLEN/8, x4, x1, x2)

inst_66867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:200601*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200601*0 + 3*51*FLEN/8, x4, x1, x2)

inst_66868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:200604*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200604*0 + 3*52*FLEN/8, x4, x1, x2)

inst_66869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:200607*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200607*0 + 3*53*FLEN/8, x4, x1, x2)

inst_66870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:200610*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200610*0 + 3*54*FLEN/8, x4, x1, x2)

inst_66871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:200613*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200613*0 + 3*55*FLEN/8, x4, x1, x2)

inst_66872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:200616*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200616*0 + 3*56*FLEN/8, x4, x1, x2)

inst_66873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:200619*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200619*0 + 3*57*FLEN/8, x4, x1, x2)

inst_66874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:200622*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200622*0 + 3*58*FLEN/8, x4, x1, x2)

inst_66875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:200625*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200625*0 + 3*59*FLEN/8, x4, x1, x2)

inst_66876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:200628*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200628*0 + 3*60*FLEN/8, x4, x1, x2)

inst_66877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:200631*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200631*0 + 3*61*FLEN/8, x4, x1, x2)

inst_66878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:200634*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200634*0 + 3*62*FLEN/8, x4, x1, x2)

inst_66879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:200637*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200637*0 + 3*63*FLEN/8, x4, x1, x2)

inst_66880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:200640*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200640*0 + 3*64*FLEN/8, x4, x1, x2)

inst_66881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:200643*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200643*0 + 3*65*FLEN/8, x4, x1, x2)

inst_66882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:200646*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200646*0 + 3*66*FLEN/8, x4, x1, x2)

inst_66883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:200649*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200649*0 + 3*67*FLEN/8, x4, x1, x2)

inst_66884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:200652*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200652*0 + 3*68*FLEN/8, x4, x1, x2)

inst_66885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:200655*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200655*0 + 3*69*FLEN/8, x4, x1, x2)

inst_66886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000000000; valaddr_reg:x3; val_offset:200658*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200658*0 + 3*70*FLEN/8, x4, x1, x2)

inst_66887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000000001; valaddr_reg:x3; val_offset:200661*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200661*0 + 3*71*FLEN/8, x4, x1, x2)

inst_66888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000000003; valaddr_reg:x3; val_offset:200664*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200664*0 + 3*72*FLEN/8, x4, x1, x2)

inst_66889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000000007; valaddr_reg:x3; val_offset:200667*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200667*0 + 3*73*FLEN/8, x4, x1, x2)

inst_66890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000000000f; valaddr_reg:x3; val_offset:200670*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200670*0 + 3*74*FLEN/8, x4, x1, x2)

inst_66891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000000001f; valaddr_reg:x3; val_offset:200673*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200673*0 + 3*75*FLEN/8, x4, x1, x2)

inst_66892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000000003f; valaddr_reg:x3; val_offset:200676*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200676*0 + 3*76*FLEN/8, x4, x1, x2)

inst_66893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000000007f; valaddr_reg:x3; val_offset:200679*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200679*0 + 3*77*FLEN/8, x4, x1, x2)

inst_66894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000000000ff; valaddr_reg:x3; val_offset:200682*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200682*0 + 3*78*FLEN/8, x4, x1, x2)

inst_66895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000000001ff; valaddr_reg:x3; val_offset:200685*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200685*0 + 3*79*FLEN/8, x4, x1, x2)

inst_66896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000000003ff; valaddr_reg:x3; val_offset:200688*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200688*0 + 3*80*FLEN/8, x4, x1, x2)

inst_66897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000000007ff; valaddr_reg:x3; val_offset:200691*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200691*0 + 3*81*FLEN/8, x4, x1, x2)

inst_66898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000000fff; valaddr_reg:x3; val_offset:200694*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200694*0 + 3*82*FLEN/8, x4, x1, x2)

inst_66899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000001fff; valaddr_reg:x3; val_offset:200697*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200697*0 + 3*83*FLEN/8, x4, x1, x2)

inst_66900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000003fff; valaddr_reg:x3; val_offset:200700*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200700*0 + 3*84*FLEN/8, x4, x1, x2)

inst_66901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000007fff; valaddr_reg:x3; val_offset:200703*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200703*0 + 3*85*FLEN/8, x4, x1, x2)

inst_66902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000000ffff; valaddr_reg:x3; val_offset:200706*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200706*0 + 3*86*FLEN/8, x4, x1, x2)

inst_66903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000001ffff; valaddr_reg:x3; val_offset:200709*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200709*0 + 3*87*FLEN/8, x4, x1, x2)

inst_66904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000003ffff; valaddr_reg:x3; val_offset:200712*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200712*0 + 3*88*FLEN/8, x4, x1, x2)

inst_66905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000007ffff; valaddr_reg:x3; val_offset:200715*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200715*0 + 3*89*FLEN/8, x4, x1, x2)

inst_66906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000000fffff; valaddr_reg:x3; val_offset:200718*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200718*0 + 3*90*FLEN/8, x4, x1, x2)

inst_66907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000001fffff; valaddr_reg:x3; val_offset:200721*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200721*0 + 3*91*FLEN/8, x4, x1, x2)

inst_66908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000003fffff; valaddr_reg:x3; val_offset:200724*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200724*0 + 3*92*FLEN/8, x4, x1, x2)

inst_66909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000007fffff; valaddr_reg:x3; val_offset:200727*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200727*0 + 3*93*FLEN/8, x4, x1, x2)

inst_66910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000000ffffff; valaddr_reg:x3; val_offset:200730*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200730*0 + 3*94*FLEN/8, x4, x1, x2)

inst_66911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000001ffffff; valaddr_reg:x3; val_offset:200733*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200733*0 + 3*95*FLEN/8, x4, x1, x2)

inst_66912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000003ffffff; valaddr_reg:x3; val_offset:200736*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200736*0 + 3*96*FLEN/8, x4, x1, x2)

inst_66913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000007ffffff; valaddr_reg:x3; val_offset:200739*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200739*0 + 3*97*FLEN/8, x4, x1, x2)

inst_66914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000000fffffff; valaddr_reg:x3; val_offset:200742*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200742*0 + 3*98*FLEN/8, x4, x1, x2)

inst_66915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000001fffffff; valaddr_reg:x3; val_offset:200745*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200745*0 + 3*99*FLEN/8, x4, x1, x2)

inst_66916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000003fffffff; valaddr_reg:x3; val_offset:200748*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200748*0 + 3*100*FLEN/8, x4, x1, x2)

inst_66917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000007fffffff; valaddr_reg:x3; val_offset:200751*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200751*0 + 3*101*FLEN/8, x4, x1, x2)

inst_66918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00000ffffffff; valaddr_reg:x3; val_offset:200754*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200754*0 + 3*102*FLEN/8, x4, x1, x2)

inst_66919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00001ffffffff; valaddr_reg:x3; val_offset:200757*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200757*0 + 3*103*FLEN/8, x4, x1, x2)

inst_66920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00003ffffffff; valaddr_reg:x3; val_offset:200760*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200760*0 + 3*104*FLEN/8, x4, x1, x2)

inst_66921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00007ffffffff; valaddr_reg:x3; val_offset:200763*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200763*0 + 3*105*FLEN/8, x4, x1, x2)

inst_66922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0000fffffffff; valaddr_reg:x3; val_offset:200766*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200766*0 + 3*106*FLEN/8, x4, x1, x2)

inst_66923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0001fffffffff; valaddr_reg:x3; val_offset:200769*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200769*0 + 3*107*FLEN/8, x4, x1, x2)

inst_66924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0003fffffffff; valaddr_reg:x3; val_offset:200772*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200772*0 + 3*108*FLEN/8, x4, x1, x2)

inst_66925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0007fffffffff; valaddr_reg:x3; val_offset:200775*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200775*0 + 3*109*FLEN/8, x4, x1, x2)

inst_66926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c000ffffffffff; valaddr_reg:x3; val_offset:200778*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200778*0 + 3*110*FLEN/8, x4, x1, x2)

inst_66927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c001ffffffffff; valaddr_reg:x3; val_offset:200781*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200781*0 + 3*111*FLEN/8, x4, x1, x2)

inst_66928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c003ffffffffff; valaddr_reg:x3; val_offset:200784*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200784*0 + 3*112*FLEN/8, x4, x1, x2)

inst_66929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c007ffffffffff; valaddr_reg:x3; val_offset:200787*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200787*0 + 3*113*FLEN/8, x4, x1, x2)

inst_66930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c00fffffffffff; valaddr_reg:x3; val_offset:200790*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200790*0 + 3*114*FLEN/8, x4, x1, x2)

inst_66931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c01fffffffffff; valaddr_reg:x3; val_offset:200793*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200793*0 + 3*115*FLEN/8, x4, x1, x2)

inst_66932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c03fffffffffff; valaddr_reg:x3; val_offset:200796*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200796*0 + 3*116*FLEN/8, x4, x1, x2)

inst_66933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c07fffffffffff; valaddr_reg:x3; val_offset:200799*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200799*0 + 3*117*FLEN/8, x4, x1, x2)

inst_66934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c0ffffffffffff; valaddr_reg:x3; val_offset:200802*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200802*0 + 3*118*FLEN/8, x4, x1, x2)

inst_66935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c1ffffffffffff; valaddr_reg:x3; val_offset:200805*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200805*0 + 3*119*FLEN/8, x4, x1, x2)

inst_66936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c3ffffffffffff; valaddr_reg:x3; val_offset:200808*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200808*0 + 3*120*FLEN/8, x4, x1, x2)

inst_66937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c7ffffffffffff; valaddr_reg:x3; val_offset:200811*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200811*0 + 3*121*FLEN/8, x4, x1, x2)

inst_66938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1c8000000000000; valaddr_reg:x3; val_offset:200814*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200814*0 + 3*122*FLEN/8, x4, x1, x2)

inst_66939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cc000000000000; valaddr_reg:x3; val_offset:200817*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200817*0 + 3*123*FLEN/8, x4, x1, x2)

inst_66940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1ce000000000000; valaddr_reg:x3; val_offset:200820*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200820*0 + 3*124*FLEN/8, x4, x1, x2)

inst_66941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cf000000000000; valaddr_reg:x3; val_offset:200823*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200823*0 + 3*125*FLEN/8, x4, x1, x2)

inst_66942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cf800000000000; valaddr_reg:x3; val_offset:200826*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200826*0 + 3*126*FLEN/8, x4, x1, x2)

inst_66943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfc00000000000; valaddr_reg:x3; val_offset:200829*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200829*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_66944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfe00000000000; valaddr_reg:x3; val_offset:200832*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200832*0 + 3*128*FLEN/8, x4, x1, x2)

inst_66945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cff00000000000; valaddr_reg:x3; val_offset:200835*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200835*0 + 3*129*FLEN/8, x4, x1, x2)

inst_66946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cff80000000000; valaddr_reg:x3; val_offset:200838*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200838*0 + 3*130*FLEN/8, x4, x1, x2)

inst_66947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffc0000000000; valaddr_reg:x3; val_offset:200841*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200841*0 + 3*131*FLEN/8, x4, x1, x2)

inst_66948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffe0000000000; valaddr_reg:x3; val_offset:200844*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200844*0 + 3*132*FLEN/8, x4, x1, x2)

inst_66949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfff0000000000; valaddr_reg:x3; val_offset:200847*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200847*0 + 3*133*FLEN/8, x4, x1, x2)

inst_66950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfff8000000000; valaddr_reg:x3; val_offset:200850*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200850*0 + 3*134*FLEN/8, x4, x1, x2)

inst_66951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffc000000000; valaddr_reg:x3; val_offset:200853*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200853*0 + 3*135*FLEN/8, x4, x1, x2)

inst_66952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffe000000000; valaddr_reg:x3; val_offset:200856*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200856*0 + 3*136*FLEN/8, x4, x1, x2)

inst_66953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffff000000000; valaddr_reg:x3; val_offset:200859*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200859*0 + 3*137*FLEN/8, x4, x1, x2)

inst_66954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffff800000000; valaddr_reg:x3; val_offset:200862*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200862*0 + 3*138*FLEN/8, x4, x1, x2)

inst_66955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffc00000000; valaddr_reg:x3; val_offset:200865*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200865*0 + 3*139*FLEN/8, x4, x1, x2)

inst_66956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffe00000000; valaddr_reg:x3; val_offset:200868*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200868*0 + 3*140*FLEN/8, x4, x1, x2)

inst_66957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffff00000000; valaddr_reg:x3; val_offset:200871*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200871*0 + 3*141*FLEN/8, x4, x1, x2)

inst_66958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffff80000000; valaddr_reg:x3; val_offset:200874*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200874*0 + 3*142*FLEN/8, x4, x1, x2)

inst_66959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffc0000000; valaddr_reg:x3; val_offset:200877*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200877*0 + 3*143*FLEN/8, x4, x1, x2)

inst_66960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffe0000000; valaddr_reg:x3; val_offset:200880*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200880*0 + 3*144*FLEN/8, x4, x1, x2)

inst_66961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffff0000000; valaddr_reg:x3; val_offset:200883*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200883*0 + 3*145*FLEN/8, x4, x1, x2)

inst_66962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffff8000000; valaddr_reg:x3; val_offset:200886*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200886*0 + 3*146*FLEN/8, x4, x1, x2)

inst_66963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffc000000; valaddr_reg:x3; val_offset:200889*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200889*0 + 3*147*FLEN/8, x4, x1, x2)

inst_66964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffe000000; valaddr_reg:x3; val_offset:200892*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200892*0 + 3*148*FLEN/8, x4, x1, x2)

inst_66965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffff000000; valaddr_reg:x3; val_offset:200895*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200895*0 + 3*149*FLEN/8, x4, x1, x2)

inst_66966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffff800000; valaddr_reg:x3; val_offset:200898*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200898*0 + 3*150*FLEN/8, x4, x1, x2)

inst_66967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffc00000; valaddr_reg:x3; val_offset:200901*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200901*0 + 3*151*FLEN/8, x4, x1, x2)

inst_66968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffe00000; valaddr_reg:x3; val_offset:200904*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200904*0 + 3*152*FLEN/8, x4, x1, x2)

inst_66969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffff00000; valaddr_reg:x3; val_offset:200907*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200907*0 + 3*153*FLEN/8, x4, x1, x2)

inst_66970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffff80000; valaddr_reg:x3; val_offset:200910*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200910*0 + 3*154*FLEN/8, x4, x1, x2)

inst_66971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffc0000; valaddr_reg:x3; val_offset:200913*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200913*0 + 3*155*FLEN/8, x4, x1, x2)

inst_66972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffe0000; valaddr_reg:x3; val_offset:200916*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200916*0 + 3*156*FLEN/8, x4, x1, x2)

inst_66973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffff0000; valaddr_reg:x3; val_offset:200919*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200919*0 + 3*157*FLEN/8, x4, x1, x2)

inst_66974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffff8000; valaddr_reg:x3; val_offset:200922*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200922*0 + 3*158*FLEN/8, x4, x1, x2)

inst_66975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffffc000; valaddr_reg:x3; val_offset:200925*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200925*0 + 3*159*FLEN/8, x4, x1, x2)

inst_66976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffffe000; valaddr_reg:x3; val_offset:200928*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200928*0 + 3*160*FLEN/8, x4, x1, x2)

inst_66977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffff000; valaddr_reg:x3; val_offset:200931*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200931*0 + 3*161*FLEN/8, x4, x1, x2)

inst_66978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffff800; valaddr_reg:x3; val_offset:200934*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200934*0 + 3*162*FLEN/8, x4, x1, x2)

inst_66979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffffc00; valaddr_reg:x3; val_offset:200937*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200937*0 + 3*163*FLEN/8, x4, x1, x2)

inst_66980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffffe00; valaddr_reg:x3; val_offset:200940*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200940*0 + 3*164*FLEN/8, x4, x1, x2)

inst_66981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffffff00; valaddr_reg:x3; val_offset:200943*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200943*0 + 3*165*FLEN/8, x4, x1, x2)

inst_66982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffffff80; valaddr_reg:x3; val_offset:200946*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200946*0 + 3*166*FLEN/8, x4, x1, x2)

inst_66983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffffffc0; valaddr_reg:x3; val_offset:200949*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200949*0 + 3*167*FLEN/8, x4, x1, x2)

inst_66984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffffffe0; valaddr_reg:x3; val_offset:200952*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200952*0 + 3*168*FLEN/8, x4, x1, x2)

inst_66985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffffff0; valaddr_reg:x3; val_offset:200955*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200955*0 + 3*169*FLEN/8, x4, x1, x2)

inst_66986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffffff8; valaddr_reg:x3; val_offset:200958*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200958*0 + 3*170*FLEN/8, x4, x1, x2)

inst_66987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffffffc; valaddr_reg:x3; val_offset:200961*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200961*0 + 3*171*FLEN/8, x4, x1, x2)

inst_66988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cffffffffffffe; valaddr_reg:x3; val_offset:200964*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200964*0 + 3*172*FLEN/8, x4, x1, x2)

inst_66989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46d9e5616b431 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa46d9e5616b431; op2val:0x0;
op3val:0x1cfffffffffffff; valaddr_reg:x3; val_offset:200967*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200967*0 + 3*173*FLEN/8, x4, x1, x2)

inst_66990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000000000; valaddr_reg:x3; val_offset:200970*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200970*0 + 3*174*FLEN/8, x4, x1, x2)

inst_66991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000000001; valaddr_reg:x3; val_offset:200973*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200973*0 + 3*175*FLEN/8, x4, x1, x2)

inst_66992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000000003; valaddr_reg:x3; val_offset:200976*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200976*0 + 3*176*FLEN/8, x4, x1, x2)

inst_66993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000000007; valaddr_reg:x3; val_offset:200979*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200979*0 + 3*177*FLEN/8, x4, x1, x2)

inst_66994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000000000f; valaddr_reg:x3; val_offset:200982*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200982*0 + 3*178*FLEN/8, x4, x1, x2)

inst_66995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000000001f; valaddr_reg:x3; val_offset:200985*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200985*0 + 3*179*FLEN/8, x4, x1, x2)

inst_66996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000000003f; valaddr_reg:x3; val_offset:200988*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200988*0 + 3*180*FLEN/8, x4, x1, x2)

inst_66997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000000007f; valaddr_reg:x3; val_offset:200991*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200991*0 + 3*181*FLEN/8, x4, x1, x2)

inst_66998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000000000ff; valaddr_reg:x3; val_offset:200994*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200994*0 + 3*182*FLEN/8, x4, x1, x2)

inst_66999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000000001ff; valaddr_reg:x3; val_offset:200997*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 200997*0 + 3*183*FLEN/8, x4, x1, x2)

inst_67000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000000003ff; valaddr_reg:x3; val_offset:201000*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201000*0 + 3*184*FLEN/8, x4, x1, x2)

inst_67001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000000007ff; valaddr_reg:x3; val_offset:201003*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201003*0 + 3*185*FLEN/8, x4, x1, x2)

inst_67002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000000fff; valaddr_reg:x3; val_offset:201006*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201006*0 + 3*186*FLEN/8, x4, x1, x2)

inst_67003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000001fff; valaddr_reg:x3; val_offset:201009*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201009*0 + 3*187*FLEN/8, x4, x1, x2)

inst_67004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000003fff; valaddr_reg:x3; val_offset:201012*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201012*0 + 3*188*FLEN/8, x4, x1, x2)

inst_67005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000007fff; valaddr_reg:x3; val_offset:201015*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201015*0 + 3*189*FLEN/8, x4, x1, x2)

inst_67006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000000ffff; valaddr_reg:x3; val_offset:201018*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201018*0 + 3*190*FLEN/8, x4, x1, x2)

inst_67007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000001ffff; valaddr_reg:x3; val_offset:201021*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201021*0 + 3*191*FLEN/8, x4, x1, x2)

inst_67008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000003ffff; valaddr_reg:x3; val_offset:201024*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201024*0 + 3*192*FLEN/8, x4, x1, x2)

inst_67009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000007ffff; valaddr_reg:x3; val_offset:201027*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201027*0 + 3*193*FLEN/8, x4, x1, x2)

inst_67010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000000fffff; valaddr_reg:x3; val_offset:201030*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201030*0 + 3*194*FLEN/8, x4, x1, x2)

inst_67011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000001fffff; valaddr_reg:x3; val_offset:201033*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201033*0 + 3*195*FLEN/8, x4, x1, x2)

inst_67012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000003fffff; valaddr_reg:x3; val_offset:201036*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201036*0 + 3*196*FLEN/8, x4, x1, x2)

inst_67013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000007fffff; valaddr_reg:x3; val_offset:201039*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201039*0 + 3*197*FLEN/8, x4, x1, x2)

inst_67014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000000ffffff; valaddr_reg:x3; val_offset:201042*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201042*0 + 3*198*FLEN/8, x4, x1, x2)

inst_67015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000001ffffff; valaddr_reg:x3; val_offset:201045*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201045*0 + 3*199*FLEN/8, x4, x1, x2)

inst_67016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000003ffffff; valaddr_reg:x3; val_offset:201048*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201048*0 + 3*200*FLEN/8, x4, x1, x2)

inst_67017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000007ffffff; valaddr_reg:x3; val_offset:201051*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201051*0 + 3*201*FLEN/8, x4, x1, x2)

inst_67018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000000fffffff; valaddr_reg:x3; val_offset:201054*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201054*0 + 3*202*FLEN/8, x4, x1, x2)

inst_67019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000001fffffff; valaddr_reg:x3; val_offset:201057*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201057*0 + 3*203*FLEN/8, x4, x1, x2)

inst_67020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000003fffffff; valaddr_reg:x3; val_offset:201060*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201060*0 + 3*204*FLEN/8, x4, x1, x2)

inst_67021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000007fffffff; valaddr_reg:x3; val_offset:201063*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201063*0 + 3*205*FLEN/8, x4, x1, x2)

inst_67022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00000ffffffff; valaddr_reg:x3; val_offset:201066*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201066*0 + 3*206*FLEN/8, x4, x1, x2)

inst_67023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00001ffffffff; valaddr_reg:x3; val_offset:201069*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201069*0 + 3*207*FLEN/8, x4, x1, x2)

inst_67024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00003ffffffff; valaddr_reg:x3; val_offset:201072*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201072*0 + 3*208*FLEN/8, x4, x1, x2)

inst_67025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00007ffffffff; valaddr_reg:x3; val_offset:201075*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201075*0 + 3*209*FLEN/8, x4, x1, x2)

inst_67026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0000fffffffff; valaddr_reg:x3; val_offset:201078*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201078*0 + 3*210*FLEN/8, x4, x1, x2)

inst_67027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0001fffffffff; valaddr_reg:x3; val_offset:201081*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201081*0 + 3*211*FLEN/8, x4, x1, x2)

inst_67028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0003fffffffff; valaddr_reg:x3; val_offset:201084*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201084*0 + 3*212*FLEN/8, x4, x1, x2)

inst_67029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0007fffffffff; valaddr_reg:x3; val_offset:201087*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201087*0 + 3*213*FLEN/8, x4, x1, x2)

inst_67030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d000ffffffffff; valaddr_reg:x3; val_offset:201090*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201090*0 + 3*214*FLEN/8, x4, x1, x2)

inst_67031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d001ffffffffff; valaddr_reg:x3; val_offset:201093*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201093*0 + 3*215*FLEN/8, x4, x1, x2)

inst_67032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d003ffffffffff; valaddr_reg:x3; val_offset:201096*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201096*0 + 3*216*FLEN/8, x4, x1, x2)

inst_67033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d007ffffffffff; valaddr_reg:x3; val_offset:201099*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201099*0 + 3*217*FLEN/8, x4, x1, x2)

inst_67034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d00fffffffffff; valaddr_reg:x3; val_offset:201102*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201102*0 + 3*218*FLEN/8, x4, x1, x2)

inst_67035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d01fffffffffff; valaddr_reg:x3; val_offset:201105*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201105*0 + 3*219*FLEN/8, x4, x1, x2)

inst_67036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d03fffffffffff; valaddr_reg:x3; val_offset:201108*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201108*0 + 3*220*FLEN/8, x4, x1, x2)

inst_67037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d07fffffffffff; valaddr_reg:x3; val_offset:201111*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201111*0 + 3*221*FLEN/8, x4, x1, x2)

inst_67038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d0ffffffffffff; valaddr_reg:x3; val_offset:201114*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201114*0 + 3*222*FLEN/8, x4, x1, x2)

inst_67039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d1ffffffffffff; valaddr_reg:x3; val_offset:201117*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201117*0 + 3*223*FLEN/8, x4, x1, x2)

inst_67040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d3ffffffffffff; valaddr_reg:x3; val_offset:201120*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201120*0 + 3*224*FLEN/8, x4, x1, x2)

inst_67041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d7ffffffffffff; valaddr_reg:x3; val_offset:201123*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201123*0 + 3*225*FLEN/8, x4, x1, x2)

inst_67042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9d8000000000000; valaddr_reg:x3; val_offset:201126*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201126*0 + 3*226*FLEN/8, x4, x1, x2)

inst_67043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dc000000000000; valaddr_reg:x3; val_offset:201129*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201129*0 + 3*227*FLEN/8, x4, x1, x2)

inst_67044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9de000000000000; valaddr_reg:x3; val_offset:201132*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201132*0 + 3*228*FLEN/8, x4, x1, x2)

inst_67045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9df000000000000; valaddr_reg:x3; val_offset:201135*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201135*0 + 3*229*FLEN/8, x4, x1, x2)

inst_67046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9df800000000000; valaddr_reg:x3; val_offset:201138*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201138*0 + 3*230*FLEN/8, x4, x1, x2)

inst_67047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfc00000000000; valaddr_reg:x3; val_offset:201141*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201141*0 + 3*231*FLEN/8, x4, x1, x2)

inst_67048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfe00000000000; valaddr_reg:x3; val_offset:201144*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201144*0 + 3*232*FLEN/8, x4, x1, x2)

inst_67049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dff00000000000; valaddr_reg:x3; val_offset:201147*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201147*0 + 3*233*FLEN/8, x4, x1, x2)

inst_67050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dff80000000000; valaddr_reg:x3; val_offset:201150*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201150*0 + 3*234*FLEN/8, x4, x1, x2)

inst_67051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffc0000000000; valaddr_reg:x3; val_offset:201153*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201153*0 + 3*235*FLEN/8, x4, x1, x2)

inst_67052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffe0000000000; valaddr_reg:x3; val_offset:201156*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201156*0 + 3*236*FLEN/8, x4, x1, x2)

inst_67053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfff0000000000; valaddr_reg:x3; val_offset:201159*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201159*0 + 3*237*FLEN/8, x4, x1, x2)

inst_67054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfff8000000000; valaddr_reg:x3; val_offset:201162*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201162*0 + 3*238*FLEN/8, x4, x1, x2)

inst_67055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffc000000000; valaddr_reg:x3; val_offset:201165*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201165*0 + 3*239*FLEN/8, x4, x1, x2)

inst_67056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffe000000000; valaddr_reg:x3; val_offset:201168*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201168*0 + 3*240*FLEN/8, x4, x1, x2)

inst_67057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffff000000000; valaddr_reg:x3; val_offset:201171*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201171*0 + 3*241*FLEN/8, x4, x1, x2)

inst_67058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffff800000000; valaddr_reg:x3; val_offset:201174*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201174*0 + 3*242*FLEN/8, x4, x1, x2)

inst_67059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffc00000000; valaddr_reg:x3; val_offset:201177*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201177*0 + 3*243*FLEN/8, x4, x1, x2)

inst_67060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffe00000000; valaddr_reg:x3; val_offset:201180*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201180*0 + 3*244*FLEN/8, x4, x1, x2)

inst_67061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffff00000000; valaddr_reg:x3; val_offset:201183*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201183*0 + 3*245*FLEN/8, x4, x1, x2)

inst_67062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffff80000000; valaddr_reg:x3; val_offset:201186*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201186*0 + 3*246*FLEN/8, x4, x1, x2)

inst_67063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffc0000000; valaddr_reg:x3; val_offset:201189*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201189*0 + 3*247*FLEN/8, x4, x1, x2)

inst_67064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffe0000000; valaddr_reg:x3; val_offset:201192*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201192*0 + 3*248*FLEN/8, x4, x1, x2)

inst_67065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffff0000000; valaddr_reg:x3; val_offset:201195*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201195*0 + 3*249*FLEN/8, x4, x1, x2)

inst_67066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffff8000000; valaddr_reg:x3; val_offset:201198*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201198*0 + 3*250*FLEN/8, x4, x1, x2)

inst_67067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffc000000; valaddr_reg:x3; val_offset:201201*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201201*0 + 3*251*FLEN/8, x4, x1, x2)

inst_67068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffe000000; valaddr_reg:x3; val_offset:201204*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201204*0 + 3*252*FLEN/8, x4, x1, x2)

inst_67069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffff000000; valaddr_reg:x3; val_offset:201207*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201207*0 + 3*253*FLEN/8, x4, x1, x2)

inst_67070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffff800000; valaddr_reg:x3; val_offset:201210*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201210*0 + 3*254*FLEN/8, x4, x1, x2)

inst_67071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffc00000; valaddr_reg:x3; val_offset:201213*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201213*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_67072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffe00000; valaddr_reg:x3; val_offset:201216*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201216*0 + 3*256*FLEN/8, x4, x1, x2)

inst_67073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffff00000; valaddr_reg:x3; val_offset:201219*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201219*0 + 3*257*FLEN/8, x4, x1, x2)

inst_67074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffff80000; valaddr_reg:x3; val_offset:201222*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201222*0 + 3*258*FLEN/8, x4, x1, x2)

inst_67075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffc0000; valaddr_reg:x3; val_offset:201225*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201225*0 + 3*259*FLEN/8, x4, x1, x2)

inst_67076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffe0000; valaddr_reg:x3; val_offset:201228*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201228*0 + 3*260*FLEN/8, x4, x1, x2)

inst_67077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffff0000; valaddr_reg:x3; val_offset:201231*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201231*0 + 3*261*FLEN/8, x4, x1, x2)

inst_67078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffff8000; valaddr_reg:x3; val_offset:201234*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201234*0 + 3*262*FLEN/8, x4, x1, x2)

inst_67079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffffc000; valaddr_reg:x3; val_offset:201237*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201237*0 + 3*263*FLEN/8, x4, x1, x2)

inst_67080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffffe000; valaddr_reg:x3; val_offset:201240*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201240*0 + 3*264*FLEN/8, x4, x1, x2)

inst_67081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffff000; valaddr_reg:x3; val_offset:201243*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201243*0 + 3*265*FLEN/8, x4, x1, x2)

inst_67082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffff800; valaddr_reg:x3; val_offset:201246*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201246*0 + 3*266*FLEN/8, x4, x1, x2)

inst_67083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffffc00; valaddr_reg:x3; val_offset:201249*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201249*0 + 3*267*FLEN/8, x4, x1, x2)

inst_67084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffffe00; valaddr_reg:x3; val_offset:201252*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201252*0 + 3*268*FLEN/8, x4, x1, x2)

inst_67085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffffff00; valaddr_reg:x3; val_offset:201255*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201255*0 + 3*269*FLEN/8, x4, x1, x2)

inst_67086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffffff80; valaddr_reg:x3; val_offset:201258*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201258*0 + 3*270*FLEN/8, x4, x1, x2)

inst_67087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffffffc0; valaddr_reg:x3; val_offset:201261*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201261*0 + 3*271*FLEN/8, x4, x1, x2)

inst_67088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffffffe0; valaddr_reg:x3; val_offset:201264*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201264*0 + 3*272*FLEN/8, x4, x1, x2)

inst_67089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffffff0; valaddr_reg:x3; val_offset:201267*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201267*0 + 3*273*FLEN/8, x4, x1, x2)

inst_67090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffffff8; valaddr_reg:x3; val_offset:201270*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201270*0 + 3*274*FLEN/8, x4, x1, x2)

inst_67091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffffffc; valaddr_reg:x3; val_offset:201273*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201273*0 + 3*275*FLEN/8, x4, x1, x2)

inst_67092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dffffffffffffe; valaddr_reg:x3; val_offset:201276*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201276*0 + 3*276*FLEN/8, x4, x1, x2)

inst_67093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xb9dfffffffffffff; valaddr_reg:x3; val_offset:201279*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201279*0 + 3*277*FLEN/8, x4, x1, x2)

inst_67094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:201282*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201282*0 + 3*278*FLEN/8, x4, x1, x2)

inst_67095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:201285*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201285*0 + 3*279*FLEN/8, x4, x1, x2)

inst_67096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:201288*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201288*0 + 3*280*FLEN/8, x4, x1, x2)

inst_67097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:201291*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201291*0 + 3*281*FLEN/8, x4, x1, x2)

inst_67098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:201294*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201294*0 + 3*282*FLEN/8, x4, x1, x2)

inst_67099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:201297*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201297*0 + 3*283*FLEN/8, x4, x1, x2)

inst_67100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:201300*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201300*0 + 3*284*FLEN/8, x4, x1, x2)

inst_67101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:201303*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201303*0 + 3*285*FLEN/8, x4, x1, x2)

inst_67102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:201306*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201306*0 + 3*286*FLEN/8, x4, x1, x2)

inst_67103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:201309*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201309*0 + 3*287*FLEN/8, x4, x1, x2)

inst_67104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:201312*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201312*0 + 3*288*FLEN/8, x4, x1, x2)

inst_67105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:201315*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201315*0 + 3*289*FLEN/8, x4, x1, x2)

inst_67106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:201318*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201318*0 + 3*290*FLEN/8, x4, x1, x2)

inst_67107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:201321*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201321*0 + 3*291*FLEN/8, x4, x1, x2)

inst_67108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:201324*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201324*0 + 3*292*FLEN/8, x4, x1, x2)

inst_67109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:201327*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201327*0 + 3*293*FLEN/8, x4, x1, x2)

inst_67110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:201330*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201330*0 + 3*294*FLEN/8, x4, x1, x2)

inst_67111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:201333*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201333*0 + 3*295*FLEN/8, x4, x1, x2)

inst_67112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:201336*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201336*0 + 3*296*FLEN/8, x4, x1, x2)

inst_67113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:201339*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201339*0 + 3*297*FLEN/8, x4, x1, x2)

inst_67114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:201342*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201342*0 + 3*298*FLEN/8, x4, x1, x2)

inst_67115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x497462d5b0458 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8dd86a168f4c9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa497462d5b0458; op2val:0x9fc8dd86a168f4c9;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:201345*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201345*0 + 3*299*FLEN/8, x4, x1, x2)

inst_67116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:201348*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201348*0 + 3*300*FLEN/8, x4, x1, x2)

inst_67117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:201351*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201351*0 + 3*301*FLEN/8, x4, x1, x2)

inst_67118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:201354*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201354*0 + 3*302*FLEN/8, x4, x1, x2)

inst_67119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:201357*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201357*0 + 3*303*FLEN/8, x4, x1, x2)

inst_67120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:201360*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201360*0 + 3*304*FLEN/8, x4, x1, x2)

inst_67121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:201363*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201363*0 + 3*305*FLEN/8, x4, x1, x2)

inst_67122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:201366*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201366*0 + 3*306*FLEN/8, x4, x1, x2)

inst_67123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:201369*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201369*0 + 3*307*FLEN/8, x4, x1, x2)

inst_67124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:201372*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201372*0 + 3*308*FLEN/8, x4, x1, x2)

inst_67125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:201375*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201375*0 + 3*309*FLEN/8, x4, x1, x2)

inst_67126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:201378*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201378*0 + 3*310*FLEN/8, x4, x1, x2)

inst_67127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:201381*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201381*0 + 3*311*FLEN/8, x4, x1, x2)

inst_67128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:201384*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201384*0 + 3*312*FLEN/8, x4, x1, x2)

inst_67129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:201387*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201387*0 + 3*313*FLEN/8, x4, x1, x2)

inst_67130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:201390*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201390*0 + 3*314*FLEN/8, x4, x1, x2)

inst_67131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:201393*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201393*0 + 3*315*FLEN/8, x4, x1, x2)

inst_67132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:201396*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201396*0 + 3*316*FLEN/8, x4, x1, x2)

inst_67133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:201399*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201399*0 + 3*317*FLEN/8, x4, x1, x2)

inst_67134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:201402*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201402*0 + 3*318*FLEN/8, x4, x1, x2)

inst_67135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:201405*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201405*0 + 3*319*FLEN/8, x4, x1, x2)

inst_67136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:201408*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201408*0 + 3*320*FLEN/8, x4, x1, x2)

inst_67137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:201411*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201411*0 + 3*321*FLEN/8, x4, x1, x2)

inst_67138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000000000; valaddr_reg:x3; val_offset:201414*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201414*0 + 3*322*FLEN/8, x4, x1, x2)

inst_67139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000000001; valaddr_reg:x3; val_offset:201417*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201417*0 + 3*323*FLEN/8, x4, x1, x2)

inst_67140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000000003; valaddr_reg:x3; val_offset:201420*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201420*0 + 3*324*FLEN/8, x4, x1, x2)

inst_67141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000000007; valaddr_reg:x3; val_offset:201423*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201423*0 + 3*325*FLEN/8, x4, x1, x2)

inst_67142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000000000f; valaddr_reg:x3; val_offset:201426*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201426*0 + 3*326*FLEN/8, x4, x1, x2)

inst_67143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000000001f; valaddr_reg:x3; val_offset:201429*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201429*0 + 3*327*FLEN/8, x4, x1, x2)

inst_67144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000000003f; valaddr_reg:x3; val_offset:201432*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201432*0 + 3*328*FLEN/8, x4, x1, x2)

inst_67145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000000007f; valaddr_reg:x3; val_offset:201435*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201435*0 + 3*329*FLEN/8, x4, x1, x2)

inst_67146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000000000ff; valaddr_reg:x3; val_offset:201438*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201438*0 + 3*330*FLEN/8, x4, x1, x2)

inst_67147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000000001ff; valaddr_reg:x3; val_offset:201441*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201441*0 + 3*331*FLEN/8, x4, x1, x2)

inst_67148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000000003ff; valaddr_reg:x3; val_offset:201444*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201444*0 + 3*332*FLEN/8, x4, x1, x2)

inst_67149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000000007ff; valaddr_reg:x3; val_offset:201447*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201447*0 + 3*333*FLEN/8, x4, x1, x2)

inst_67150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000000fff; valaddr_reg:x3; val_offset:201450*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201450*0 + 3*334*FLEN/8, x4, x1, x2)

inst_67151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000001fff; valaddr_reg:x3; val_offset:201453*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201453*0 + 3*335*FLEN/8, x4, x1, x2)

inst_67152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000003fff; valaddr_reg:x3; val_offset:201456*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201456*0 + 3*336*FLEN/8, x4, x1, x2)

inst_67153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000007fff; valaddr_reg:x3; val_offset:201459*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201459*0 + 3*337*FLEN/8, x4, x1, x2)

inst_67154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000000ffff; valaddr_reg:x3; val_offset:201462*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201462*0 + 3*338*FLEN/8, x4, x1, x2)

inst_67155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000001ffff; valaddr_reg:x3; val_offset:201465*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201465*0 + 3*339*FLEN/8, x4, x1, x2)

inst_67156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000003ffff; valaddr_reg:x3; val_offset:201468*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201468*0 + 3*340*FLEN/8, x4, x1, x2)

inst_67157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000007ffff; valaddr_reg:x3; val_offset:201471*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201471*0 + 3*341*FLEN/8, x4, x1, x2)

inst_67158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000000fffff; valaddr_reg:x3; val_offset:201474*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201474*0 + 3*342*FLEN/8, x4, x1, x2)

inst_67159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000001fffff; valaddr_reg:x3; val_offset:201477*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201477*0 + 3*343*FLEN/8, x4, x1, x2)

inst_67160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000003fffff; valaddr_reg:x3; val_offset:201480*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201480*0 + 3*344*FLEN/8, x4, x1, x2)

inst_67161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000007fffff; valaddr_reg:x3; val_offset:201483*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201483*0 + 3*345*FLEN/8, x4, x1, x2)

inst_67162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000000ffffff; valaddr_reg:x3; val_offset:201486*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201486*0 + 3*346*FLEN/8, x4, x1, x2)

inst_67163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000001ffffff; valaddr_reg:x3; val_offset:201489*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201489*0 + 3*347*FLEN/8, x4, x1, x2)

inst_67164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000003ffffff; valaddr_reg:x3; val_offset:201492*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201492*0 + 3*348*FLEN/8, x4, x1, x2)

inst_67165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000007ffffff; valaddr_reg:x3; val_offset:201495*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201495*0 + 3*349*FLEN/8, x4, x1, x2)

inst_67166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000000fffffff; valaddr_reg:x3; val_offset:201498*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201498*0 + 3*350*FLEN/8, x4, x1, x2)

inst_67167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000001fffffff; valaddr_reg:x3; val_offset:201501*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201501*0 + 3*351*FLEN/8, x4, x1, x2)

inst_67168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000003fffffff; valaddr_reg:x3; val_offset:201504*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201504*0 + 3*352*FLEN/8, x4, x1, x2)

inst_67169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000007fffffff; valaddr_reg:x3; val_offset:201507*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201507*0 + 3*353*FLEN/8, x4, x1, x2)

inst_67170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00000ffffffff; valaddr_reg:x3; val_offset:201510*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201510*0 + 3*354*FLEN/8, x4, x1, x2)

inst_67171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00001ffffffff; valaddr_reg:x3; val_offset:201513*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201513*0 + 3*355*FLEN/8, x4, x1, x2)

inst_67172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00003ffffffff; valaddr_reg:x3; val_offset:201516*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201516*0 + 3*356*FLEN/8, x4, x1, x2)

inst_67173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00007ffffffff; valaddr_reg:x3; val_offset:201519*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201519*0 + 3*357*FLEN/8, x4, x1, x2)

inst_67174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0000fffffffff; valaddr_reg:x3; val_offset:201522*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201522*0 + 3*358*FLEN/8, x4, x1, x2)

inst_67175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0001fffffffff; valaddr_reg:x3; val_offset:201525*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201525*0 + 3*359*FLEN/8, x4, x1, x2)

inst_67176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:201528*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201528*0 + 3*360*FLEN/8, x4, x1, x2)

inst_67177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:201531*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201531*0 + 3*361*FLEN/8, x4, x1, x2)

inst_67178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:201534*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201534*0 + 3*362*FLEN/8, x4, x1, x2)

inst_67179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:201537*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201537*0 + 3*363*FLEN/8, x4, x1, x2)

inst_67180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:201540*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201540*0 + 3*364*FLEN/8, x4, x1, x2)

inst_67181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:201543*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201543*0 + 3*365*FLEN/8, x4, x1, x2)

inst_67182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:201546*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201546*0 + 3*366*FLEN/8, x4, x1, x2)

inst_67183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:201549*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201549*0 + 3*367*FLEN/8, x4, x1, x2)

inst_67184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:201552*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201552*0 + 3*368*FLEN/8, x4, x1, x2)

inst_67185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:201555*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201555*0 + 3*369*FLEN/8, x4, x1, x2)

inst_67186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:201558*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201558*0 + 3*370*FLEN/8, x4, x1, x2)

inst_67187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:201561*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201561*0 + 3*371*FLEN/8, x4, x1, x2)

inst_67188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:201564*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201564*0 + 3*372*FLEN/8, x4, x1, x2)

inst_67189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:201567*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201567*0 + 3*373*FLEN/8, x4, x1, x2)

inst_67190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:201570*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201570*0 + 3*374*FLEN/8, x4, x1, x2)

inst_67191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:201573*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201573*0 + 3*375*FLEN/8, x4, x1, x2)

inst_67192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:201576*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201576*0 + 3*376*FLEN/8, x4, x1, x2)

inst_67193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:201579*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201579*0 + 3*377*FLEN/8, x4, x1, x2)

inst_67194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:201582*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201582*0 + 3*378*FLEN/8, x4, x1, x2)

inst_67195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:201585*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201585*0 + 3*379*FLEN/8, x4, x1, x2)

inst_67196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:201588*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201588*0 + 3*380*FLEN/8, x4, x1, x2)

inst_67197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:201591*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201591*0 + 3*381*FLEN/8, x4, x1, x2)

inst_67198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:201594*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201594*0 + 3*382*FLEN/8, x4, x1, x2)

inst_67199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:201597*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201597*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_67200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:201600*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201600*0 + 3*384*FLEN/8, x4, x1, x2)

inst_67201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:201603*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201603*0 + 3*385*FLEN/8, x4, x1, x2)

inst_67202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:201606*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201606*0 + 3*386*FLEN/8, x4, x1, x2)

inst_67203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:201609*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201609*0 + 3*387*FLEN/8, x4, x1, x2)

inst_67204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:201612*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201612*0 + 3*388*FLEN/8, x4, x1, x2)

inst_67205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:201615*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201615*0 + 3*389*FLEN/8, x4, x1, x2)

inst_67206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:201618*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201618*0 + 3*390*FLEN/8, x4, x1, x2)

inst_67207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:201621*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201621*0 + 3*391*FLEN/8, x4, x1, x2)

inst_67208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:201624*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201624*0 + 3*392*FLEN/8, x4, x1, x2)

inst_67209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:201627*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201627*0 + 3*393*FLEN/8, x4, x1, x2)

inst_67210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:201630*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201630*0 + 3*394*FLEN/8, x4, x1, x2)

inst_67211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:201633*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201633*0 + 3*395*FLEN/8, x4, x1, x2)

inst_67212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:201636*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201636*0 + 3*396*FLEN/8, x4, x1, x2)

inst_67213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:201639*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201639*0 + 3*397*FLEN/8, x4, x1, x2)

inst_67214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:201642*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201642*0 + 3*398*FLEN/8, x4, x1, x2)

inst_67215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:201645*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201645*0 + 3*399*FLEN/8, x4, x1, x2)

inst_67216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:201648*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201648*0 + 3*400*FLEN/8, x4, x1, x2)

inst_67217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:201651*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201651*0 + 3*401*FLEN/8, x4, x1, x2)

inst_67218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:201654*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201654*0 + 3*402*FLEN/8, x4, x1, x2)

inst_67219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:201657*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201657*0 + 3*403*FLEN/8, x4, x1, x2)

inst_67220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:201660*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201660*0 + 3*404*FLEN/8, x4, x1, x2)

inst_67221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:201663*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201663*0 + 3*405*FLEN/8, x4, x1, x2)

inst_67222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:201666*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201666*0 + 3*406*FLEN/8, x4, x1, x2)

inst_67223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:201669*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201669*0 + 3*407*FLEN/8, x4, x1, x2)

inst_67224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:201672*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201672*0 + 3*408*FLEN/8, x4, x1, x2)

inst_67225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:201675*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201675*0 + 3*409*FLEN/8, x4, x1, x2)

inst_67226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:201678*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201678*0 + 3*410*FLEN/8, x4, x1, x2)

inst_67227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:201681*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201681*0 + 3*411*FLEN/8, x4, x1, x2)

inst_67228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:201684*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201684*0 + 3*412*FLEN/8, x4, x1, x2)

inst_67229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:201687*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201687*0 + 3*413*FLEN/8, x4, x1, x2)

inst_67230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:201690*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201690*0 + 3*414*FLEN/8, x4, x1, x2)

inst_67231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:201693*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201693*0 + 3*415*FLEN/8, x4, x1, x2)

inst_67232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:201696*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201696*0 + 3*416*FLEN/8, x4, x1, x2)

inst_67233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:201699*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201699*0 + 3*417*FLEN/8, x4, x1, x2)

inst_67234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:201702*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201702*0 + 3*418*FLEN/8, x4, x1, x2)

inst_67235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:201705*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201705*0 + 3*419*FLEN/8, x4, x1, x2)

inst_67236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:201708*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201708*0 + 3*420*FLEN/8, x4, x1, x2)

inst_67237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:201711*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201711*0 + 3*421*FLEN/8, x4, x1, x2)

inst_67238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:201714*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201714*0 + 3*422*FLEN/8, x4, x1, x2)

inst_67239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:201717*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201717*0 + 3*423*FLEN/8, x4, x1, x2)

inst_67240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:201720*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201720*0 + 3*424*FLEN/8, x4, x1, x2)

inst_67241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4978f2d7b049d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4978f2d7b049d; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:201723*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201723*0 + 3*425*FLEN/8, x4, x1, x2)

inst_67242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:201726*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201726*0 + 3*426*FLEN/8, x4, x1, x2)

inst_67243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:201729*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201729*0 + 3*427*FLEN/8, x4, x1, x2)

inst_67244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:201732*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201732*0 + 3*428*FLEN/8, x4, x1, x2)

inst_67245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:201735*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201735*0 + 3*429*FLEN/8, x4, x1, x2)

inst_67246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:201738*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201738*0 + 3*430*FLEN/8, x4, x1, x2)

inst_67247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:201741*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201741*0 + 3*431*FLEN/8, x4, x1, x2)

inst_67248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:201744*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201744*0 + 3*432*FLEN/8, x4, x1, x2)

inst_67249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:201747*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201747*0 + 3*433*FLEN/8, x4, x1, x2)

inst_67250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:201750*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201750*0 + 3*434*FLEN/8, x4, x1, x2)

inst_67251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:201753*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201753*0 + 3*435*FLEN/8, x4, x1, x2)

inst_67252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:201756*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201756*0 + 3*436*FLEN/8, x4, x1, x2)

inst_67253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:201759*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201759*0 + 3*437*FLEN/8, x4, x1, x2)

inst_67254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:201762*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201762*0 + 3*438*FLEN/8, x4, x1, x2)

inst_67255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:201765*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201765*0 + 3*439*FLEN/8, x4, x1, x2)

inst_67256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:201768*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201768*0 + 3*440*FLEN/8, x4, x1, x2)

inst_67257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:201771*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201771*0 + 3*441*FLEN/8, x4, x1, x2)

inst_67258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:201774*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201774*0 + 3*442*FLEN/8, x4, x1, x2)

inst_67259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:201777*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201777*0 + 3*443*FLEN/8, x4, x1, x2)

inst_67260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:201780*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201780*0 + 3*444*FLEN/8, x4, x1, x2)

inst_67261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:201783*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201783*0 + 3*445*FLEN/8, x4, x1, x2)

inst_67262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:201786*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201786*0 + 3*446*FLEN/8, x4, x1, x2)

inst_67263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:201789*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201789*0 + 3*447*FLEN/8, x4, x1, x2)

inst_67264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000000000; valaddr_reg:x3; val_offset:201792*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201792*0 + 3*448*FLEN/8, x4, x1, x2)

inst_67265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000000001; valaddr_reg:x3; val_offset:201795*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201795*0 + 3*449*FLEN/8, x4, x1, x2)

inst_67266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000000003; valaddr_reg:x3; val_offset:201798*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201798*0 + 3*450*FLEN/8, x4, x1, x2)

inst_67267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000000007; valaddr_reg:x3; val_offset:201801*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201801*0 + 3*451*FLEN/8, x4, x1, x2)

inst_67268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000000000f; valaddr_reg:x3; val_offset:201804*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201804*0 + 3*452*FLEN/8, x4, x1, x2)

inst_67269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000000001f; valaddr_reg:x3; val_offset:201807*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201807*0 + 3*453*FLEN/8, x4, x1, x2)

inst_67270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000000003f; valaddr_reg:x3; val_offset:201810*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201810*0 + 3*454*FLEN/8, x4, x1, x2)

inst_67271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000000007f; valaddr_reg:x3; val_offset:201813*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201813*0 + 3*455*FLEN/8, x4, x1, x2)

inst_67272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000000000ff; valaddr_reg:x3; val_offset:201816*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201816*0 + 3*456*FLEN/8, x4, x1, x2)

inst_67273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000000001ff; valaddr_reg:x3; val_offset:201819*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201819*0 + 3*457*FLEN/8, x4, x1, x2)

inst_67274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000000003ff; valaddr_reg:x3; val_offset:201822*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201822*0 + 3*458*FLEN/8, x4, x1, x2)

inst_67275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000000007ff; valaddr_reg:x3; val_offset:201825*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201825*0 + 3*459*FLEN/8, x4, x1, x2)

inst_67276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000000fff; valaddr_reg:x3; val_offset:201828*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201828*0 + 3*460*FLEN/8, x4, x1, x2)

inst_67277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000001fff; valaddr_reg:x3; val_offset:201831*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201831*0 + 3*461*FLEN/8, x4, x1, x2)

inst_67278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000003fff; valaddr_reg:x3; val_offset:201834*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201834*0 + 3*462*FLEN/8, x4, x1, x2)

inst_67279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000007fff; valaddr_reg:x3; val_offset:201837*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201837*0 + 3*463*FLEN/8, x4, x1, x2)

inst_67280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000000ffff; valaddr_reg:x3; val_offset:201840*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201840*0 + 3*464*FLEN/8, x4, x1, x2)

inst_67281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000001ffff; valaddr_reg:x3; val_offset:201843*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201843*0 + 3*465*FLEN/8, x4, x1, x2)

inst_67282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000003ffff; valaddr_reg:x3; val_offset:201846*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201846*0 + 3*466*FLEN/8, x4, x1, x2)

inst_67283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000007ffff; valaddr_reg:x3; val_offset:201849*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201849*0 + 3*467*FLEN/8, x4, x1, x2)

inst_67284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000000fffff; valaddr_reg:x3; val_offset:201852*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201852*0 + 3*468*FLEN/8, x4, x1, x2)

inst_67285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000001fffff; valaddr_reg:x3; val_offset:201855*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201855*0 + 3*469*FLEN/8, x4, x1, x2)

inst_67286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000003fffff; valaddr_reg:x3; val_offset:201858*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201858*0 + 3*470*FLEN/8, x4, x1, x2)

inst_67287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000007fffff; valaddr_reg:x3; val_offset:201861*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201861*0 + 3*471*FLEN/8, x4, x1, x2)

inst_67288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000000ffffff; valaddr_reg:x3; val_offset:201864*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201864*0 + 3*472*FLEN/8, x4, x1, x2)

inst_67289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000001ffffff; valaddr_reg:x3; val_offset:201867*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201867*0 + 3*473*FLEN/8, x4, x1, x2)

inst_67290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000003ffffff; valaddr_reg:x3; val_offset:201870*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201870*0 + 3*474*FLEN/8, x4, x1, x2)

inst_67291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000007ffffff; valaddr_reg:x3; val_offset:201873*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201873*0 + 3*475*FLEN/8, x4, x1, x2)

inst_67292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000000fffffff; valaddr_reg:x3; val_offset:201876*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201876*0 + 3*476*FLEN/8, x4, x1, x2)

inst_67293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000001fffffff; valaddr_reg:x3; val_offset:201879*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201879*0 + 3*477*FLEN/8, x4, x1, x2)

inst_67294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000003fffffff; valaddr_reg:x3; val_offset:201882*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201882*0 + 3*478*FLEN/8, x4, x1, x2)

inst_67295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000007fffffff; valaddr_reg:x3; val_offset:201885*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201885*0 + 3*479*FLEN/8, x4, x1, x2)

inst_67296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00000ffffffff; valaddr_reg:x3; val_offset:201888*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201888*0 + 3*480*FLEN/8, x4, x1, x2)

inst_67297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00001ffffffff; valaddr_reg:x3; val_offset:201891*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201891*0 + 3*481*FLEN/8, x4, x1, x2)

inst_67298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00003ffffffff; valaddr_reg:x3; val_offset:201894*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201894*0 + 3*482*FLEN/8, x4, x1, x2)

inst_67299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00007ffffffff; valaddr_reg:x3; val_offset:201897*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201897*0 + 3*483*FLEN/8, x4, x1, x2)

inst_67300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0000fffffffff; valaddr_reg:x3; val_offset:201900*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201900*0 + 3*484*FLEN/8, x4, x1, x2)

inst_67301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0001fffffffff; valaddr_reg:x3; val_offset:201903*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201903*0 + 3*485*FLEN/8, x4, x1, x2)

inst_67302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0003fffffffff; valaddr_reg:x3; val_offset:201906*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201906*0 + 3*486*FLEN/8, x4, x1, x2)

inst_67303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0007fffffffff; valaddr_reg:x3; val_offset:201909*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201909*0 + 3*487*FLEN/8, x4, x1, x2)

inst_67304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c000ffffffffff; valaddr_reg:x3; val_offset:201912*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201912*0 + 3*488*FLEN/8, x4, x1, x2)

inst_67305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c001ffffffffff; valaddr_reg:x3; val_offset:201915*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201915*0 + 3*489*FLEN/8, x4, x1, x2)

inst_67306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c003ffffffffff; valaddr_reg:x3; val_offset:201918*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201918*0 + 3*490*FLEN/8, x4, x1, x2)

inst_67307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c007ffffffffff; valaddr_reg:x3; val_offset:201921*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201921*0 + 3*491*FLEN/8, x4, x1, x2)

inst_67308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c00fffffffffff; valaddr_reg:x3; val_offset:201924*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201924*0 + 3*492*FLEN/8, x4, x1, x2)

inst_67309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c01fffffffffff; valaddr_reg:x3; val_offset:201927*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201927*0 + 3*493*FLEN/8, x4, x1, x2)

inst_67310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c03fffffffffff; valaddr_reg:x3; val_offset:201930*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201930*0 + 3*494*FLEN/8, x4, x1, x2)

inst_67311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c07fffffffffff; valaddr_reg:x3; val_offset:201933*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201933*0 + 3*495*FLEN/8, x4, x1, x2)

inst_67312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c0ffffffffffff; valaddr_reg:x3; val_offset:201936*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201936*0 + 3*496*FLEN/8, x4, x1, x2)

inst_67313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c1ffffffffffff; valaddr_reg:x3; val_offset:201939*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201939*0 + 3*497*FLEN/8, x4, x1, x2)

inst_67314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c3ffffffffffff; valaddr_reg:x3; val_offset:201942*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201942*0 + 3*498*FLEN/8, x4, x1, x2)

inst_67315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c7ffffffffffff; valaddr_reg:x3; val_offset:201945*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201945*0 + 3*499*FLEN/8, x4, x1, x2)

inst_67316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24c8000000000000; valaddr_reg:x3; val_offset:201948*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201948*0 + 3*500*FLEN/8, x4, x1, x2)

inst_67317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cc000000000000; valaddr_reg:x3; val_offset:201951*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201951*0 + 3*501*FLEN/8, x4, x1, x2)

inst_67318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24ce000000000000; valaddr_reg:x3; val_offset:201954*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201954*0 + 3*502*FLEN/8, x4, x1, x2)

inst_67319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cf000000000000; valaddr_reg:x3; val_offset:201957*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201957*0 + 3*503*FLEN/8, x4, x1, x2)

inst_67320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cf800000000000; valaddr_reg:x3; val_offset:201960*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201960*0 + 3*504*FLEN/8, x4, x1, x2)

inst_67321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfc00000000000; valaddr_reg:x3; val_offset:201963*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201963*0 + 3*505*FLEN/8, x4, x1, x2)

inst_67322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfe00000000000; valaddr_reg:x3; val_offset:201966*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201966*0 + 3*506*FLEN/8, x4, x1, x2)

inst_67323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cff00000000000; valaddr_reg:x3; val_offset:201969*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201969*0 + 3*507*FLEN/8, x4, x1, x2)

inst_67324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cff80000000000; valaddr_reg:x3; val_offset:201972*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201972*0 + 3*508*FLEN/8, x4, x1, x2)

inst_67325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffc0000000000; valaddr_reg:x3; val_offset:201975*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201975*0 + 3*509*FLEN/8, x4, x1, x2)

inst_67326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffe0000000000; valaddr_reg:x3; val_offset:201978*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201978*0 + 3*510*FLEN/8, x4, x1, x2)

inst_67327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfff0000000000; valaddr_reg:x3; val_offset:201981*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201981*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_67328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfff8000000000; valaddr_reg:x3; val_offset:201984*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201984*0 + 3*512*FLEN/8, x4, x1, x2)

inst_67329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffc000000000; valaddr_reg:x3; val_offset:201987*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201987*0 + 3*513*FLEN/8, x4, x1, x2)

inst_67330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffe000000000; valaddr_reg:x3; val_offset:201990*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201990*0 + 3*514*FLEN/8, x4, x1, x2)

inst_67331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffff000000000; valaddr_reg:x3; val_offset:201993*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201993*0 + 3*515*FLEN/8, x4, x1, x2)

inst_67332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffff800000000; valaddr_reg:x3; val_offset:201996*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201996*0 + 3*516*FLEN/8, x4, x1, x2)

inst_67333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffc00000000; valaddr_reg:x3; val_offset:201999*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201999*0 + 3*517*FLEN/8, x4, x1, x2)

inst_67334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffe00000000; valaddr_reg:x3; val_offset:202002*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202002*0 + 3*518*FLEN/8, x4, x1, x2)

inst_67335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffff00000000; valaddr_reg:x3; val_offset:202005*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202005*0 + 3*519*FLEN/8, x4, x1, x2)

inst_67336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffff80000000; valaddr_reg:x3; val_offset:202008*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202008*0 + 3*520*FLEN/8, x4, x1, x2)

inst_67337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffc0000000; valaddr_reg:x3; val_offset:202011*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202011*0 + 3*521*FLEN/8, x4, x1, x2)

inst_67338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffe0000000; valaddr_reg:x3; val_offset:202014*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202014*0 + 3*522*FLEN/8, x4, x1, x2)

inst_67339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffff0000000; valaddr_reg:x3; val_offset:202017*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202017*0 + 3*523*FLEN/8, x4, x1, x2)

inst_67340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffff8000000; valaddr_reg:x3; val_offset:202020*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202020*0 + 3*524*FLEN/8, x4, x1, x2)

inst_67341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffc000000; valaddr_reg:x3; val_offset:202023*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202023*0 + 3*525*FLEN/8, x4, x1, x2)

inst_67342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffe000000; valaddr_reg:x3; val_offset:202026*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202026*0 + 3*526*FLEN/8, x4, x1, x2)

inst_67343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffff000000; valaddr_reg:x3; val_offset:202029*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202029*0 + 3*527*FLEN/8, x4, x1, x2)

inst_67344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffff800000; valaddr_reg:x3; val_offset:202032*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202032*0 + 3*528*FLEN/8, x4, x1, x2)

inst_67345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffc00000; valaddr_reg:x3; val_offset:202035*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202035*0 + 3*529*FLEN/8, x4, x1, x2)

inst_67346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffe00000; valaddr_reg:x3; val_offset:202038*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202038*0 + 3*530*FLEN/8, x4, x1, x2)

inst_67347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffff00000; valaddr_reg:x3; val_offset:202041*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202041*0 + 3*531*FLEN/8, x4, x1, x2)

inst_67348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffff80000; valaddr_reg:x3; val_offset:202044*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202044*0 + 3*532*FLEN/8, x4, x1, x2)

inst_67349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffc0000; valaddr_reg:x3; val_offset:202047*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202047*0 + 3*533*FLEN/8, x4, x1, x2)

inst_67350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffe0000; valaddr_reg:x3; val_offset:202050*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202050*0 + 3*534*FLEN/8, x4, x1, x2)

inst_67351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffff0000; valaddr_reg:x3; val_offset:202053*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202053*0 + 3*535*FLEN/8, x4, x1, x2)

inst_67352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffff8000; valaddr_reg:x3; val_offset:202056*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202056*0 + 3*536*FLEN/8, x4, x1, x2)

inst_67353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffffc000; valaddr_reg:x3; val_offset:202059*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202059*0 + 3*537*FLEN/8, x4, x1, x2)

inst_67354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffffe000; valaddr_reg:x3; val_offset:202062*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202062*0 + 3*538*FLEN/8, x4, x1, x2)

inst_67355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffff000; valaddr_reg:x3; val_offset:202065*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202065*0 + 3*539*FLEN/8, x4, x1, x2)

inst_67356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffff800; valaddr_reg:x3; val_offset:202068*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202068*0 + 3*540*FLEN/8, x4, x1, x2)

inst_67357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffffc00; valaddr_reg:x3; val_offset:202071*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202071*0 + 3*541*FLEN/8, x4, x1, x2)

inst_67358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffffe00; valaddr_reg:x3; val_offset:202074*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202074*0 + 3*542*FLEN/8, x4, x1, x2)

inst_67359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffffff00; valaddr_reg:x3; val_offset:202077*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202077*0 + 3*543*FLEN/8, x4, x1, x2)

inst_67360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffffff80; valaddr_reg:x3; val_offset:202080*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202080*0 + 3*544*FLEN/8, x4, x1, x2)

inst_67361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffffffc0; valaddr_reg:x3; val_offset:202083*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202083*0 + 3*545*FLEN/8, x4, x1, x2)

inst_67362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffffffe0; valaddr_reg:x3; val_offset:202086*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202086*0 + 3*546*FLEN/8, x4, x1, x2)

inst_67363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffffff0; valaddr_reg:x3; val_offset:202089*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202089*0 + 3*547*FLEN/8, x4, x1, x2)

inst_67364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffffff8; valaddr_reg:x3; val_offset:202092*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202092*0 + 3*548*FLEN/8, x4, x1, x2)

inst_67365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffffffc; valaddr_reg:x3; val_offset:202095*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202095*0 + 3*549*FLEN/8, x4, x1, x2)

inst_67366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cffffffffffffe; valaddr_reg:x3; val_offset:202098*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202098*0 + 3*550*FLEN/8, x4, x1, x2)

inst_67367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4a633eb827b74 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x24c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4a633eb827b74; op2val:0x0;
op3val:0x24cfffffffffffff; valaddr_reg:x3; val_offset:202101*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202101*0 + 3*551*FLEN/8, x4, x1, x2)

inst_67368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:202104*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202104*0 + 3*552*FLEN/8, x4, x1, x2)

inst_67369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:202107*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202107*0 + 3*553*FLEN/8, x4, x1, x2)

inst_67370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:202110*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202110*0 + 3*554*FLEN/8, x4, x1, x2)

inst_67371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:202113*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202113*0 + 3*555*FLEN/8, x4, x1, x2)

inst_67372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:202116*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202116*0 + 3*556*FLEN/8, x4, x1, x2)

inst_67373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:202119*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202119*0 + 3*557*FLEN/8, x4, x1, x2)

inst_67374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:202122*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202122*0 + 3*558*FLEN/8, x4, x1, x2)

inst_67375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:202125*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202125*0 + 3*559*FLEN/8, x4, x1, x2)

inst_67376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:202128*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202128*0 + 3*560*FLEN/8, x4, x1, x2)

inst_67377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:202131*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202131*0 + 3*561*FLEN/8, x4, x1, x2)

inst_67378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:202134*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202134*0 + 3*562*FLEN/8, x4, x1, x2)

inst_67379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:202137*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202137*0 + 3*563*FLEN/8, x4, x1, x2)

inst_67380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:202140*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202140*0 + 3*564*FLEN/8, x4, x1, x2)

inst_67381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:202143*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202143*0 + 3*565*FLEN/8, x4, x1, x2)

inst_67382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:202146*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202146*0 + 3*566*FLEN/8, x4, x1, x2)

inst_67383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:202149*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202149*0 + 3*567*FLEN/8, x4, x1, x2)

inst_67384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:202152*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202152*0 + 3*568*FLEN/8, x4, x1, x2)

inst_67385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:202155*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202155*0 + 3*569*FLEN/8, x4, x1, x2)

inst_67386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:202158*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202158*0 + 3*570*FLEN/8, x4, x1, x2)

inst_67387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:202161*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202161*0 + 3*571*FLEN/8, x4, x1, x2)

inst_67388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:202164*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202164*0 + 3*572*FLEN/8, x4, x1, x2)

inst_67389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:202167*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202167*0 + 3*573*FLEN/8, x4, x1, x2)

inst_67390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000000000; valaddr_reg:x3; val_offset:202170*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202170*0 + 3*574*FLEN/8, x4, x1, x2)

inst_67391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000000001; valaddr_reg:x3; val_offset:202173*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202173*0 + 3*575*FLEN/8, x4, x1, x2)

inst_67392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000000003; valaddr_reg:x3; val_offset:202176*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202176*0 + 3*576*FLEN/8, x4, x1, x2)

inst_67393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000000007; valaddr_reg:x3; val_offset:202179*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202179*0 + 3*577*FLEN/8, x4, x1, x2)

inst_67394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000000000f; valaddr_reg:x3; val_offset:202182*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202182*0 + 3*578*FLEN/8, x4, x1, x2)

inst_67395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000000001f; valaddr_reg:x3; val_offset:202185*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202185*0 + 3*579*FLEN/8, x4, x1, x2)

inst_67396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000000003f; valaddr_reg:x3; val_offset:202188*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202188*0 + 3*580*FLEN/8, x4, x1, x2)

inst_67397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000000007f; valaddr_reg:x3; val_offset:202191*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202191*0 + 3*581*FLEN/8, x4, x1, x2)

inst_67398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000000000ff; valaddr_reg:x3; val_offset:202194*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202194*0 + 3*582*FLEN/8, x4, x1, x2)

inst_67399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000000001ff; valaddr_reg:x3; val_offset:202197*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202197*0 + 3*583*FLEN/8, x4, x1, x2)

inst_67400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000000003ff; valaddr_reg:x3; val_offset:202200*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202200*0 + 3*584*FLEN/8, x4, x1, x2)

inst_67401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000000007ff; valaddr_reg:x3; val_offset:202203*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202203*0 + 3*585*FLEN/8, x4, x1, x2)

inst_67402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000000fff; valaddr_reg:x3; val_offset:202206*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202206*0 + 3*586*FLEN/8, x4, x1, x2)

inst_67403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000001fff; valaddr_reg:x3; val_offset:202209*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202209*0 + 3*587*FLEN/8, x4, x1, x2)

inst_67404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000003fff; valaddr_reg:x3; val_offset:202212*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202212*0 + 3*588*FLEN/8, x4, x1, x2)

inst_67405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000007fff; valaddr_reg:x3; val_offset:202215*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202215*0 + 3*589*FLEN/8, x4, x1, x2)

inst_67406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000000ffff; valaddr_reg:x3; val_offset:202218*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202218*0 + 3*590*FLEN/8, x4, x1, x2)

inst_67407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000001ffff; valaddr_reg:x3; val_offset:202221*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202221*0 + 3*591*FLEN/8, x4, x1, x2)

inst_67408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000003ffff; valaddr_reg:x3; val_offset:202224*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202224*0 + 3*592*FLEN/8, x4, x1, x2)

inst_67409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000007ffff; valaddr_reg:x3; val_offset:202227*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202227*0 + 3*593*FLEN/8, x4, x1, x2)

inst_67410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000000fffff; valaddr_reg:x3; val_offset:202230*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202230*0 + 3*594*FLEN/8, x4, x1, x2)

inst_67411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000001fffff; valaddr_reg:x3; val_offset:202233*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202233*0 + 3*595*FLEN/8, x4, x1, x2)

inst_67412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000003fffff; valaddr_reg:x3; val_offset:202236*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202236*0 + 3*596*FLEN/8, x4, x1, x2)

inst_67413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000007fffff; valaddr_reg:x3; val_offset:202239*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202239*0 + 3*597*FLEN/8, x4, x1, x2)

inst_67414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000000ffffff; valaddr_reg:x3; val_offset:202242*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202242*0 + 3*598*FLEN/8, x4, x1, x2)

inst_67415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000001ffffff; valaddr_reg:x3; val_offset:202245*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202245*0 + 3*599*FLEN/8, x4, x1, x2)

inst_67416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000003ffffff; valaddr_reg:x3; val_offset:202248*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202248*0 + 3*600*FLEN/8, x4, x1, x2)

inst_67417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000007ffffff; valaddr_reg:x3; val_offset:202251*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202251*0 + 3*601*FLEN/8, x4, x1, x2)

inst_67418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000000fffffff; valaddr_reg:x3; val_offset:202254*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202254*0 + 3*602*FLEN/8, x4, x1, x2)

inst_67419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000001fffffff; valaddr_reg:x3; val_offset:202257*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202257*0 + 3*603*FLEN/8, x4, x1, x2)

inst_67420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000003fffffff; valaddr_reg:x3; val_offset:202260*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202260*0 + 3*604*FLEN/8, x4, x1, x2)

inst_67421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000007fffffff; valaddr_reg:x3; val_offset:202263*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202263*0 + 3*605*FLEN/8, x4, x1, x2)

inst_67422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00000ffffffff; valaddr_reg:x3; val_offset:202266*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202266*0 + 3*606*FLEN/8, x4, x1, x2)

inst_67423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00001ffffffff; valaddr_reg:x3; val_offset:202269*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202269*0 + 3*607*FLEN/8, x4, x1, x2)

inst_67424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00003ffffffff; valaddr_reg:x3; val_offset:202272*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202272*0 + 3*608*FLEN/8, x4, x1, x2)

inst_67425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00007ffffffff; valaddr_reg:x3; val_offset:202275*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202275*0 + 3*609*FLEN/8, x4, x1, x2)

inst_67426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0000fffffffff; valaddr_reg:x3; val_offset:202278*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202278*0 + 3*610*FLEN/8, x4, x1, x2)

inst_67427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0001fffffffff; valaddr_reg:x3; val_offset:202281*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202281*0 + 3*611*FLEN/8, x4, x1, x2)

inst_67428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0003fffffffff; valaddr_reg:x3; val_offset:202284*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202284*0 + 3*612*FLEN/8, x4, x1, x2)

inst_67429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0007fffffffff; valaddr_reg:x3; val_offset:202287*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202287*0 + 3*613*FLEN/8, x4, x1, x2)

inst_67430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd000ffffffffff; valaddr_reg:x3; val_offset:202290*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202290*0 + 3*614*FLEN/8, x4, x1, x2)

inst_67431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd001ffffffffff; valaddr_reg:x3; val_offset:202293*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202293*0 + 3*615*FLEN/8, x4, x1, x2)

inst_67432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd003ffffffffff; valaddr_reg:x3; val_offset:202296*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202296*0 + 3*616*FLEN/8, x4, x1, x2)

inst_67433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd007ffffffffff; valaddr_reg:x3; val_offset:202299*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202299*0 + 3*617*FLEN/8, x4, x1, x2)

inst_67434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd00fffffffffff; valaddr_reg:x3; val_offset:202302*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202302*0 + 3*618*FLEN/8, x4, x1, x2)

inst_67435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd01fffffffffff; valaddr_reg:x3; val_offset:202305*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202305*0 + 3*619*FLEN/8, x4, x1, x2)

inst_67436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd03fffffffffff; valaddr_reg:x3; val_offset:202308*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202308*0 + 3*620*FLEN/8, x4, x1, x2)

inst_67437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd07fffffffffff; valaddr_reg:x3; val_offset:202311*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202311*0 + 3*621*FLEN/8, x4, x1, x2)

inst_67438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd0ffffffffffff; valaddr_reg:x3; val_offset:202314*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202314*0 + 3*622*FLEN/8, x4, x1, x2)

inst_67439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd1ffffffffffff; valaddr_reg:x3; val_offset:202317*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202317*0 + 3*623*FLEN/8, x4, x1, x2)

inst_67440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd3ffffffffffff; valaddr_reg:x3; val_offset:202320*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202320*0 + 3*624*FLEN/8, x4, x1, x2)

inst_67441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd7ffffffffffff; valaddr_reg:x3; val_offset:202323*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202323*0 + 3*625*FLEN/8, x4, x1, x2)

inst_67442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfd8000000000000; valaddr_reg:x3; val_offset:202326*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202326*0 + 3*626*FLEN/8, x4, x1, x2)

inst_67443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdc000000000000; valaddr_reg:x3; val_offset:202329*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202329*0 + 3*627*FLEN/8, x4, x1, x2)

inst_67444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfde000000000000; valaddr_reg:x3; val_offset:202332*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202332*0 + 3*628*FLEN/8, x4, x1, x2)

inst_67445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdf000000000000; valaddr_reg:x3; val_offset:202335*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202335*0 + 3*629*FLEN/8, x4, x1, x2)

inst_67446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdf800000000000; valaddr_reg:x3; val_offset:202338*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202338*0 + 3*630*FLEN/8, x4, x1, x2)

inst_67447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfc00000000000; valaddr_reg:x3; val_offset:202341*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202341*0 + 3*631*FLEN/8, x4, x1, x2)

inst_67448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfe00000000000; valaddr_reg:x3; val_offset:202344*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202344*0 + 3*632*FLEN/8, x4, x1, x2)

inst_67449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdff00000000000; valaddr_reg:x3; val_offset:202347*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202347*0 + 3*633*FLEN/8, x4, x1, x2)

inst_67450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdff80000000000; valaddr_reg:x3; val_offset:202350*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202350*0 + 3*634*FLEN/8, x4, x1, x2)

inst_67451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffc0000000000; valaddr_reg:x3; val_offset:202353*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202353*0 + 3*635*FLEN/8, x4, x1, x2)

inst_67452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffe0000000000; valaddr_reg:x3; val_offset:202356*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202356*0 + 3*636*FLEN/8, x4, x1, x2)

inst_67453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfff0000000000; valaddr_reg:x3; val_offset:202359*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202359*0 + 3*637*FLEN/8, x4, x1, x2)

inst_67454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfff8000000000; valaddr_reg:x3; val_offset:202362*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202362*0 + 3*638*FLEN/8, x4, x1, x2)

inst_67455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffc000000000; valaddr_reg:x3; val_offset:202365*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202365*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_67456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffe000000000; valaddr_reg:x3; val_offset:202368*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202368*0 + 3*640*FLEN/8, x4, x1, x2)

inst_67457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffff000000000; valaddr_reg:x3; val_offset:202371*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202371*0 + 3*641*FLEN/8, x4, x1, x2)

inst_67458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffff800000000; valaddr_reg:x3; val_offset:202374*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202374*0 + 3*642*FLEN/8, x4, x1, x2)

inst_67459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffc00000000; valaddr_reg:x3; val_offset:202377*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202377*0 + 3*643*FLEN/8, x4, x1, x2)

inst_67460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffe00000000; valaddr_reg:x3; val_offset:202380*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202380*0 + 3*644*FLEN/8, x4, x1, x2)

inst_67461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffff00000000; valaddr_reg:x3; val_offset:202383*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202383*0 + 3*645*FLEN/8, x4, x1, x2)

inst_67462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffff80000000; valaddr_reg:x3; val_offset:202386*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202386*0 + 3*646*FLEN/8, x4, x1, x2)

inst_67463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffc0000000; valaddr_reg:x3; val_offset:202389*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202389*0 + 3*647*FLEN/8, x4, x1, x2)

inst_67464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffe0000000; valaddr_reg:x3; val_offset:202392*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202392*0 + 3*648*FLEN/8, x4, x1, x2)

inst_67465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffff0000000; valaddr_reg:x3; val_offset:202395*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202395*0 + 3*649*FLEN/8, x4, x1, x2)

inst_67466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffff8000000; valaddr_reg:x3; val_offset:202398*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202398*0 + 3*650*FLEN/8, x4, x1, x2)

inst_67467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffc000000; valaddr_reg:x3; val_offset:202401*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202401*0 + 3*651*FLEN/8, x4, x1, x2)

inst_67468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffe000000; valaddr_reg:x3; val_offset:202404*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202404*0 + 3*652*FLEN/8, x4, x1, x2)

inst_67469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffff000000; valaddr_reg:x3; val_offset:202407*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202407*0 + 3*653*FLEN/8, x4, x1, x2)

inst_67470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffff800000; valaddr_reg:x3; val_offset:202410*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202410*0 + 3*654*FLEN/8, x4, x1, x2)

inst_67471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffc00000; valaddr_reg:x3; val_offset:202413*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202413*0 + 3*655*FLEN/8, x4, x1, x2)

inst_67472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffe00000; valaddr_reg:x3; val_offset:202416*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202416*0 + 3*656*FLEN/8, x4, x1, x2)

inst_67473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffff00000; valaddr_reg:x3; val_offset:202419*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202419*0 + 3*657*FLEN/8, x4, x1, x2)

inst_67474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffff80000; valaddr_reg:x3; val_offset:202422*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202422*0 + 3*658*FLEN/8, x4, x1, x2)

inst_67475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffc0000; valaddr_reg:x3; val_offset:202425*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202425*0 + 3*659*FLEN/8, x4, x1, x2)

inst_67476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffe0000; valaddr_reg:x3; val_offset:202428*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202428*0 + 3*660*FLEN/8, x4, x1, x2)

inst_67477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffff0000; valaddr_reg:x3; val_offset:202431*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202431*0 + 3*661*FLEN/8, x4, x1, x2)

inst_67478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffff8000; valaddr_reg:x3; val_offset:202434*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202434*0 + 3*662*FLEN/8, x4, x1, x2)

inst_67479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffffc000; valaddr_reg:x3; val_offset:202437*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202437*0 + 3*663*FLEN/8, x4, x1, x2)

inst_67480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffffe000; valaddr_reg:x3; val_offset:202440*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202440*0 + 3*664*FLEN/8, x4, x1, x2)

inst_67481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffff000; valaddr_reg:x3; val_offset:202443*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202443*0 + 3*665*FLEN/8, x4, x1, x2)

inst_67482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffff800; valaddr_reg:x3; val_offset:202446*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202446*0 + 3*666*FLEN/8, x4, x1, x2)

inst_67483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffffc00; valaddr_reg:x3; val_offset:202449*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202449*0 + 3*667*FLEN/8, x4, x1, x2)

inst_67484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffffe00; valaddr_reg:x3; val_offset:202452*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202452*0 + 3*668*FLEN/8, x4, x1, x2)

inst_67485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffffff00; valaddr_reg:x3; val_offset:202455*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202455*0 + 3*669*FLEN/8, x4, x1, x2)

inst_67486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffffff80; valaddr_reg:x3; val_offset:202458*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202458*0 + 3*670*FLEN/8, x4, x1, x2)

inst_67487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffffffc0; valaddr_reg:x3; val_offset:202461*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202461*0 + 3*671*FLEN/8, x4, x1, x2)

inst_67488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffffffe0; valaddr_reg:x3; val_offset:202464*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202464*0 + 3*672*FLEN/8, x4, x1, x2)

inst_67489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffffff0; valaddr_reg:x3; val_offset:202467*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202467*0 + 3*673*FLEN/8, x4, x1, x2)

inst_67490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffffff8; valaddr_reg:x3; val_offset:202470*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202470*0 + 3*674*FLEN/8, x4, x1, x2)

inst_67491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffffffc; valaddr_reg:x3; val_offset:202473*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202473*0 + 3*675*FLEN/8, x4, x1, x2)

inst_67492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdffffffffffffe; valaddr_reg:x3; val_offset:202476*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202476*0 + 3*676*FLEN/8, x4, x1, x2)

inst_67493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4af6ee0e0bc86 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c07c2272ad43 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4af6ee0e0bc86; op2val:0x9fc8c07c2272ad43;
op3val:0xbfdfffffffffffff; valaddr_reg:x3; val_offset:202479*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202479*0 + 3*677*FLEN/8, x4, x1, x2)

inst_67494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000000000; valaddr_reg:x3; val_offset:202482*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202482*0 + 3*678*FLEN/8, x4, x1, x2)

inst_67495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000000001; valaddr_reg:x3; val_offset:202485*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202485*0 + 3*679*FLEN/8, x4, x1, x2)

inst_67496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000000003; valaddr_reg:x3; val_offset:202488*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202488*0 + 3*680*FLEN/8, x4, x1, x2)

inst_67497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000000007; valaddr_reg:x3; val_offset:202491*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202491*0 + 3*681*FLEN/8, x4, x1, x2)

inst_67498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000000000f; valaddr_reg:x3; val_offset:202494*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202494*0 + 3*682*FLEN/8, x4, x1, x2)

inst_67499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000000001f; valaddr_reg:x3; val_offset:202497*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202497*0 + 3*683*FLEN/8, x4, x1, x2)

inst_67500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000000003f; valaddr_reg:x3; val_offset:202500*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202500*0 + 3*684*FLEN/8, x4, x1, x2)

inst_67501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000000007f; valaddr_reg:x3; val_offset:202503*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202503*0 + 3*685*FLEN/8, x4, x1, x2)

inst_67502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000000000ff; valaddr_reg:x3; val_offset:202506*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202506*0 + 3*686*FLEN/8, x4, x1, x2)

inst_67503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000000001ff; valaddr_reg:x3; val_offset:202509*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202509*0 + 3*687*FLEN/8, x4, x1, x2)

inst_67504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000000003ff; valaddr_reg:x3; val_offset:202512*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202512*0 + 3*688*FLEN/8, x4, x1, x2)

inst_67505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000000007ff; valaddr_reg:x3; val_offset:202515*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202515*0 + 3*689*FLEN/8, x4, x1, x2)

inst_67506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000000fff; valaddr_reg:x3; val_offset:202518*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202518*0 + 3*690*FLEN/8, x4, x1, x2)

inst_67507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000001fff; valaddr_reg:x3; val_offset:202521*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202521*0 + 3*691*FLEN/8, x4, x1, x2)

inst_67508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000003fff; valaddr_reg:x3; val_offset:202524*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202524*0 + 3*692*FLEN/8, x4, x1, x2)

inst_67509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000007fff; valaddr_reg:x3; val_offset:202527*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202527*0 + 3*693*FLEN/8, x4, x1, x2)

inst_67510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000000ffff; valaddr_reg:x3; val_offset:202530*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202530*0 + 3*694*FLEN/8, x4, x1, x2)

inst_67511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000001ffff; valaddr_reg:x3; val_offset:202533*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202533*0 + 3*695*FLEN/8, x4, x1, x2)

inst_67512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000003ffff; valaddr_reg:x3; val_offset:202536*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202536*0 + 3*696*FLEN/8, x4, x1, x2)

inst_67513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000007ffff; valaddr_reg:x3; val_offset:202539*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202539*0 + 3*697*FLEN/8, x4, x1, x2)

inst_67514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000000fffff; valaddr_reg:x3; val_offset:202542*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202542*0 + 3*698*FLEN/8, x4, x1, x2)

inst_67515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000001fffff; valaddr_reg:x3; val_offset:202545*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202545*0 + 3*699*FLEN/8, x4, x1, x2)

inst_67516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000003fffff; valaddr_reg:x3; val_offset:202548*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202548*0 + 3*700*FLEN/8, x4, x1, x2)

inst_67517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000007fffff; valaddr_reg:x3; val_offset:202551*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202551*0 + 3*701*FLEN/8, x4, x1, x2)

inst_67518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000000ffffff; valaddr_reg:x3; val_offset:202554*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202554*0 + 3*702*FLEN/8, x4, x1, x2)

inst_67519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000001ffffff; valaddr_reg:x3; val_offset:202557*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202557*0 + 3*703*FLEN/8, x4, x1, x2)

inst_67520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000003ffffff; valaddr_reg:x3; val_offset:202560*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202560*0 + 3*704*FLEN/8, x4, x1, x2)

inst_67521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000007ffffff; valaddr_reg:x3; val_offset:202563*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202563*0 + 3*705*FLEN/8, x4, x1, x2)

inst_67522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000000fffffff; valaddr_reg:x3; val_offset:202566*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202566*0 + 3*706*FLEN/8, x4, x1, x2)

inst_67523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000001fffffff; valaddr_reg:x3; val_offset:202569*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202569*0 + 3*707*FLEN/8, x4, x1, x2)

inst_67524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000003fffffff; valaddr_reg:x3; val_offset:202572*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202572*0 + 3*708*FLEN/8, x4, x1, x2)

inst_67525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000007fffffff; valaddr_reg:x3; val_offset:202575*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202575*0 + 3*709*FLEN/8, x4, x1, x2)

inst_67526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000000ffffffff; valaddr_reg:x3; val_offset:202578*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202578*0 + 3*710*FLEN/8, x4, x1, x2)

inst_67527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000001ffffffff; valaddr_reg:x3; val_offset:202581*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202581*0 + 3*711*FLEN/8, x4, x1, x2)

inst_67528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000003ffffffff; valaddr_reg:x3; val_offset:202584*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202584*0 + 3*712*FLEN/8, x4, x1, x2)

inst_67529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000007ffffffff; valaddr_reg:x3; val_offset:202587*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202587*0 + 3*713*FLEN/8, x4, x1, x2)

inst_67530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00000fffffffff; valaddr_reg:x3; val_offset:202590*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202590*0 + 3*714*FLEN/8, x4, x1, x2)

inst_67531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00001fffffffff; valaddr_reg:x3; val_offset:202593*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202593*0 + 3*715*FLEN/8, x4, x1, x2)

inst_67532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00003fffffffff; valaddr_reg:x3; val_offset:202596*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202596*0 + 3*716*FLEN/8, x4, x1, x2)

inst_67533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00007fffffffff; valaddr_reg:x3; val_offset:202599*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202599*0 + 3*717*FLEN/8, x4, x1, x2)

inst_67534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0000ffffffffff; valaddr_reg:x3; val_offset:202602*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202602*0 + 3*718*FLEN/8, x4, x1, x2)

inst_67535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0001ffffffffff; valaddr_reg:x3; val_offset:202605*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202605*0 + 3*719*FLEN/8, x4, x1, x2)

inst_67536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0003ffffffffff; valaddr_reg:x3; val_offset:202608*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202608*0 + 3*720*FLEN/8, x4, x1, x2)

inst_67537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0007ffffffffff; valaddr_reg:x3; val_offset:202611*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202611*0 + 3*721*FLEN/8, x4, x1, x2)

inst_67538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe000fffffffffff; valaddr_reg:x3; val_offset:202614*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202614*0 + 3*722*FLEN/8, x4, x1, x2)

inst_67539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe001fffffffffff; valaddr_reg:x3; val_offset:202617*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202617*0 + 3*723*FLEN/8, x4, x1, x2)

inst_67540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe003fffffffffff; valaddr_reg:x3; val_offset:202620*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202620*0 + 3*724*FLEN/8, x4, x1, x2)

inst_67541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe007fffffffffff; valaddr_reg:x3; val_offset:202623*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202623*0 + 3*725*FLEN/8, x4, x1, x2)

inst_67542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe00ffffffffffff; valaddr_reg:x3; val_offset:202626*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202626*0 + 3*726*FLEN/8, x4, x1, x2)

inst_67543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe01ffffffffffff; valaddr_reg:x3; val_offset:202629*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202629*0 + 3*727*FLEN/8, x4, x1, x2)

inst_67544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe03ffffffffffff; valaddr_reg:x3; val_offset:202632*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202632*0 + 3*728*FLEN/8, x4, x1, x2)

inst_67545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe07ffffffffffff; valaddr_reg:x3; val_offset:202635*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202635*0 + 3*729*FLEN/8, x4, x1, x2)

inst_67546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe08000000000000; valaddr_reg:x3; val_offset:202638*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202638*0 + 3*730*FLEN/8, x4, x1, x2)

inst_67547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0c000000000000; valaddr_reg:x3; val_offset:202641*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202641*0 + 3*731*FLEN/8, x4, x1, x2)

inst_67548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0e000000000000; valaddr_reg:x3; val_offset:202644*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202644*0 + 3*732*FLEN/8, x4, x1, x2)

inst_67549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0f000000000000; valaddr_reg:x3; val_offset:202647*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202647*0 + 3*733*FLEN/8, x4, x1, x2)

inst_67550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0f800000000000; valaddr_reg:x3; val_offset:202650*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202650*0 + 3*734*FLEN/8, x4, x1, x2)

inst_67551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fc00000000000; valaddr_reg:x3; val_offset:202653*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202653*0 + 3*735*FLEN/8, x4, x1, x2)

inst_67552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fe00000000000; valaddr_reg:x3; val_offset:202656*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202656*0 + 3*736*FLEN/8, x4, x1, x2)

inst_67553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ff00000000000; valaddr_reg:x3; val_offset:202659*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202659*0 + 3*737*FLEN/8, x4, x1, x2)

inst_67554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ff80000000000; valaddr_reg:x3; val_offset:202662*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202662*0 + 3*738*FLEN/8, x4, x1, x2)

inst_67555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffc0000000000; valaddr_reg:x3; val_offset:202665*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202665*0 + 3*739*FLEN/8, x4, x1, x2)

inst_67556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffe0000000000; valaddr_reg:x3; val_offset:202668*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202668*0 + 3*740*FLEN/8, x4, x1, x2)

inst_67557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fff0000000000; valaddr_reg:x3; val_offset:202671*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202671*0 + 3*741*FLEN/8, x4, x1, x2)

inst_67558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fff8000000000; valaddr_reg:x3; val_offset:202674*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202674*0 + 3*742*FLEN/8, x4, x1, x2)

inst_67559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffc000000000; valaddr_reg:x3; val_offset:202677*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202677*0 + 3*743*FLEN/8, x4, x1, x2)

inst_67560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffe000000000; valaddr_reg:x3; val_offset:202680*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202680*0 + 3*744*FLEN/8, x4, x1, x2)

inst_67561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffff000000000; valaddr_reg:x3; val_offset:202683*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202683*0 + 3*745*FLEN/8, x4, x1, x2)

inst_67562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffff800000000; valaddr_reg:x3; val_offset:202686*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202686*0 + 3*746*FLEN/8, x4, x1, x2)

inst_67563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffc00000000; valaddr_reg:x3; val_offset:202689*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202689*0 + 3*747*FLEN/8, x4, x1, x2)

inst_67564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffe00000000; valaddr_reg:x3; val_offset:202692*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202692*0 + 3*748*FLEN/8, x4, x1, x2)

inst_67565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffff00000000; valaddr_reg:x3; val_offset:202695*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202695*0 + 3*749*FLEN/8, x4, x1, x2)

inst_67566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffff80000000; valaddr_reg:x3; val_offset:202698*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202698*0 + 3*750*FLEN/8, x4, x1, x2)

inst_67567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffc0000000; valaddr_reg:x3; val_offset:202701*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202701*0 + 3*751*FLEN/8, x4, x1, x2)

inst_67568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffe0000000; valaddr_reg:x3; val_offset:202704*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202704*0 + 3*752*FLEN/8, x4, x1, x2)

inst_67569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffff0000000; valaddr_reg:x3; val_offset:202707*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202707*0 + 3*753*FLEN/8, x4, x1, x2)

inst_67570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffff8000000; valaddr_reg:x3; val_offset:202710*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202710*0 + 3*754*FLEN/8, x4, x1, x2)

inst_67571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffc000000; valaddr_reg:x3; val_offset:202713*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202713*0 + 3*755*FLEN/8, x4, x1, x2)

inst_67572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffe000000; valaddr_reg:x3; val_offset:202716*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202716*0 + 3*756*FLEN/8, x4, x1, x2)

inst_67573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffff000000; valaddr_reg:x3; val_offset:202719*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202719*0 + 3*757*FLEN/8, x4, x1, x2)

inst_67574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffff800000; valaddr_reg:x3; val_offset:202722*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202722*0 + 3*758*FLEN/8, x4, x1, x2)

inst_67575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffc00000; valaddr_reg:x3; val_offset:202725*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202725*0 + 3*759*FLEN/8, x4, x1, x2)

inst_67576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffe00000; valaddr_reg:x3; val_offset:202728*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202728*0 + 3*760*FLEN/8, x4, x1, x2)

inst_67577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffff00000; valaddr_reg:x3; val_offset:202731*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202731*0 + 3*761*FLEN/8, x4, x1, x2)

inst_67578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffff80000; valaddr_reg:x3; val_offset:202734*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202734*0 + 3*762*FLEN/8, x4, x1, x2)

inst_67579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffc0000; valaddr_reg:x3; val_offset:202737*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202737*0 + 3*763*FLEN/8, x4, x1, x2)

inst_67580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0ffffffffe0000; valaddr_reg:x3; val_offset:202740*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202740*0 + 3*764*FLEN/8, x4, x1, x2)

inst_67581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffff0000; valaddr_reg:x3; val_offset:202743*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202743*0 + 3*765*FLEN/8, x4, x1, x2)

inst_67582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffff8000; valaddr_reg:x3; val_offset:202746*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202746*0 + 3*766*FLEN/8, x4, x1, x2)

inst_67583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4afa083bb05d4 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x8c040be0ec009 and fs3 == 1 and fe3 == 0x3e0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa4afa083bb05d4; op2val:0x9fc8c040be0ec009;
op3val:0xbe0fffffffffc000; valaddr_reg:x3; val_offset:202749*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 202749*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216032044625428480,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216102413369606144,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216137597741694976,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216155189927739392,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216163986020761600,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216168384067272704,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216170583090528256,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216171682602156032,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172232357969920,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172507235876864,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172644674830336,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172713394307072,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172747754045440,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172764933914624,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172773523849216,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172777818816512,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172779966300160,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781040041984,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781576912896,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781845348352,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781979566080,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782046674944,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782080229376,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782097006592,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782105395200,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782109589504,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782111686656,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782112735232,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113259520,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113521664,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113652736,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113718272,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113751040,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113767424,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113775616,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113779712,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113781760,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113782784,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783296,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783552,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783680,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783744,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783776,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783792,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783800,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783804,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783806,64,FLEN)
NAN_BOXED(6891742522354001988,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783807,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373888,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373889,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373891,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373895,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373903,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373919,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373951,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374015,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374143,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374399,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374911,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566375935,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566377983,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566382079,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566390271,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566406655,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566439423,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566504959,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566636031,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566898175,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789567422463,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789568471039,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789570568191,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789574762495,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789583151103,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789599928319,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789633482751,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789700591615,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789834809343,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790103244799,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790640115711,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100791713857535,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100793861341183,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100798156308479,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100806746243071,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100823926112255,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100858285850623,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100927005327359,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101064444280831,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101339322187775,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101889078001663,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126102988589629439,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126105187612884991,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126109585659396095,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126118381752418303,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126135973938462719,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126171158310551551,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126241527054729215,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126382264543084543,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126663739519795199,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127226689473216511,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059135,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059136,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(129478489286901760,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130041439240323072,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130322914217033728,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130463651705389056,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130534020449566720,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130569204821655552,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130586797007699968,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130595593100722176,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130599991147233280,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130602190170488832,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603289682116608,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603839437930496,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604114315837440,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604251754790912,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604320474267648,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604354834006016,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604372013875200,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604380603809792,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604384898777088,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604387046260736,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388120002560,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388656873472,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388925308928,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389059526656,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389126635520,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389160189952,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389176967168,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389185355776,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389189550080,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389191647232,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389192695808,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193220096,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193482240,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193613312,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193678848,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193711616,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193728000,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193736192,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193740288,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193742336,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743360,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743872,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744128,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744256,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744320,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744352,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744368,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744376,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744380,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744382,64,FLEN)
NAN_BOXED(6891753856600290353,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744383,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484608,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484609,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484611,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484615,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484623,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484639,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484671,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484735,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172484863,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172485119,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172485631,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172486655,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172488703,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172492799,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172500991,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172517375,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172550143,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172615679,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692172746751,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692173008895,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692173533183,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692174581759,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692176678911,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692180873215,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692189261823,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692206039039,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692239593471,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692306702335,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692440920063,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201692709355519,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201693246226431,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201694319968255,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201696467451903,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201700762419199,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201709352353791,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201726532222975,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201760891961343,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201829611438079,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389201967050391551,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389202241928298495,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389202791684112383,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389203891195740159,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389206090218995711,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389210488265506815,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389219284358529023,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389236876544573439,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389272060916662271,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389342429660839935,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389483167149195263,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13389764642125905919,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13390327592079327231,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13391453491986169855,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13391453491986169856,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13392579391893012480,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393142341846433792,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393423816823144448,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393564554311499776,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393634923055677440,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393670107427766272,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393687699613810688,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393696495706832896,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393700893753344000,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393703092776599552,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393704192288227328,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393704742044041216,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705016921948160,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705154360901632,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705223080378368,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705257440116736,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705274619985920,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705283209920512,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705287504887808,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705289652371456,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705290726113280,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291262984192,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291531419648,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291665637376,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291732746240,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291766300672,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291783077888,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291791466496,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291795660800,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291797757952,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291798806528,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799330816,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799592960,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799724032,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799789568,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799822336,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799838720,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799846912,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799851008,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799853056,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799854080,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799854592,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799854848,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799854976,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799855040,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799855072,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799855088,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799855096,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799855100,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799855102,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13393705291799855103,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891799657448146008,64,FLEN)
NAN_BOXED(11513696017676039369,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117056,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117057,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117059,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117063,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117071,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117087,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117119,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117183,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117311,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117567,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379118079,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379119103,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379121151,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379125247,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379133439,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379149823,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379182591,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379248127,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379379199,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379641343,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813380165631,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813381214207,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813383311359,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813387505663,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813395894271,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813412671487,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813446225919,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813513334783,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813647552511,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813915987967,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098814452858879,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098815526600703,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098817674084351,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098821969051647,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098830558986239,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098847738855423,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098882098593791,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098950818070527,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6891799970982855837,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851648,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851649,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851651,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851655,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851663,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851679,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851711,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851775,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893851903,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893852159,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893852671,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893853695,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893855743,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893859839,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893868031,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893884415,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893917183,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580893982719,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580894113791,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580894375935,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580894900223,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580895948799,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580898045951,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580902240255,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580910628863,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580927406079,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116580960960511,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116581028069375,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116581162287103,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116581430722559,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116581967593471,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116583041335295,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116585188818943,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116589483786239,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116598073720831,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116615253590015,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116649613328383,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116718332805119,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648116855771758591,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648117130649665535,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648117680405479423,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648118779917107199,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648120978940362751,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648125376986873855,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648134173079896063,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648151765265940479,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648186949638029311,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648257318382206975,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648398055870562303,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2648679530847272959,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2649242480800694271,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2650368380707536895,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2650368380707536896,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2651494280614379520,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652057230567800832,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652338705544511488,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652479443032866816,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652549811777044480,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652584996149133312,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652602588335177728,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652611384428199936,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652615782474711040,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652617981497966592,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652619081009594368,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652619630765408256,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652619905643315200,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620043082268672,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620111801745408,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620146161483776,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620163341352960,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620171931287552,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620176226254848,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620178373738496,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620179447480320,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620179984351232,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180252786688,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180387004416,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180454113280,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180487667712,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180504444928,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180512833536,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180517027840,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180519124992,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180520173568,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180520697856,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180520960000,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521091072,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521156608,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521189376,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521205760,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521213952,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521218048,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521220096,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521221120,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521221632,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521221888,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222016,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222080,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222112,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222128,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222136,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222140,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222142,64,FLEN)
NAN_BOXED(6891816071708441460,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2652620180521222143,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052224,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052225,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052227,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052231,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052239,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052255,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052287,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052351,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052479,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400052735,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400053247,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400054271,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400056319,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400060415,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400068607,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400084991,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400117759,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400183295,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400314367,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256400576511,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256401100799,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256402149375,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256404246527,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256408440831,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256416829439,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256433606655,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256467161087,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256534269951,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256668487679,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547256936923135,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547257473794047,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547258547535871,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547260695019519,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547264989986815,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547273579921407,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547290759790591,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547325119528959,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547393839005695,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547531277959167,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821547806155866111,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821548355911679999,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821549455423307775,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821551654446563327,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821556052493074431,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821564848586096639,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821582440772141055,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821617625144229887,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821687993888407551,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13821828731376762879,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13822110206353473535,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13822673156306894847,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13823799056213737471,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13823799056213737472,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13824924956120580096,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13825487906074001408,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13825769381050712064,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13825910118539067392,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13825980487283245056,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826015671655333888,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826033263841378304,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826042059934400512,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826046457980911616,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826048657004167168,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826049756515794944,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050306271608832,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050581149515776,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050718588469248,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050787307945984,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050821667684352,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050838847553536,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050847437488128,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050851732455424,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050853879939072,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050854953680896,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050855490551808,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050855758987264,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050855893204992,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050855960313856,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050855993868288,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856010645504,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856019034112,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856023228416,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856025325568,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856026374144,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856026898432,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027160576,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027291648,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027357184,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027389952,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027406336,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027414528,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027418624,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027420672,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027421696,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422208,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422464,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422592,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422656,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422688,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422704,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422712,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422716,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422718,64,FLEN)
NAN_BOXED(6891826220537789574,64,FLEN)
NAN_BOXED(11513664086759091523,64,FLEN)
NAN_BOXED(13826050856027422719,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307840,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307841,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307843,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307847,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307855,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307871,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307903,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206307967,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206308095,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206308351,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206308863,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206309887,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206311935,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206316031,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206324223,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206340607,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206373375,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206438911,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206569983,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867206832127,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867207356415,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867208404991,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867210502143,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867214696447,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867223085055,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867239862271,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867273416703,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867340525567,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867474743295,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942867743178751,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942868280049663,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942869353791487,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942871501275135,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942875796242431,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942884386177023,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942901566046207,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690942935925784575,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690943004645261311,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690943142084214783,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690943416962121727,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690943966717935615,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690945066229563391,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690947265252818943,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690951663299330047,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690960459392352255,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13690978051578396671,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13691013235950485503,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13691083604694663167,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13691224342183018495,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13691505817159729151,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13692068767113150463,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13693194667019993087,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13693194667019993088,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13694320566926835712,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13694883516880257024,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695164991856967680,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695305729345323008,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695376098089500672,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695411282461589504,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695428874647633920,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695437670740656128,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695442068787167232,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695444267810422784,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695445367322050560,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695445917077864448,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446191955771392,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446329394724864,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446398114201600,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446432473939968,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446449653809152,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446458243743744,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446462538711040,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446464686194688,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446465759936512,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466296807424,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466565242880,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466699460608,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466766569472,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466800123904,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466816901120,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466825289728,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466829484032,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466831581184,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466832629760,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833154048,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833416192,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833547264,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833612800,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833645568,64,FLEN)
NAN_BOXED(6891826433723401684,64,FLEN)
NAN_BOXED(11513663831671750665,64,FLEN)
NAN_BOXED(13695446466833661952,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
