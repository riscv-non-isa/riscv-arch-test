
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_82944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffff800000000; valaddr_reg:x3; val_offset:248832*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248832*0 + 3*0*FLEN/8, x4, x1, x2)

inst_82945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffc00000000; valaddr_reg:x3; val_offset:248835*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248835*0 + 3*1*FLEN/8, x4, x1, x2)

inst_82946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffe00000000; valaddr_reg:x3; val_offset:248838*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248838*0 + 3*2*FLEN/8, x4, x1, x2)

inst_82947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffff00000000; valaddr_reg:x3; val_offset:248841*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248841*0 + 3*3*FLEN/8, x4, x1, x2)

inst_82948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffff80000000; valaddr_reg:x3; val_offset:248844*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248844*0 + 3*4*FLEN/8, x4, x1, x2)

inst_82949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffc0000000; valaddr_reg:x3; val_offset:248847*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248847*0 + 3*5*FLEN/8, x4, x1, x2)

inst_82950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffe0000000; valaddr_reg:x3; val_offset:248850*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248850*0 + 3*6*FLEN/8, x4, x1, x2)

inst_82951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffff0000000; valaddr_reg:x3; val_offset:248853*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248853*0 + 3*7*FLEN/8, x4, x1, x2)

inst_82952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffff8000000; valaddr_reg:x3; val_offset:248856*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248856*0 + 3*8*FLEN/8, x4, x1, x2)

inst_82953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffc000000; valaddr_reg:x3; val_offset:248859*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248859*0 + 3*9*FLEN/8, x4, x1, x2)

inst_82954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffe000000; valaddr_reg:x3; val_offset:248862*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248862*0 + 3*10*FLEN/8, x4, x1, x2)

inst_82955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffff000000; valaddr_reg:x3; val_offset:248865*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248865*0 + 3*11*FLEN/8, x4, x1, x2)

inst_82956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffff800000; valaddr_reg:x3; val_offset:248868*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248868*0 + 3*12*FLEN/8, x4, x1, x2)

inst_82957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffc00000; valaddr_reg:x3; val_offset:248871*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248871*0 + 3*13*FLEN/8, x4, x1, x2)

inst_82958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffe00000; valaddr_reg:x3; val_offset:248874*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248874*0 + 3*14*FLEN/8, x4, x1, x2)

inst_82959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffff00000; valaddr_reg:x3; val_offset:248877*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248877*0 + 3*15*FLEN/8, x4, x1, x2)

inst_82960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffff80000; valaddr_reg:x3; val_offset:248880*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248880*0 + 3*16*FLEN/8, x4, x1, x2)

inst_82961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffc0000; valaddr_reg:x3; val_offset:248883*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248883*0 + 3*17*FLEN/8, x4, x1, x2)

inst_82962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffe0000; valaddr_reg:x3; val_offset:248886*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248886*0 + 3*18*FLEN/8, x4, x1, x2)

inst_82963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffff0000; valaddr_reg:x3; val_offset:248889*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248889*0 + 3*19*FLEN/8, x4, x1, x2)

inst_82964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffff8000; valaddr_reg:x3; val_offset:248892*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248892*0 + 3*20*FLEN/8, x4, x1, x2)

inst_82965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffffc000; valaddr_reg:x3; val_offset:248895*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248895*0 + 3*21*FLEN/8, x4, x1, x2)

inst_82966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffffe000; valaddr_reg:x3; val_offset:248898*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248898*0 + 3*22*FLEN/8, x4, x1, x2)

inst_82967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffff000; valaddr_reg:x3; val_offset:248901*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248901*0 + 3*23*FLEN/8, x4, x1, x2)

inst_82968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffff800; valaddr_reg:x3; val_offset:248904*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248904*0 + 3*24*FLEN/8, x4, x1, x2)

inst_82969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffffc00; valaddr_reg:x3; val_offset:248907*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248907*0 + 3*25*FLEN/8, x4, x1, x2)

inst_82970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffffe00; valaddr_reg:x3; val_offset:248910*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248910*0 + 3*26*FLEN/8, x4, x1, x2)

inst_82971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffffff00; valaddr_reg:x3; val_offset:248913*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248913*0 + 3*27*FLEN/8, x4, x1, x2)

inst_82972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffffff80; valaddr_reg:x3; val_offset:248916*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248916*0 + 3*28*FLEN/8, x4, x1, x2)

inst_82973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffffffc0; valaddr_reg:x3; val_offset:248919*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248919*0 + 3*29*FLEN/8, x4, x1, x2)

inst_82974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffffffe0; valaddr_reg:x3; val_offset:248922*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248922*0 + 3*30*FLEN/8, x4, x1, x2)

inst_82975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffffff0; valaddr_reg:x3; val_offset:248925*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248925*0 + 3*31*FLEN/8, x4, x1, x2)

inst_82976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffffff8; valaddr_reg:x3; val_offset:248928*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248928*0 + 3*32*FLEN/8, x4, x1, x2)

inst_82977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffffffc; valaddr_reg:x3; val_offset:248931*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248931*0 + 3*33*FLEN/8, x4, x1, x2)

inst_82978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804ffffffffffffe; valaddr_reg:x3; val_offset:248934*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248934*0 + 3*34*FLEN/8, x4, x1, x2)

inst_82979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e07fa76b9c81 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e07fa76b9c81; op2val:0x8000;
op3val:0x804fffffffffffff; valaddr_reg:x3; val_offset:248937*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248937*0 + 3*35*FLEN/8, x4, x1, x2)

inst_82980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:248940*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248940*0 + 3*36*FLEN/8, x4, x1, x2)

inst_82981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:248943*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248943*0 + 3*37*FLEN/8, x4, x1, x2)

inst_82982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:248946*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248946*0 + 3*38*FLEN/8, x4, x1, x2)

inst_82983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:248949*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248949*0 + 3*39*FLEN/8, x4, x1, x2)

inst_82984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:248952*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248952*0 + 3*40*FLEN/8, x4, x1, x2)

inst_82985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:248955*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248955*0 + 3*41*FLEN/8, x4, x1, x2)

inst_82986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:248958*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248958*0 + 3*42*FLEN/8, x4, x1, x2)

inst_82987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:248961*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248961*0 + 3*43*FLEN/8, x4, x1, x2)

inst_82988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:248964*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248964*0 + 3*44*FLEN/8, x4, x1, x2)

inst_82989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:248967*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248967*0 + 3*45*FLEN/8, x4, x1, x2)

inst_82990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:248970*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248970*0 + 3*46*FLEN/8, x4, x1, x2)

inst_82991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:248973*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248973*0 + 3*47*FLEN/8, x4, x1, x2)

inst_82992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:248976*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248976*0 + 3*48*FLEN/8, x4, x1, x2)

inst_82993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:248979*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248979*0 + 3*49*FLEN/8, x4, x1, x2)

inst_82994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:248982*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248982*0 + 3*50*FLEN/8, x4, x1, x2)

inst_82995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:248985*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248985*0 + 3*51*FLEN/8, x4, x1, x2)

inst_82996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:248988*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248988*0 + 3*52*FLEN/8, x4, x1, x2)

inst_82997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:248991*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248991*0 + 3*53*FLEN/8, x4, x1, x2)

inst_82998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:248994*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248994*0 + 3*54*FLEN/8, x4, x1, x2)

inst_82999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:248997*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 248997*0 + 3*55*FLEN/8, x4, x1, x2)

inst_83000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:249000*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249000*0 + 3*56*FLEN/8, x4, x1, x2)

inst_83001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:249003*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249003*0 + 3*57*FLEN/8, x4, x1, x2)

inst_83002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000000000; valaddr_reg:x3; val_offset:249006*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249006*0 + 3*58*FLEN/8, x4, x1, x2)

inst_83003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000000001; valaddr_reg:x3; val_offset:249009*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249009*0 + 3*59*FLEN/8, x4, x1, x2)

inst_83004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000000003; valaddr_reg:x3; val_offset:249012*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249012*0 + 3*60*FLEN/8, x4, x1, x2)

inst_83005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000000007; valaddr_reg:x3; val_offset:249015*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249015*0 + 3*61*FLEN/8, x4, x1, x2)

inst_83006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000000000f; valaddr_reg:x3; val_offset:249018*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249018*0 + 3*62*FLEN/8, x4, x1, x2)

inst_83007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000000001f; valaddr_reg:x3; val_offset:249021*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249021*0 + 3*63*FLEN/8, x4, x1, x2)

inst_83008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000000003f; valaddr_reg:x3; val_offset:249024*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249024*0 + 3*64*FLEN/8, x4, x1, x2)

inst_83009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000000007f; valaddr_reg:x3; val_offset:249027*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249027*0 + 3*65*FLEN/8, x4, x1, x2)

inst_83010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000000000ff; valaddr_reg:x3; val_offset:249030*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249030*0 + 3*66*FLEN/8, x4, x1, x2)

inst_83011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000000001ff; valaddr_reg:x3; val_offset:249033*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249033*0 + 3*67*FLEN/8, x4, x1, x2)

inst_83012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000000003ff; valaddr_reg:x3; val_offset:249036*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249036*0 + 3*68*FLEN/8, x4, x1, x2)

inst_83013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000000007ff; valaddr_reg:x3; val_offset:249039*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249039*0 + 3*69*FLEN/8, x4, x1, x2)

inst_83014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000000fff; valaddr_reg:x3; val_offset:249042*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249042*0 + 3*70*FLEN/8, x4, x1, x2)

inst_83015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000001fff; valaddr_reg:x3; val_offset:249045*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249045*0 + 3*71*FLEN/8, x4, x1, x2)

inst_83016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000003fff; valaddr_reg:x3; val_offset:249048*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249048*0 + 3*72*FLEN/8, x4, x1, x2)

inst_83017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000007fff; valaddr_reg:x3; val_offset:249051*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249051*0 + 3*73*FLEN/8, x4, x1, x2)

inst_83018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000000ffff; valaddr_reg:x3; val_offset:249054*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249054*0 + 3*74*FLEN/8, x4, x1, x2)

inst_83019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000001ffff; valaddr_reg:x3; val_offset:249057*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249057*0 + 3*75*FLEN/8, x4, x1, x2)

inst_83020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000003ffff; valaddr_reg:x3; val_offset:249060*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249060*0 + 3*76*FLEN/8, x4, x1, x2)

inst_83021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000007ffff; valaddr_reg:x3; val_offset:249063*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249063*0 + 3*77*FLEN/8, x4, x1, x2)

inst_83022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000000fffff; valaddr_reg:x3; val_offset:249066*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249066*0 + 3*78*FLEN/8, x4, x1, x2)

inst_83023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000001fffff; valaddr_reg:x3; val_offset:249069*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249069*0 + 3*79*FLEN/8, x4, x1, x2)

inst_83024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000003fffff; valaddr_reg:x3; val_offset:249072*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249072*0 + 3*80*FLEN/8, x4, x1, x2)

inst_83025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000007fffff; valaddr_reg:x3; val_offset:249075*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249075*0 + 3*81*FLEN/8, x4, x1, x2)

inst_83026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000000ffffff; valaddr_reg:x3; val_offset:249078*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249078*0 + 3*82*FLEN/8, x4, x1, x2)

inst_83027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000001ffffff; valaddr_reg:x3; val_offset:249081*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249081*0 + 3*83*FLEN/8, x4, x1, x2)

inst_83028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000003ffffff; valaddr_reg:x3; val_offset:249084*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249084*0 + 3*84*FLEN/8, x4, x1, x2)

inst_83029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000007ffffff; valaddr_reg:x3; val_offset:249087*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249087*0 + 3*85*FLEN/8, x4, x1, x2)

inst_83030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000000fffffff; valaddr_reg:x3; val_offset:249090*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249090*0 + 3*86*FLEN/8, x4, x1, x2)

inst_83031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000001fffffff; valaddr_reg:x3; val_offset:249093*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249093*0 + 3*87*FLEN/8, x4, x1, x2)

inst_83032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000003fffffff; valaddr_reg:x3; val_offset:249096*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249096*0 + 3*88*FLEN/8, x4, x1, x2)

inst_83033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000007fffffff; valaddr_reg:x3; val_offset:249099*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249099*0 + 3*89*FLEN/8, x4, x1, x2)

inst_83034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00000ffffffff; valaddr_reg:x3; val_offset:249102*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249102*0 + 3*90*FLEN/8, x4, x1, x2)

inst_83035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00001ffffffff; valaddr_reg:x3; val_offset:249105*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249105*0 + 3*91*FLEN/8, x4, x1, x2)

inst_83036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00003ffffffff; valaddr_reg:x3; val_offset:249108*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249108*0 + 3*92*FLEN/8, x4, x1, x2)

inst_83037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00007ffffffff; valaddr_reg:x3; val_offset:249111*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249111*0 + 3*93*FLEN/8, x4, x1, x2)

inst_83038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0000fffffffff; valaddr_reg:x3; val_offset:249114*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249114*0 + 3*94*FLEN/8, x4, x1, x2)

inst_83039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0001fffffffff; valaddr_reg:x3; val_offset:249117*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249117*0 + 3*95*FLEN/8, x4, x1, x2)

inst_83040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0003fffffffff; valaddr_reg:x3; val_offset:249120*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249120*0 + 3*96*FLEN/8, x4, x1, x2)

inst_83041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0007fffffffff; valaddr_reg:x3; val_offset:249123*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249123*0 + 3*97*FLEN/8, x4, x1, x2)

inst_83042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a000ffffffffff; valaddr_reg:x3; val_offset:249126*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249126*0 + 3*98*FLEN/8, x4, x1, x2)

inst_83043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a001ffffffffff; valaddr_reg:x3; val_offset:249129*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249129*0 + 3*99*FLEN/8, x4, x1, x2)

inst_83044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a003ffffffffff; valaddr_reg:x3; val_offset:249132*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249132*0 + 3*100*FLEN/8, x4, x1, x2)

inst_83045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a007ffffffffff; valaddr_reg:x3; val_offset:249135*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249135*0 + 3*101*FLEN/8, x4, x1, x2)

inst_83046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a00fffffffffff; valaddr_reg:x3; val_offset:249138*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249138*0 + 3*102*FLEN/8, x4, x1, x2)

inst_83047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a01fffffffffff; valaddr_reg:x3; val_offset:249141*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249141*0 + 3*103*FLEN/8, x4, x1, x2)

inst_83048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a03fffffffffff; valaddr_reg:x3; val_offset:249144*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249144*0 + 3*104*FLEN/8, x4, x1, x2)

inst_83049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a07fffffffffff; valaddr_reg:x3; val_offset:249147*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249147*0 + 3*105*FLEN/8, x4, x1, x2)

inst_83050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a0ffffffffffff; valaddr_reg:x3; val_offset:249150*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249150*0 + 3*106*FLEN/8, x4, x1, x2)

inst_83051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a1ffffffffffff; valaddr_reg:x3; val_offset:249153*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249153*0 + 3*107*FLEN/8, x4, x1, x2)

inst_83052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a3ffffffffffff; valaddr_reg:x3; val_offset:249156*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249156*0 + 3*108*FLEN/8, x4, x1, x2)

inst_83053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a7ffffffffffff; valaddr_reg:x3; val_offset:249159*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249159*0 + 3*109*FLEN/8, x4, x1, x2)

inst_83054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81a8000000000000; valaddr_reg:x3; val_offset:249162*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249162*0 + 3*110*FLEN/8, x4, x1, x2)

inst_83055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81ac000000000000; valaddr_reg:x3; val_offset:249165*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249165*0 + 3*111*FLEN/8, x4, x1, x2)

inst_83056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81ae000000000000; valaddr_reg:x3; val_offset:249168*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249168*0 + 3*112*FLEN/8, x4, x1, x2)

inst_83057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81af000000000000; valaddr_reg:x3; val_offset:249171*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249171*0 + 3*113*FLEN/8, x4, x1, x2)

inst_83058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81af800000000000; valaddr_reg:x3; val_offset:249174*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249174*0 + 3*114*FLEN/8, x4, x1, x2)

inst_83059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afc00000000000; valaddr_reg:x3; val_offset:249177*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249177*0 + 3*115*FLEN/8, x4, x1, x2)

inst_83060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afe00000000000; valaddr_reg:x3; val_offset:249180*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249180*0 + 3*116*FLEN/8, x4, x1, x2)

inst_83061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81aff00000000000; valaddr_reg:x3; val_offset:249183*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249183*0 + 3*117*FLEN/8, x4, x1, x2)

inst_83062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81aff80000000000; valaddr_reg:x3; val_offset:249186*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249186*0 + 3*118*FLEN/8, x4, x1, x2)

inst_83063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affc0000000000; valaddr_reg:x3; val_offset:249189*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249189*0 + 3*119*FLEN/8, x4, x1, x2)

inst_83064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affe0000000000; valaddr_reg:x3; val_offset:249192*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249192*0 + 3*120*FLEN/8, x4, x1, x2)

inst_83065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afff0000000000; valaddr_reg:x3; val_offset:249195*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249195*0 + 3*121*FLEN/8, x4, x1, x2)

inst_83066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afff8000000000; valaddr_reg:x3; val_offset:249198*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249198*0 + 3*122*FLEN/8, x4, x1, x2)

inst_83067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffc000000000; valaddr_reg:x3; val_offset:249201*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249201*0 + 3*123*FLEN/8, x4, x1, x2)

inst_83068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffe000000000; valaddr_reg:x3; val_offset:249204*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249204*0 + 3*124*FLEN/8, x4, x1, x2)

inst_83069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affff000000000; valaddr_reg:x3; val_offset:249207*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249207*0 + 3*125*FLEN/8, x4, x1, x2)

inst_83070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affff800000000; valaddr_reg:x3; val_offset:249210*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249210*0 + 3*126*FLEN/8, x4, x1, x2)

inst_83071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffc00000000; valaddr_reg:x3; val_offset:249213*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249213*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_83072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffe00000000; valaddr_reg:x3; val_offset:249216*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249216*0 + 3*128*FLEN/8, x4, x1, x2)

inst_83073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffff00000000; valaddr_reg:x3; val_offset:249219*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249219*0 + 3*129*FLEN/8, x4, x1, x2)

inst_83074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffff80000000; valaddr_reg:x3; val_offset:249222*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249222*0 + 3*130*FLEN/8, x4, x1, x2)

inst_83075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffc0000000; valaddr_reg:x3; val_offset:249225*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249225*0 + 3*131*FLEN/8, x4, x1, x2)

inst_83076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffe0000000; valaddr_reg:x3; val_offset:249228*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249228*0 + 3*132*FLEN/8, x4, x1, x2)

inst_83077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffff0000000; valaddr_reg:x3; val_offset:249231*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249231*0 + 3*133*FLEN/8, x4, x1, x2)

inst_83078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffff8000000; valaddr_reg:x3; val_offset:249234*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249234*0 + 3*134*FLEN/8, x4, x1, x2)

inst_83079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffc000000; valaddr_reg:x3; val_offset:249237*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249237*0 + 3*135*FLEN/8, x4, x1, x2)

inst_83080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffe000000; valaddr_reg:x3; val_offset:249240*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249240*0 + 3*136*FLEN/8, x4, x1, x2)

inst_83081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffff000000; valaddr_reg:x3; val_offset:249243*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249243*0 + 3*137*FLEN/8, x4, x1, x2)

inst_83082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffff800000; valaddr_reg:x3; val_offset:249246*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249246*0 + 3*138*FLEN/8, x4, x1, x2)

inst_83083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffc00000; valaddr_reg:x3; val_offset:249249*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249249*0 + 3*139*FLEN/8, x4, x1, x2)

inst_83084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffe00000; valaddr_reg:x3; val_offset:249252*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249252*0 + 3*140*FLEN/8, x4, x1, x2)

inst_83085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffff00000; valaddr_reg:x3; val_offset:249255*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249255*0 + 3*141*FLEN/8, x4, x1, x2)

inst_83086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffff80000; valaddr_reg:x3; val_offset:249258*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249258*0 + 3*142*FLEN/8, x4, x1, x2)

inst_83087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffc0000; valaddr_reg:x3; val_offset:249261*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249261*0 + 3*143*FLEN/8, x4, x1, x2)

inst_83088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffe0000; valaddr_reg:x3; val_offset:249264*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249264*0 + 3*144*FLEN/8, x4, x1, x2)

inst_83089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffff0000; valaddr_reg:x3; val_offset:249267*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249267*0 + 3*145*FLEN/8, x4, x1, x2)

inst_83090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffff8000; valaddr_reg:x3; val_offset:249270*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249270*0 + 3*146*FLEN/8, x4, x1, x2)

inst_83091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffffc000; valaddr_reg:x3; val_offset:249273*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249273*0 + 3*147*FLEN/8, x4, x1, x2)

inst_83092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffffe000; valaddr_reg:x3; val_offset:249276*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249276*0 + 3*148*FLEN/8, x4, x1, x2)

inst_83093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffff000; valaddr_reg:x3; val_offset:249279*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249279*0 + 3*149*FLEN/8, x4, x1, x2)

inst_83094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffff800; valaddr_reg:x3; val_offset:249282*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249282*0 + 3*150*FLEN/8, x4, x1, x2)

inst_83095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffffc00; valaddr_reg:x3; val_offset:249285*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249285*0 + 3*151*FLEN/8, x4, x1, x2)

inst_83096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffffe00; valaddr_reg:x3; val_offset:249288*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249288*0 + 3*152*FLEN/8, x4, x1, x2)

inst_83097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffffff00; valaddr_reg:x3; val_offset:249291*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249291*0 + 3*153*FLEN/8, x4, x1, x2)

inst_83098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffffff80; valaddr_reg:x3; val_offset:249294*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249294*0 + 3*154*FLEN/8, x4, x1, x2)

inst_83099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffffffc0; valaddr_reg:x3; val_offset:249297*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249297*0 + 3*155*FLEN/8, x4, x1, x2)

inst_83100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffffffe0; valaddr_reg:x3; val_offset:249300*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249300*0 + 3*156*FLEN/8, x4, x1, x2)

inst_83101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffffff0; valaddr_reg:x3; val_offset:249303*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249303*0 + 3*157*FLEN/8, x4, x1, x2)

inst_83102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffffff8; valaddr_reg:x3; val_offset:249306*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249306*0 + 3*158*FLEN/8, x4, x1, x2)

inst_83103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffffffc; valaddr_reg:x3; val_offset:249309*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249309*0 + 3*159*FLEN/8, x4, x1, x2)

inst_83104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81affffffffffffe; valaddr_reg:x3; val_offset:249312*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249312*0 + 3*160*FLEN/8, x4, x1, x2)

inst_83105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9e4795c8459f5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9e4795c8459f5; op2val:0x8000;
op3val:0x81afffffffffffff; valaddr_reg:x3; val_offset:249315*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249315*0 + 3*161*FLEN/8, x4, x1, x2)

inst_83106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000000000; valaddr_reg:x3; val_offset:249318*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249318*0 + 3*162*FLEN/8, x4, x1, x2)

inst_83107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000000001; valaddr_reg:x3; val_offset:249321*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249321*0 + 3*163*FLEN/8, x4, x1, x2)

inst_83108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000000003; valaddr_reg:x3; val_offset:249324*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249324*0 + 3*164*FLEN/8, x4, x1, x2)

inst_83109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000000007; valaddr_reg:x3; val_offset:249327*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249327*0 + 3*165*FLEN/8, x4, x1, x2)

inst_83110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000000000f; valaddr_reg:x3; val_offset:249330*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249330*0 + 3*166*FLEN/8, x4, x1, x2)

inst_83111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000000001f; valaddr_reg:x3; val_offset:249333*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249333*0 + 3*167*FLEN/8, x4, x1, x2)

inst_83112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000000003f; valaddr_reg:x3; val_offset:249336*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249336*0 + 3*168*FLEN/8, x4, x1, x2)

inst_83113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000000007f; valaddr_reg:x3; val_offset:249339*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249339*0 + 3*169*FLEN/8, x4, x1, x2)

inst_83114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000000000ff; valaddr_reg:x3; val_offset:249342*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249342*0 + 3*170*FLEN/8, x4, x1, x2)

inst_83115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000000001ff; valaddr_reg:x3; val_offset:249345*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249345*0 + 3*171*FLEN/8, x4, x1, x2)

inst_83116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000000003ff; valaddr_reg:x3; val_offset:249348*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249348*0 + 3*172*FLEN/8, x4, x1, x2)

inst_83117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000000007ff; valaddr_reg:x3; val_offset:249351*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249351*0 + 3*173*FLEN/8, x4, x1, x2)

inst_83118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000000fff; valaddr_reg:x3; val_offset:249354*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249354*0 + 3*174*FLEN/8, x4, x1, x2)

inst_83119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000001fff; valaddr_reg:x3; val_offset:249357*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249357*0 + 3*175*FLEN/8, x4, x1, x2)

inst_83120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000003fff; valaddr_reg:x3; val_offset:249360*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249360*0 + 3*176*FLEN/8, x4, x1, x2)

inst_83121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000007fff; valaddr_reg:x3; val_offset:249363*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249363*0 + 3*177*FLEN/8, x4, x1, x2)

inst_83122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000000ffff; valaddr_reg:x3; val_offset:249366*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249366*0 + 3*178*FLEN/8, x4, x1, x2)

inst_83123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000001ffff; valaddr_reg:x3; val_offset:249369*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249369*0 + 3*179*FLEN/8, x4, x1, x2)

inst_83124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000003ffff; valaddr_reg:x3; val_offset:249372*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249372*0 + 3*180*FLEN/8, x4, x1, x2)

inst_83125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000007ffff; valaddr_reg:x3; val_offset:249375*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249375*0 + 3*181*FLEN/8, x4, x1, x2)

inst_83126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000000fffff; valaddr_reg:x3; val_offset:249378*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249378*0 + 3*182*FLEN/8, x4, x1, x2)

inst_83127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000001fffff; valaddr_reg:x3; val_offset:249381*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249381*0 + 3*183*FLEN/8, x4, x1, x2)

inst_83128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000003fffff; valaddr_reg:x3; val_offset:249384*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249384*0 + 3*184*FLEN/8, x4, x1, x2)

inst_83129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000007fffff; valaddr_reg:x3; val_offset:249387*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249387*0 + 3*185*FLEN/8, x4, x1, x2)

inst_83130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000000ffffff; valaddr_reg:x3; val_offset:249390*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249390*0 + 3*186*FLEN/8, x4, x1, x2)

inst_83131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000001ffffff; valaddr_reg:x3; val_offset:249393*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249393*0 + 3*187*FLEN/8, x4, x1, x2)

inst_83132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000003ffffff; valaddr_reg:x3; val_offset:249396*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249396*0 + 3*188*FLEN/8, x4, x1, x2)

inst_83133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000007ffffff; valaddr_reg:x3; val_offset:249399*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249399*0 + 3*189*FLEN/8, x4, x1, x2)

inst_83134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000000fffffff; valaddr_reg:x3; val_offset:249402*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249402*0 + 3*190*FLEN/8, x4, x1, x2)

inst_83135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000001fffffff; valaddr_reg:x3; val_offset:249405*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249405*0 + 3*191*FLEN/8, x4, x1, x2)

inst_83136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000003fffffff; valaddr_reg:x3; val_offset:249408*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249408*0 + 3*192*FLEN/8, x4, x1, x2)

inst_83137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000007fffffff; valaddr_reg:x3; val_offset:249411*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249411*0 + 3*193*FLEN/8, x4, x1, x2)

inst_83138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200000ffffffff; valaddr_reg:x3; val_offset:249414*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249414*0 + 3*194*FLEN/8, x4, x1, x2)

inst_83139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200001ffffffff; valaddr_reg:x3; val_offset:249417*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249417*0 + 3*195*FLEN/8, x4, x1, x2)

inst_83140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200003ffffffff; valaddr_reg:x3; val_offset:249420*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249420*0 + 3*196*FLEN/8, x4, x1, x2)

inst_83141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200007ffffffff; valaddr_reg:x3; val_offset:249423*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249423*0 + 3*197*FLEN/8, x4, x1, x2)

inst_83142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20000fffffffff; valaddr_reg:x3; val_offset:249426*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249426*0 + 3*198*FLEN/8, x4, x1, x2)

inst_83143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20001fffffffff; valaddr_reg:x3; val_offset:249429*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249429*0 + 3*199*FLEN/8, x4, x1, x2)

inst_83144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20003fffffffff; valaddr_reg:x3; val_offset:249432*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249432*0 + 3*200*FLEN/8, x4, x1, x2)

inst_83145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20007fffffffff; valaddr_reg:x3; val_offset:249435*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249435*0 + 3*201*FLEN/8, x4, x1, x2)

inst_83146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2000ffffffffff; valaddr_reg:x3; val_offset:249438*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249438*0 + 3*202*FLEN/8, x4, x1, x2)

inst_83147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2001ffffffffff; valaddr_reg:x3; val_offset:249441*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249441*0 + 3*203*FLEN/8, x4, x1, x2)

inst_83148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2003ffffffffff; valaddr_reg:x3; val_offset:249444*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249444*0 + 3*204*FLEN/8, x4, x1, x2)

inst_83149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2007ffffffffff; valaddr_reg:x3; val_offset:249447*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249447*0 + 3*205*FLEN/8, x4, x1, x2)

inst_83150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c200fffffffffff; valaddr_reg:x3; val_offset:249450*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249450*0 + 3*206*FLEN/8, x4, x1, x2)

inst_83151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c201fffffffffff; valaddr_reg:x3; val_offset:249453*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249453*0 + 3*207*FLEN/8, x4, x1, x2)

inst_83152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c203fffffffffff; valaddr_reg:x3; val_offset:249456*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249456*0 + 3*208*FLEN/8, x4, x1, x2)

inst_83153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c207fffffffffff; valaddr_reg:x3; val_offset:249459*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249459*0 + 3*209*FLEN/8, x4, x1, x2)

inst_83154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c20ffffffffffff; valaddr_reg:x3; val_offset:249462*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249462*0 + 3*210*FLEN/8, x4, x1, x2)

inst_83155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c21ffffffffffff; valaddr_reg:x3; val_offset:249465*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249465*0 + 3*211*FLEN/8, x4, x1, x2)

inst_83156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c23ffffffffffff; valaddr_reg:x3; val_offset:249468*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249468*0 + 3*212*FLEN/8, x4, x1, x2)

inst_83157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c27ffffffffffff; valaddr_reg:x3; val_offset:249471*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249471*0 + 3*213*FLEN/8, x4, x1, x2)

inst_83158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c28000000000000; valaddr_reg:x3; val_offset:249474*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249474*0 + 3*214*FLEN/8, x4, x1, x2)

inst_83159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2c000000000000; valaddr_reg:x3; val_offset:249477*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249477*0 + 3*215*FLEN/8, x4, x1, x2)

inst_83160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2e000000000000; valaddr_reg:x3; val_offset:249480*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249480*0 + 3*216*FLEN/8, x4, x1, x2)

inst_83161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2f000000000000; valaddr_reg:x3; val_offset:249483*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249483*0 + 3*217*FLEN/8, x4, x1, x2)

inst_83162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2f800000000000; valaddr_reg:x3; val_offset:249486*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249486*0 + 3*218*FLEN/8, x4, x1, x2)

inst_83163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fc00000000000; valaddr_reg:x3; val_offset:249489*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249489*0 + 3*219*FLEN/8, x4, x1, x2)

inst_83164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fe00000000000; valaddr_reg:x3; val_offset:249492*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249492*0 + 3*220*FLEN/8, x4, x1, x2)

inst_83165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ff00000000000; valaddr_reg:x3; val_offset:249495*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249495*0 + 3*221*FLEN/8, x4, x1, x2)

inst_83166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ff80000000000; valaddr_reg:x3; val_offset:249498*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249498*0 + 3*222*FLEN/8, x4, x1, x2)

inst_83167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffc0000000000; valaddr_reg:x3; val_offset:249501*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249501*0 + 3*223*FLEN/8, x4, x1, x2)

inst_83168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffe0000000000; valaddr_reg:x3; val_offset:249504*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249504*0 + 3*224*FLEN/8, x4, x1, x2)

inst_83169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fff0000000000; valaddr_reg:x3; val_offset:249507*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249507*0 + 3*225*FLEN/8, x4, x1, x2)

inst_83170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fff8000000000; valaddr_reg:x3; val_offset:249510*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249510*0 + 3*226*FLEN/8, x4, x1, x2)

inst_83171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffc000000000; valaddr_reg:x3; val_offset:249513*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249513*0 + 3*227*FLEN/8, x4, x1, x2)

inst_83172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffe000000000; valaddr_reg:x3; val_offset:249516*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249516*0 + 3*228*FLEN/8, x4, x1, x2)

inst_83173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffff000000000; valaddr_reg:x3; val_offset:249519*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249519*0 + 3*229*FLEN/8, x4, x1, x2)

inst_83174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffff800000000; valaddr_reg:x3; val_offset:249522*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249522*0 + 3*230*FLEN/8, x4, x1, x2)

inst_83175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffc00000000; valaddr_reg:x3; val_offset:249525*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249525*0 + 3*231*FLEN/8, x4, x1, x2)

inst_83176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffe00000000; valaddr_reg:x3; val_offset:249528*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249528*0 + 3*232*FLEN/8, x4, x1, x2)

inst_83177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffff00000000; valaddr_reg:x3; val_offset:249531*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249531*0 + 3*233*FLEN/8, x4, x1, x2)

inst_83178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffff80000000; valaddr_reg:x3; val_offset:249534*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249534*0 + 3*234*FLEN/8, x4, x1, x2)

inst_83179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffc0000000; valaddr_reg:x3; val_offset:249537*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249537*0 + 3*235*FLEN/8, x4, x1, x2)

inst_83180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffe0000000; valaddr_reg:x3; val_offset:249540*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249540*0 + 3*236*FLEN/8, x4, x1, x2)

inst_83181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffff0000000; valaddr_reg:x3; val_offset:249543*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249543*0 + 3*237*FLEN/8, x4, x1, x2)

inst_83182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffff8000000; valaddr_reg:x3; val_offset:249546*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249546*0 + 3*238*FLEN/8, x4, x1, x2)

inst_83183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffc000000; valaddr_reg:x3; val_offset:249549*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249549*0 + 3*239*FLEN/8, x4, x1, x2)

inst_83184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffe000000; valaddr_reg:x3; val_offset:249552*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249552*0 + 3*240*FLEN/8, x4, x1, x2)

inst_83185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffff000000; valaddr_reg:x3; val_offset:249555*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249555*0 + 3*241*FLEN/8, x4, x1, x2)

inst_83186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffff800000; valaddr_reg:x3; val_offset:249558*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249558*0 + 3*242*FLEN/8, x4, x1, x2)

inst_83187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffc00000; valaddr_reg:x3; val_offset:249561*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249561*0 + 3*243*FLEN/8, x4, x1, x2)

inst_83188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffe00000; valaddr_reg:x3; val_offset:249564*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249564*0 + 3*244*FLEN/8, x4, x1, x2)

inst_83189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffff00000; valaddr_reg:x3; val_offset:249567*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249567*0 + 3*245*FLEN/8, x4, x1, x2)

inst_83190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffff80000; valaddr_reg:x3; val_offset:249570*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249570*0 + 3*246*FLEN/8, x4, x1, x2)

inst_83191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffc0000; valaddr_reg:x3; val_offset:249573*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249573*0 + 3*247*FLEN/8, x4, x1, x2)

inst_83192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffe0000; valaddr_reg:x3; val_offset:249576*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249576*0 + 3*248*FLEN/8, x4, x1, x2)

inst_83193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffff0000; valaddr_reg:x3; val_offset:249579*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249579*0 + 3*249*FLEN/8, x4, x1, x2)

inst_83194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffff8000; valaddr_reg:x3; val_offset:249582*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249582*0 + 3*250*FLEN/8, x4, x1, x2)

inst_83195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffffc000; valaddr_reg:x3; val_offset:249585*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249585*0 + 3*251*FLEN/8, x4, x1, x2)

inst_83196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffffe000; valaddr_reg:x3; val_offset:249588*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249588*0 + 3*252*FLEN/8, x4, x1, x2)

inst_83197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffff000; valaddr_reg:x3; val_offset:249591*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249591*0 + 3*253*FLEN/8, x4, x1, x2)

inst_83198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffff800; valaddr_reg:x3; val_offset:249594*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249594*0 + 3*254*FLEN/8, x4, x1, x2)

inst_83199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffffc00; valaddr_reg:x3; val_offset:249597*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249597*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_83200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffffe00; valaddr_reg:x3; val_offset:249600*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249600*0 + 3*256*FLEN/8, x4, x1, x2)

inst_83201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffffff00; valaddr_reg:x3; val_offset:249603*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249603*0 + 3*257*FLEN/8, x4, x1, x2)

inst_83202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffffff80; valaddr_reg:x3; val_offset:249606*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249606*0 + 3*258*FLEN/8, x4, x1, x2)

inst_83203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffffffc0; valaddr_reg:x3; val_offset:249609*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249609*0 + 3*259*FLEN/8, x4, x1, x2)

inst_83204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffffffe0; valaddr_reg:x3; val_offset:249612*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249612*0 + 3*260*FLEN/8, x4, x1, x2)

inst_83205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffffff0; valaddr_reg:x3; val_offset:249615*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249615*0 + 3*261*FLEN/8, x4, x1, x2)

inst_83206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffffff8; valaddr_reg:x3; val_offset:249618*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249618*0 + 3*262*FLEN/8, x4, x1, x2)

inst_83207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffffffc; valaddr_reg:x3; val_offset:249621*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249621*0 + 3*263*FLEN/8, x4, x1, x2)

inst_83208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2ffffffffffffe; valaddr_reg:x3; val_offset:249624*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249624*0 + 3*264*FLEN/8, x4, x1, x2)

inst_83209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3c2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3c2fffffffffffff; valaddr_reg:x3; val_offset:249627*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249627*0 + 3*265*FLEN/8, x4, x1, x2)

inst_83210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:249630*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249630*0 + 3*266*FLEN/8, x4, x1, x2)

inst_83211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:249633*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249633*0 + 3*267*FLEN/8, x4, x1, x2)

inst_83212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:249636*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249636*0 + 3*268*FLEN/8, x4, x1, x2)

inst_83213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:249639*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249639*0 + 3*269*FLEN/8, x4, x1, x2)

inst_83214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:249642*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249642*0 + 3*270*FLEN/8, x4, x1, x2)

inst_83215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:249645*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249645*0 + 3*271*FLEN/8, x4, x1, x2)

inst_83216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:249648*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249648*0 + 3*272*FLEN/8, x4, x1, x2)

inst_83217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:249651*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249651*0 + 3*273*FLEN/8, x4, x1, x2)

inst_83218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:249654*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249654*0 + 3*274*FLEN/8, x4, x1, x2)

inst_83219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:249657*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249657*0 + 3*275*FLEN/8, x4, x1, x2)

inst_83220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:249660*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249660*0 + 3*276*FLEN/8, x4, x1, x2)

inst_83221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:249663*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249663*0 + 3*277*FLEN/8, x4, x1, x2)

inst_83222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:249666*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249666*0 + 3*278*FLEN/8, x4, x1, x2)

inst_83223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:249669*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249669*0 + 3*279*FLEN/8, x4, x1, x2)

inst_83224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:249672*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249672*0 + 3*280*FLEN/8, x4, x1, x2)

inst_83225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:249675*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249675*0 + 3*281*FLEN/8, x4, x1, x2)

inst_83226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:249678*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249678*0 + 3*282*FLEN/8, x4, x1, x2)

inst_83227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:249681*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249681*0 + 3*283*FLEN/8, x4, x1, x2)

inst_83228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:249684*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249684*0 + 3*284*FLEN/8, x4, x1, x2)

inst_83229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:249687*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249687*0 + 3*285*FLEN/8, x4, x1, x2)

inst_83230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:249690*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249690*0 + 3*286*FLEN/8, x4, x1, x2)

inst_83231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9f4d9e7f2bd28 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x3b9b0626abe25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa9f4d9e7f2bd28; op2val:0x2033b9b0626abe25;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:249693*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249693*0 + 3*287*FLEN/8, x4, x1, x2)

inst_83232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:249696*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249696*0 + 3*288*FLEN/8, x4, x1, x2)

inst_83233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:249699*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249699*0 + 3*289*FLEN/8, x4, x1, x2)

inst_83234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:249702*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249702*0 + 3*290*FLEN/8, x4, x1, x2)

inst_83235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:249705*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249705*0 + 3*291*FLEN/8, x4, x1, x2)

inst_83236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:249708*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249708*0 + 3*292*FLEN/8, x4, x1, x2)

inst_83237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:249711*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249711*0 + 3*293*FLEN/8, x4, x1, x2)

inst_83238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:249714*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249714*0 + 3*294*FLEN/8, x4, x1, x2)

inst_83239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:249717*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249717*0 + 3*295*FLEN/8, x4, x1, x2)

inst_83240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:249720*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249720*0 + 3*296*FLEN/8, x4, x1, x2)

inst_83241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:249723*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249723*0 + 3*297*FLEN/8, x4, x1, x2)

inst_83242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:249726*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249726*0 + 3*298*FLEN/8, x4, x1, x2)

inst_83243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:249729*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249729*0 + 3*299*FLEN/8, x4, x1, x2)

inst_83244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:249732*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249732*0 + 3*300*FLEN/8, x4, x1, x2)

inst_83245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:249735*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249735*0 + 3*301*FLEN/8, x4, x1, x2)

inst_83246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:249738*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249738*0 + 3*302*FLEN/8, x4, x1, x2)

inst_83247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:249741*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249741*0 + 3*303*FLEN/8, x4, x1, x2)

inst_83248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:249744*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249744*0 + 3*304*FLEN/8, x4, x1, x2)

inst_83249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:249747*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249747*0 + 3*305*FLEN/8, x4, x1, x2)

inst_83250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:249750*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249750*0 + 3*306*FLEN/8, x4, x1, x2)

inst_83251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:249753*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249753*0 + 3*307*FLEN/8, x4, x1, x2)

inst_83252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:249756*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249756*0 + 3*308*FLEN/8, x4, x1, x2)

inst_83253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:249759*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249759*0 + 3*309*FLEN/8, x4, x1, x2)

inst_83254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000000000; valaddr_reg:x3; val_offset:249762*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249762*0 + 3*310*FLEN/8, x4, x1, x2)

inst_83255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000000001; valaddr_reg:x3; val_offset:249765*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249765*0 + 3*311*FLEN/8, x4, x1, x2)

inst_83256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000000003; valaddr_reg:x3; val_offset:249768*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249768*0 + 3*312*FLEN/8, x4, x1, x2)

inst_83257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000000007; valaddr_reg:x3; val_offset:249771*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249771*0 + 3*313*FLEN/8, x4, x1, x2)

inst_83258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000000000f; valaddr_reg:x3; val_offset:249774*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249774*0 + 3*314*FLEN/8, x4, x1, x2)

inst_83259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000000001f; valaddr_reg:x3; val_offset:249777*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249777*0 + 3*315*FLEN/8, x4, x1, x2)

inst_83260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000000003f; valaddr_reg:x3; val_offset:249780*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249780*0 + 3*316*FLEN/8, x4, x1, x2)

inst_83261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000000007f; valaddr_reg:x3; val_offset:249783*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249783*0 + 3*317*FLEN/8, x4, x1, x2)

inst_83262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000000000ff; valaddr_reg:x3; val_offset:249786*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249786*0 + 3*318*FLEN/8, x4, x1, x2)

inst_83263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000000001ff; valaddr_reg:x3; val_offset:249789*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249789*0 + 3*319*FLEN/8, x4, x1, x2)

inst_83264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000000003ff; valaddr_reg:x3; val_offset:249792*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249792*0 + 3*320*FLEN/8, x4, x1, x2)

inst_83265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000000007ff; valaddr_reg:x3; val_offset:249795*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249795*0 + 3*321*FLEN/8, x4, x1, x2)

inst_83266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000000fff; valaddr_reg:x3; val_offset:249798*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249798*0 + 3*322*FLEN/8, x4, x1, x2)

inst_83267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000001fff; valaddr_reg:x3; val_offset:249801*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249801*0 + 3*323*FLEN/8, x4, x1, x2)

inst_83268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000003fff; valaddr_reg:x3; val_offset:249804*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249804*0 + 3*324*FLEN/8, x4, x1, x2)

inst_83269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000007fff; valaddr_reg:x3; val_offset:249807*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249807*0 + 3*325*FLEN/8, x4, x1, x2)

inst_83270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000000ffff; valaddr_reg:x3; val_offset:249810*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249810*0 + 3*326*FLEN/8, x4, x1, x2)

inst_83271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000001ffff; valaddr_reg:x3; val_offset:249813*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249813*0 + 3*327*FLEN/8, x4, x1, x2)

inst_83272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000003ffff; valaddr_reg:x3; val_offset:249816*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249816*0 + 3*328*FLEN/8, x4, x1, x2)

inst_83273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000007ffff; valaddr_reg:x3; val_offset:249819*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249819*0 + 3*329*FLEN/8, x4, x1, x2)

inst_83274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000000fffff; valaddr_reg:x3; val_offset:249822*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249822*0 + 3*330*FLEN/8, x4, x1, x2)

inst_83275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000001fffff; valaddr_reg:x3; val_offset:249825*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249825*0 + 3*331*FLEN/8, x4, x1, x2)

inst_83276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000003fffff; valaddr_reg:x3; val_offset:249828*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249828*0 + 3*332*FLEN/8, x4, x1, x2)

inst_83277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000007fffff; valaddr_reg:x3; val_offset:249831*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249831*0 + 3*333*FLEN/8, x4, x1, x2)

inst_83278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000000ffffff; valaddr_reg:x3; val_offset:249834*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249834*0 + 3*334*FLEN/8, x4, x1, x2)

inst_83279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000001ffffff; valaddr_reg:x3; val_offset:249837*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249837*0 + 3*335*FLEN/8, x4, x1, x2)

inst_83280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000003ffffff; valaddr_reg:x3; val_offset:249840*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249840*0 + 3*336*FLEN/8, x4, x1, x2)

inst_83281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000007ffffff; valaddr_reg:x3; val_offset:249843*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249843*0 + 3*337*FLEN/8, x4, x1, x2)

inst_83282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000000fffffff; valaddr_reg:x3; val_offset:249846*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249846*0 + 3*338*FLEN/8, x4, x1, x2)

inst_83283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000001fffffff; valaddr_reg:x3; val_offset:249849*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249849*0 + 3*339*FLEN/8, x4, x1, x2)

inst_83284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000003fffffff; valaddr_reg:x3; val_offset:249852*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249852*0 + 3*340*FLEN/8, x4, x1, x2)

inst_83285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000007fffffff; valaddr_reg:x3; val_offset:249855*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249855*0 + 3*341*FLEN/8, x4, x1, x2)

inst_83286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00000ffffffff; valaddr_reg:x3; val_offset:249858*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249858*0 + 3*342*FLEN/8, x4, x1, x2)

inst_83287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00001ffffffff; valaddr_reg:x3; val_offset:249861*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249861*0 + 3*343*FLEN/8, x4, x1, x2)

inst_83288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00003ffffffff; valaddr_reg:x3; val_offset:249864*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249864*0 + 3*344*FLEN/8, x4, x1, x2)

inst_83289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00007ffffffff; valaddr_reg:x3; val_offset:249867*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249867*0 + 3*345*FLEN/8, x4, x1, x2)

inst_83290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0000fffffffff; valaddr_reg:x3; val_offset:249870*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249870*0 + 3*346*FLEN/8, x4, x1, x2)

inst_83291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0001fffffffff; valaddr_reg:x3; val_offset:249873*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249873*0 + 3*347*FLEN/8, x4, x1, x2)

inst_83292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0003fffffffff; valaddr_reg:x3; val_offset:249876*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249876*0 + 3*348*FLEN/8, x4, x1, x2)

inst_83293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0007fffffffff; valaddr_reg:x3; val_offset:249879*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249879*0 + 3*349*FLEN/8, x4, x1, x2)

inst_83294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d000ffffffffff; valaddr_reg:x3; val_offset:249882*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249882*0 + 3*350*FLEN/8, x4, x1, x2)

inst_83295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d001ffffffffff; valaddr_reg:x3; val_offset:249885*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249885*0 + 3*351*FLEN/8, x4, x1, x2)

inst_83296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d003ffffffffff; valaddr_reg:x3; val_offset:249888*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249888*0 + 3*352*FLEN/8, x4, x1, x2)

inst_83297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d007ffffffffff; valaddr_reg:x3; val_offset:249891*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249891*0 + 3*353*FLEN/8, x4, x1, x2)

inst_83298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d00fffffffffff; valaddr_reg:x3; val_offset:249894*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249894*0 + 3*354*FLEN/8, x4, x1, x2)

inst_83299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d01fffffffffff; valaddr_reg:x3; val_offset:249897*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249897*0 + 3*355*FLEN/8, x4, x1, x2)

inst_83300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d03fffffffffff; valaddr_reg:x3; val_offset:249900*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249900*0 + 3*356*FLEN/8, x4, x1, x2)

inst_83301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d07fffffffffff; valaddr_reg:x3; val_offset:249903*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249903*0 + 3*357*FLEN/8, x4, x1, x2)

inst_83302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d0ffffffffffff; valaddr_reg:x3; val_offset:249906*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249906*0 + 3*358*FLEN/8, x4, x1, x2)

inst_83303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d1ffffffffffff; valaddr_reg:x3; val_offset:249909*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249909*0 + 3*359*FLEN/8, x4, x1, x2)

inst_83304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d3ffffffffffff; valaddr_reg:x3; val_offset:249912*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249912*0 + 3*360*FLEN/8, x4, x1, x2)

inst_83305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d7ffffffffffff; valaddr_reg:x3; val_offset:249915*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249915*0 + 3*361*FLEN/8, x4, x1, x2)

inst_83306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81d8000000000000; valaddr_reg:x3; val_offset:249918*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249918*0 + 3*362*FLEN/8, x4, x1, x2)

inst_83307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dc000000000000; valaddr_reg:x3; val_offset:249921*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249921*0 + 3*363*FLEN/8, x4, x1, x2)

inst_83308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81de000000000000; valaddr_reg:x3; val_offset:249924*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249924*0 + 3*364*FLEN/8, x4, x1, x2)

inst_83309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81df000000000000; valaddr_reg:x3; val_offset:249927*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249927*0 + 3*365*FLEN/8, x4, x1, x2)

inst_83310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81df800000000000; valaddr_reg:x3; val_offset:249930*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249930*0 + 3*366*FLEN/8, x4, x1, x2)

inst_83311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfc00000000000; valaddr_reg:x3; val_offset:249933*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249933*0 + 3*367*FLEN/8, x4, x1, x2)

inst_83312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfe00000000000; valaddr_reg:x3; val_offset:249936*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249936*0 + 3*368*FLEN/8, x4, x1, x2)

inst_83313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dff00000000000; valaddr_reg:x3; val_offset:249939*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249939*0 + 3*369*FLEN/8, x4, x1, x2)

inst_83314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dff80000000000; valaddr_reg:x3; val_offset:249942*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249942*0 + 3*370*FLEN/8, x4, x1, x2)

inst_83315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffc0000000000; valaddr_reg:x3; val_offset:249945*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249945*0 + 3*371*FLEN/8, x4, x1, x2)

inst_83316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffe0000000000; valaddr_reg:x3; val_offset:249948*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249948*0 + 3*372*FLEN/8, x4, x1, x2)

inst_83317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfff0000000000; valaddr_reg:x3; val_offset:249951*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249951*0 + 3*373*FLEN/8, x4, x1, x2)

inst_83318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfff8000000000; valaddr_reg:x3; val_offset:249954*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249954*0 + 3*374*FLEN/8, x4, x1, x2)

inst_83319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffc000000000; valaddr_reg:x3; val_offset:249957*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249957*0 + 3*375*FLEN/8, x4, x1, x2)

inst_83320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffe000000000; valaddr_reg:x3; val_offset:249960*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249960*0 + 3*376*FLEN/8, x4, x1, x2)

inst_83321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffff000000000; valaddr_reg:x3; val_offset:249963*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249963*0 + 3*377*FLEN/8, x4, x1, x2)

inst_83322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffff800000000; valaddr_reg:x3; val_offset:249966*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249966*0 + 3*378*FLEN/8, x4, x1, x2)

inst_83323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffc00000000; valaddr_reg:x3; val_offset:249969*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249969*0 + 3*379*FLEN/8, x4, x1, x2)

inst_83324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffe00000000; valaddr_reg:x3; val_offset:249972*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249972*0 + 3*380*FLEN/8, x4, x1, x2)

inst_83325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffff00000000; valaddr_reg:x3; val_offset:249975*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249975*0 + 3*381*FLEN/8, x4, x1, x2)

inst_83326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffff80000000; valaddr_reg:x3; val_offset:249978*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249978*0 + 3*382*FLEN/8, x4, x1, x2)

inst_83327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffc0000000; valaddr_reg:x3; val_offset:249981*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249981*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_83328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffe0000000; valaddr_reg:x3; val_offset:249984*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249984*0 + 3*384*FLEN/8, x4, x1, x2)

inst_83329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffff0000000; valaddr_reg:x3; val_offset:249987*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249987*0 + 3*385*FLEN/8, x4, x1, x2)

inst_83330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffff8000000; valaddr_reg:x3; val_offset:249990*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249990*0 + 3*386*FLEN/8, x4, x1, x2)

inst_83331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffc000000; valaddr_reg:x3; val_offset:249993*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249993*0 + 3*387*FLEN/8, x4, x1, x2)

inst_83332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffe000000; valaddr_reg:x3; val_offset:249996*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249996*0 + 3*388*FLEN/8, x4, x1, x2)

inst_83333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffff000000; valaddr_reg:x3; val_offset:249999*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249999*0 + 3*389*FLEN/8, x4, x1, x2)

inst_83334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffff800000; valaddr_reg:x3; val_offset:250002*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250002*0 + 3*390*FLEN/8, x4, x1, x2)

inst_83335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffc00000; valaddr_reg:x3; val_offset:250005*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250005*0 + 3*391*FLEN/8, x4, x1, x2)

inst_83336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffe00000; valaddr_reg:x3; val_offset:250008*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250008*0 + 3*392*FLEN/8, x4, x1, x2)

inst_83337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffff00000; valaddr_reg:x3; val_offset:250011*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250011*0 + 3*393*FLEN/8, x4, x1, x2)

inst_83338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffff80000; valaddr_reg:x3; val_offset:250014*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250014*0 + 3*394*FLEN/8, x4, x1, x2)

inst_83339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffc0000; valaddr_reg:x3; val_offset:250017*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250017*0 + 3*395*FLEN/8, x4, x1, x2)

inst_83340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffe0000; valaddr_reg:x3; val_offset:250020*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250020*0 + 3*396*FLEN/8, x4, x1, x2)

inst_83341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffff0000; valaddr_reg:x3; val_offset:250023*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250023*0 + 3*397*FLEN/8, x4, x1, x2)

inst_83342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffff8000; valaddr_reg:x3; val_offset:250026*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250026*0 + 3*398*FLEN/8, x4, x1, x2)

inst_83343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffffc000; valaddr_reg:x3; val_offset:250029*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250029*0 + 3*399*FLEN/8, x4, x1, x2)

inst_83344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffffe000; valaddr_reg:x3; val_offset:250032*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250032*0 + 3*400*FLEN/8, x4, x1, x2)

inst_83345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffff000; valaddr_reg:x3; val_offset:250035*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250035*0 + 3*401*FLEN/8, x4, x1, x2)

inst_83346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffff800; valaddr_reg:x3; val_offset:250038*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250038*0 + 3*402*FLEN/8, x4, x1, x2)

inst_83347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffffc00; valaddr_reg:x3; val_offset:250041*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250041*0 + 3*403*FLEN/8, x4, x1, x2)

inst_83348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffffe00; valaddr_reg:x3; val_offset:250044*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250044*0 + 3*404*FLEN/8, x4, x1, x2)

inst_83349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffffff00; valaddr_reg:x3; val_offset:250047*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250047*0 + 3*405*FLEN/8, x4, x1, x2)

inst_83350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffffff80; valaddr_reg:x3; val_offset:250050*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250050*0 + 3*406*FLEN/8, x4, x1, x2)

inst_83351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffffffc0; valaddr_reg:x3; val_offset:250053*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250053*0 + 3*407*FLEN/8, x4, x1, x2)

inst_83352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffffffe0; valaddr_reg:x3; val_offset:250056*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250056*0 + 3*408*FLEN/8, x4, x1, x2)

inst_83353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffffff0; valaddr_reg:x3; val_offset:250059*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250059*0 + 3*409*FLEN/8, x4, x1, x2)

inst_83354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffffff8; valaddr_reg:x3; val_offset:250062*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250062*0 + 3*410*FLEN/8, x4, x1, x2)

inst_83355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffffffc; valaddr_reg:x3; val_offset:250065*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250065*0 + 3*411*FLEN/8, x4, x1, x2)

inst_83356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dffffffffffffe; valaddr_reg:x3; val_offset:250068*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250068*0 + 3*412*FLEN/8, x4, x1, x2)

inst_83357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa13bf4ee55648 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa13bf4ee55648; op2val:0x8000;
op3val:0x81dfffffffffffff; valaddr_reg:x3; val_offset:250071*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250071*0 + 3*413*FLEN/8, x4, x1, x2)

inst_83358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:250074*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250074*0 + 3*414*FLEN/8, x4, x1, x2)

inst_83359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:250077*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250077*0 + 3*415*FLEN/8, x4, x1, x2)

inst_83360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:250080*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250080*0 + 3*416*FLEN/8, x4, x1, x2)

inst_83361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:250083*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250083*0 + 3*417*FLEN/8, x4, x1, x2)

inst_83362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:250086*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250086*0 + 3*418*FLEN/8, x4, x1, x2)

inst_83363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:250089*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250089*0 + 3*419*FLEN/8, x4, x1, x2)

inst_83364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:250092*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250092*0 + 3*420*FLEN/8, x4, x1, x2)

inst_83365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:250095*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250095*0 + 3*421*FLEN/8, x4, x1, x2)

inst_83366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:250098*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250098*0 + 3*422*FLEN/8, x4, x1, x2)

inst_83367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:250101*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250101*0 + 3*423*FLEN/8, x4, x1, x2)

inst_83368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:250104*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250104*0 + 3*424*FLEN/8, x4, x1, x2)

inst_83369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:250107*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250107*0 + 3*425*FLEN/8, x4, x1, x2)

inst_83370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:250110*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250110*0 + 3*426*FLEN/8, x4, x1, x2)

inst_83371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:250113*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250113*0 + 3*427*FLEN/8, x4, x1, x2)

inst_83372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:250116*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250116*0 + 3*428*FLEN/8, x4, x1, x2)

inst_83373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:250119*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250119*0 + 3*429*FLEN/8, x4, x1, x2)

inst_83374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:250122*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250122*0 + 3*430*FLEN/8, x4, x1, x2)

inst_83375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:250125*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250125*0 + 3*431*FLEN/8, x4, x1, x2)

inst_83376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:250128*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250128*0 + 3*432*FLEN/8, x4, x1, x2)

inst_83377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:250131*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250131*0 + 3*433*FLEN/8, x4, x1, x2)

inst_83378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:250134*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250134*0 + 3*434*FLEN/8, x4, x1, x2)

inst_83379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:250137*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250137*0 + 3*435*FLEN/8, x4, x1, x2)

inst_83380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000000000; valaddr_reg:x3; val_offset:250140*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250140*0 + 3*436*FLEN/8, x4, x1, x2)

inst_83381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000000001; valaddr_reg:x3; val_offset:250143*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250143*0 + 3*437*FLEN/8, x4, x1, x2)

inst_83382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000000003; valaddr_reg:x3; val_offset:250146*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250146*0 + 3*438*FLEN/8, x4, x1, x2)

inst_83383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000000007; valaddr_reg:x3; val_offset:250149*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250149*0 + 3*439*FLEN/8, x4, x1, x2)

inst_83384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000000000f; valaddr_reg:x3; val_offset:250152*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250152*0 + 3*440*FLEN/8, x4, x1, x2)

inst_83385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000000001f; valaddr_reg:x3; val_offset:250155*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250155*0 + 3*441*FLEN/8, x4, x1, x2)

inst_83386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000000003f; valaddr_reg:x3; val_offset:250158*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250158*0 + 3*442*FLEN/8, x4, x1, x2)

inst_83387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000000007f; valaddr_reg:x3; val_offset:250161*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250161*0 + 3*443*FLEN/8, x4, x1, x2)

inst_83388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000000000ff; valaddr_reg:x3; val_offset:250164*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250164*0 + 3*444*FLEN/8, x4, x1, x2)

inst_83389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000000001ff; valaddr_reg:x3; val_offset:250167*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250167*0 + 3*445*FLEN/8, x4, x1, x2)

inst_83390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000000003ff; valaddr_reg:x3; val_offset:250170*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250170*0 + 3*446*FLEN/8, x4, x1, x2)

inst_83391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000000007ff; valaddr_reg:x3; val_offset:250173*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250173*0 + 3*447*FLEN/8, x4, x1, x2)

inst_83392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000000fff; valaddr_reg:x3; val_offset:250176*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250176*0 + 3*448*FLEN/8, x4, x1, x2)

inst_83393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000001fff; valaddr_reg:x3; val_offset:250179*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250179*0 + 3*449*FLEN/8, x4, x1, x2)

inst_83394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000003fff; valaddr_reg:x3; val_offset:250182*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250182*0 + 3*450*FLEN/8, x4, x1, x2)

inst_83395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000007fff; valaddr_reg:x3; val_offset:250185*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250185*0 + 3*451*FLEN/8, x4, x1, x2)

inst_83396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000000ffff; valaddr_reg:x3; val_offset:250188*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250188*0 + 3*452*FLEN/8, x4, x1, x2)

inst_83397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000001ffff; valaddr_reg:x3; val_offset:250191*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250191*0 + 3*453*FLEN/8, x4, x1, x2)

inst_83398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000003ffff; valaddr_reg:x3; val_offset:250194*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250194*0 + 3*454*FLEN/8, x4, x1, x2)

inst_83399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000007ffff; valaddr_reg:x3; val_offset:250197*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250197*0 + 3*455*FLEN/8, x4, x1, x2)

inst_83400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000000fffff; valaddr_reg:x3; val_offset:250200*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250200*0 + 3*456*FLEN/8, x4, x1, x2)

inst_83401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000001fffff; valaddr_reg:x3; val_offset:250203*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250203*0 + 3*457*FLEN/8, x4, x1, x2)

inst_83402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000003fffff; valaddr_reg:x3; val_offset:250206*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250206*0 + 3*458*FLEN/8, x4, x1, x2)

inst_83403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000007fffff; valaddr_reg:x3; val_offset:250209*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250209*0 + 3*459*FLEN/8, x4, x1, x2)

inst_83404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000000ffffff; valaddr_reg:x3; val_offset:250212*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250212*0 + 3*460*FLEN/8, x4, x1, x2)

inst_83405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000001ffffff; valaddr_reg:x3; val_offset:250215*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250215*0 + 3*461*FLEN/8, x4, x1, x2)

inst_83406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000003ffffff; valaddr_reg:x3; val_offset:250218*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250218*0 + 3*462*FLEN/8, x4, x1, x2)

inst_83407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000007ffffff; valaddr_reg:x3; val_offset:250221*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250221*0 + 3*463*FLEN/8, x4, x1, x2)

inst_83408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000000fffffff; valaddr_reg:x3; val_offset:250224*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250224*0 + 3*464*FLEN/8, x4, x1, x2)

inst_83409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000001fffffff; valaddr_reg:x3; val_offset:250227*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250227*0 + 3*465*FLEN/8, x4, x1, x2)

inst_83410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000003fffffff; valaddr_reg:x3; val_offset:250230*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250230*0 + 3*466*FLEN/8, x4, x1, x2)

inst_83411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000007fffffff; valaddr_reg:x3; val_offset:250233*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250233*0 + 3*467*FLEN/8, x4, x1, x2)

inst_83412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00000ffffffff; valaddr_reg:x3; val_offset:250236*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250236*0 + 3*468*FLEN/8, x4, x1, x2)

inst_83413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00001ffffffff; valaddr_reg:x3; val_offset:250239*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250239*0 + 3*469*FLEN/8, x4, x1, x2)

inst_83414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00003ffffffff; valaddr_reg:x3; val_offset:250242*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250242*0 + 3*470*FLEN/8, x4, x1, x2)

inst_83415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00007ffffffff; valaddr_reg:x3; val_offset:250245*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250245*0 + 3*471*FLEN/8, x4, x1, x2)

inst_83416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0000fffffffff; valaddr_reg:x3; val_offset:250248*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250248*0 + 3*472*FLEN/8, x4, x1, x2)

inst_83417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0001fffffffff; valaddr_reg:x3; val_offset:250251*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250251*0 + 3*473*FLEN/8, x4, x1, x2)

inst_83418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0003fffffffff; valaddr_reg:x3; val_offset:250254*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250254*0 + 3*474*FLEN/8, x4, x1, x2)

inst_83419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0007fffffffff; valaddr_reg:x3; val_offset:250257*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250257*0 + 3*475*FLEN/8, x4, x1, x2)

inst_83420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f000ffffffffff; valaddr_reg:x3; val_offset:250260*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250260*0 + 3*476*FLEN/8, x4, x1, x2)

inst_83421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f001ffffffffff; valaddr_reg:x3; val_offset:250263*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250263*0 + 3*477*FLEN/8, x4, x1, x2)

inst_83422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f003ffffffffff; valaddr_reg:x3; val_offset:250266*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250266*0 + 3*478*FLEN/8, x4, x1, x2)

inst_83423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f007ffffffffff; valaddr_reg:x3; val_offset:250269*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250269*0 + 3*479*FLEN/8, x4, x1, x2)

inst_83424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f00fffffffffff; valaddr_reg:x3; val_offset:250272*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250272*0 + 3*480*FLEN/8, x4, x1, x2)

inst_83425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f01fffffffffff; valaddr_reg:x3; val_offset:250275*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250275*0 + 3*481*FLEN/8, x4, x1, x2)

inst_83426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f03fffffffffff; valaddr_reg:x3; val_offset:250278*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250278*0 + 3*482*FLEN/8, x4, x1, x2)

inst_83427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f07fffffffffff; valaddr_reg:x3; val_offset:250281*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250281*0 + 3*483*FLEN/8, x4, x1, x2)

inst_83428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f0ffffffffffff; valaddr_reg:x3; val_offset:250284*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250284*0 + 3*484*FLEN/8, x4, x1, x2)

inst_83429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f1ffffffffffff; valaddr_reg:x3; val_offset:250287*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250287*0 + 3*485*FLEN/8, x4, x1, x2)

inst_83430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f3ffffffffffff; valaddr_reg:x3; val_offset:250290*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250290*0 + 3*486*FLEN/8, x4, x1, x2)

inst_83431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f7ffffffffffff; valaddr_reg:x3; val_offset:250293*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250293*0 + 3*487*FLEN/8, x4, x1, x2)

inst_83432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81f8000000000000; valaddr_reg:x3; val_offset:250296*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250296*0 + 3*488*FLEN/8, x4, x1, x2)

inst_83433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fc000000000000; valaddr_reg:x3; val_offset:250299*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250299*0 + 3*489*FLEN/8, x4, x1, x2)

inst_83434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fe000000000000; valaddr_reg:x3; val_offset:250302*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250302*0 + 3*490*FLEN/8, x4, x1, x2)

inst_83435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ff000000000000; valaddr_reg:x3; val_offset:250305*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250305*0 + 3*491*FLEN/8, x4, x1, x2)

inst_83436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ff800000000000; valaddr_reg:x3; val_offset:250308*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250308*0 + 3*492*FLEN/8, x4, x1, x2)

inst_83437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffc00000000000; valaddr_reg:x3; val_offset:250311*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250311*0 + 3*493*FLEN/8, x4, x1, x2)

inst_83438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffe00000000000; valaddr_reg:x3; val_offset:250314*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250314*0 + 3*494*FLEN/8, x4, x1, x2)

inst_83439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fff00000000000; valaddr_reg:x3; val_offset:250317*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250317*0 + 3*495*FLEN/8, x4, x1, x2)

inst_83440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fff80000000000; valaddr_reg:x3; val_offset:250320*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250320*0 + 3*496*FLEN/8, x4, x1, x2)

inst_83441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffc0000000000; valaddr_reg:x3; val_offset:250323*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250323*0 + 3*497*FLEN/8, x4, x1, x2)

inst_83442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffe0000000000; valaddr_reg:x3; val_offset:250326*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250326*0 + 3*498*FLEN/8, x4, x1, x2)

inst_83443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffff0000000000; valaddr_reg:x3; val_offset:250329*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250329*0 + 3*499*FLEN/8, x4, x1, x2)

inst_83444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffff8000000000; valaddr_reg:x3; val_offset:250332*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250332*0 + 3*500*FLEN/8, x4, x1, x2)

inst_83445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffc000000000; valaddr_reg:x3; val_offset:250335*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250335*0 + 3*501*FLEN/8, x4, x1, x2)

inst_83446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffe000000000; valaddr_reg:x3; val_offset:250338*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250338*0 + 3*502*FLEN/8, x4, x1, x2)

inst_83447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffff000000000; valaddr_reg:x3; val_offset:250341*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250341*0 + 3*503*FLEN/8, x4, x1, x2)

inst_83448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffff800000000; valaddr_reg:x3; val_offset:250344*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250344*0 + 3*504*FLEN/8, x4, x1, x2)

inst_83449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffc00000000; valaddr_reg:x3; val_offset:250347*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250347*0 + 3*505*FLEN/8, x4, x1, x2)

inst_83450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffe00000000; valaddr_reg:x3; val_offset:250350*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250350*0 + 3*506*FLEN/8, x4, x1, x2)

inst_83451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffff00000000; valaddr_reg:x3; val_offset:250353*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250353*0 + 3*507*FLEN/8, x4, x1, x2)

inst_83452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffff80000000; valaddr_reg:x3; val_offset:250356*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250356*0 + 3*508*FLEN/8, x4, x1, x2)

inst_83453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffc0000000; valaddr_reg:x3; val_offset:250359*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250359*0 + 3*509*FLEN/8, x4, x1, x2)

inst_83454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffe0000000; valaddr_reg:x3; val_offset:250362*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250362*0 + 3*510*FLEN/8, x4, x1, x2)

inst_83455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffff0000000; valaddr_reg:x3; val_offset:250365*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250365*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_83456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffff8000000; valaddr_reg:x3; val_offset:250368*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250368*0 + 3*512*FLEN/8, x4, x1, x2)

inst_83457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffc000000; valaddr_reg:x3; val_offset:250371*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250371*0 + 3*513*FLEN/8, x4, x1, x2)

inst_83458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffe000000; valaddr_reg:x3; val_offset:250374*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250374*0 + 3*514*FLEN/8, x4, x1, x2)

inst_83459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffff000000; valaddr_reg:x3; val_offset:250377*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250377*0 + 3*515*FLEN/8, x4, x1, x2)

inst_83460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffff800000; valaddr_reg:x3; val_offset:250380*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250380*0 + 3*516*FLEN/8, x4, x1, x2)

inst_83461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffc00000; valaddr_reg:x3; val_offset:250383*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250383*0 + 3*517*FLEN/8, x4, x1, x2)

inst_83462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffe00000; valaddr_reg:x3; val_offset:250386*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250386*0 + 3*518*FLEN/8, x4, x1, x2)

inst_83463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffff00000; valaddr_reg:x3; val_offset:250389*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250389*0 + 3*519*FLEN/8, x4, x1, x2)

inst_83464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffff80000; valaddr_reg:x3; val_offset:250392*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250392*0 + 3*520*FLEN/8, x4, x1, x2)

inst_83465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffc0000; valaddr_reg:x3; val_offset:250395*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250395*0 + 3*521*FLEN/8, x4, x1, x2)

inst_83466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffe0000; valaddr_reg:x3; val_offset:250398*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250398*0 + 3*522*FLEN/8, x4, x1, x2)

inst_83467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffff0000; valaddr_reg:x3; val_offset:250401*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250401*0 + 3*523*FLEN/8, x4, x1, x2)

inst_83468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffff8000; valaddr_reg:x3; val_offset:250404*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250404*0 + 3*524*FLEN/8, x4, x1, x2)

inst_83469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffffc000; valaddr_reg:x3; val_offset:250407*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250407*0 + 3*525*FLEN/8, x4, x1, x2)

inst_83470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffffe000; valaddr_reg:x3; val_offset:250410*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250410*0 + 3*526*FLEN/8, x4, x1, x2)

inst_83471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffff000; valaddr_reg:x3; val_offset:250413*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250413*0 + 3*527*FLEN/8, x4, x1, x2)

inst_83472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffff800; valaddr_reg:x3; val_offset:250416*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250416*0 + 3*528*FLEN/8, x4, x1, x2)

inst_83473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffffc00; valaddr_reg:x3; val_offset:250419*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250419*0 + 3*529*FLEN/8, x4, x1, x2)

inst_83474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffffe00; valaddr_reg:x3; val_offset:250422*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250422*0 + 3*530*FLEN/8, x4, x1, x2)

inst_83475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffffff00; valaddr_reg:x3; val_offset:250425*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250425*0 + 3*531*FLEN/8, x4, x1, x2)

inst_83476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffffff80; valaddr_reg:x3; val_offset:250428*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250428*0 + 3*532*FLEN/8, x4, x1, x2)

inst_83477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffffffc0; valaddr_reg:x3; val_offset:250431*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250431*0 + 3*533*FLEN/8, x4, x1, x2)

inst_83478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffffffe0; valaddr_reg:x3; val_offset:250434*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250434*0 + 3*534*FLEN/8, x4, x1, x2)

inst_83479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffffff0; valaddr_reg:x3; val_offset:250437*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250437*0 + 3*535*FLEN/8, x4, x1, x2)

inst_83480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffffff8; valaddr_reg:x3; val_offset:250440*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250440*0 + 3*536*FLEN/8, x4, x1, x2)

inst_83481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffffffc; valaddr_reg:x3; val_offset:250443*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250443*0 + 3*537*FLEN/8, x4, x1, x2)

inst_83482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81fffffffffffffe; valaddr_reg:x3; val_offset:250446*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250446*0 + 3*538*FLEN/8, x4, x1, x2)

inst_83483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa140f3f3223ae and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa140f3f3223ae; op2val:0x8000;
op3val:0x81ffffffffffffff; valaddr_reg:x3; val_offset:250449*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250449*0 + 3*539*FLEN/8, x4, x1, x2)

inst_83484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:250452*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250452*0 + 3*540*FLEN/8, x4, x1, x2)

inst_83485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:250455*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250455*0 + 3*541*FLEN/8, x4, x1, x2)

inst_83486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:250458*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250458*0 + 3*542*FLEN/8, x4, x1, x2)

inst_83487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:250461*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250461*0 + 3*543*FLEN/8, x4, x1, x2)

inst_83488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:250464*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250464*0 + 3*544*FLEN/8, x4, x1, x2)

inst_83489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:250467*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250467*0 + 3*545*FLEN/8, x4, x1, x2)

inst_83490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:250470*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250470*0 + 3*546*FLEN/8, x4, x1, x2)

inst_83491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:250473*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250473*0 + 3*547*FLEN/8, x4, x1, x2)

inst_83492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:250476*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250476*0 + 3*548*FLEN/8, x4, x1, x2)

inst_83493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:250479*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250479*0 + 3*549*FLEN/8, x4, x1, x2)

inst_83494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:250482*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250482*0 + 3*550*FLEN/8, x4, x1, x2)

inst_83495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:250485*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250485*0 + 3*551*FLEN/8, x4, x1, x2)

inst_83496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:250488*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250488*0 + 3*552*FLEN/8, x4, x1, x2)

inst_83497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:250491*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250491*0 + 3*553*FLEN/8, x4, x1, x2)

inst_83498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:250494*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250494*0 + 3*554*FLEN/8, x4, x1, x2)

inst_83499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:250497*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250497*0 + 3*555*FLEN/8, x4, x1, x2)

inst_83500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:250500*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250500*0 + 3*556*FLEN/8, x4, x1, x2)

inst_83501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:250503*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250503*0 + 3*557*FLEN/8, x4, x1, x2)

inst_83502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:250506*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250506*0 + 3*558*FLEN/8, x4, x1, x2)

inst_83503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:250509*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250509*0 + 3*559*FLEN/8, x4, x1, x2)

inst_83504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:250512*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250512*0 + 3*560*FLEN/8, x4, x1, x2)

inst_83505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:250515*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250515*0 + 3*561*FLEN/8, x4, x1, x2)

inst_83506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000000000; valaddr_reg:x3; val_offset:250518*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250518*0 + 3*562*FLEN/8, x4, x1, x2)

inst_83507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000000001; valaddr_reg:x3; val_offset:250521*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250521*0 + 3*563*FLEN/8, x4, x1, x2)

inst_83508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000000003; valaddr_reg:x3; val_offset:250524*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250524*0 + 3*564*FLEN/8, x4, x1, x2)

inst_83509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000000007; valaddr_reg:x3; val_offset:250527*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250527*0 + 3*565*FLEN/8, x4, x1, x2)

inst_83510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000000000f; valaddr_reg:x3; val_offset:250530*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250530*0 + 3*566*FLEN/8, x4, x1, x2)

inst_83511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000000001f; valaddr_reg:x3; val_offset:250533*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250533*0 + 3*567*FLEN/8, x4, x1, x2)

inst_83512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000000003f; valaddr_reg:x3; val_offset:250536*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250536*0 + 3*568*FLEN/8, x4, x1, x2)

inst_83513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000000007f; valaddr_reg:x3; val_offset:250539*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250539*0 + 3*569*FLEN/8, x4, x1, x2)

inst_83514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000000000ff; valaddr_reg:x3; val_offset:250542*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250542*0 + 3*570*FLEN/8, x4, x1, x2)

inst_83515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000000001ff; valaddr_reg:x3; val_offset:250545*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250545*0 + 3*571*FLEN/8, x4, x1, x2)

inst_83516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000000003ff; valaddr_reg:x3; val_offset:250548*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250548*0 + 3*572*FLEN/8, x4, x1, x2)

inst_83517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000000007ff; valaddr_reg:x3; val_offset:250551*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250551*0 + 3*573*FLEN/8, x4, x1, x2)

inst_83518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000000fff; valaddr_reg:x3; val_offset:250554*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250554*0 + 3*574*FLEN/8, x4, x1, x2)

inst_83519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000001fff; valaddr_reg:x3; val_offset:250557*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250557*0 + 3*575*FLEN/8, x4, x1, x2)

inst_83520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000003fff; valaddr_reg:x3; val_offset:250560*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250560*0 + 3*576*FLEN/8, x4, x1, x2)

inst_83521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000007fff; valaddr_reg:x3; val_offset:250563*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250563*0 + 3*577*FLEN/8, x4, x1, x2)

inst_83522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000000ffff; valaddr_reg:x3; val_offset:250566*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250566*0 + 3*578*FLEN/8, x4, x1, x2)

inst_83523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000001ffff; valaddr_reg:x3; val_offset:250569*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250569*0 + 3*579*FLEN/8, x4, x1, x2)

inst_83524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000003ffff; valaddr_reg:x3; val_offset:250572*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250572*0 + 3*580*FLEN/8, x4, x1, x2)

inst_83525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000007ffff; valaddr_reg:x3; val_offset:250575*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250575*0 + 3*581*FLEN/8, x4, x1, x2)

inst_83526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000000fffff; valaddr_reg:x3; val_offset:250578*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250578*0 + 3*582*FLEN/8, x4, x1, x2)

inst_83527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000001fffff; valaddr_reg:x3; val_offset:250581*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250581*0 + 3*583*FLEN/8, x4, x1, x2)

inst_83528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000003fffff; valaddr_reg:x3; val_offset:250584*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250584*0 + 3*584*FLEN/8, x4, x1, x2)

inst_83529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000007fffff; valaddr_reg:x3; val_offset:250587*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250587*0 + 3*585*FLEN/8, x4, x1, x2)

inst_83530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000000ffffff; valaddr_reg:x3; val_offset:250590*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250590*0 + 3*586*FLEN/8, x4, x1, x2)

inst_83531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000001ffffff; valaddr_reg:x3; val_offset:250593*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250593*0 + 3*587*FLEN/8, x4, x1, x2)

inst_83532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000003ffffff; valaddr_reg:x3; val_offset:250596*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250596*0 + 3*588*FLEN/8, x4, x1, x2)

inst_83533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000007ffffff; valaddr_reg:x3; val_offset:250599*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250599*0 + 3*589*FLEN/8, x4, x1, x2)

inst_83534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000000fffffff; valaddr_reg:x3; val_offset:250602*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250602*0 + 3*590*FLEN/8, x4, x1, x2)

inst_83535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000001fffffff; valaddr_reg:x3; val_offset:250605*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250605*0 + 3*591*FLEN/8, x4, x1, x2)

inst_83536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000003fffffff; valaddr_reg:x3; val_offset:250608*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250608*0 + 3*592*FLEN/8, x4, x1, x2)

inst_83537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000007fffffff; valaddr_reg:x3; val_offset:250611*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250611*0 + 3*593*FLEN/8, x4, x1, x2)

inst_83538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200000ffffffff; valaddr_reg:x3; val_offset:250614*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250614*0 + 3*594*FLEN/8, x4, x1, x2)

inst_83539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200001ffffffff; valaddr_reg:x3; val_offset:250617*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250617*0 + 3*595*FLEN/8, x4, x1, x2)

inst_83540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200003ffffffff; valaddr_reg:x3; val_offset:250620*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250620*0 + 3*596*FLEN/8, x4, x1, x2)

inst_83541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200007ffffffff; valaddr_reg:x3; val_offset:250623*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250623*0 + 3*597*FLEN/8, x4, x1, x2)

inst_83542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320000fffffffff; valaddr_reg:x3; val_offset:250626*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250626*0 + 3*598*FLEN/8, x4, x1, x2)

inst_83543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320001fffffffff; valaddr_reg:x3; val_offset:250629*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250629*0 + 3*599*FLEN/8, x4, x1, x2)

inst_83544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320003fffffffff; valaddr_reg:x3; val_offset:250632*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250632*0 + 3*600*FLEN/8, x4, x1, x2)

inst_83545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320007fffffffff; valaddr_reg:x3; val_offset:250635*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250635*0 + 3*601*FLEN/8, x4, x1, x2)

inst_83546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832000ffffffffff; valaddr_reg:x3; val_offset:250638*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250638*0 + 3*602*FLEN/8, x4, x1, x2)

inst_83547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832001ffffffffff; valaddr_reg:x3; val_offset:250641*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250641*0 + 3*603*FLEN/8, x4, x1, x2)

inst_83548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832003ffffffffff; valaddr_reg:x3; val_offset:250644*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250644*0 + 3*604*FLEN/8, x4, x1, x2)

inst_83549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832007ffffffffff; valaddr_reg:x3; val_offset:250647*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250647*0 + 3*605*FLEN/8, x4, x1, x2)

inst_83550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83200fffffffffff; valaddr_reg:x3; val_offset:250650*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250650*0 + 3*606*FLEN/8, x4, x1, x2)

inst_83551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83201fffffffffff; valaddr_reg:x3; val_offset:250653*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250653*0 + 3*607*FLEN/8, x4, x1, x2)

inst_83552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83203fffffffffff; valaddr_reg:x3; val_offset:250656*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250656*0 + 3*608*FLEN/8, x4, x1, x2)

inst_83553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x83207fffffffffff; valaddr_reg:x3; val_offset:250659*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250659*0 + 3*609*FLEN/8, x4, x1, x2)

inst_83554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8320ffffffffffff; valaddr_reg:x3; val_offset:250662*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250662*0 + 3*610*FLEN/8, x4, x1, x2)

inst_83555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8321ffffffffffff; valaddr_reg:x3; val_offset:250665*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250665*0 + 3*611*FLEN/8, x4, x1, x2)

inst_83556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8323ffffffffffff; valaddr_reg:x3; val_offset:250668*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250668*0 + 3*612*FLEN/8, x4, x1, x2)

inst_83557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8327ffffffffffff; valaddr_reg:x3; val_offset:250671*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250671*0 + 3*613*FLEN/8, x4, x1, x2)

inst_83558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x8328000000000000; valaddr_reg:x3; val_offset:250674*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250674*0 + 3*614*FLEN/8, x4, x1, x2)

inst_83559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832c000000000000; valaddr_reg:x3; val_offset:250677*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250677*0 + 3*615*FLEN/8, x4, x1, x2)

inst_83560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832e000000000000; valaddr_reg:x3; val_offset:250680*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250680*0 + 3*616*FLEN/8, x4, x1, x2)

inst_83561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832f000000000000; valaddr_reg:x3; val_offset:250683*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250683*0 + 3*617*FLEN/8, x4, x1, x2)

inst_83562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832f800000000000; valaddr_reg:x3; val_offset:250686*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250686*0 + 3*618*FLEN/8, x4, x1, x2)

inst_83563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fc00000000000; valaddr_reg:x3; val_offset:250689*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250689*0 + 3*619*FLEN/8, x4, x1, x2)

inst_83564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fe00000000000; valaddr_reg:x3; val_offset:250692*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250692*0 + 3*620*FLEN/8, x4, x1, x2)

inst_83565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ff00000000000; valaddr_reg:x3; val_offset:250695*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250695*0 + 3*621*FLEN/8, x4, x1, x2)

inst_83566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ff80000000000; valaddr_reg:x3; val_offset:250698*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250698*0 + 3*622*FLEN/8, x4, x1, x2)

inst_83567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffc0000000000; valaddr_reg:x3; val_offset:250701*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250701*0 + 3*623*FLEN/8, x4, x1, x2)

inst_83568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffe0000000000; valaddr_reg:x3; val_offset:250704*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250704*0 + 3*624*FLEN/8, x4, x1, x2)

inst_83569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fff0000000000; valaddr_reg:x3; val_offset:250707*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250707*0 + 3*625*FLEN/8, x4, x1, x2)

inst_83570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fff8000000000; valaddr_reg:x3; val_offset:250710*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250710*0 + 3*626*FLEN/8, x4, x1, x2)

inst_83571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffc000000000; valaddr_reg:x3; val_offset:250713*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250713*0 + 3*627*FLEN/8, x4, x1, x2)

inst_83572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffe000000000; valaddr_reg:x3; val_offset:250716*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250716*0 + 3*628*FLEN/8, x4, x1, x2)

inst_83573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffff000000000; valaddr_reg:x3; val_offset:250719*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250719*0 + 3*629*FLEN/8, x4, x1, x2)

inst_83574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffff800000000; valaddr_reg:x3; val_offset:250722*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250722*0 + 3*630*FLEN/8, x4, x1, x2)

inst_83575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffc00000000; valaddr_reg:x3; val_offset:250725*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250725*0 + 3*631*FLEN/8, x4, x1, x2)

inst_83576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffe00000000; valaddr_reg:x3; val_offset:250728*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250728*0 + 3*632*FLEN/8, x4, x1, x2)

inst_83577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffff00000000; valaddr_reg:x3; val_offset:250731*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250731*0 + 3*633*FLEN/8, x4, x1, x2)

inst_83578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffff80000000; valaddr_reg:x3; val_offset:250734*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250734*0 + 3*634*FLEN/8, x4, x1, x2)

inst_83579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffc0000000; valaddr_reg:x3; val_offset:250737*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250737*0 + 3*635*FLEN/8, x4, x1, x2)

inst_83580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffe0000000; valaddr_reg:x3; val_offset:250740*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250740*0 + 3*636*FLEN/8, x4, x1, x2)

inst_83581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffff0000000; valaddr_reg:x3; val_offset:250743*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250743*0 + 3*637*FLEN/8, x4, x1, x2)

inst_83582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffff8000000; valaddr_reg:x3; val_offset:250746*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250746*0 + 3*638*FLEN/8, x4, x1, x2)

inst_83583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffc000000; valaddr_reg:x3; val_offset:250749*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250749*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_83584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffe000000; valaddr_reg:x3; val_offset:250752*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250752*0 + 3*640*FLEN/8, x4, x1, x2)

inst_83585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffff000000; valaddr_reg:x3; val_offset:250755*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250755*0 + 3*641*FLEN/8, x4, x1, x2)

inst_83586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffff800000; valaddr_reg:x3; val_offset:250758*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250758*0 + 3*642*FLEN/8, x4, x1, x2)

inst_83587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffc00000; valaddr_reg:x3; val_offset:250761*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250761*0 + 3*643*FLEN/8, x4, x1, x2)

inst_83588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffe00000; valaddr_reg:x3; val_offset:250764*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250764*0 + 3*644*FLEN/8, x4, x1, x2)

inst_83589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffff00000; valaddr_reg:x3; val_offset:250767*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250767*0 + 3*645*FLEN/8, x4, x1, x2)

inst_83590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffff80000; valaddr_reg:x3; val_offset:250770*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250770*0 + 3*646*FLEN/8, x4, x1, x2)

inst_83591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffc0000; valaddr_reg:x3; val_offset:250773*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250773*0 + 3*647*FLEN/8, x4, x1, x2)

inst_83592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffe0000; valaddr_reg:x3; val_offset:250776*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250776*0 + 3*648*FLEN/8, x4, x1, x2)

inst_83593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffff0000; valaddr_reg:x3; val_offset:250779*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250779*0 + 3*649*FLEN/8, x4, x1, x2)

inst_83594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffff8000; valaddr_reg:x3; val_offset:250782*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250782*0 + 3*650*FLEN/8, x4, x1, x2)

inst_83595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffffc000; valaddr_reg:x3; val_offset:250785*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250785*0 + 3*651*FLEN/8, x4, x1, x2)

inst_83596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffffe000; valaddr_reg:x3; val_offset:250788*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250788*0 + 3*652*FLEN/8, x4, x1, x2)

inst_83597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffff000; valaddr_reg:x3; val_offset:250791*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250791*0 + 3*653*FLEN/8, x4, x1, x2)

inst_83598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffff800; valaddr_reg:x3; val_offset:250794*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250794*0 + 3*654*FLEN/8, x4, x1, x2)

inst_83599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffffc00; valaddr_reg:x3; val_offset:250797*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250797*0 + 3*655*FLEN/8, x4, x1, x2)

inst_83600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffffe00; valaddr_reg:x3; val_offset:250800*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250800*0 + 3*656*FLEN/8, x4, x1, x2)

inst_83601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffffff00; valaddr_reg:x3; val_offset:250803*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250803*0 + 3*657*FLEN/8, x4, x1, x2)

inst_83602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffffff80; valaddr_reg:x3; val_offset:250806*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250806*0 + 3*658*FLEN/8, x4, x1, x2)

inst_83603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffffffc0; valaddr_reg:x3; val_offset:250809*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250809*0 + 3*659*FLEN/8, x4, x1, x2)

inst_83604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffffffe0; valaddr_reg:x3; val_offset:250812*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250812*0 + 3*660*FLEN/8, x4, x1, x2)

inst_83605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffffff0; valaddr_reg:x3; val_offset:250815*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250815*0 + 3*661*FLEN/8, x4, x1, x2)

inst_83606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffffff8; valaddr_reg:x3; val_offset:250818*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250818*0 + 3*662*FLEN/8, x4, x1, x2)

inst_83607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffffffc; valaddr_reg:x3; val_offset:250821*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250821*0 + 3*663*FLEN/8, x4, x1, x2)

inst_83608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832ffffffffffffe; valaddr_reg:x3; val_offset:250824*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250824*0 + 3*664*FLEN/8, x4, x1, x2)

inst_83609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa19a2978eee8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa19a2978eee8f; op2val:0x8000;
op3val:0x832fffffffffffff; valaddr_reg:x3; val_offset:250827*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250827*0 + 3*665*FLEN/8, x4, x1, x2)

inst_83610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:250830*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250830*0 + 3*666*FLEN/8, x4, x1, x2)

inst_83611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:250833*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250833*0 + 3*667*FLEN/8, x4, x1, x2)

inst_83612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:250836*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250836*0 + 3*668*FLEN/8, x4, x1, x2)

inst_83613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:250839*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250839*0 + 3*669*FLEN/8, x4, x1, x2)

inst_83614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:250842*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250842*0 + 3*670*FLEN/8, x4, x1, x2)

inst_83615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:250845*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250845*0 + 3*671*FLEN/8, x4, x1, x2)

inst_83616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:250848*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250848*0 + 3*672*FLEN/8, x4, x1, x2)

inst_83617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:250851*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250851*0 + 3*673*FLEN/8, x4, x1, x2)

inst_83618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:250854*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250854*0 + 3*674*FLEN/8, x4, x1, x2)

inst_83619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:250857*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250857*0 + 3*675*FLEN/8, x4, x1, x2)

inst_83620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:250860*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250860*0 + 3*676*FLEN/8, x4, x1, x2)

inst_83621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:250863*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250863*0 + 3*677*FLEN/8, x4, x1, x2)

inst_83622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:250866*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250866*0 + 3*678*FLEN/8, x4, x1, x2)

inst_83623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:250869*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250869*0 + 3*679*FLEN/8, x4, x1, x2)

inst_83624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:250872*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250872*0 + 3*680*FLEN/8, x4, x1, x2)

inst_83625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:250875*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250875*0 + 3*681*FLEN/8, x4, x1, x2)

inst_83626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:250878*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250878*0 + 3*682*FLEN/8, x4, x1, x2)

inst_83627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:250881*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250881*0 + 3*683*FLEN/8, x4, x1, x2)

inst_83628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:250884*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250884*0 + 3*684*FLEN/8, x4, x1, x2)

inst_83629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:250887*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250887*0 + 3*685*FLEN/8, x4, x1, x2)

inst_83630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:250890*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250890*0 + 3*686*FLEN/8, x4, x1, x2)

inst_83631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:250893*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250893*0 + 3*687*FLEN/8, x4, x1, x2)

inst_83632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000000000; valaddr_reg:x3; val_offset:250896*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250896*0 + 3*688*FLEN/8, x4, x1, x2)

inst_83633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000000001; valaddr_reg:x3; val_offset:250899*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250899*0 + 3*689*FLEN/8, x4, x1, x2)

inst_83634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000000003; valaddr_reg:x3; val_offset:250902*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250902*0 + 3*690*FLEN/8, x4, x1, x2)

inst_83635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000000007; valaddr_reg:x3; val_offset:250905*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250905*0 + 3*691*FLEN/8, x4, x1, x2)

inst_83636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000000000f; valaddr_reg:x3; val_offset:250908*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250908*0 + 3*692*FLEN/8, x4, x1, x2)

inst_83637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000000001f; valaddr_reg:x3; val_offset:250911*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250911*0 + 3*693*FLEN/8, x4, x1, x2)

inst_83638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000000003f; valaddr_reg:x3; val_offset:250914*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250914*0 + 3*694*FLEN/8, x4, x1, x2)

inst_83639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000000007f; valaddr_reg:x3; val_offset:250917*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250917*0 + 3*695*FLEN/8, x4, x1, x2)

inst_83640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000000000ff; valaddr_reg:x3; val_offset:250920*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250920*0 + 3*696*FLEN/8, x4, x1, x2)

inst_83641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000000001ff; valaddr_reg:x3; val_offset:250923*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250923*0 + 3*697*FLEN/8, x4, x1, x2)

inst_83642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000000003ff; valaddr_reg:x3; val_offset:250926*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250926*0 + 3*698*FLEN/8, x4, x1, x2)

inst_83643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000000007ff; valaddr_reg:x3; val_offset:250929*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250929*0 + 3*699*FLEN/8, x4, x1, x2)

inst_83644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000000fff; valaddr_reg:x3; val_offset:250932*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250932*0 + 3*700*FLEN/8, x4, x1, x2)

inst_83645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000001fff; valaddr_reg:x3; val_offset:250935*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250935*0 + 3*701*FLEN/8, x4, x1, x2)

inst_83646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000003fff; valaddr_reg:x3; val_offset:250938*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250938*0 + 3*702*FLEN/8, x4, x1, x2)

inst_83647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000007fff; valaddr_reg:x3; val_offset:250941*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250941*0 + 3*703*FLEN/8, x4, x1, x2)

inst_83648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000000ffff; valaddr_reg:x3; val_offset:250944*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250944*0 + 3*704*FLEN/8, x4, x1, x2)

inst_83649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000001ffff; valaddr_reg:x3; val_offset:250947*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250947*0 + 3*705*FLEN/8, x4, x1, x2)

inst_83650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000003ffff; valaddr_reg:x3; val_offset:250950*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250950*0 + 3*706*FLEN/8, x4, x1, x2)

inst_83651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000007ffff; valaddr_reg:x3; val_offset:250953*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250953*0 + 3*707*FLEN/8, x4, x1, x2)

inst_83652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000000fffff; valaddr_reg:x3; val_offset:250956*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250956*0 + 3*708*FLEN/8, x4, x1, x2)

inst_83653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000001fffff; valaddr_reg:x3; val_offset:250959*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250959*0 + 3*709*FLEN/8, x4, x1, x2)

inst_83654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000003fffff; valaddr_reg:x3; val_offset:250962*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250962*0 + 3*710*FLEN/8, x4, x1, x2)

inst_83655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000007fffff; valaddr_reg:x3; val_offset:250965*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250965*0 + 3*711*FLEN/8, x4, x1, x2)

inst_83656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000000ffffff; valaddr_reg:x3; val_offset:250968*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250968*0 + 3*712*FLEN/8, x4, x1, x2)

inst_83657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000001ffffff; valaddr_reg:x3; val_offset:250971*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250971*0 + 3*713*FLEN/8, x4, x1, x2)

inst_83658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000003ffffff; valaddr_reg:x3; val_offset:250974*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250974*0 + 3*714*FLEN/8, x4, x1, x2)

inst_83659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000007ffffff; valaddr_reg:x3; val_offset:250977*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250977*0 + 3*715*FLEN/8, x4, x1, x2)

inst_83660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000000fffffff; valaddr_reg:x3; val_offset:250980*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250980*0 + 3*716*FLEN/8, x4, x1, x2)

inst_83661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000001fffffff; valaddr_reg:x3; val_offset:250983*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250983*0 + 3*717*FLEN/8, x4, x1, x2)

inst_83662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000003fffffff; valaddr_reg:x3; val_offset:250986*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250986*0 + 3*718*FLEN/8, x4, x1, x2)

inst_83663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000007fffffff; valaddr_reg:x3; val_offset:250989*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250989*0 + 3*719*FLEN/8, x4, x1, x2)

inst_83664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100000ffffffff; valaddr_reg:x3; val_offset:250992*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250992*0 + 3*720*FLEN/8, x4, x1, x2)

inst_83665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100001ffffffff; valaddr_reg:x3; val_offset:250995*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250995*0 + 3*721*FLEN/8, x4, x1, x2)

inst_83666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100003ffffffff; valaddr_reg:x3; val_offset:250998*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 250998*0 + 3*722*FLEN/8, x4, x1, x2)

inst_83667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100007ffffffff; valaddr_reg:x3; val_offset:251001*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251001*0 + 3*723*FLEN/8, x4, x1, x2)

inst_83668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310000fffffffff; valaddr_reg:x3; val_offset:251004*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251004*0 + 3*724*FLEN/8, x4, x1, x2)

inst_83669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310001fffffffff; valaddr_reg:x3; val_offset:251007*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251007*0 + 3*725*FLEN/8, x4, x1, x2)

inst_83670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310003fffffffff; valaddr_reg:x3; val_offset:251010*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251010*0 + 3*726*FLEN/8, x4, x1, x2)

inst_83671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310007fffffffff; valaddr_reg:x3; val_offset:251013*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251013*0 + 3*727*FLEN/8, x4, x1, x2)

inst_83672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831000ffffffffff; valaddr_reg:x3; val_offset:251016*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251016*0 + 3*728*FLEN/8, x4, x1, x2)

inst_83673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831001ffffffffff; valaddr_reg:x3; val_offset:251019*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251019*0 + 3*729*FLEN/8, x4, x1, x2)

inst_83674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831003ffffffffff; valaddr_reg:x3; val_offset:251022*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251022*0 + 3*730*FLEN/8, x4, x1, x2)

inst_83675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831007ffffffffff; valaddr_reg:x3; val_offset:251025*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251025*0 + 3*731*FLEN/8, x4, x1, x2)

inst_83676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83100fffffffffff; valaddr_reg:x3; val_offset:251028*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251028*0 + 3*732*FLEN/8, x4, x1, x2)

inst_83677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83101fffffffffff; valaddr_reg:x3; val_offset:251031*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251031*0 + 3*733*FLEN/8, x4, x1, x2)

inst_83678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83103fffffffffff; valaddr_reg:x3; val_offset:251034*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251034*0 + 3*734*FLEN/8, x4, x1, x2)

inst_83679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x83107fffffffffff; valaddr_reg:x3; val_offset:251037*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251037*0 + 3*735*FLEN/8, x4, x1, x2)

inst_83680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8310ffffffffffff; valaddr_reg:x3; val_offset:251040*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251040*0 + 3*736*FLEN/8, x4, x1, x2)

inst_83681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8311ffffffffffff; valaddr_reg:x3; val_offset:251043*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251043*0 + 3*737*FLEN/8, x4, x1, x2)

inst_83682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8313ffffffffffff; valaddr_reg:x3; val_offset:251046*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251046*0 + 3*738*FLEN/8, x4, x1, x2)

inst_83683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8317ffffffffffff; valaddr_reg:x3; val_offset:251049*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251049*0 + 3*739*FLEN/8, x4, x1, x2)

inst_83684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x8318000000000000; valaddr_reg:x3; val_offset:251052*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251052*0 + 3*740*FLEN/8, x4, x1, x2)

inst_83685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831c000000000000; valaddr_reg:x3; val_offset:251055*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251055*0 + 3*741*FLEN/8, x4, x1, x2)

inst_83686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831e000000000000; valaddr_reg:x3; val_offset:251058*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251058*0 + 3*742*FLEN/8, x4, x1, x2)

inst_83687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831f000000000000; valaddr_reg:x3; val_offset:251061*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251061*0 + 3*743*FLEN/8, x4, x1, x2)

inst_83688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831f800000000000; valaddr_reg:x3; val_offset:251064*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251064*0 + 3*744*FLEN/8, x4, x1, x2)

inst_83689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fc00000000000; valaddr_reg:x3; val_offset:251067*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251067*0 + 3*745*FLEN/8, x4, x1, x2)

inst_83690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fe00000000000; valaddr_reg:x3; val_offset:251070*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251070*0 + 3*746*FLEN/8, x4, x1, x2)

inst_83691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ff00000000000; valaddr_reg:x3; val_offset:251073*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251073*0 + 3*747*FLEN/8, x4, x1, x2)

inst_83692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ff80000000000; valaddr_reg:x3; val_offset:251076*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251076*0 + 3*748*FLEN/8, x4, x1, x2)

inst_83693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffc0000000000; valaddr_reg:x3; val_offset:251079*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251079*0 + 3*749*FLEN/8, x4, x1, x2)

inst_83694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffe0000000000; valaddr_reg:x3; val_offset:251082*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251082*0 + 3*750*FLEN/8, x4, x1, x2)

inst_83695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fff0000000000; valaddr_reg:x3; val_offset:251085*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251085*0 + 3*751*FLEN/8, x4, x1, x2)

inst_83696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fff8000000000; valaddr_reg:x3; val_offset:251088*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251088*0 + 3*752*FLEN/8, x4, x1, x2)

inst_83697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fffc000000000; valaddr_reg:x3; val_offset:251091*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251091*0 + 3*753*FLEN/8, x4, x1, x2)

inst_83698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fffe000000000; valaddr_reg:x3; val_offset:251094*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251094*0 + 3*754*FLEN/8, x4, x1, x2)

inst_83699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffff000000000; valaddr_reg:x3; val_offset:251097*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251097*0 + 3*755*FLEN/8, x4, x1, x2)

inst_83700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:251100*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251100*0 + 3*756*FLEN/8, x4, x1, x2)

inst_83701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:251103*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251103*0 + 3*757*FLEN/8, x4, x1, x2)

inst_83702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:251106*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251106*0 + 3*758*FLEN/8, x4, x1, x2)

inst_83703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:251109*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251109*0 + 3*759*FLEN/8, x4, x1, x2)

inst_83704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:251112*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251112*0 + 3*760*FLEN/8, x4, x1, x2)

inst_83705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:251115*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251115*0 + 3*761*FLEN/8, x4, x1, x2)

inst_83706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:251118*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251118*0 + 3*762*FLEN/8, x4, x1, x2)

inst_83707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:251121*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251121*0 + 3*763*FLEN/8, x4, x1, x2)

inst_83708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:251124*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251124*0 + 3*764*FLEN/8, x4, x1, x2)

inst_83709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:251127*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251127*0 + 3*765*FLEN/8, x4, x1, x2)

inst_83710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:251130*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251130*0 + 3*766*FLEN/8, x4, x1, x2)

inst_83711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa204143b94af5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faa204143b94af5; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:251133*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 251133*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890000631889920,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890017811759104,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890026401693696,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890030696660992,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890032844144640,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890033917886464,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034454757376,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034723192832,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034857410560,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034924519424,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034958073856,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034974851072,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034983239680,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034987433984,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034989531136,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034990579712,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991104000,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991366144,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991497216,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991562752,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991595520,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991611904,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991620096,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991624192,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991626240,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627264,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991627776,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628032,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628160,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628224,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628256,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628272,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628280,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628284,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628286,64,FLEN)
NAN_BOXED(6893287543541570689,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9245890034991628287,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408704,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408705,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408707,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408711,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408719,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408735,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408767,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408831,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166408959,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409215,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166409727,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166410751,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166412799,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166416895,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166425087,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166441471,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166474239,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166539775,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166670847,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627166932991,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627167457279,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627168505855,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627170603007,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627174797311,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627183185919,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627199963135,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627233517567,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627300626431,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627434844159,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465627703279615,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465628240150527,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465629313892351,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465631461375999,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465635756343295,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465644346277887,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465661526147071,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465695885885439,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465764605362175,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340465902044315647,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466176922222591,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340466726678036479,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340467826189664255,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340470025212919807,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340474423259430911,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340483219352453119,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340500811538497535,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340535995910586367,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340606364654764031,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9340747102143119359,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341028577119830015,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9341591527073251327,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093951,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9342717426980093952,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9343843326886936576,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344406276840357888,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344687751817068544,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344828489305423872,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344898858049601536,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344934042421690368,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344951634607734784,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344960430700756992,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344964828747268096,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344967027770523648,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968127282151424,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968677037965312,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344968951915872256,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969089354825728,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969158074302464,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969192434040832,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969209613910016,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969218203844608,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969222498811904,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969224646295552,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969225720037376,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226256908288,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226525343744,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226659561472,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226726670336,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226760224768,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226777001984,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226785390592,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226789584896,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226791682048,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226792730624,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793254912,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793517056,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793648128,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793713664,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793746432,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793762816,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793771008,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793775104,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793777152,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778176,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778688,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793778944,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779072,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779136,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779168,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779184,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779192,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779196,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779198,64,FLEN)
NAN_BOXED(6893291914561608181,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9344969226793779199,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417152,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417153,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417155,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417159,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417167,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417183,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417215,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417279,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417407,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530417663,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530418175,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530419199,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530421247,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530425343,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530433535,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530449919,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530482687,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530548223,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530679295,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841530941439,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841531465727,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841532514303,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841534611455,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841538805759,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841547194367,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841563971583,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841597526015,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841664634879,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462841798852607,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462842067288063,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462842604158975,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462843677900799,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462845825384447,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462850120351743,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462858710286335,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462875890155519,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462910249893887,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332462978969370623,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332463116408324095,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332463391286231039,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332463941042044927,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332465040553672703,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332467239576928255,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332471637623439359,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332480433716461567,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332498025902505983,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332533210274594815,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332603579018772479,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4332744316507127807,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4333025791483838463,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4333588741437259775,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4334714641344102399,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4334714641344102400,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4335840541250945024,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336403491204366336,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336684966181076992,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336825703669432320,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336896072413609984,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336931256785698816,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336948848971743232,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336957645064765440,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336962043111276544,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336964242134532096,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336965341646159872,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336965891401973760,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966166279880704,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966303718834176,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966372438310912,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966406798049280,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966423977918464,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966432567853056,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966436862820352,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966439010304000,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966440084045824,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966440620916736,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966440889352192,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441023569920,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441090678784,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441124233216,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441141010432,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441149399040,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441153593344,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441155690496,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441156739072,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157263360,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157525504,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157656576,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157722112,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157754880,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157771264,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157779456,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157783552,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157785600,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157786624,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787136,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787392,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787520,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787584,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787616,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787632,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787640,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787644,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787646,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4336966441157787647,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893309921403780392,64,FLEN)
NAN_BOXED(2320402400242482725,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520192,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520193,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520195,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520199,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520207,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520223,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520255,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520319,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520447,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048520703,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048521215,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048522239,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048524287,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048528383,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048536575,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048552959,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048585727,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048651263,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426048782335,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049044479,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426049568767,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426050617343,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426052714495,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426056908799,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426065297407,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426082074623,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426115629055,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426182737919,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426316955647,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976426585391103,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976427122262015,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976428196003839,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976430343487487,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976434638454783,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976443228389375,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976460408258559,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976494767996927,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976563487473663,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976700926427135,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353976975804334079,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353977525560147967,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353978625071775743,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353980824095031295,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353985222141542399,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9353994018234564607,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354011610420609023,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354046794792697855,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354117163536875519,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354257901025230847,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9354539376001941503,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9355102325955362815,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205439,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9356228225862205440,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357354125769048064,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9357917075722469376,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358198550699180032,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358339288187535360,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358409656931713024,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358444841303801856,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358462433489846272,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358471229582868480,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358475627629379584,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358477826652635136,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358478926164262912,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479475920076800,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479750797983744,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479888236937216,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479956956413952,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358479991316152320,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480008496021504,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480017085956096,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480021380923392,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480023528407040,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480024602148864,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025139019776,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025407455232,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025541672960,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025608781824,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025642336256,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025659113472,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025667502080,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025671696384,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025673793536,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025674842112,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675366400,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675628544,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675759616,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675825152,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675857920,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675874304,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675882496,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675886592,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675888640,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675889664,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890176,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890432,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890560,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890624,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890656,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890672,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890680,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890684,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890686,64,FLEN)
NAN_BOXED(6893343892027299400,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9358480025675890687,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261184,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261185,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261187,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261191,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261199,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261215,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261247,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261311,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261439,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261695,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303262207,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303263231,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303265279,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303269375,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303277567,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303293951,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303326719,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303392255,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303523327,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303785471,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625304309759,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625305358335,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625307455487,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625311649791,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625320038399,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625336815615,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625370370047,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625437478911,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625571696639,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625840132095,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983626377003007,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983627450744831,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983629598228479,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983633893195775,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983642483130367,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983659662999551,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983694022737919,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983762742214655,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983900181168127,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984175059075071,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362984724814888959,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362985824326516735,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362988023349772287,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362992421396283391,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363001217489305599,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363018809675350015,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363053994047438847,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363124362791616511,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363265100279971839,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9363546575256682495,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9364109525210103807,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946431,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9365235425116946432,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366361325023789056,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9366924274977210368,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367205749953921024,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367346487442276352,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367416856186454016,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367452040558542848,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367469632744587264,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367478428837609472,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367482826884120576,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367485025907376128,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486125419003904,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486675174817792,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367486950052724736,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487087491678208,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487156211154944,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487190570893312,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487207750762496,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487216340697088,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487220635664384,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487222783148032,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487223856889856,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224393760768,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224662196224,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224796413952,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224863522816,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224897077248,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224913854464,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224922243072,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224926437376,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224928534528,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224929583104,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930107392,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930369536,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930500608,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930566144,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930598912,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930615296,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930623488,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930627584,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930629632,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930630656,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631168,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631424,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631552,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631616,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631648,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631664,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631672,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631676,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631678,64,FLEN)
NAN_BOXED(6893344235361280942,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631679,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300608,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300609,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300611,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300615,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300623,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300639,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300671,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300735,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300863,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301119,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301631,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223302655,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223304703,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223308799,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223316991,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223333375,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223366143,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223431679,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223562751,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223824895,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018224349183,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018225397759,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018227494911,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018231689215,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018240077823,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018256855039,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018290409471,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018357518335,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018491736063,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018760171519,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552019297042431,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552020370784255,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552022518267903,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552026813235199,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552035403169791,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552052583038975,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552086942777343,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552155662254079,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552293101207551,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552567979114495,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448553117734928383,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448554217246556159,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448556416269811711,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448560814316322815,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448569610409345023,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448587202595389439,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448622386967478271,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448692755711655935,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448833493200011263,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449114968176721919,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449677918130143231,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985855,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985856,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9451929717943828480,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452492667897249792,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452774142873960448,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452914880362315776,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452985249106493440,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453020433478582272,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453038025664626688,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453046821757648896,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453051219804160000,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453053418827415552,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453054518339043328,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055068094857216,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055342972764160,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055480411717632,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055549131194368,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055583490932736,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055600670801920,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055609260736512,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055613555703808,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055615703187456,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055616776929280,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617313800192,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617582235648,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617716453376,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617783562240,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617817116672,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617833893888,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617842282496,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617846476800,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617848573952,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617849622528,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850146816,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850408960,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850540032,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850605568,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850638336,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850654720,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850662912,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850667008,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850669056,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670080,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670592,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670848,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670976,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671040,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671072,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671088,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671096,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671100,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671102,64,FLEN)
NAN_BOXED(6893350365762088591,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671103,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930112,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930113,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930115,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930119,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930127,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930143,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930175,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930239,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930367,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930623,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595931135,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595932159,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595934207,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595938303,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595946495,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595962879,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595995647,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596061183,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596192255,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596454399,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596978687,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418598027263,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418600124415,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418604318719,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418612707327,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418629484543,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418663038975,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418730147839,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418864365567,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419132801023,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419669671935,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048420743413759,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048422890897407,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048427185864703,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048435775799295,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048452955668479,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048487315406847,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048556034883583,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048693473837055,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048968351743999,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444049518107557887,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444050617619185663,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444052816642441215,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444057214688952319,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444066010781974527,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444083602968018943,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444118787340107775,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444189156084285439,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444329893572640767,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444611368549351423,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9445174318502772735,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615359,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615360,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447426118316457984,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447989068269879296,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448270543246589952,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448411280734945280,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448481649479122944,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448516833851211776,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448534426037256192,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448543222130278400,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448547620176789504,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448549819200045056,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448550918711672832,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551468467486720,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551743345393664,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551880784347136,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551949503823872,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6893357644325145333,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
