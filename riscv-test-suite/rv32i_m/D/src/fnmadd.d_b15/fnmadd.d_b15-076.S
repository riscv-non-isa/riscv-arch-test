
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_57600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90000fffffffff; valaddr_reg:x3; val_offset:172800*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172800*0 + 3*0*FLEN/8, x4, x1, x2)

inst_57601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90001fffffffff; valaddr_reg:x3; val_offset:172803*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172803*0 + 3*1*FLEN/8, x4, x1, x2)

inst_57602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90003fffffffff; valaddr_reg:x3; val_offset:172806*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172806*0 + 3*2*FLEN/8, x4, x1, x2)

inst_57603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90007fffffffff; valaddr_reg:x3; val_offset:172809*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172809*0 + 3*3*FLEN/8, x4, x1, x2)

inst_57604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9000ffffffffff; valaddr_reg:x3; val_offset:172812*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172812*0 + 3*4*FLEN/8, x4, x1, x2)

inst_57605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9001ffffffffff; valaddr_reg:x3; val_offset:172815*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172815*0 + 3*5*FLEN/8, x4, x1, x2)

inst_57606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9003ffffffffff; valaddr_reg:x3; val_offset:172818*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172818*0 + 3*6*FLEN/8, x4, x1, x2)

inst_57607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9007ffffffffff; valaddr_reg:x3; val_offset:172821*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172821*0 + 3*7*FLEN/8, x4, x1, x2)

inst_57608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c900fffffffffff; valaddr_reg:x3; val_offset:172824*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172824*0 + 3*8*FLEN/8, x4, x1, x2)

inst_57609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c901fffffffffff; valaddr_reg:x3; val_offset:172827*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172827*0 + 3*9*FLEN/8, x4, x1, x2)

inst_57610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c903fffffffffff; valaddr_reg:x3; val_offset:172830*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172830*0 + 3*10*FLEN/8, x4, x1, x2)

inst_57611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c907fffffffffff; valaddr_reg:x3; val_offset:172833*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172833*0 + 3*11*FLEN/8, x4, x1, x2)

inst_57612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c90ffffffffffff; valaddr_reg:x3; val_offset:172836*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172836*0 + 3*12*FLEN/8, x4, x1, x2)

inst_57613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c91ffffffffffff; valaddr_reg:x3; val_offset:172839*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172839*0 + 3*13*FLEN/8, x4, x1, x2)

inst_57614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c93ffffffffffff; valaddr_reg:x3; val_offset:172842*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172842*0 + 3*14*FLEN/8, x4, x1, x2)

inst_57615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c97ffffffffffff; valaddr_reg:x3; val_offset:172845*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172845*0 + 3*15*FLEN/8, x4, x1, x2)

inst_57616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c98000000000000; valaddr_reg:x3; val_offset:172848*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172848*0 + 3*16*FLEN/8, x4, x1, x2)

inst_57617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9c000000000000; valaddr_reg:x3; val_offset:172851*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172851*0 + 3*17*FLEN/8, x4, x1, x2)

inst_57618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9e000000000000; valaddr_reg:x3; val_offset:172854*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172854*0 + 3*18*FLEN/8, x4, x1, x2)

inst_57619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9f000000000000; valaddr_reg:x3; val_offset:172857*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172857*0 + 3*19*FLEN/8, x4, x1, x2)

inst_57620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9f800000000000; valaddr_reg:x3; val_offset:172860*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172860*0 + 3*20*FLEN/8, x4, x1, x2)

inst_57621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fc00000000000; valaddr_reg:x3; val_offset:172863*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172863*0 + 3*21*FLEN/8, x4, x1, x2)

inst_57622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fe00000000000; valaddr_reg:x3; val_offset:172866*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172866*0 + 3*22*FLEN/8, x4, x1, x2)

inst_57623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ff00000000000; valaddr_reg:x3; val_offset:172869*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172869*0 + 3*23*FLEN/8, x4, x1, x2)

inst_57624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ff80000000000; valaddr_reg:x3; val_offset:172872*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172872*0 + 3*24*FLEN/8, x4, x1, x2)

inst_57625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffc0000000000; valaddr_reg:x3; val_offset:172875*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172875*0 + 3*25*FLEN/8, x4, x1, x2)

inst_57626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffe0000000000; valaddr_reg:x3; val_offset:172878*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172878*0 + 3*26*FLEN/8, x4, x1, x2)

inst_57627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fff0000000000; valaddr_reg:x3; val_offset:172881*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172881*0 + 3*27*FLEN/8, x4, x1, x2)

inst_57628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fff8000000000; valaddr_reg:x3; val_offset:172884*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172884*0 + 3*28*FLEN/8, x4, x1, x2)

inst_57629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffc000000000; valaddr_reg:x3; val_offset:172887*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172887*0 + 3*29*FLEN/8, x4, x1, x2)

inst_57630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffe000000000; valaddr_reg:x3; val_offset:172890*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172890*0 + 3*30*FLEN/8, x4, x1, x2)

inst_57631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffff000000000; valaddr_reg:x3; val_offset:172893*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172893*0 + 3*31*FLEN/8, x4, x1, x2)

inst_57632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffff800000000; valaddr_reg:x3; val_offset:172896*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172896*0 + 3*32*FLEN/8, x4, x1, x2)

inst_57633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffc00000000; valaddr_reg:x3; val_offset:172899*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172899*0 + 3*33*FLEN/8, x4, x1, x2)

inst_57634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffe00000000; valaddr_reg:x3; val_offset:172902*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172902*0 + 3*34*FLEN/8, x4, x1, x2)

inst_57635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffff00000000; valaddr_reg:x3; val_offset:172905*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172905*0 + 3*35*FLEN/8, x4, x1, x2)

inst_57636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffff80000000; valaddr_reg:x3; val_offset:172908*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172908*0 + 3*36*FLEN/8, x4, x1, x2)

inst_57637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffc0000000; valaddr_reg:x3; val_offset:172911*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172911*0 + 3*37*FLEN/8, x4, x1, x2)

inst_57638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffe0000000; valaddr_reg:x3; val_offset:172914*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172914*0 + 3*38*FLEN/8, x4, x1, x2)

inst_57639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffff0000000; valaddr_reg:x3; val_offset:172917*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172917*0 + 3*39*FLEN/8, x4, x1, x2)

inst_57640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffff8000000; valaddr_reg:x3; val_offset:172920*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172920*0 + 3*40*FLEN/8, x4, x1, x2)

inst_57641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffc000000; valaddr_reg:x3; val_offset:172923*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172923*0 + 3*41*FLEN/8, x4, x1, x2)

inst_57642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffe000000; valaddr_reg:x3; val_offset:172926*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172926*0 + 3*42*FLEN/8, x4, x1, x2)

inst_57643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffff000000; valaddr_reg:x3; val_offset:172929*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172929*0 + 3*43*FLEN/8, x4, x1, x2)

inst_57644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffff800000; valaddr_reg:x3; val_offset:172932*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172932*0 + 3*44*FLEN/8, x4, x1, x2)

inst_57645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffc00000; valaddr_reg:x3; val_offset:172935*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172935*0 + 3*45*FLEN/8, x4, x1, x2)

inst_57646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffe00000; valaddr_reg:x3; val_offset:172938*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172938*0 + 3*46*FLEN/8, x4, x1, x2)

inst_57647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffff00000; valaddr_reg:x3; val_offset:172941*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172941*0 + 3*47*FLEN/8, x4, x1, x2)

inst_57648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffff80000; valaddr_reg:x3; val_offset:172944*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172944*0 + 3*48*FLEN/8, x4, x1, x2)

inst_57649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffc0000; valaddr_reg:x3; val_offset:172947*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172947*0 + 3*49*FLEN/8, x4, x1, x2)

inst_57650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffe0000; valaddr_reg:x3; val_offset:172950*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172950*0 + 3*50*FLEN/8, x4, x1, x2)

inst_57651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffff0000; valaddr_reg:x3; val_offset:172953*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172953*0 + 3*51*FLEN/8, x4, x1, x2)

inst_57652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffff8000; valaddr_reg:x3; val_offset:172956*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172956*0 + 3*52*FLEN/8, x4, x1, x2)

inst_57653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffffc000; valaddr_reg:x3; val_offset:172959*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172959*0 + 3*53*FLEN/8, x4, x1, x2)

inst_57654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffffe000; valaddr_reg:x3; val_offset:172962*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172962*0 + 3*54*FLEN/8, x4, x1, x2)

inst_57655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffff000; valaddr_reg:x3; val_offset:172965*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172965*0 + 3*55*FLEN/8, x4, x1, x2)

inst_57656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffff800; valaddr_reg:x3; val_offset:172968*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172968*0 + 3*56*FLEN/8, x4, x1, x2)

inst_57657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffffc00; valaddr_reg:x3; val_offset:172971*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172971*0 + 3*57*FLEN/8, x4, x1, x2)

inst_57658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffffe00; valaddr_reg:x3; val_offset:172974*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172974*0 + 3*58*FLEN/8, x4, x1, x2)

inst_57659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffffff00; valaddr_reg:x3; val_offset:172977*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172977*0 + 3*59*FLEN/8, x4, x1, x2)

inst_57660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffffff80; valaddr_reg:x3; val_offset:172980*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172980*0 + 3*60*FLEN/8, x4, x1, x2)

inst_57661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffffffc0; valaddr_reg:x3; val_offset:172983*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172983*0 + 3*61*FLEN/8, x4, x1, x2)

inst_57662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffffffe0; valaddr_reg:x3; val_offset:172986*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172986*0 + 3*62*FLEN/8, x4, x1, x2)

inst_57663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffffff0; valaddr_reg:x3; val_offset:172989*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172989*0 + 3*63*FLEN/8, x4, x1, x2)

inst_57664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffffff8; valaddr_reg:x3; val_offset:172992*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172992*0 + 3*64*FLEN/8, x4, x1, x2)

inst_57665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffffffc; valaddr_reg:x3; val_offset:172995*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172995*0 + 3*65*FLEN/8, x4, x1, x2)

inst_57666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9ffffffffffffe; valaddr_reg:x3; val_offset:172998*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 172998*0 + 3*66*FLEN/8, x4, x1, x2)

inst_57667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3c9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3c9fffffffffffff; valaddr_reg:x3; val_offset:173001*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173001*0 + 3*67*FLEN/8, x4, x1, x2)

inst_57668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:173004*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173004*0 + 3*68*FLEN/8, x4, x1, x2)

inst_57669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:173007*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173007*0 + 3*69*FLEN/8, x4, x1, x2)

inst_57670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:173010*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173010*0 + 3*70*FLEN/8, x4, x1, x2)

inst_57671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:173013*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173013*0 + 3*71*FLEN/8, x4, x1, x2)

inst_57672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:173016*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173016*0 + 3*72*FLEN/8, x4, x1, x2)

inst_57673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:173019*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173019*0 + 3*73*FLEN/8, x4, x1, x2)

inst_57674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:173022*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173022*0 + 3*74*FLEN/8, x4, x1, x2)

inst_57675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:173025*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173025*0 + 3*75*FLEN/8, x4, x1, x2)

inst_57676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:173028*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173028*0 + 3*76*FLEN/8, x4, x1, x2)

inst_57677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:173031*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173031*0 + 3*77*FLEN/8, x4, x1, x2)

inst_57678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:173034*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173034*0 + 3*78*FLEN/8, x4, x1, x2)

inst_57679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:173037*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173037*0 + 3*79*FLEN/8, x4, x1, x2)

inst_57680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:173040*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173040*0 + 3*80*FLEN/8, x4, x1, x2)

inst_57681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:173043*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173043*0 + 3*81*FLEN/8, x4, x1, x2)

inst_57682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:173046*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173046*0 + 3*82*FLEN/8, x4, x1, x2)

inst_57683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:173049*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173049*0 + 3*83*FLEN/8, x4, x1, x2)

inst_57684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:173052*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173052*0 + 3*84*FLEN/8, x4, x1, x2)

inst_57685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:173055*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173055*0 + 3*85*FLEN/8, x4, x1, x2)

inst_57686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:173058*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173058*0 + 3*86*FLEN/8, x4, x1, x2)

inst_57687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:173061*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173061*0 + 3*87*FLEN/8, x4, x1, x2)

inst_57688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:173064*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173064*0 + 3*88*FLEN/8, x4, x1, x2)

inst_57689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x186280d601a29 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd378cd40379c1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa186280d601a29; op2val:0x203d378cd40379c1;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:173067*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173067*0 + 3*89*FLEN/8, x4, x1, x2)

inst_57690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:173070*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173070*0 + 3*90*FLEN/8, x4, x1, x2)

inst_57691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:173073*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173073*0 + 3*91*FLEN/8, x4, x1, x2)

inst_57692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:173076*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173076*0 + 3*92*FLEN/8, x4, x1, x2)

inst_57693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:173079*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173079*0 + 3*93*FLEN/8, x4, x1, x2)

inst_57694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:173082*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173082*0 + 3*94*FLEN/8, x4, x1, x2)

inst_57695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:173085*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173085*0 + 3*95*FLEN/8, x4, x1, x2)

inst_57696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:173088*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173088*0 + 3*96*FLEN/8, x4, x1, x2)

inst_57697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:173091*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173091*0 + 3*97*FLEN/8, x4, x1, x2)

inst_57698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:173094*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173094*0 + 3*98*FLEN/8, x4, x1, x2)

inst_57699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:173097*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173097*0 + 3*99*FLEN/8, x4, x1, x2)

inst_57700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:173100*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173100*0 + 3*100*FLEN/8, x4, x1, x2)

inst_57701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:173103*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173103*0 + 3*101*FLEN/8, x4, x1, x2)

inst_57702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:173106*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173106*0 + 3*102*FLEN/8, x4, x1, x2)

inst_57703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:173109*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173109*0 + 3*103*FLEN/8, x4, x1, x2)

inst_57704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:173112*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173112*0 + 3*104*FLEN/8, x4, x1, x2)

inst_57705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:173115*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173115*0 + 3*105*FLEN/8, x4, x1, x2)

inst_57706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:173118*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173118*0 + 3*106*FLEN/8, x4, x1, x2)

inst_57707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:173121*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173121*0 + 3*107*FLEN/8, x4, x1, x2)

inst_57708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:173124*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173124*0 + 3*108*FLEN/8, x4, x1, x2)

inst_57709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:173127*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173127*0 + 3*109*FLEN/8, x4, x1, x2)

inst_57710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:173130*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173130*0 + 3*110*FLEN/8, x4, x1, x2)

inst_57711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:173133*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173133*0 + 3*111*FLEN/8, x4, x1, x2)

inst_57712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000000000; valaddr_reg:x3; val_offset:173136*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173136*0 + 3*112*FLEN/8, x4, x1, x2)

inst_57713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000000001; valaddr_reg:x3; val_offset:173139*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173139*0 + 3*113*FLEN/8, x4, x1, x2)

inst_57714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000000003; valaddr_reg:x3; val_offset:173142*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173142*0 + 3*114*FLEN/8, x4, x1, x2)

inst_57715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000000007; valaddr_reg:x3; val_offset:173145*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173145*0 + 3*115*FLEN/8, x4, x1, x2)

inst_57716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000000000f; valaddr_reg:x3; val_offset:173148*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173148*0 + 3*116*FLEN/8, x4, x1, x2)

inst_57717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000000001f; valaddr_reg:x3; val_offset:173151*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173151*0 + 3*117*FLEN/8, x4, x1, x2)

inst_57718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000000003f; valaddr_reg:x3; val_offset:173154*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173154*0 + 3*118*FLEN/8, x4, x1, x2)

inst_57719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000000007f; valaddr_reg:x3; val_offset:173157*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173157*0 + 3*119*FLEN/8, x4, x1, x2)

inst_57720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000000000ff; valaddr_reg:x3; val_offset:173160*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173160*0 + 3*120*FLEN/8, x4, x1, x2)

inst_57721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000000001ff; valaddr_reg:x3; val_offset:173163*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173163*0 + 3*121*FLEN/8, x4, x1, x2)

inst_57722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000000003ff; valaddr_reg:x3; val_offset:173166*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173166*0 + 3*122*FLEN/8, x4, x1, x2)

inst_57723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000000007ff; valaddr_reg:x3; val_offset:173169*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173169*0 + 3*123*FLEN/8, x4, x1, x2)

inst_57724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000000fff; valaddr_reg:x3; val_offset:173172*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173172*0 + 3*124*FLEN/8, x4, x1, x2)

inst_57725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000001fff; valaddr_reg:x3; val_offset:173175*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173175*0 + 3*125*FLEN/8, x4, x1, x2)

inst_57726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000003fff; valaddr_reg:x3; val_offset:173178*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173178*0 + 3*126*FLEN/8, x4, x1, x2)

inst_57727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000007fff; valaddr_reg:x3; val_offset:173181*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173181*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_57728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000000ffff; valaddr_reg:x3; val_offset:173184*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173184*0 + 3*128*FLEN/8, x4, x1, x2)

inst_57729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000001ffff; valaddr_reg:x3; val_offset:173187*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173187*0 + 3*129*FLEN/8, x4, x1, x2)

inst_57730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000003ffff; valaddr_reg:x3; val_offset:173190*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173190*0 + 3*130*FLEN/8, x4, x1, x2)

inst_57731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000007ffff; valaddr_reg:x3; val_offset:173193*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173193*0 + 3*131*FLEN/8, x4, x1, x2)

inst_57732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000000fffff; valaddr_reg:x3; val_offset:173196*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173196*0 + 3*132*FLEN/8, x4, x1, x2)

inst_57733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000001fffff; valaddr_reg:x3; val_offset:173199*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173199*0 + 3*133*FLEN/8, x4, x1, x2)

inst_57734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000003fffff; valaddr_reg:x3; val_offset:173202*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173202*0 + 3*134*FLEN/8, x4, x1, x2)

inst_57735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000007fffff; valaddr_reg:x3; val_offset:173205*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173205*0 + 3*135*FLEN/8, x4, x1, x2)

inst_57736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000000ffffff; valaddr_reg:x3; val_offset:173208*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173208*0 + 3*136*FLEN/8, x4, x1, x2)

inst_57737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000001ffffff; valaddr_reg:x3; val_offset:173211*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173211*0 + 3*137*FLEN/8, x4, x1, x2)

inst_57738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000003ffffff; valaddr_reg:x3; val_offset:173214*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173214*0 + 3*138*FLEN/8, x4, x1, x2)

inst_57739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000007ffffff; valaddr_reg:x3; val_offset:173217*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173217*0 + 3*139*FLEN/8, x4, x1, x2)

inst_57740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000000fffffff; valaddr_reg:x3; val_offset:173220*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173220*0 + 3*140*FLEN/8, x4, x1, x2)

inst_57741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000001fffffff; valaddr_reg:x3; val_offset:173223*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173223*0 + 3*141*FLEN/8, x4, x1, x2)

inst_57742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000003fffffff; valaddr_reg:x3; val_offset:173226*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173226*0 + 3*142*FLEN/8, x4, x1, x2)

inst_57743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000007fffffff; valaddr_reg:x3; val_offset:173229*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173229*0 + 3*143*FLEN/8, x4, x1, x2)

inst_57744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300000ffffffff; valaddr_reg:x3; val_offset:173232*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173232*0 + 3*144*FLEN/8, x4, x1, x2)

inst_57745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300001ffffffff; valaddr_reg:x3; val_offset:173235*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173235*0 + 3*145*FLEN/8, x4, x1, x2)

inst_57746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300003ffffffff; valaddr_reg:x3; val_offset:173238*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173238*0 + 3*146*FLEN/8, x4, x1, x2)

inst_57747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300007ffffffff; valaddr_reg:x3; val_offset:173241*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173241*0 + 3*147*FLEN/8, x4, x1, x2)

inst_57748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130000fffffffff; valaddr_reg:x3; val_offset:173244*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173244*0 + 3*148*FLEN/8, x4, x1, x2)

inst_57749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130001fffffffff; valaddr_reg:x3; val_offset:173247*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173247*0 + 3*149*FLEN/8, x4, x1, x2)

inst_57750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130003fffffffff; valaddr_reg:x3; val_offset:173250*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173250*0 + 3*150*FLEN/8, x4, x1, x2)

inst_57751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130007fffffffff; valaddr_reg:x3; val_offset:173253*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173253*0 + 3*151*FLEN/8, x4, x1, x2)

inst_57752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813000ffffffffff; valaddr_reg:x3; val_offset:173256*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173256*0 + 3*152*FLEN/8, x4, x1, x2)

inst_57753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813001ffffffffff; valaddr_reg:x3; val_offset:173259*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173259*0 + 3*153*FLEN/8, x4, x1, x2)

inst_57754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813003ffffffffff; valaddr_reg:x3; val_offset:173262*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173262*0 + 3*154*FLEN/8, x4, x1, x2)

inst_57755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813007ffffffffff; valaddr_reg:x3; val_offset:173265*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173265*0 + 3*155*FLEN/8, x4, x1, x2)

inst_57756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81300fffffffffff; valaddr_reg:x3; val_offset:173268*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173268*0 + 3*156*FLEN/8, x4, x1, x2)

inst_57757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81301fffffffffff; valaddr_reg:x3; val_offset:173271*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173271*0 + 3*157*FLEN/8, x4, x1, x2)

inst_57758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81303fffffffffff; valaddr_reg:x3; val_offset:173274*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173274*0 + 3*158*FLEN/8, x4, x1, x2)

inst_57759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x81307fffffffffff; valaddr_reg:x3; val_offset:173277*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173277*0 + 3*159*FLEN/8, x4, x1, x2)

inst_57760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8130ffffffffffff; valaddr_reg:x3; val_offset:173280*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173280*0 + 3*160*FLEN/8, x4, x1, x2)

inst_57761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8131ffffffffffff; valaddr_reg:x3; val_offset:173283*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173283*0 + 3*161*FLEN/8, x4, x1, x2)

inst_57762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8133ffffffffffff; valaddr_reg:x3; val_offset:173286*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173286*0 + 3*162*FLEN/8, x4, x1, x2)

inst_57763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8137ffffffffffff; valaddr_reg:x3; val_offset:173289*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173289*0 + 3*163*FLEN/8, x4, x1, x2)

inst_57764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x8138000000000000; valaddr_reg:x3; val_offset:173292*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173292*0 + 3*164*FLEN/8, x4, x1, x2)

inst_57765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813c000000000000; valaddr_reg:x3; val_offset:173295*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173295*0 + 3*165*FLEN/8, x4, x1, x2)

inst_57766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813e000000000000; valaddr_reg:x3; val_offset:173298*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173298*0 + 3*166*FLEN/8, x4, x1, x2)

inst_57767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813f000000000000; valaddr_reg:x3; val_offset:173301*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173301*0 + 3*167*FLEN/8, x4, x1, x2)

inst_57768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813f800000000000; valaddr_reg:x3; val_offset:173304*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173304*0 + 3*168*FLEN/8, x4, x1, x2)

inst_57769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fc00000000000; valaddr_reg:x3; val_offset:173307*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173307*0 + 3*169*FLEN/8, x4, x1, x2)

inst_57770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fe00000000000; valaddr_reg:x3; val_offset:173310*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173310*0 + 3*170*FLEN/8, x4, x1, x2)

inst_57771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ff00000000000; valaddr_reg:x3; val_offset:173313*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173313*0 + 3*171*FLEN/8, x4, x1, x2)

inst_57772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ff80000000000; valaddr_reg:x3; val_offset:173316*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173316*0 + 3*172*FLEN/8, x4, x1, x2)

inst_57773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffc0000000000; valaddr_reg:x3; val_offset:173319*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173319*0 + 3*173*FLEN/8, x4, x1, x2)

inst_57774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffe0000000000; valaddr_reg:x3; val_offset:173322*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173322*0 + 3*174*FLEN/8, x4, x1, x2)

inst_57775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fff0000000000; valaddr_reg:x3; val_offset:173325*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173325*0 + 3*175*FLEN/8, x4, x1, x2)

inst_57776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fff8000000000; valaddr_reg:x3; val_offset:173328*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173328*0 + 3*176*FLEN/8, x4, x1, x2)

inst_57777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffc000000000; valaddr_reg:x3; val_offset:173331*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173331*0 + 3*177*FLEN/8, x4, x1, x2)

inst_57778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffe000000000; valaddr_reg:x3; val_offset:173334*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173334*0 + 3*178*FLEN/8, x4, x1, x2)

inst_57779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffff000000000; valaddr_reg:x3; val_offset:173337*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173337*0 + 3*179*FLEN/8, x4, x1, x2)

inst_57780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffff800000000; valaddr_reg:x3; val_offset:173340*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173340*0 + 3*180*FLEN/8, x4, x1, x2)

inst_57781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffc00000000; valaddr_reg:x3; val_offset:173343*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173343*0 + 3*181*FLEN/8, x4, x1, x2)

inst_57782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffe00000000; valaddr_reg:x3; val_offset:173346*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173346*0 + 3*182*FLEN/8, x4, x1, x2)

inst_57783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffff00000000; valaddr_reg:x3; val_offset:173349*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173349*0 + 3*183*FLEN/8, x4, x1, x2)

inst_57784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffff80000000; valaddr_reg:x3; val_offset:173352*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173352*0 + 3*184*FLEN/8, x4, x1, x2)

inst_57785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffc0000000; valaddr_reg:x3; val_offset:173355*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173355*0 + 3*185*FLEN/8, x4, x1, x2)

inst_57786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffe0000000; valaddr_reg:x3; val_offset:173358*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173358*0 + 3*186*FLEN/8, x4, x1, x2)

inst_57787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffff0000000; valaddr_reg:x3; val_offset:173361*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173361*0 + 3*187*FLEN/8, x4, x1, x2)

inst_57788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffff8000000; valaddr_reg:x3; val_offset:173364*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173364*0 + 3*188*FLEN/8, x4, x1, x2)

inst_57789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffc000000; valaddr_reg:x3; val_offset:173367*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173367*0 + 3*189*FLEN/8, x4, x1, x2)

inst_57790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffe000000; valaddr_reg:x3; val_offset:173370*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173370*0 + 3*190*FLEN/8, x4, x1, x2)

inst_57791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffff000000; valaddr_reg:x3; val_offset:173373*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173373*0 + 3*191*FLEN/8, x4, x1, x2)

inst_57792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffff800000; valaddr_reg:x3; val_offset:173376*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173376*0 + 3*192*FLEN/8, x4, x1, x2)

inst_57793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffc00000; valaddr_reg:x3; val_offset:173379*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173379*0 + 3*193*FLEN/8, x4, x1, x2)

inst_57794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffe00000; valaddr_reg:x3; val_offset:173382*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173382*0 + 3*194*FLEN/8, x4, x1, x2)

inst_57795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffff00000; valaddr_reg:x3; val_offset:173385*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173385*0 + 3*195*FLEN/8, x4, x1, x2)

inst_57796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffff80000; valaddr_reg:x3; val_offset:173388*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173388*0 + 3*196*FLEN/8, x4, x1, x2)

inst_57797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffc0000; valaddr_reg:x3; val_offset:173391*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173391*0 + 3*197*FLEN/8, x4, x1, x2)

inst_57798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffe0000; valaddr_reg:x3; val_offset:173394*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173394*0 + 3*198*FLEN/8, x4, x1, x2)

inst_57799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffff0000; valaddr_reg:x3; val_offset:173397*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173397*0 + 3*199*FLEN/8, x4, x1, x2)

inst_57800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffff8000; valaddr_reg:x3; val_offset:173400*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173400*0 + 3*200*FLEN/8, x4, x1, x2)

inst_57801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffffc000; valaddr_reg:x3; val_offset:173403*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173403*0 + 3*201*FLEN/8, x4, x1, x2)

inst_57802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffffe000; valaddr_reg:x3; val_offset:173406*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173406*0 + 3*202*FLEN/8, x4, x1, x2)

inst_57803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffff000; valaddr_reg:x3; val_offset:173409*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173409*0 + 3*203*FLEN/8, x4, x1, x2)

inst_57804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffff800; valaddr_reg:x3; val_offset:173412*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173412*0 + 3*204*FLEN/8, x4, x1, x2)

inst_57805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffffc00; valaddr_reg:x3; val_offset:173415*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173415*0 + 3*205*FLEN/8, x4, x1, x2)

inst_57806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffffe00; valaddr_reg:x3; val_offset:173418*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173418*0 + 3*206*FLEN/8, x4, x1, x2)

inst_57807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffffff00; valaddr_reg:x3; val_offset:173421*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173421*0 + 3*207*FLEN/8, x4, x1, x2)

inst_57808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffffff80; valaddr_reg:x3; val_offset:173424*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173424*0 + 3*208*FLEN/8, x4, x1, x2)

inst_57809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffffffc0; valaddr_reg:x3; val_offset:173427*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173427*0 + 3*209*FLEN/8, x4, x1, x2)

inst_57810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffffffe0; valaddr_reg:x3; val_offset:173430*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173430*0 + 3*210*FLEN/8, x4, x1, x2)

inst_57811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffffff0; valaddr_reg:x3; val_offset:173433*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173433*0 + 3*211*FLEN/8, x4, x1, x2)

inst_57812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffffff8; valaddr_reg:x3; val_offset:173436*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173436*0 + 3*212*FLEN/8, x4, x1, x2)

inst_57813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffffffc; valaddr_reg:x3; val_offset:173439*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173439*0 + 3*213*FLEN/8, x4, x1, x2)

inst_57814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813ffffffffffffe; valaddr_reg:x3; val_offset:173442*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173442*0 + 3*214*FLEN/8, x4, x1, x2)

inst_57815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1892f8e6f8f3a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1892f8e6f8f3a; op2val:0x8000;
op3val:0x813fffffffffffff; valaddr_reg:x3; val_offset:173445*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173445*0 + 3*215*FLEN/8, x4, x1, x2)

inst_57816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000000000; valaddr_reg:x3; val_offset:173448*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173448*0 + 3*216*FLEN/8, x4, x1, x2)

inst_57817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000000001; valaddr_reg:x3; val_offset:173451*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173451*0 + 3*217*FLEN/8, x4, x1, x2)

inst_57818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000000003; valaddr_reg:x3; val_offset:173454*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173454*0 + 3*218*FLEN/8, x4, x1, x2)

inst_57819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000000007; valaddr_reg:x3; val_offset:173457*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173457*0 + 3*219*FLEN/8, x4, x1, x2)

inst_57820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000000000f; valaddr_reg:x3; val_offset:173460*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173460*0 + 3*220*FLEN/8, x4, x1, x2)

inst_57821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000000001f; valaddr_reg:x3; val_offset:173463*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173463*0 + 3*221*FLEN/8, x4, x1, x2)

inst_57822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000000003f; valaddr_reg:x3; val_offset:173466*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173466*0 + 3*222*FLEN/8, x4, x1, x2)

inst_57823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000000007f; valaddr_reg:x3; val_offset:173469*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173469*0 + 3*223*FLEN/8, x4, x1, x2)

inst_57824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000000000ff; valaddr_reg:x3; val_offset:173472*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173472*0 + 3*224*FLEN/8, x4, x1, x2)

inst_57825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000000001ff; valaddr_reg:x3; val_offset:173475*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173475*0 + 3*225*FLEN/8, x4, x1, x2)

inst_57826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000000003ff; valaddr_reg:x3; val_offset:173478*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173478*0 + 3*226*FLEN/8, x4, x1, x2)

inst_57827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000000007ff; valaddr_reg:x3; val_offset:173481*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173481*0 + 3*227*FLEN/8, x4, x1, x2)

inst_57828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000000fff; valaddr_reg:x3; val_offset:173484*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173484*0 + 3*228*FLEN/8, x4, x1, x2)

inst_57829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000001fff; valaddr_reg:x3; val_offset:173487*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173487*0 + 3*229*FLEN/8, x4, x1, x2)

inst_57830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000003fff; valaddr_reg:x3; val_offset:173490*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173490*0 + 3*230*FLEN/8, x4, x1, x2)

inst_57831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000007fff; valaddr_reg:x3; val_offset:173493*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173493*0 + 3*231*FLEN/8, x4, x1, x2)

inst_57832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000000ffff; valaddr_reg:x3; val_offset:173496*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173496*0 + 3*232*FLEN/8, x4, x1, x2)

inst_57833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000001ffff; valaddr_reg:x3; val_offset:173499*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173499*0 + 3*233*FLEN/8, x4, x1, x2)

inst_57834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000003ffff; valaddr_reg:x3; val_offset:173502*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173502*0 + 3*234*FLEN/8, x4, x1, x2)

inst_57835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000007ffff; valaddr_reg:x3; val_offset:173505*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173505*0 + 3*235*FLEN/8, x4, x1, x2)

inst_57836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000000fffff; valaddr_reg:x3; val_offset:173508*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173508*0 + 3*236*FLEN/8, x4, x1, x2)

inst_57837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000001fffff; valaddr_reg:x3; val_offset:173511*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173511*0 + 3*237*FLEN/8, x4, x1, x2)

inst_57838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000003fffff; valaddr_reg:x3; val_offset:173514*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173514*0 + 3*238*FLEN/8, x4, x1, x2)

inst_57839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000007fffff; valaddr_reg:x3; val_offset:173517*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173517*0 + 3*239*FLEN/8, x4, x1, x2)

inst_57840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000000ffffff; valaddr_reg:x3; val_offset:173520*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173520*0 + 3*240*FLEN/8, x4, x1, x2)

inst_57841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000001ffffff; valaddr_reg:x3; val_offset:173523*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173523*0 + 3*241*FLEN/8, x4, x1, x2)

inst_57842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000003ffffff; valaddr_reg:x3; val_offset:173526*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173526*0 + 3*242*FLEN/8, x4, x1, x2)

inst_57843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000007ffffff; valaddr_reg:x3; val_offset:173529*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173529*0 + 3*243*FLEN/8, x4, x1, x2)

inst_57844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000000fffffff; valaddr_reg:x3; val_offset:173532*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173532*0 + 3*244*FLEN/8, x4, x1, x2)

inst_57845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000001fffffff; valaddr_reg:x3; val_offset:173535*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173535*0 + 3*245*FLEN/8, x4, x1, x2)

inst_57846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000003fffffff; valaddr_reg:x3; val_offset:173538*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173538*0 + 3*246*FLEN/8, x4, x1, x2)

inst_57847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000007fffffff; valaddr_reg:x3; val_offset:173541*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173541*0 + 3*247*FLEN/8, x4, x1, x2)

inst_57848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800000ffffffff; valaddr_reg:x3; val_offset:173544*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173544*0 + 3*248*FLEN/8, x4, x1, x2)

inst_57849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800001ffffffff; valaddr_reg:x3; val_offset:173547*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173547*0 + 3*249*FLEN/8, x4, x1, x2)

inst_57850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800003ffffffff; valaddr_reg:x3; val_offset:173550*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173550*0 + 3*250*FLEN/8, x4, x1, x2)

inst_57851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800007ffffffff; valaddr_reg:x3; val_offset:173553*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173553*0 + 3*251*FLEN/8, x4, x1, x2)

inst_57852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80000fffffffff; valaddr_reg:x3; val_offset:173556*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173556*0 + 3*252*FLEN/8, x4, x1, x2)

inst_57853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80001fffffffff; valaddr_reg:x3; val_offset:173559*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173559*0 + 3*253*FLEN/8, x4, x1, x2)

inst_57854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80003fffffffff; valaddr_reg:x3; val_offset:173562*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173562*0 + 3*254*FLEN/8, x4, x1, x2)

inst_57855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80007fffffffff; valaddr_reg:x3; val_offset:173565*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173565*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_57856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8000ffffffffff; valaddr_reg:x3; val_offset:173568*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173568*0 + 3*256*FLEN/8, x4, x1, x2)

inst_57857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8001ffffffffff; valaddr_reg:x3; val_offset:173571*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173571*0 + 3*257*FLEN/8, x4, x1, x2)

inst_57858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8003ffffffffff; valaddr_reg:x3; val_offset:173574*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173574*0 + 3*258*FLEN/8, x4, x1, x2)

inst_57859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8007ffffffffff; valaddr_reg:x3; val_offset:173577*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173577*0 + 3*259*FLEN/8, x4, x1, x2)

inst_57860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd800fffffffffff; valaddr_reg:x3; val_offset:173580*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173580*0 + 3*260*FLEN/8, x4, x1, x2)

inst_57861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd801fffffffffff; valaddr_reg:x3; val_offset:173583*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173583*0 + 3*261*FLEN/8, x4, x1, x2)

inst_57862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd803fffffffffff; valaddr_reg:x3; val_offset:173586*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173586*0 + 3*262*FLEN/8, x4, x1, x2)

inst_57863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd807fffffffffff; valaddr_reg:x3; val_offset:173589*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173589*0 + 3*263*FLEN/8, x4, x1, x2)

inst_57864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd80ffffffffffff; valaddr_reg:x3; val_offset:173592*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173592*0 + 3*264*FLEN/8, x4, x1, x2)

inst_57865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd81ffffffffffff; valaddr_reg:x3; val_offset:173595*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173595*0 + 3*265*FLEN/8, x4, x1, x2)

inst_57866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd83ffffffffffff; valaddr_reg:x3; val_offset:173598*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173598*0 + 3*266*FLEN/8, x4, x1, x2)

inst_57867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd87ffffffffffff; valaddr_reg:x3; val_offset:173601*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173601*0 + 3*267*FLEN/8, x4, x1, x2)

inst_57868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd88000000000000; valaddr_reg:x3; val_offset:173604*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173604*0 + 3*268*FLEN/8, x4, x1, x2)

inst_57869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8c000000000000; valaddr_reg:x3; val_offset:173607*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173607*0 + 3*269*FLEN/8, x4, x1, x2)

inst_57870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8e000000000000; valaddr_reg:x3; val_offset:173610*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173610*0 + 3*270*FLEN/8, x4, x1, x2)

inst_57871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8f000000000000; valaddr_reg:x3; val_offset:173613*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173613*0 + 3*271*FLEN/8, x4, x1, x2)

inst_57872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8f800000000000; valaddr_reg:x3; val_offset:173616*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173616*0 + 3*272*FLEN/8, x4, x1, x2)

inst_57873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fc00000000000; valaddr_reg:x3; val_offset:173619*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173619*0 + 3*273*FLEN/8, x4, x1, x2)

inst_57874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fe00000000000; valaddr_reg:x3; val_offset:173622*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173622*0 + 3*274*FLEN/8, x4, x1, x2)

inst_57875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ff00000000000; valaddr_reg:x3; val_offset:173625*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173625*0 + 3*275*FLEN/8, x4, x1, x2)

inst_57876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ff80000000000; valaddr_reg:x3; val_offset:173628*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173628*0 + 3*276*FLEN/8, x4, x1, x2)

inst_57877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffc0000000000; valaddr_reg:x3; val_offset:173631*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173631*0 + 3*277*FLEN/8, x4, x1, x2)

inst_57878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffe0000000000; valaddr_reg:x3; val_offset:173634*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173634*0 + 3*278*FLEN/8, x4, x1, x2)

inst_57879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fff0000000000; valaddr_reg:x3; val_offset:173637*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173637*0 + 3*279*FLEN/8, x4, x1, x2)

inst_57880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fff8000000000; valaddr_reg:x3; val_offset:173640*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173640*0 + 3*280*FLEN/8, x4, x1, x2)

inst_57881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffc000000000; valaddr_reg:x3; val_offset:173643*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173643*0 + 3*281*FLEN/8, x4, x1, x2)

inst_57882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffe000000000; valaddr_reg:x3; val_offset:173646*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173646*0 + 3*282*FLEN/8, x4, x1, x2)

inst_57883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffff000000000; valaddr_reg:x3; val_offset:173649*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173649*0 + 3*283*FLEN/8, x4, x1, x2)

inst_57884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffff800000000; valaddr_reg:x3; val_offset:173652*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173652*0 + 3*284*FLEN/8, x4, x1, x2)

inst_57885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffc00000000; valaddr_reg:x3; val_offset:173655*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173655*0 + 3*285*FLEN/8, x4, x1, x2)

inst_57886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffe00000000; valaddr_reg:x3; val_offset:173658*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173658*0 + 3*286*FLEN/8, x4, x1, x2)

inst_57887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffff00000000; valaddr_reg:x3; val_offset:173661*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173661*0 + 3*287*FLEN/8, x4, x1, x2)

inst_57888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffff80000000; valaddr_reg:x3; val_offset:173664*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173664*0 + 3*288*FLEN/8, x4, x1, x2)

inst_57889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffc0000000; valaddr_reg:x3; val_offset:173667*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173667*0 + 3*289*FLEN/8, x4, x1, x2)

inst_57890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffe0000000; valaddr_reg:x3; val_offset:173670*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173670*0 + 3*290*FLEN/8, x4, x1, x2)

inst_57891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffff0000000; valaddr_reg:x3; val_offset:173673*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173673*0 + 3*291*FLEN/8, x4, x1, x2)

inst_57892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffff8000000; valaddr_reg:x3; val_offset:173676*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173676*0 + 3*292*FLEN/8, x4, x1, x2)

inst_57893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffc000000; valaddr_reg:x3; val_offset:173679*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173679*0 + 3*293*FLEN/8, x4, x1, x2)

inst_57894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffe000000; valaddr_reg:x3; val_offset:173682*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173682*0 + 3*294*FLEN/8, x4, x1, x2)

inst_57895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffff000000; valaddr_reg:x3; val_offset:173685*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173685*0 + 3*295*FLEN/8, x4, x1, x2)

inst_57896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffff800000; valaddr_reg:x3; val_offset:173688*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173688*0 + 3*296*FLEN/8, x4, x1, x2)

inst_57897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffc00000; valaddr_reg:x3; val_offset:173691*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173691*0 + 3*297*FLEN/8, x4, x1, x2)

inst_57898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffe00000; valaddr_reg:x3; val_offset:173694*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173694*0 + 3*298*FLEN/8, x4, x1, x2)

inst_57899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffff00000; valaddr_reg:x3; val_offset:173697*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173697*0 + 3*299*FLEN/8, x4, x1, x2)

inst_57900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffff80000; valaddr_reg:x3; val_offset:173700*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173700*0 + 3*300*FLEN/8, x4, x1, x2)

inst_57901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffc0000; valaddr_reg:x3; val_offset:173703*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173703*0 + 3*301*FLEN/8, x4, x1, x2)

inst_57902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffe0000; valaddr_reg:x3; val_offset:173706*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173706*0 + 3*302*FLEN/8, x4, x1, x2)

inst_57903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffff0000; valaddr_reg:x3; val_offset:173709*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173709*0 + 3*303*FLEN/8, x4, x1, x2)

inst_57904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffff8000; valaddr_reg:x3; val_offset:173712*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173712*0 + 3*304*FLEN/8, x4, x1, x2)

inst_57905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffffc000; valaddr_reg:x3; val_offset:173715*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173715*0 + 3*305*FLEN/8, x4, x1, x2)

inst_57906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffffe000; valaddr_reg:x3; val_offset:173718*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173718*0 + 3*306*FLEN/8, x4, x1, x2)

inst_57907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffff000; valaddr_reg:x3; val_offset:173721*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173721*0 + 3*307*FLEN/8, x4, x1, x2)

inst_57908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffff800; valaddr_reg:x3; val_offset:173724*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173724*0 + 3*308*FLEN/8, x4, x1, x2)

inst_57909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffffc00; valaddr_reg:x3; val_offset:173727*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173727*0 + 3*309*FLEN/8, x4, x1, x2)

inst_57910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffffe00; valaddr_reg:x3; val_offset:173730*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173730*0 + 3*310*FLEN/8, x4, x1, x2)

inst_57911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffffff00; valaddr_reg:x3; val_offset:173733*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173733*0 + 3*311*FLEN/8, x4, x1, x2)

inst_57912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffffff80; valaddr_reg:x3; val_offset:173736*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173736*0 + 3*312*FLEN/8, x4, x1, x2)

inst_57913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffffffc0; valaddr_reg:x3; val_offset:173739*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173739*0 + 3*313*FLEN/8, x4, x1, x2)

inst_57914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffffffe0; valaddr_reg:x3; val_offset:173742*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173742*0 + 3*314*FLEN/8, x4, x1, x2)

inst_57915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffffff0; valaddr_reg:x3; val_offset:173745*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173745*0 + 3*315*FLEN/8, x4, x1, x2)

inst_57916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffffff8; valaddr_reg:x3; val_offset:173748*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173748*0 + 3*316*FLEN/8, x4, x1, x2)

inst_57917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffffffc; valaddr_reg:x3; val_offset:173751*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173751*0 + 3*317*FLEN/8, x4, x1, x2)

inst_57918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8ffffffffffffe; valaddr_reg:x3; val_offset:173754*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173754*0 + 3*318*FLEN/8, x4, x1, x2)

inst_57919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3d8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbd8fffffffffffff; valaddr_reg:x3; val_offset:173757*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173757*0 + 3*319*FLEN/8, x4, x1, x2)

inst_57920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:173760*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173760*0 + 3*320*FLEN/8, x4, x1, x2)

inst_57921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:173763*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173763*0 + 3*321*FLEN/8, x4, x1, x2)

inst_57922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:173766*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173766*0 + 3*322*FLEN/8, x4, x1, x2)

inst_57923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:173769*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173769*0 + 3*323*FLEN/8, x4, x1, x2)

inst_57924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:173772*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173772*0 + 3*324*FLEN/8, x4, x1, x2)

inst_57925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:173775*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173775*0 + 3*325*FLEN/8, x4, x1, x2)

inst_57926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:173778*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173778*0 + 3*326*FLEN/8, x4, x1, x2)

inst_57927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:173781*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173781*0 + 3*327*FLEN/8, x4, x1, x2)

inst_57928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:173784*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173784*0 + 3*328*FLEN/8, x4, x1, x2)

inst_57929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:173787*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173787*0 + 3*329*FLEN/8, x4, x1, x2)

inst_57930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:173790*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173790*0 + 3*330*FLEN/8, x4, x1, x2)

inst_57931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:173793*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173793*0 + 3*331*FLEN/8, x4, x1, x2)

inst_57932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:173796*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173796*0 + 3*332*FLEN/8, x4, x1, x2)

inst_57933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:173799*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173799*0 + 3*333*FLEN/8, x4, x1, x2)

inst_57934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:173802*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173802*0 + 3*334*FLEN/8, x4, x1, x2)

inst_57935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:173805*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173805*0 + 3*335*FLEN/8, x4, x1, x2)

inst_57936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:173808*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173808*0 + 3*336*FLEN/8, x4, x1, x2)

inst_57937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:173811*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173811*0 + 3*337*FLEN/8, x4, x1, x2)

inst_57938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:173814*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173814*0 + 3*338*FLEN/8, x4, x1, x2)

inst_57939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:173817*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173817*0 + 3*339*FLEN/8, x4, x1, x2)

inst_57940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:173820*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173820*0 + 3*340*FLEN/8, x4, x1, x2)

inst_57941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1939e8900399e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd212bde185909 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1939e8900399e; op2val:0x9fcd212bde185909;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:173823*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173823*0 + 3*341*FLEN/8, x4, x1, x2)

inst_57942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000000000; valaddr_reg:x3; val_offset:173826*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173826*0 + 3*342*FLEN/8, x4, x1, x2)

inst_57943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000000001; valaddr_reg:x3; val_offset:173829*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173829*0 + 3*343*FLEN/8, x4, x1, x2)

inst_57944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000000003; valaddr_reg:x3; val_offset:173832*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173832*0 + 3*344*FLEN/8, x4, x1, x2)

inst_57945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000000007; valaddr_reg:x3; val_offset:173835*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173835*0 + 3*345*FLEN/8, x4, x1, x2)

inst_57946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000000000f; valaddr_reg:x3; val_offset:173838*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173838*0 + 3*346*FLEN/8, x4, x1, x2)

inst_57947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000000001f; valaddr_reg:x3; val_offset:173841*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173841*0 + 3*347*FLEN/8, x4, x1, x2)

inst_57948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000000003f; valaddr_reg:x3; val_offset:173844*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173844*0 + 3*348*FLEN/8, x4, x1, x2)

inst_57949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000000007f; valaddr_reg:x3; val_offset:173847*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173847*0 + 3*349*FLEN/8, x4, x1, x2)

inst_57950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000000000ff; valaddr_reg:x3; val_offset:173850*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173850*0 + 3*350*FLEN/8, x4, x1, x2)

inst_57951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000000001ff; valaddr_reg:x3; val_offset:173853*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173853*0 + 3*351*FLEN/8, x4, x1, x2)

inst_57952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000000003ff; valaddr_reg:x3; val_offset:173856*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173856*0 + 3*352*FLEN/8, x4, x1, x2)

inst_57953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000000007ff; valaddr_reg:x3; val_offset:173859*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173859*0 + 3*353*FLEN/8, x4, x1, x2)

inst_57954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000000fff; valaddr_reg:x3; val_offset:173862*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173862*0 + 3*354*FLEN/8, x4, x1, x2)

inst_57955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000001fff; valaddr_reg:x3; val_offset:173865*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173865*0 + 3*355*FLEN/8, x4, x1, x2)

inst_57956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000003fff; valaddr_reg:x3; val_offset:173868*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173868*0 + 3*356*FLEN/8, x4, x1, x2)

inst_57957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000007fff; valaddr_reg:x3; val_offset:173871*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173871*0 + 3*357*FLEN/8, x4, x1, x2)

inst_57958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000000ffff; valaddr_reg:x3; val_offset:173874*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173874*0 + 3*358*FLEN/8, x4, x1, x2)

inst_57959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000001ffff; valaddr_reg:x3; val_offset:173877*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173877*0 + 3*359*FLEN/8, x4, x1, x2)

inst_57960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000003ffff; valaddr_reg:x3; val_offset:173880*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173880*0 + 3*360*FLEN/8, x4, x1, x2)

inst_57961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000007ffff; valaddr_reg:x3; val_offset:173883*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173883*0 + 3*361*FLEN/8, x4, x1, x2)

inst_57962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000000fffff; valaddr_reg:x3; val_offset:173886*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173886*0 + 3*362*FLEN/8, x4, x1, x2)

inst_57963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000001fffff; valaddr_reg:x3; val_offset:173889*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173889*0 + 3*363*FLEN/8, x4, x1, x2)

inst_57964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000003fffff; valaddr_reg:x3; val_offset:173892*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173892*0 + 3*364*FLEN/8, x4, x1, x2)

inst_57965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000007fffff; valaddr_reg:x3; val_offset:173895*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173895*0 + 3*365*FLEN/8, x4, x1, x2)

inst_57966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000000ffffff; valaddr_reg:x3; val_offset:173898*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173898*0 + 3*366*FLEN/8, x4, x1, x2)

inst_57967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000001ffffff; valaddr_reg:x3; val_offset:173901*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173901*0 + 3*367*FLEN/8, x4, x1, x2)

inst_57968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000003ffffff; valaddr_reg:x3; val_offset:173904*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173904*0 + 3*368*FLEN/8, x4, x1, x2)

inst_57969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000007ffffff; valaddr_reg:x3; val_offset:173907*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173907*0 + 3*369*FLEN/8, x4, x1, x2)

inst_57970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000000fffffff; valaddr_reg:x3; val_offset:173910*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173910*0 + 3*370*FLEN/8, x4, x1, x2)

inst_57971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000001fffffff; valaddr_reg:x3; val_offset:173913*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173913*0 + 3*371*FLEN/8, x4, x1, x2)

inst_57972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000003fffffff; valaddr_reg:x3; val_offset:173916*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173916*0 + 3*372*FLEN/8, x4, x1, x2)

inst_57973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000007fffffff; valaddr_reg:x3; val_offset:173919*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173919*0 + 3*373*FLEN/8, x4, x1, x2)

inst_57974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00000ffffffff; valaddr_reg:x3; val_offset:173922*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173922*0 + 3*374*FLEN/8, x4, x1, x2)

inst_57975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00001ffffffff; valaddr_reg:x3; val_offset:173925*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173925*0 + 3*375*FLEN/8, x4, x1, x2)

inst_57976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00003ffffffff; valaddr_reg:x3; val_offset:173928*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173928*0 + 3*376*FLEN/8, x4, x1, x2)

inst_57977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00007ffffffff; valaddr_reg:x3; val_offset:173931*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173931*0 + 3*377*FLEN/8, x4, x1, x2)

inst_57978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0000fffffffff; valaddr_reg:x3; val_offset:173934*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173934*0 + 3*378*FLEN/8, x4, x1, x2)

inst_57979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0001fffffffff; valaddr_reg:x3; val_offset:173937*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173937*0 + 3*379*FLEN/8, x4, x1, x2)

inst_57980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0003fffffffff; valaddr_reg:x3; val_offset:173940*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173940*0 + 3*380*FLEN/8, x4, x1, x2)

inst_57981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0007fffffffff; valaddr_reg:x3; val_offset:173943*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173943*0 + 3*381*FLEN/8, x4, x1, x2)

inst_57982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb000ffffffffff; valaddr_reg:x3; val_offset:173946*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173946*0 + 3*382*FLEN/8, x4, x1, x2)

inst_57983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb001ffffffffff; valaddr_reg:x3; val_offset:173949*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173949*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_57984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb003ffffffffff; valaddr_reg:x3; val_offset:173952*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173952*0 + 3*384*FLEN/8, x4, x1, x2)

inst_57985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb007ffffffffff; valaddr_reg:x3; val_offset:173955*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173955*0 + 3*385*FLEN/8, x4, x1, x2)

inst_57986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb00fffffffffff; valaddr_reg:x3; val_offset:173958*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173958*0 + 3*386*FLEN/8, x4, x1, x2)

inst_57987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb01fffffffffff; valaddr_reg:x3; val_offset:173961*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173961*0 + 3*387*FLEN/8, x4, x1, x2)

inst_57988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb03fffffffffff; valaddr_reg:x3; val_offset:173964*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173964*0 + 3*388*FLEN/8, x4, x1, x2)

inst_57989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb07fffffffffff; valaddr_reg:x3; val_offset:173967*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173967*0 + 3*389*FLEN/8, x4, x1, x2)

inst_57990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb0ffffffffffff; valaddr_reg:x3; val_offset:173970*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173970*0 + 3*390*FLEN/8, x4, x1, x2)

inst_57991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb1ffffffffffff; valaddr_reg:x3; val_offset:173973*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173973*0 + 3*391*FLEN/8, x4, x1, x2)

inst_57992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb3ffffffffffff; valaddr_reg:x3; val_offset:173976*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173976*0 + 3*392*FLEN/8, x4, x1, x2)

inst_57993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb7ffffffffffff; valaddr_reg:x3; val_offset:173979*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173979*0 + 3*393*FLEN/8, x4, x1, x2)

inst_57994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3eb8000000000000; valaddr_reg:x3; val_offset:173982*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173982*0 + 3*394*FLEN/8, x4, x1, x2)

inst_57995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebc000000000000; valaddr_reg:x3; val_offset:173985*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173985*0 + 3*395*FLEN/8, x4, x1, x2)

inst_57996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebe000000000000; valaddr_reg:x3; val_offset:173988*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173988*0 + 3*396*FLEN/8, x4, x1, x2)

inst_57997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebf000000000000; valaddr_reg:x3; val_offset:173991*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173991*0 + 3*397*FLEN/8, x4, x1, x2)

inst_57998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebf800000000000; valaddr_reg:x3; val_offset:173994*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173994*0 + 3*398*FLEN/8, x4, x1, x2)

inst_57999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfc00000000000; valaddr_reg:x3; val_offset:173997*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 173997*0 + 3*399*FLEN/8, x4, x1, x2)

inst_58000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfe00000000000; valaddr_reg:x3; val_offset:174000*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174000*0 + 3*400*FLEN/8, x4, x1, x2)

inst_58001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebff00000000000; valaddr_reg:x3; val_offset:174003*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174003*0 + 3*401*FLEN/8, x4, x1, x2)

inst_58002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebff80000000000; valaddr_reg:x3; val_offset:174006*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174006*0 + 3*402*FLEN/8, x4, x1, x2)

inst_58003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffc0000000000; valaddr_reg:x3; val_offset:174009*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174009*0 + 3*403*FLEN/8, x4, x1, x2)

inst_58004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffe0000000000; valaddr_reg:x3; val_offset:174012*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174012*0 + 3*404*FLEN/8, x4, x1, x2)

inst_58005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfff0000000000; valaddr_reg:x3; val_offset:174015*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174015*0 + 3*405*FLEN/8, x4, x1, x2)

inst_58006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfff8000000000; valaddr_reg:x3; val_offset:174018*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174018*0 + 3*406*FLEN/8, x4, x1, x2)

inst_58007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffc000000000; valaddr_reg:x3; val_offset:174021*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174021*0 + 3*407*FLEN/8, x4, x1, x2)

inst_58008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffe000000000; valaddr_reg:x3; val_offset:174024*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174024*0 + 3*408*FLEN/8, x4, x1, x2)

inst_58009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffff000000000; valaddr_reg:x3; val_offset:174027*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174027*0 + 3*409*FLEN/8, x4, x1, x2)

inst_58010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffff800000000; valaddr_reg:x3; val_offset:174030*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174030*0 + 3*410*FLEN/8, x4, x1, x2)

inst_58011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffc00000000; valaddr_reg:x3; val_offset:174033*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174033*0 + 3*411*FLEN/8, x4, x1, x2)

inst_58012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffe00000000; valaddr_reg:x3; val_offset:174036*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174036*0 + 3*412*FLEN/8, x4, x1, x2)

inst_58013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffff00000000; valaddr_reg:x3; val_offset:174039*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174039*0 + 3*413*FLEN/8, x4, x1, x2)

inst_58014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffff80000000; valaddr_reg:x3; val_offset:174042*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174042*0 + 3*414*FLEN/8, x4, x1, x2)

inst_58015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffc0000000; valaddr_reg:x3; val_offset:174045*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174045*0 + 3*415*FLEN/8, x4, x1, x2)

inst_58016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffe0000000; valaddr_reg:x3; val_offset:174048*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174048*0 + 3*416*FLEN/8, x4, x1, x2)

inst_58017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffff0000000; valaddr_reg:x3; val_offset:174051*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174051*0 + 3*417*FLEN/8, x4, x1, x2)

inst_58018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffff8000000; valaddr_reg:x3; val_offset:174054*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174054*0 + 3*418*FLEN/8, x4, x1, x2)

inst_58019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffc000000; valaddr_reg:x3; val_offset:174057*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174057*0 + 3*419*FLEN/8, x4, x1, x2)

inst_58020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffe000000; valaddr_reg:x3; val_offset:174060*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174060*0 + 3*420*FLEN/8, x4, x1, x2)

inst_58021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffff000000; valaddr_reg:x3; val_offset:174063*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174063*0 + 3*421*FLEN/8, x4, x1, x2)

inst_58022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffff800000; valaddr_reg:x3; val_offset:174066*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174066*0 + 3*422*FLEN/8, x4, x1, x2)

inst_58023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffc00000; valaddr_reg:x3; val_offset:174069*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174069*0 + 3*423*FLEN/8, x4, x1, x2)

inst_58024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffe00000; valaddr_reg:x3; val_offset:174072*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174072*0 + 3*424*FLEN/8, x4, x1, x2)

inst_58025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffff00000; valaddr_reg:x3; val_offset:174075*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174075*0 + 3*425*FLEN/8, x4, x1, x2)

inst_58026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffff80000; valaddr_reg:x3; val_offset:174078*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174078*0 + 3*426*FLEN/8, x4, x1, x2)

inst_58027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffc0000; valaddr_reg:x3; val_offset:174081*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174081*0 + 3*427*FLEN/8, x4, x1, x2)

inst_58028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffe0000; valaddr_reg:x3; val_offset:174084*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174084*0 + 3*428*FLEN/8, x4, x1, x2)

inst_58029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffff0000; valaddr_reg:x3; val_offset:174087*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174087*0 + 3*429*FLEN/8, x4, x1, x2)

inst_58030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffff8000; valaddr_reg:x3; val_offset:174090*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174090*0 + 3*430*FLEN/8, x4, x1, x2)

inst_58031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffffc000; valaddr_reg:x3; val_offset:174093*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174093*0 + 3*431*FLEN/8, x4, x1, x2)

inst_58032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffffe000; valaddr_reg:x3; val_offset:174096*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174096*0 + 3*432*FLEN/8, x4, x1, x2)

inst_58033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffff000; valaddr_reg:x3; val_offset:174099*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174099*0 + 3*433*FLEN/8, x4, x1, x2)

inst_58034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffff800; valaddr_reg:x3; val_offset:174102*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174102*0 + 3*434*FLEN/8, x4, x1, x2)

inst_58035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffffc00; valaddr_reg:x3; val_offset:174105*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174105*0 + 3*435*FLEN/8, x4, x1, x2)

inst_58036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffffe00; valaddr_reg:x3; val_offset:174108*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174108*0 + 3*436*FLEN/8, x4, x1, x2)

inst_58037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffffff00; valaddr_reg:x3; val_offset:174111*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174111*0 + 3*437*FLEN/8, x4, x1, x2)

inst_58038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffffff80; valaddr_reg:x3; val_offset:174114*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174114*0 + 3*438*FLEN/8, x4, x1, x2)

inst_58039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffffffc0; valaddr_reg:x3; val_offset:174117*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174117*0 + 3*439*FLEN/8, x4, x1, x2)

inst_58040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffffffe0; valaddr_reg:x3; val_offset:174120*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174120*0 + 3*440*FLEN/8, x4, x1, x2)

inst_58041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffffff0; valaddr_reg:x3; val_offset:174123*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174123*0 + 3*441*FLEN/8, x4, x1, x2)

inst_58042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffffff8; valaddr_reg:x3; val_offset:174126*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174126*0 + 3*442*FLEN/8, x4, x1, x2)

inst_58043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffffffc; valaddr_reg:x3; val_offset:174129*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174129*0 + 3*443*FLEN/8, x4, x1, x2)

inst_58044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebffffffffffffe; valaddr_reg:x3; val_offset:174132*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174132*0 + 3*444*FLEN/8, x4, x1, x2)

inst_58045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3eb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ebfffffffffffff; valaddr_reg:x3; val_offset:174135*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174135*0 + 3*445*FLEN/8, x4, x1, x2)

inst_58046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:174138*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174138*0 + 3*446*FLEN/8, x4, x1, x2)

inst_58047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:174141*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174141*0 + 3*447*FLEN/8, x4, x1, x2)

inst_58048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:174144*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174144*0 + 3*448*FLEN/8, x4, x1, x2)

inst_58049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:174147*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174147*0 + 3*449*FLEN/8, x4, x1, x2)

inst_58050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:174150*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174150*0 + 3*450*FLEN/8, x4, x1, x2)

inst_58051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:174153*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174153*0 + 3*451*FLEN/8, x4, x1, x2)

inst_58052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:174156*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174156*0 + 3*452*FLEN/8, x4, x1, x2)

inst_58053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:174159*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174159*0 + 3*453*FLEN/8, x4, x1, x2)

inst_58054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:174162*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174162*0 + 3*454*FLEN/8, x4, x1, x2)

inst_58055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:174165*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174165*0 + 3*455*FLEN/8, x4, x1, x2)

inst_58056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:174168*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174168*0 + 3*456*FLEN/8, x4, x1, x2)

inst_58057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:174171*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174171*0 + 3*457*FLEN/8, x4, x1, x2)

inst_58058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:174174*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174174*0 + 3*458*FLEN/8, x4, x1, x2)

inst_58059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:174177*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174177*0 + 3*459*FLEN/8, x4, x1, x2)

inst_58060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:174180*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174180*0 + 3*460*FLEN/8, x4, x1, x2)

inst_58061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:174183*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174183*0 + 3*461*FLEN/8, x4, x1, x2)

inst_58062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:174186*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174186*0 + 3*462*FLEN/8, x4, x1, x2)

inst_58063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:174189*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174189*0 + 3*463*FLEN/8, x4, x1, x2)

inst_58064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:174192*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174192*0 + 3*464*FLEN/8, x4, x1, x2)

inst_58065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:174195*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174195*0 + 3*465*FLEN/8, x4, x1, x2)

inst_58066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:174198*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174198*0 + 3*466*FLEN/8, x4, x1, x2)

inst_58067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x19bd9cce5154c and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd138de57b1d66 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa19bd9cce5154c; op2val:0x203d138de57b1d66;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:174201*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174201*0 + 3*467*FLEN/8, x4, x1, x2)

inst_58068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000000000; valaddr_reg:x3; val_offset:174204*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174204*0 + 3*468*FLEN/8, x4, x1, x2)

inst_58069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000000001; valaddr_reg:x3; val_offset:174207*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174207*0 + 3*469*FLEN/8, x4, x1, x2)

inst_58070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000000003; valaddr_reg:x3; val_offset:174210*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174210*0 + 3*470*FLEN/8, x4, x1, x2)

inst_58071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000000007; valaddr_reg:x3; val_offset:174213*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174213*0 + 3*471*FLEN/8, x4, x1, x2)

inst_58072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000000000f; valaddr_reg:x3; val_offset:174216*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174216*0 + 3*472*FLEN/8, x4, x1, x2)

inst_58073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000000001f; valaddr_reg:x3; val_offset:174219*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174219*0 + 3*473*FLEN/8, x4, x1, x2)

inst_58074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000000003f; valaddr_reg:x3; val_offset:174222*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174222*0 + 3*474*FLEN/8, x4, x1, x2)

inst_58075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000000007f; valaddr_reg:x3; val_offset:174225*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174225*0 + 3*475*FLEN/8, x4, x1, x2)

inst_58076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000000000ff; valaddr_reg:x3; val_offset:174228*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174228*0 + 3*476*FLEN/8, x4, x1, x2)

inst_58077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000000001ff; valaddr_reg:x3; val_offset:174231*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174231*0 + 3*477*FLEN/8, x4, x1, x2)

inst_58078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000000003ff; valaddr_reg:x3; val_offset:174234*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174234*0 + 3*478*FLEN/8, x4, x1, x2)

inst_58079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000000007ff; valaddr_reg:x3; val_offset:174237*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174237*0 + 3*479*FLEN/8, x4, x1, x2)

inst_58080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000000fff; valaddr_reg:x3; val_offset:174240*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174240*0 + 3*480*FLEN/8, x4, x1, x2)

inst_58081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000001fff; valaddr_reg:x3; val_offset:174243*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174243*0 + 3*481*FLEN/8, x4, x1, x2)

inst_58082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000003fff; valaddr_reg:x3; val_offset:174246*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174246*0 + 3*482*FLEN/8, x4, x1, x2)

inst_58083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000007fff; valaddr_reg:x3; val_offset:174249*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174249*0 + 3*483*FLEN/8, x4, x1, x2)

inst_58084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000000ffff; valaddr_reg:x3; val_offset:174252*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174252*0 + 3*484*FLEN/8, x4, x1, x2)

inst_58085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000001ffff; valaddr_reg:x3; val_offset:174255*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174255*0 + 3*485*FLEN/8, x4, x1, x2)

inst_58086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000003ffff; valaddr_reg:x3; val_offset:174258*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174258*0 + 3*486*FLEN/8, x4, x1, x2)

inst_58087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000007ffff; valaddr_reg:x3; val_offset:174261*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174261*0 + 3*487*FLEN/8, x4, x1, x2)

inst_58088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000000fffff; valaddr_reg:x3; val_offset:174264*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174264*0 + 3*488*FLEN/8, x4, x1, x2)

inst_58089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000001fffff; valaddr_reg:x3; val_offset:174267*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174267*0 + 3*489*FLEN/8, x4, x1, x2)

inst_58090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000003fffff; valaddr_reg:x3; val_offset:174270*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174270*0 + 3*490*FLEN/8, x4, x1, x2)

inst_58091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000007fffff; valaddr_reg:x3; val_offset:174273*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174273*0 + 3*491*FLEN/8, x4, x1, x2)

inst_58092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000000ffffff; valaddr_reg:x3; val_offset:174276*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174276*0 + 3*492*FLEN/8, x4, x1, x2)

inst_58093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000001ffffff; valaddr_reg:x3; val_offset:174279*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174279*0 + 3*493*FLEN/8, x4, x1, x2)

inst_58094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000003ffffff; valaddr_reg:x3; val_offset:174282*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174282*0 + 3*494*FLEN/8, x4, x1, x2)

inst_58095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000007ffffff; valaddr_reg:x3; val_offset:174285*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174285*0 + 3*495*FLEN/8, x4, x1, x2)

inst_58096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000000fffffff; valaddr_reg:x3; val_offset:174288*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174288*0 + 3*496*FLEN/8, x4, x1, x2)

inst_58097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000001fffffff; valaddr_reg:x3; val_offset:174291*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174291*0 + 3*497*FLEN/8, x4, x1, x2)

inst_58098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000003fffffff; valaddr_reg:x3; val_offset:174294*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174294*0 + 3*498*FLEN/8, x4, x1, x2)

inst_58099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000007fffffff; valaddr_reg:x3; val_offset:174297*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174297*0 + 3*499*FLEN/8, x4, x1, x2)

inst_58100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00000ffffffff; valaddr_reg:x3; val_offset:174300*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174300*0 + 3*500*FLEN/8, x4, x1, x2)

inst_58101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00001ffffffff; valaddr_reg:x3; val_offset:174303*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174303*0 + 3*501*FLEN/8, x4, x1, x2)

inst_58102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00003ffffffff; valaddr_reg:x3; val_offset:174306*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174306*0 + 3*502*FLEN/8, x4, x1, x2)

inst_58103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00007ffffffff; valaddr_reg:x3; val_offset:174309*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174309*0 + 3*503*FLEN/8, x4, x1, x2)

inst_58104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0000fffffffff; valaddr_reg:x3; val_offset:174312*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174312*0 + 3*504*FLEN/8, x4, x1, x2)

inst_58105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0001fffffffff; valaddr_reg:x3; val_offset:174315*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174315*0 + 3*505*FLEN/8, x4, x1, x2)

inst_58106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0003fffffffff; valaddr_reg:x3; val_offset:174318*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174318*0 + 3*506*FLEN/8, x4, x1, x2)

inst_58107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0007fffffffff; valaddr_reg:x3; val_offset:174321*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174321*0 + 3*507*FLEN/8, x4, x1, x2)

inst_58108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae000ffffffffff; valaddr_reg:x3; val_offset:174324*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174324*0 + 3*508*FLEN/8, x4, x1, x2)

inst_58109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae001ffffffffff; valaddr_reg:x3; val_offset:174327*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174327*0 + 3*509*FLEN/8, x4, x1, x2)

inst_58110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae003ffffffffff; valaddr_reg:x3; val_offset:174330*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174330*0 + 3*510*FLEN/8, x4, x1, x2)

inst_58111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae007ffffffffff; valaddr_reg:x3; val_offset:174333*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174333*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_58112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae00fffffffffff; valaddr_reg:x3; val_offset:174336*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174336*0 + 3*512*FLEN/8, x4, x1, x2)

inst_58113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae01fffffffffff; valaddr_reg:x3; val_offset:174339*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174339*0 + 3*513*FLEN/8, x4, x1, x2)

inst_58114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae03fffffffffff; valaddr_reg:x3; val_offset:174342*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174342*0 + 3*514*FLEN/8, x4, x1, x2)

inst_58115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae07fffffffffff; valaddr_reg:x3; val_offset:174345*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174345*0 + 3*515*FLEN/8, x4, x1, x2)

inst_58116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae0ffffffffffff; valaddr_reg:x3; val_offset:174348*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174348*0 + 3*516*FLEN/8, x4, x1, x2)

inst_58117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae1ffffffffffff; valaddr_reg:x3; val_offset:174351*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174351*0 + 3*517*FLEN/8, x4, x1, x2)

inst_58118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae3ffffffffffff; valaddr_reg:x3; val_offset:174354*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174354*0 + 3*518*FLEN/8, x4, x1, x2)

inst_58119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae7ffffffffffff; valaddr_reg:x3; val_offset:174357*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174357*0 + 3*519*FLEN/8, x4, x1, x2)

inst_58120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbae8000000000000; valaddr_reg:x3; val_offset:174360*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174360*0 + 3*520*FLEN/8, x4, x1, x2)

inst_58121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaec000000000000; valaddr_reg:x3; val_offset:174363*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174363*0 + 3*521*FLEN/8, x4, x1, x2)

inst_58122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaee000000000000; valaddr_reg:x3; val_offset:174366*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174366*0 + 3*522*FLEN/8, x4, x1, x2)

inst_58123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaef000000000000; valaddr_reg:x3; val_offset:174369*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174369*0 + 3*523*FLEN/8, x4, x1, x2)

inst_58124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaef800000000000; valaddr_reg:x3; val_offset:174372*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174372*0 + 3*524*FLEN/8, x4, x1, x2)

inst_58125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefc00000000000; valaddr_reg:x3; val_offset:174375*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174375*0 + 3*525*FLEN/8, x4, x1, x2)

inst_58126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefe00000000000; valaddr_reg:x3; val_offset:174378*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174378*0 + 3*526*FLEN/8, x4, x1, x2)

inst_58127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeff00000000000; valaddr_reg:x3; val_offset:174381*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174381*0 + 3*527*FLEN/8, x4, x1, x2)

inst_58128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeff80000000000; valaddr_reg:x3; val_offset:174384*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174384*0 + 3*528*FLEN/8, x4, x1, x2)

inst_58129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffc0000000000; valaddr_reg:x3; val_offset:174387*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174387*0 + 3*529*FLEN/8, x4, x1, x2)

inst_58130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffe0000000000; valaddr_reg:x3; val_offset:174390*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174390*0 + 3*530*FLEN/8, x4, x1, x2)

inst_58131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefff0000000000; valaddr_reg:x3; val_offset:174393*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174393*0 + 3*531*FLEN/8, x4, x1, x2)

inst_58132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefff8000000000; valaddr_reg:x3; val_offset:174396*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174396*0 + 3*532*FLEN/8, x4, x1, x2)

inst_58133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffc000000000; valaddr_reg:x3; val_offset:174399*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174399*0 + 3*533*FLEN/8, x4, x1, x2)

inst_58134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffe000000000; valaddr_reg:x3; val_offset:174402*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174402*0 + 3*534*FLEN/8, x4, x1, x2)

inst_58135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffff000000000; valaddr_reg:x3; val_offset:174405*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174405*0 + 3*535*FLEN/8, x4, x1, x2)

inst_58136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffff800000000; valaddr_reg:x3; val_offset:174408*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174408*0 + 3*536*FLEN/8, x4, x1, x2)

inst_58137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffc00000000; valaddr_reg:x3; val_offset:174411*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174411*0 + 3*537*FLEN/8, x4, x1, x2)

inst_58138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffe00000000; valaddr_reg:x3; val_offset:174414*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174414*0 + 3*538*FLEN/8, x4, x1, x2)

inst_58139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffff00000000; valaddr_reg:x3; val_offset:174417*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174417*0 + 3*539*FLEN/8, x4, x1, x2)

inst_58140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffff80000000; valaddr_reg:x3; val_offset:174420*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174420*0 + 3*540*FLEN/8, x4, x1, x2)

inst_58141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffc0000000; valaddr_reg:x3; val_offset:174423*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174423*0 + 3*541*FLEN/8, x4, x1, x2)

inst_58142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffe0000000; valaddr_reg:x3; val_offset:174426*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174426*0 + 3*542*FLEN/8, x4, x1, x2)

inst_58143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffff0000000; valaddr_reg:x3; val_offset:174429*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174429*0 + 3*543*FLEN/8, x4, x1, x2)

inst_58144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffff8000000; valaddr_reg:x3; val_offset:174432*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174432*0 + 3*544*FLEN/8, x4, x1, x2)

inst_58145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffc000000; valaddr_reg:x3; val_offset:174435*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174435*0 + 3*545*FLEN/8, x4, x1, x2)

inst_58146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffe000000; valaddr_reg:x3; val_offset:174438*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174438*0 + 3*546*FLEN/8, x4, x1, x2)

inst_58147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffff000000; valaddr_reg:x3; val_offset:174441*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174441*0 + 3*547*FLEN/8, x4, x1, x2)

inst_58148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffff800000; valaddr_reg:x3; val_offset:174444*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174444*0 + 3*548*FLEN/8, x4, x1, x2)

inst_58149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffc00000; valaddr_reg:x3; val_offset:174447*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174447*0 + 3*549*FLEN/8, x4, x1, x2)

inst_58150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffe00000; valaddr_reg:x3; val_offset:174450*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174450*0 + 3*550*FLEN/8, x4, x1, x2)

inst_58151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffff00000; valaddr_reg:x3; val_offset:174453*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174453*0 + 3*551*FLEN/8, x4, x1, x2)

inst_58152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffff80000; valaddr_reg:x3; val_offset:174456*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174456*0 + 3*552*FLEN/8, x4, x1, x2)

inst_58153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffc0000; valaddr_reg:x3; val_offset:174459*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174459*0 + 3*553*FLEN/8, x4, x1, x2)

inst_58154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffe0000; valaddr_reg:x3; val_offset:174462*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174462*0 + 3*554*FLEN/8, x4, x1, x2)

inst_58155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffff0000; valaddr_reg:x3; val_offset:174465*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174465*0 + 3*555*FLEN/8, x4, x1, x2)

inst_58156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffff8000; valaddr_reg:x3; val_offset:174468*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174468*0 + 3*556*FLEN/8, x4, x1, x2)

inst_58157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffffc000; valaddr_reg:x3; val_offset:174471*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174471*0 + 3*557*FLEN/8, x4, x1, x2)

inst_58158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffffe000; valaddr_reg:x3; val_offset:174474*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174474*0 + 3*558*FLEN/8, x4, x1, x2)

inst_58159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffff000; valaddr_reg:x3; val_offset:174477*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174477*0 + 3*559*FLEN/8, x4, x1, x2)

inst_58160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffff800; valaddr_reg:x3; val_offset:174480*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174480*0 + 3*560*FLEN/8, x4, x1, x2)

inst_58161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffffc00; valaddr_reg:x3; val_offset:174483*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174483*0 + 3*561*FLEN/8, x4, x1, x2)

inst_58162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffffe00; valaddr_reg:x3; val_offset:174486*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174486*0 + 3*562*FLEN/8, x4, x1, x2)

inst_58163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffffff00; valaddr_reg:x3; val_offset:174489*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174489*0 + 3*563*FLEN/8, x4, x1, x2)

inst_58164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffffff80; valaddr_reg:x3; val_offset:174492*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174492*0 + 3*564*FLEN/8, x4, x1, x2)

inst_58165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffffffc0; valaddr_reg:x3; val_offset:174495*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174495*0 + 3*565*FLEN/8, x4, x1, x2)

inst_58166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffffffe0; valaddr_reg:x3; val_offset:174498*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174498*0 + 3*566*FLEN/8, x4, x1, x2)

inst_58167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffffff0; valaddr_reg:x3; val_offset:174501*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174501*0 + 3*567*FLEN/8, x4, x1, x2)

inst_58168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffffff8; valaddr_reg:x3; val_offset:174504*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174504*0 + 3*568*FLEN/8, x4, x1, x2)

inst_58169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffffffc; valaddr_reg:x3; val_offset:174507*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174507*0 + 3*569*FLEN/8, x4, x1, x2)

inst_58170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaeffffffffffffe; valaddr_reg:x3; val_offset:174510*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174510*0 + 3*570*FLEN/8, x4, x1, x2)

inst_58171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbaefffffffffffff; valaddr_reg:x3; val_offset:174513*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174513*0 + 3*571*FLEN/8, x4, x1, x2)

inst_58172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:174516*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174516*0 + 3*572*FLEN/8, x4, x1, x2)

inst_58173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:174519*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174519*0 + 3*573*FLEN/8, x4, x1, x2)

inst_58174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:174522*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174522*0 + 3*574*FLEN/8, x4, x1, x2)

inst_58175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:174525*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174525*0 + 3*575*FLEN/8, x4, x1, x2)

inst_58176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:174528*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174528*0 + 3*576*FLEN/8, x4, x1, x2)

inst_58177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:174531*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174531*0 + 3*577*FLEN/8, x4, x1, x2)

inst_58178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:174534*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174534*0 + 3*578*FLEN/8, x4, x1, x2)

inst_58179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:174537*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174537*0 + 3*579*FLEN/8, x4, x1, x2)

inst_58180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:174540*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174540*0 + 3*580*FLEN/8, x4, x1, x2)

inst_58181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:174543*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174543*0 + 3*581*FLEN/8, x4, x1, x2)

inst_58182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:174546*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174546*0 + 3*582*FLEN/8, x4, x1, x2)

inst_58183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:174549*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174549*0 + 3*583*FLEN/8, x4, x1, x2)

inst_58184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:174552*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174552*0 + 3*584*FLEN/8, x4, x1, x2)

inst_58185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:174555*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174555*0 + 3*585*FLEN/8, x4, x1, x2)

inst_58186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:174558*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174558*0 + 3*586*FLEN/8, x4, x1, x2)

inst_58187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:174561*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174561*0 + 3*587*FLEN/8, x4, x1, x2)

inst_58188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:174564*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174564*0 + 3*588*FLEN/8, x4, x1, x2)

inst_58189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:174567*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174567*0 + 3*589*FLEN/8, x4, x1, x2)

inst_58190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:174570*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174570*0 + 3*590*FLEN/8, x4, x1, x2)

inst_58191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:174573*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174573*0 + 3*591*FLEN/8, x4, x1, x2)

inst_58192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:174576*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174576*0 + 3*592*FLEN/8, x4, x1, x2)

inst_58193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3782778609c and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xd06fed2be854b and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1a3782778609c; op2val:0x9fcd06fed2be854b;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:174579*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174579*0 + 3*593*FLEN/8, x4, x1, x2)

inst_58194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:174582*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174582*0 + 3*594*FLEN/8, x4, x1, x2)

inst_58195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:174585*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174585*0 + 3*595*FLEN/8, x4, x1, x2)

inst_58196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:174588*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174588*0 + 3*596*FLEN/8, x4, x1, x2)

inst_58197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:174591*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174591*0 + 3*597*FLEN/8, x4, x1, x2)

inst_58198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:174594*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174594*0 + 3*598*FLEN/8, x4, x1, x2)

inst_58199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:174597*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174597*0 + 3*599*FLEN/8, x4, x1, x2)

inst_58200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:174600*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174600*0 + 3*600*FLEN/8, x4, x1, x2)

inst_58201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:174603*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174603*0 + 3*601*FLEN/8, x4, x1, x2)

inst_58202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:174606*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174606*0 + 3*602*FLEN/8, x4, x1, x2)

inst_58203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:174609*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174609*0 + 3*603*FLEN/8, x4, x1, x2)

inst_58204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:174612*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174612*0 + 3*604*FLEN/8, x4, x1, x2)

inst_58205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:174615*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174615*0 + 3*605*FLEN/8, x4, x1, x2)

inst_58206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:174618*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174618*0 + 3*606*FLEN/8, x4, x1, x2)

inst_58207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:174621*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174621*0 + 3*607*FLEN/8, x4, x1, x2)

inst_58208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:174624*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174624*0 + 3*608*FLEN/8, x4, x1, x2)

inst_58209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:174627*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174627*0 + 3*609*FLEN/8, x4, x1, x2)

inst_58210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:174630*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174630*0 + 3*610*FLEN/8, x4, x1, x2)

inst_58211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:174633*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174633*0 + 3*611*FLEN/8, x4, x1, x2)

inst_58212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:174636*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174636*0 + 3*612*FLEN/8, x4, x1, x2)

inst_58213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:174639*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174639*0 + 3*613*FLEN/8, x4, x1, x2)

inst_58214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:174642*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174642*0 + 3*614*FLEN/8, x4, x1, x2)

inst_58215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:174645*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174645*0 + 3*615*FLEN/8, x4, x1, x2)

inst_58216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000000000; valaddr_reg:x3; val_offset:174648*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174648*0 + 3*616*FLEN/8, x4, x1, x2)

inst_58217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000000001; valaddr_reg:x3; val_offset:174651*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174651*0 + 3*617*FLEN/8, x4, x1, x2)

inst_58218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000000003; valaddr_reg:x3; val_offset:174654*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174654*0 + 3*618*FLEN/8, x4, x1, x2)

inst_58219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000000007; valaddr_reg:x3; val_offset:174657*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174657*0 + 3*619*FLEN/8, x4, x1, x2)

inst_58220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000000000f; valaddr_reg:x3; val_offset:174660*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174660*0 + 3*620*FLEN/8, x4, x1, x2)

inst_58221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000000001f; valaddr_reg:x3; val_offset:174663*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174663*0 + 3*621*FLEN/8, x4, x1, x2)

inst_58222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000000003f; valaddr_reg:x3; val_offset:174666*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174666*0 + 3*622*FLEN/8, x4, x1, x2)

inst_58223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000000007f; valaddr_reg:x3; val_offset:174669*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174669*0 + 3*623*FLEN/8, x4, x1, x2)

inst_58224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000000000ff; valaddr_reg:x3; val_offset:174672*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174672*0 + 3*624*FLEN/8, x4, x1, x2)

inst_58225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000000001ff; valaddr_reg:x3; val_offset:174675*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174675*0 + 3*625*FLEN/8, x4, x1, x2)

inst_58226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000000003ff; valaddr_reg:x3; val_offset:174678*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174678*0 + 3*626*FLEN/8, x4, x1, x2)

inst_58227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000000007ff; valaddr_reg:x3; val_offset:174681*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174681*0 + 3*627*FLEN/8, x4, x1, x2)

inst_58228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000000fff; valaddr_reg:x3; val_offset:174684*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174684*0 + 3*628*FLEN/8, x4, x1, x2)

inst_58229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000001fff; valaddr_reg:x3; val_offset:174687*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174687*0 + 3*629*FLEN/8, x4, x1, x2)

inst_58230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000003fff; valaddr_reg:x3; val_offset:174690*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174690*0 + 3*630*FLEN/8, x4, x1, x2)

inst_58231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000007fff; valaddr_reg:x3; val_offset:174693*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174693*0 + 3*631*FLEN/8, x4, x1, x2)

inst_58232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000000ffff; valaddr_reg:x3; val_offset:174696*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174696*0 + 3*632*FLEN/8, x4, x1, x2)

inst_58233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000001ffff; valaddr_reg:x3; val_offset:174699*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174699*0 + 3*633*FLEN/8, x4, x1, x2)

inst_58234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000003ffff; valaddr_reg:x3; val_offset:174702*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174702*0 + 3*634*FLEN/8, x4, x1, x2)

inst_58235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000007ffff; valaddr_reg:x3; val_offset:174705*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174705*0 + 3*635*FLEN/8, x4, x1, x2)

inst_58236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000000fffff; valaddr_reg:x3; val_offset:174708*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174708*0 + 3*636*FLEN/8, x4, x1, x2)

inst_58237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000001fffff; valaddr_reg:x3; val_offset:174711*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174711*0 + 3*637*FLEN/8, x4, x1, x2)

inst_58238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000003fffff; valaddr_reg:x3; val_offset:174714*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174714*0 + 3*638*FLEN/8, x4, x1, x2)

inst_58239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000007fffff; valaddr_reg:x3; val_offset:174717*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174717*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_58240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000000ffffff; valaddr_reg:x3; val_offset:174720*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174720*0 + 3*640*FLEN/8, x4, x1, x2)

inst_58241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000001ffffff; valaddr_reg:x3; val_offset:174723*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174723*0 + 3*641*FLEN/8, x4, x1, x2)

inst_58242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000003ffffff; valaddr_reg:x3; val_offset:174726*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174726*0 + 3*642*FLEN/8, x4, x1, x2)

inst_58243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000007ffffff; valaddr_reg:x3; val_offset:174729*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174729*0 + 3*643*FLEN/8, x4, x1, x2)

inst_58244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000000fffffff; valaddr_reg:x3; val_offset:174732*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174732*0 + 3*644*FLEN/8, x4, x1, x2)

inst_58245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000001fffffff; valaddr_reg:x3; val_offset:174735*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174735*0 + 3*645*FLEN/8, x4, x1, x2)

inst_58246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000003fffffff; valaddr_reg:x3; val_offset:174738*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174738*0 + 3*646*FLEN/8, x4, x1, x2)

inst_58247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000007fffffff; valaddr_reg:x3; val_offset:174741*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174741*0 + 3*647*FLEN/8, x4, x1, x2)

inst_58248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600000ffffffff; valaddr_reg:x3; val_offset:174744*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174744*0 + 3*648*FLEN/8, x4, x1, x2)

inst_58249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600001ffffffff; valaddr_reg:x3; val_offset:174747*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174747*0 + 3*649*FLEN/8, x4, x1, x2)

inst_58250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600003ffffffff; valaddr_reg:x3; val_offset:174750*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174750*0 + 3*650*FLEN/8, x4, x1, x2)

inst_58251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600007ffffffff; valaddr_reg:x3; val_offset:174753*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174753*0 + 3*651*FLEN/8, x4, x1, x2)

inst_58252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60000fffffffff; valaddr_reg:x3; val_offset:174756*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174756*0 + 3*652*FLEN/8, x4, x1, x2)

inst_58253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60001fffffffff; valaddr_reg:x3; val_offset:174759*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174759*0 + 3*653*FLEN/8, x4, x1, x2)

inst_58254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60003fffffffff; valaddr_reg:x3; val_offset:174762*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174762*0 + 3*654*FLEN/8, x4, x1, x2)

inst_58255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60007fffffffff; valaddr_reg:x3; val_offset:174765*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174765*0 + 3*655*FLEN/8, x4, x1, x2)

inst_58256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6000ffffffffff; valaddr_reg:x3; val_offset:174768*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174768*0 + 3*656*FLEN/8, x4, x1, x2)

inst_58257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6001ffffffffff; valaddr_reg:x3; val_offset:174771*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174771*0 + 3*657*FLEN/8, x4, x1, x2)

inst_58258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6003ffffffffff; valaddr_reg:x3; val_offset:174774*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174774*0 + 3*658*FLEN/8, x4, x1, x2)

inst_58259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6007ffffffffff; valaddr_reg:x3; val_offset:174777*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174777*0 + 3*659*FLEN/8, x4, x1, x2)

inst_58260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x600fffffffffff; valaddr_reg:x3; val_offset:174780*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174780*0 + 3*660*FLEN/8, x4, x1, x2)

inst_58261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x601fffffffffff; valaddr_reg:x3; val_offset:174783*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174783*0 + 3*661*FLEN/8, x4, x1, x2)

inst_58262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x603fffffffffff; valaddr_reg:x3; val_offset:174786*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174786*0 + 3*662*FLEN/8, x4, x1, x2)

inst_58263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x607fffffffffff; valaddr_reg:x3; val_offset:174789*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174789*0 + 3*663*FLEN/8, x4, x1, x2)

inst_58264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x60ffffffffffff; valaddr_reg:x3; val_offset:174792*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174792*0 + 3*664*FLEN/8, x4, x1, x2)

inst_58265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x61ffffffffffff; valaddr_reg:x3; val_offset:174795*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174795*0 + 3*665*FLEN/8, x4, x1, x2)

inst_58266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x63ffffffffffff; valaddr_reg:x3; val_offset:174798*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174798*0 + 3*666*FLEN/8, x4, x1, x2)

inst_58267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x67ffffffffffff; valaddr_reg:x3; val_offset:174801*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174801*0 + 3*667*FLEN/8, x4, x1, x2)

inst_58268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x68000000000000; valaddr_reg:x3; val_offset:174804*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174804*0 + 3*668*FLEN/8, x4, x1, x2)

inst_58269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6c000000000000; valaddr_reg:x3; val_offset:174807*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174807*0 + 3*669*FLEN/8, x4, x1, x2)

inst_58270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6e000000000000; valaddr_reg:x3; val_offset:174810*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174810*0 + 3*670*FLEN/8, x4, x1, x2)

inst_58271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6f000000000000; valaddr_reg:x3; val_offset:174813*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174813*0 + 3*671*FLEN/8, x4, x1, x2)

inst_58272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6f800000000000; valaddr_reg:x3; val_offset:174816*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174816*0 + 3*672*FLEN/8, x4, x1, x2)

inst_58273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fc00000000000; valaddr_reg:x3; val_offset:174819*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174819*0 + 3*673*FLEN/8, x4, x1, x2)

inst_58274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fe00000000000; valaddr_reg:x3; val_offset:174822*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174822*0 + 3*674*FLEN/8, x4, x1, x2)

inst_58275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ff00000000000; valaddr_reg:x3; val_offset:174825*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174825*0 + 3*675*FLEN/8, x4, x1, x2)

inst_58276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ff80000000000; valaddr_reg:x3; val_offset:174828*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174828*0 + 3*676*FLEN/8, x4, x1, x2)

inst_58277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffc0000000000; valaddr_reg:x3; val_offset:174831*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174831*0 + 3*677*FLEN/8, x4, x1, x2)

inst_58278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffe0000000000; valaddr_reg:x3; val_offset:174834*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174834*0 + 3*678*FLEN/8, x4, x1, x2)

inst_58279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fff0000000000; valaddr_reg:x3; val_offset:174837*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174837*0 + 3*679*FLEN/8, x4, x1, x2)

inst_58280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fff8000000000; valaddr_reg:x3; val_offset:174840*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174840*0 + 3*680*FLEN/8, x4, x1, x2)

inst_58281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffc000000000; valaddr_reg:x3; val_offset:174843*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174843*0 + 3*681*FLEN/8, x4, x1, x2)

inst_58282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffe000000000; valaddr_reg:x3; val_offset:174846*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174846*0 + 3*682*FLEN/8, x4, x1, x2)

inst_58283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffff000000000; valaddr_reg:x3; val_offset:174849*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174849*0 + 3*683*FLEN/8, x4, x1, x2)

inst_58284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffff800000000; valaddr_reg:x3; val_offset:174852*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174852*0 + 3*684*FLEN/8, x4, x1, x2)

inst_58285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffc00000000; valaddr_reg:x3; val_offset:174855*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174855*0 + 3*685*FLEN/8, x4, x1, x2)

inst_58286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffe00000000; valaddr_reg:x3; val_offset:174858*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174858*0 + 3*686*FLEN/8, x4, x1, x2)

inst_58287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffff00000000; valaddr_reg:x3; val_offset:174861*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174861*0 + 3*687*FLEN/8, x4, x1, x2)

inst_58288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffff80000000; valaddr_reg:x3; val_offset:174864*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174864*0 + 3*688*FLEN/8, x4, x1, x2)

inst_58289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffc0000000; valaddr_reg:x3; val_offset:174867*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174867*0 + 3*689*FLEN/8, x4, x1, x2)

inst_58290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffe0000000; valaddr_reg:x3; val_offset:174870*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174870*0 + 3*690*FLEN/8, x4, x1, x2)

inst_58291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffff0000000; valaddr_reg:x3; val_offset:174873*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174873*0 + 3*691*FLEN/8, x4, x1, x2)

inst_58292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffff8000000; valaddr_reg:x3; val_offset:174876*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174876*0 + 3*692*FLEN/8, x4, x1, x2)

inst_58293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffc000000; valaddr_reg:x3; val_offset:174879*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174879*0 + 3*693*FLEN/8, x4, x1, x2)

inst_58294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffe000000; valaddr_reg:x3; val_offset:174882*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174882*0 + 3*694*FLEN/8, x4, x1, x2)

inst_58295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffff000000; valaddr_reg:x3; val_offset:174885*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174885*0 + 3*695*FLEN/8, x4, x1, x2)

inst_58296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffff800000; valaddr_reg:x3; val_offset:174888*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174888*0 + 3*696*FLEN/8, x4, x1, x2)

inst_58297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffc00000; valaddr_reg:x3; val_offset:174891*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174891*0 + 3*697*FLEN/8, x4, x1, x2)

inst_58298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffe00000; valaddr_reg:x3; val_offset:174894*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174894*0 + 3*698*FLEN/8, x4, x1, x2)

inst_58299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffff00000; valaddr_reg:x3; val_offset:174897*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174897*0 + 3*699*FLEN/8, x4, x1, x2)

inst_58300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffff80000; valaddr_reg:x3; val_offset:174900*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174900*0 + 3*700*FLEN/8, x4, x1, x2)

inst_58301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffc0000; valaddr_reg:x3; val_offset:174903*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174903*0 + 3*701*FLEN/8, x4, x1, x2)

inst_58302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffe0000; valaddr_reg:x3; val_offset:174906*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174906*0 + 3*702*FLEN/8, x4, x1, x2)

inst_58303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffff0000; valaddr_reg:x3; val_offset:174909*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174909*0 + 3*703*FLEN/8, x4, x1, x2)

inst_58304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffff8000; valaddr_reg:x3; val_offset:174912*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174912*0 + 3*704*FLEN/8, x4, x1, x2)

inst_58305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffffc000; valaddr_reg:x3; val_offset:174915*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174915*0 + 3*705*FLEN/8, x4, x1, x2)

inst_58306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffffe000; valaddr_reg:x3; val_offset:174918*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174918*0 + 3*706*FLEN/8, x4, x1, x2)

inst_58307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffff000; valaddr_reg:x3; val_offset:174921*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174921*0 + 3*707*FLEN/8, x4, x1, x2)

inst_58308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffff800; valaddr_reg:x3; val_offset:174924*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174924*0 + 3*708*FLEN/8, x4, x1, x2)

inst_58309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffffc00; valaddr_reg:x3; val_offset:174927*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174927*0 + 3*709*FLEN/8, x4, x1, x2)

inst_58310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffffe00; valaddr_reg:x3; val_offset:174930*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174930*0 + 3*710*FLEN/8, x4, x1, x2)

inst_58311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffffff00; valaddr_reg:x3; val_offset:174933*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174933*0 + 3*711*FLEN/8, x4, x1, x2)

inst_58312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffffff80; valaddr_reg:x3; val_offset:174936*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174936*0 + 3*712*FLEN/8, x4, x1, x2)

inst_58313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffffffc0; valaddr_reg:x3; val_offset:174939*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174939*0 + 3*713*FLEN/8, x4, x1, x2)

inst_58314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffffffe0; valaddr_reg:x3; val_offset:174942*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174942*0 + 3*714*FLEN/8, x4, x1, x2)

inst_58315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffffff0; valaddr_reg:x3; val_offset:174945*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174945*0 + 3*715*FLEN/8, x4, x1, x2)

inst_58316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffffff8; valaddr_reg:x3; val_offset:174948*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174948*0 + 3*716*FLEN/8, x4, x1, x2)

inst_58317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffffffc; valaddr_reg:x3; val_offset:174951*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174951*0 + 3*717*FLEN/8, x4, x1, x2)

inst_58318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6ffffffffffffe; valaddr_reg:x3; val_offset:174954*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174954*0 + 3*718*FLEN/8, x4, x1, x2)

inst_58319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ac96757c8876 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1ac96757c8876; op2val:0x0;
op3val:0x6fffffffffffff; valaddr_reg:x3; val_offset:174957*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174957*0 + 3*719*FLEN/8, x4, x1, x2)

inst_58320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:174960*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174960*0 + 3*720*FLEN/8, x4, x1, x2)

inst_58321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:174963*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174963*0 + 3*721*FLEN/8, x4, x1, x2)

inst_58322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:174966*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174966*0 + 3*722*FLEN/8, x4, x1, x2)

inst_58323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:174969*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174969*0 + 3*723*FLEN/8, x4, x1, x2)

inst_58324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:174972*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174972*0 + 3*724*FLEN/8, x4, x1, x2)

inst_58325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:174975*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174975*0 + 3*725*FLEN/8, x4, x1, x2)

inst_58326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:174978*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174978*0 + 3*726*FLEN/8, x4, x1, x2)

inst_58327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:174981*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174981*0 + 3*727*FLEN/8, x4, x1, x2)

inst_58328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:174984*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174984*0 + 3*728*FLEN/8, x4, x1, x2)

inst_58329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:174987*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174987*0 + 3*729*FLEN/8, x4, x1, x2)

inst_58330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:174990*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174990*0 + 3*730*FLEN/8, x4, x1, x2)

inst_58331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:174993*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174993*0 + 3*731*FLEN/8, x4, x1, x2)

inst_58332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:174996*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174996*0 + 3*732*FLEN/8, x4, x1, x2)

inst_58333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:174999*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174999*0 + 3*733*FLEN/8, x4, x1, x2)

inst_58334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:175002*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175002*0 + 3*734*FLEN/8, x4, x1, x2)

inst_58335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:175005*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175005*0 + 3*735*FLEN/8, x4, x1, x2)

inst_58336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:175008*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175008*0 + 3*736*FLEN/8, x4, x1, x2)

inst_58337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:175011*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175011*0 + 3*737*FLEN/8, x4, x1, x2)

inst_58338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:175014*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175014*0 + 3*738*FLEN/8, x4, x1, x2)

inst_58339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:175017*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175017*0 + 3*739*FLEN/8, x4, x1, x2)

inst_58340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:175020*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175020*0 + 3*740*FLEN/8, x4, x1, x2)

inst_58341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:175023*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175023*0 + 3*741*FLEN/8, x4, x1, x2)

inst_58342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000000000; valaddr_reg:x3; val_offset:175026*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175026*0 + 3*742*FLEN/8, x4, x1, x2)

inst_58343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000000001; valaddr_reg:x3; val_offset:175029*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175029*0 + 3*743*FLEN/8, x4, x1, x2)

inst_58344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000000003; valaddr_reg:x3; val_offset:175032*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175032*0 + 3*744*FLEN/8, x4, x1, x2)

inst_58345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000000007; valaddr_reg:x3; val_offset:175035*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175035*0 + 3*745*FLEN/8, x4, x1, x2)

inst_58346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000000000f; valaddr_reg:x3; val_offset:175038*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175038*0 + 3*746*FLEN/8, x4, x1, x2)

inst_58347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000000001f; valaddr_reg:x3; val_offset:175041*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175041*0 + 3*747*FLEN/8, x4, x1, x2)

inst_58348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000000003f; valaddr_reg:x3; val_offset:175044*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175044*0 + 3*748*FLEN/8, x4, x1, x2)

inst_58349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000000007f; valaddr_reg:x3; val_offset:175047*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175047*0 + 3*749*FLEN/8, x4, x1, x2)

inst_58350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000000000ff; valaddr_reg:x3; val_offset:175050*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175050*0 + 3*750*FLEN/8, x4, x1, x2)

inst_58351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000000001ff; valaddr_reg:x3; val_offset:175053*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175053*0 + 3*751*FLEN/8, x4, x1, x2)

inst_58352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000000003ff; valaddr_reg:x3; val_offset:175056*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175056*0 + 3*752*FLEN/8, x4, x1, x2)

inst_58353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000000007ff; valaddr_reg:x3; val_offset:175059*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175059*0 + 3*753*FLEN/8, x4, x1, x2)

inst_58354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000000fff; valaddr_reg:x3; val_offset:175062*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175062*0 + 3*754*FLEN/8, x4, x1, x2)

inst_58355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000001fff; valaddr_reg:x3; val_offset:175065*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175065*0 + 3*755*FLEN/8, x4, x1, x2)

inst_58356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000003fff; valaddr_reg:x3; val_offset:175068*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175068*0 + 3*756*FLEN/8, x4, x1, x2)

inst_58357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000007fff; valaddr_reg:x3; val_offset:175071*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175071*0 + 3*757*FLEN/8, x4, x1, x2)

inst_58358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000000ffff; valaddr_reg:x3; val_offset:175074*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175074*0 + 3*758*FLEN/8, x4, x1, x2)

inst_58359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000001ffff; valaddr_reg:x3; val_offset:175077*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175077*0 + 3*759*FLEN/8, x4, x1, x2)

inst_58360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000003ffff; valaddr_reg:x3; val_offset:175080*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175080*0 + 3*760*FLEN/8, x4, x1, x2)

inst_58361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b000000007ffff; valaddr_reg:x3; val_offset:175083*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175083*0 + 3*761*FLEN/8, x4, x1, x2)

inst_58362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000000fffff; valaddr_reg:x3; val_offset:175086*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175086*0 + 3*762*FLEN/8, x4, x1, x2)

inst_58363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000001fffff; valaddr_reg:x3; val_offset:175089*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175089*0 + 3*763*FLEN/8, x4, x1, x2)

inst_58364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000003fffff; valaddr_reg:x3; val_offset:175092*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175092*0 + 3*764*FLEN/8, x4, x1, x2)

inst_58365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b00000007fffff; valaddr_reg:x3; val_offset:175095*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175095*0 + 3*765*FLEN/8, x4, x1, x2)

inst_58366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000000ffffff; valaddr_reg:x3; val_offset:175098*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175098*0 + 3*766*FLEN/8, x4, x1, x2)

inst_58367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1b10690eeadaf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1b10690eeadaf; op2val:0x0;
op3val:0x1b0000001ffffff; valaddr_reg:x3; val_offset:175101*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 175101*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988107641487359,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988176360964095,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988313799917567,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363988588677824511,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363989138433638399,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363990237945266175,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363992436968521727,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4363996835015032831,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4364005631108055039,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4364023223294099455,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4364058407666188287,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4364128776410365951,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4364269513898721279,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4364550988875431935,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4365113938828853247,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4366239838735695871,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4366239838735695872,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4367365738642538496,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4367928688595959808,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368210163572670464,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368350901061025792,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368421269805203456,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368456454177292288,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368474046363336704,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368482842456358912,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368487240502870016,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368489439526125568,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368490539037753344,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491088793567232,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491363671474176,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491501110427648,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491569829904384,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491604189642752,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491621369511936,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491629959446528,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491634254413824,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491636401897472,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491637475639296,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638012510208,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638280945664,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638415163392,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638482272256,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638515826688,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638532603904,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638540992512,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638545186816,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638547283968,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638548332544,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638548856832,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549118976,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549250048,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549315584,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549348352,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549364736,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549372928,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549377024,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549379072,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549380096,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549380608,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549380864,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549380992,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549381056,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549381088,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549381104,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549381112,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549381116,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549381118,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4368491638549381119,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890936411434785321,64,FLEN)
NAN_BOXED(2323074060784990657,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815232,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815233,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815235,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815239,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815247,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815263,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815295,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815359,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815487,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815743,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774816255,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774817279,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774819327,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774823423,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774831615,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774847999,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774880767,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774946303,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775077375,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775339519,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775863807,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429776912383,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429779009535,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429783203839,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429791592447,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429808369663,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429841924095,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429909032959,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430043250687,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430311686143,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430848557055,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940431922298879,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940434069782527,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940438364749823,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940446954684415,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940464134553599,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940498494291967,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940567213768703,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940704652722175,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940979530629119,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308941529286443007,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308942628798070783,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308944827821326335,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308949225867837439,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308958021960859647,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308975614146904063,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309010798518992895,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309081167263170559,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309221904751525887,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309503379728236543,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9310066329681657855,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500479,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500480,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312318129495343104,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312881079448764416,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313162554425475072,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313303291913830400,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313373660658008064,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313408845030096896,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313426437216141312,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313435233309163520,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313439631355674624,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313441830378930176,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313442929890557952,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443479646371840,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443754524278784,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443891963232256,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443960682708992,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443995042447360,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444012222316544,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444020812251136,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444025107218432,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444027254702080,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028328443904,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028865314816,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029133750272,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029267968000,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029335076864,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029368631296,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029385408512,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029393797120,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029397991424,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029400088576,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401137152,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401661440,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401923584,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402054656,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402120192,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402152960,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402169344,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402177536,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402181632,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402183680,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402184704,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185216,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185472,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185600,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185664,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185696,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185712,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185720,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185724,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185726,64,FLEN)
NAN_BOXED(6890939742199713594,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185727,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343872,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343873,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343875,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343879,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343887,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343903,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343935,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187343999,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187344127,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187344383,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187344895,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187345919,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187347967,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187352063,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187360255,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187376639,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187409407,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187474943,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187606015,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070187868159,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070188392447,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070189441023,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070191538175,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070195732479,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070204121087,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070220898303,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070254452735,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070321561599,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070455779327,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914070724214783,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914071261085695,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914072334827519,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914074482311167,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914078777278463,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914087367213055,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914104547082239,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914138906820607,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914207626297343,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914345065250815,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654914619943157759,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654915169698971647,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654916269210599423,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654918468233854975,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654922866280366079,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654931662373388287,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654949254559432703,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13654984438931521535,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13655054807675699199,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13655195545164054527,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13655477020140765183,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13656039970094186495,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13657165870001029119,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13657165870001029120,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13658291769907871744,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13658854719861293056,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659136194838003712,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659276932326359040,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659347301070536704,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659382485442625536,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659400077628669952,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659408873721692160,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659413271768203264,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659415470791458816,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659416570303086592,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417120058900480,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417394936807424,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417532375760896,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417601095237632,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417635454976000,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417652634845184,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417661224779776,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417665519747072,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417667667230720,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417668740972544,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669277843456,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669546278912,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669680496640,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669747605504,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669781159936,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669797937152,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669806325760,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669810520064,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669812617216,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669813665792,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814190080,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814452224,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814583296,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814648832,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814681600,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814697984,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814706176,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814710272,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814712320,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814713344,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814713856,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714112,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714240,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714304,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714336,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714352,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714360,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714364,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714366,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13659417669814714367,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890951213966178718,64,FLEN)
NAN_BOXED(11514896294549674249,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607488,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607489,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607491,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607495,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607503,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607519,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607551,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607615,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607743,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252607999,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252608511,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252609535,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252611583,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252615679,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252623871,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252640255,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252673023,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252738559,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426252869631,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426253131775,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426253656063,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426254704639,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426256801791,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426260996095,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426269384703,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426286161919,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426319716351,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426386825215,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426521042943,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110426789478399,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110427326349311,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110428400091135,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110430547574783,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110434842542079,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110443432476671,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110460612345855,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110494972084223,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110563691560959,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110701130514431,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517110976008421375,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517111525764235263,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517112625275863039,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517114824299118591,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517119222345629695,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517128018438651903,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517145610624696319,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517180794996785151,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517251163740962815,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517391901229318143,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4517673376206028799,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4518236326159450111,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4519362226066292735,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4519362226066292736,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4520488125973135360,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521051075926556672,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521332550903267328,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521473288391622656,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521543657135800320,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521578841507889152,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521596433693933568,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521605229786955776,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521609627833466880,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521611826856722432,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521612926368350208,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521613476124164096,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521613751002071040,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521613888441024512,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521613957160501248,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521613991520239616,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614008700108800,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614017290043392,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614021585010688,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614023732494336,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614024806236160,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025343107072,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025611542528,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025745760256,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025812869120,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025846423552,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025863200768,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025871589376,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025875783680,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025877880832,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025878929408,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879453696,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879715840,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879846912,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879912448,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879945216,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879961600,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879969792,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879973888,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879975936,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879976960,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977472,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977728,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977856,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977920,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977952,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977968,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977976,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977980,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977982,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4521614025879977983,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890960264601343308,64,FLEN)
NAN_BOXED(2323034482954411366,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783040,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783041,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783043,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783047,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783055,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783071,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783103,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783167,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783295,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837783551,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837784063,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837785087,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837787135,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837791231,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837799423,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837815807,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837848575,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885837914111,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885838045183,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885838307327,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885838831615,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885839880191,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885841977343,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885846171647,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885854560255,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885871337471,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885904891903,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762885972000767,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762886106218495,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762886374653951,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762886911524863,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762887985266687,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762890132750335,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762894427717631,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762903017652223,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762920197521407,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465762954557259775,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465763023276736511,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465763160715689983,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465763435593596927,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465763985349410815,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465765084861038591,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465767283884294143,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465771681930805247,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465780478023827455,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465798070209871871,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465833254581960703,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13465903623326138367,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13466044360814493695,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13466325835791204351,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13466888785744625663,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13468014685651468287,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13468014685651468288,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13469140585558310912,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13469703535511732224,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13469985010488442880,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470125747976798208,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470196116720975872,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470231301093064704,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470248893279109120,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470257689372131328,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470262087418642432,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470264286441897984,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470265385953525760,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470265935709339648,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266210587246592,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266348026200064,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266416745676800,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266451105415168,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266468285284352,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266476875218944,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266481170186240,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266483317669888,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266484391411712,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266484928282624,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485196718080,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485330935808,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485398044672,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485431599104,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485448376320,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485456764928,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485460959232,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485463056384,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485464104960,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485464629248,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485464891392,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465022464,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465088000,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465120768,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465137152,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465145344,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465149440,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465151488,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465152512,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153024,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153280,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153408,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153472,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153504,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153520,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153528,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153532,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153534,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13470266485465153535,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890968641307173020,64,FLEN)
NAN_BOXED(11514867513783387467,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222976,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222977,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222979,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222983,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222991,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223007,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223039,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223103,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223231,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223487,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223999,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764225023,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764227071,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764231167,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764239359,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764255743,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764288511,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764354047,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764485119,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764747263,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597765271551,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597766320127,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597768417279,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597772611583,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597781000191,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597797777407,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597831331839,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597898440703,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598032658431,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598301093887,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598837964799,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021599911706623,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021602059190271,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021606354157567,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021614944092159,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021632123961343,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021666483699711,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021735203176447,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021872642129919,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27022147520036863,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27022697275850751,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27023796787478527,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27025995810734079,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27030393857245183,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27039189950267391,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27056782136311807,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27091966508400639,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27162335252578303,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27303072740933631,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27584547717644287,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(28147497671065599,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(29273397577908223,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(29273397577908224,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(30399297484750848,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(30962247438172160,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31243722414882816,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31384459903238144,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31454828647415808,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31490013019504640,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31507605205549056,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31516401298571264,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31520799345082368,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31522998368337920,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524097879965696,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524647635779584,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524922513686528,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525059952640000,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525128672116736,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525163031855104,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525180211724288,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525188801658880,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525193096626176,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525195244109824,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525196317851648,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525196854722560,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197123158016,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197257375744,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197324484608,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197358039040,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197374816256,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197383204864,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197387399168,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197389496320,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197390544896,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391069184,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391331328,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391462400,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391527936,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391560704,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391577088,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391585280,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391589376,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391591424,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592448,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592960,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593216,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593344,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593408,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593440,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593456,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593464,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593468,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593470,64,FLEN)
NAN_BOXED(6890978667069737078,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593471,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003392,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003393,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003395,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003399,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003407,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003423,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003455,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003519,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003647,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003903,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939004415,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939005439,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939007487,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939011583,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939019775,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939036159,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939068927,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939134463,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939265535,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939527679,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189940051967,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189941100543,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189943197695,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189947391999,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189955780607,64,FLEN)
NAN_BOXED(6890983546613050799,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189972557823,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
