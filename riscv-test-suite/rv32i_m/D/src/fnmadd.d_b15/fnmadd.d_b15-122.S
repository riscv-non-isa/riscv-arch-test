
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_92928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffffffe0; valaddr_reg:x3; val_offset:278784*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278784*0 + 3*0*FLEN/8, x4, x1, x2)

inst_92929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffffff0; valaddr_reg:x3; val_offset:278787*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278787*0 + 3*1*FLEN/8, x4, x1, x2)

inst_92930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffffff8; valaddr_reg:x3; val_offset:278790*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278790*0 + 3*2*FLEN/8, x4, x1, x2)

inst_92931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffffffc; valaddr_reg:x3; val_offset:278793*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278793*0 + 3*3*FLEN/8, x4, x1, x2)

inst_92932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829ffffffffffffe; valaddr_reg:x3; val_offset:278796*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278796*0 + 3*4*FLEN/8, x4, x1, x2)

inst_92933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd42e98ae83fc1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad42e98ae83fc1; op2val:0x8000;
op3val:0x829fffffffffffff; valaddr_reg:x3; val_offset:278799*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278799*0 + 3*5*FLEN/8, x4, x1, x2)

inst_92934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000000000; valaddr_reg:x3; val_offset:278802*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278802*0 + 3*6*FLEN/8, x4, x1, x2)

inst_92935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000000001; valaddr_reg:x3; val_offset:278805*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278805*0 + 3*7*FLEN/8, x4, x1, x2)

inst_92936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000000003; valaddr_reg:x3; val_offset:278808*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278808*0 + 3*8*FLEN/8, x4, x1, x2)

inst_92937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000000007; valaddr_reg:x3; val_offset:278811*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278811*0 + 3*9*FLEN/8, x4, x1, x2)

inst_92938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000000000f; valaddr_reg:x3; val_offset:278814*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278814*0 + 3*10*FLEN/8, x4, x1, x2)

inst_92939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000000001f; valaddr_reg:x3; val_offset:278817*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278817*0 + 3*11*FLEN/8, x4, x1, x2)

inst_92940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000000003f; valaddr_reg:x3; val_offset:278820*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278820*0 + 3*12*FLEN/8, x4, x1, x2)

inst_92941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000000007f; valaddr_reg:x3; val_offset:278823*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278823*0 + 3*13*FLEN/8, x4, x1, x2)

inst_92942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000000000ff; valaddr_reg:x3; val_offset:278826*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278826*0 + 3*14*FLEN/8, x4, x1, x2)

inst_92943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000000001ff; valaddr_reg:x3; val_offset:278829*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278829*0 + 3*15*FLEN/8, x4, x1, x2)

inst_92944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000000003ff; valaddr_reg:x3; val_offset:278832*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278832*0 + 3*16*FLEN/8, x4, x1, x2)

inst_92945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000000007ff; valaddr_reg:x3; val_offset:278835*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278835*0 + 3*17*FLEN/8, x4, x1, x2)

inst_92946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000000fff; valaddr_reg:x3; val_offset:278838*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278838*0 + 3*18*FLEN/8, x4, x1, x2)

inst_92947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000001fff; valaddr_reg:x3; val_offset:278841*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278841*0 + 3*19*FLEN/8, x4, x1, x2)

inst_92948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000003fff; valaddr_reg:x3; val_offset:278844*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278844*0 + 3*20*FLEN/8, x4, x1, x2)

inst_92949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000007fff; valaddr_reg:x3; val_offset:278847*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278847*0 + 3*21*FLEN/8, x4, x1, x2)

inst_92950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000000ffff; valaddr_reg:x3; val_offset:278850*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278850*0 + 3*22*FLEN/8, x4, x1, x2)

inst_92951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000001ffff; valaddr_reg:x3; val_offset:278853*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278853*0 + 3*23*FLEN/8, x4, x1, x2)

inst_92952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000003ffff; valaddr_reg:x3; val_offset:278856*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278856*0 + 3*24*FLEN/8, x4, x1, x2)

inst_92953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000007ffff; valaddr_reg:x3; val_offset:278859*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278859*0 + 3*25*FLEN/8, x4, x1, x2)

inst_92954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000000fffff; valaddr_reg:x3; val_offset:278862*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278862*0 + 3*26*FLEN/8, x4, x1, x2)

inst_92955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000001fffff; valaddr_reg:x3; val_offset:278865*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278865*0 + 3*27*FLEN/8, x4, x1, x2)

inst_92956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000003fffff; valaddr_reg:x3; val_offset:278868*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278868*0 + 3*28*FLEN/8, x4, x1, x2)

inst_92957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000007fffff; valaddr_reg:x3; val_offset:278871*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278871*0 + 3*29*FLEN/8, x4, x1, x2)

inst_92958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000000ffffff; valaddr_reg:x3; val_offset:278874*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278874*0 + 3*30*FLEN/8, x4, x1, x2)

inst_92959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000001ffffff; valaddr_reg:x3; val_offset:278877*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278877*0 + 3*31*FLEN/8, x4, x1, x2)

inst_92960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000003ffffff; valaddr_reg:x3; val_offset:278880*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278880*0 + 3*32*FLEN/8, x4, x1, x2)

inst_92961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000007ffffff; valaddr_reg:x3; val_offset:278883*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278883*0 + 3*33*FLEN/8, x4, x1, x2)

inst_92962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000000fffffff; valaddr_reg:x3; val_offset:278886*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278886*0 + 3*34*FLEN/8, x4, x1, x2)

inst_92963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000001fffffff; valaddr_reg:x3; val_offset:278889*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278889*0 + 3*35*FLEN/8, x4, x1, x2)

inst_92964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000003fffffff; valaddr_reg:x3; val_offset:278892*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278892*0 + 3*36*FLEN/8, x4, x1, x2)

inst_92965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000007fffffff; valaddr_reg:x3; val_offset:278895*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278895*0 + 3*37*FLEN/8, x4, x1, x2)

inst_92966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00000ffffffff; valaddr_reg:x3; val_offset:278898*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278898*0 + 3*38*FLEN/8, x4, x1, x2)

inst_92967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00001ffffffff; valaddr_reg:x3; val_offset:278901*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278901*0 + 3*39*FLEN/8, x4, x1, x2)

inst_92968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00003ffffffff; valaddr_reg:x3; val_offset:278904*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278904*0 + 3*40*FLEN/8, x4, x1, x2)

inst_92969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00007ffffffff; valaddr_reg:x3; val_offset:278907*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278907*0 + 3*41*FLEN/8, x4, x1, x2)

inst_92970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0000fffffffff; valaddr_reg:x3; val_offset:278910*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278910*0 + 3*42*FLEN/8, x4, x1, x2)

inst_92971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0001fffffffff; valaddr_reg:x3; val_offset:278913*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278913*0 + 3*43*FLEN/8, x4, x1, x2)

inst_92972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0003fffffffff; valaddr_reg:x3; val_offset:278916*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278916*0 + 3*44*FLEN/8, x4, x1, x2)

inst_92973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0007fffffffff; valaddr_reg:x3; val_offset:278919*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278919*0 + 3*45*FLEN/8, x4, x1, x2)

inst_92974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca000ffffffffff; valaddr_reg:x3; val_offset:278922*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278922*0 + 3*46*FLEN/8, x4, x1, x2)

inst_92975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca001ffffffffff; valaddr_reg:x3; val_offset:278925*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278925*0 + 3*47*FLEN/8, x4, x1, x2)

inst_92976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca003ffffffffff; valaddr_reg:x3; val_offset:278928*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278928*0 + 3*48*FLEN/8, x4, x1, x2)

inst_92977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca007ffffffffff; valaddr_reg:x3; val_offset:278931*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278931*0 + 3*49*FLEN/8, x4, x1, x2)

inst_92978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca00fffffffffff; valaddr_reg:x3; val_offset:278934*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278934*0 + 3*50*FLEN/8, x4, x1, x2)

inst_92979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca01fffffffffff; valaddr_reg:x3; val_offset:278937*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278937*0 + 3*51*FLEN/8, x4, x1, x2)

inst_92980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca03fffffffffff; valaddr_reg:x3; val_offset:278940*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278940*0 + 3*52*FLEN/8, x4, x1, x2)

inst_92981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca07fffffffffff; valaddr_reg:x3; val_offset:278943*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278943*0 + 3*53*FLEN/8, x4, x1, x2)

inst_92982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca0ffffffffffff; valaddr_reg:x3; val_offset:278946*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278946*0 + 3*54*FLEN/8, x4, x1, x2)

inst_92983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca1ffffffffffff; valaddr_reg:x3; val_offset:278949*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278949*0 + 3*55*FLEN/8, x4, x1, x2)

inst_92984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca3ffffffffffff; valaddr_reg:x3; val_offset:278952*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278952*0 + 3*56*FLEN/8, x4, x1, x2)

inst_92985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca7ffffffffffff; valaddr_reg:x3; val_offset:278955*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278955*0 + 3*57*FLEN/8, x4, x1, x2)

inst_92986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ca8000000000000; valaddr_reg:x3; val_offset:278958*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278958*0 + 3*58*FLEN/8, x4, x1, x2)

inst_92987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cac000000000000; valaddr_reg:x3; val_offset:278961*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278961*0 + 3*59*FLEN/8, x4, x1, x2)

inst_92988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cae000000000000; valaddr_reg:x3; val_offset:278964*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278964*0 + 3*60*FLEN/8, x4, x1, x2)

inst_92989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caf000000000000; valaddr_reg:x3; val_offset:278967*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278967*0 + 3*61*FLEN/8, x4, x1, x2)

inst_92990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caf800000000000; valaddr_reg:x3; val_offset:278970*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278970*0 + 3*62*FLEN/8, x4, x1, x2)

inst_92991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafc00000000000; valaddr_reg:x3; val_offset:278973*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278973*0 + 3*63*FLEN/8, x4, x1, x2)

inst_92992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafe00000000000; valaddr_reg:x3; val_offset:278976*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278976*0 + 3*64*FLEN/8, x4, x1, x2)

inst_92993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caff00000000000; valaddr_reg:x3; val_offset:278979*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278979*0 + 3*65*FLEN/8, x4, x1, x2)

inst_92994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caff80000000000; valaddr_reg:x3; val_offset:278982*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278982*0 + 3*66*FLEN/8, x4, x1, x2)

inst_92995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffc0000000000; valaddr_reg:x3; val_offset:278985*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278985*0 + 3*67*FLEN/8, x4, x1, x2)

inst_92996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffe0000000000; valaddr_reg:x3; val_offset:278988*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278988*0 + 3*68*FLEN/8, x4, x1, x2)

inst_92997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafff0000000000; valaddr_reg:x3; val_offset:278991*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278991*0 + 3*69*FLEN/8, x4, x1, x2)

inst_92998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafff8000000000; valaddr_reg:x3; val_offset:278994*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278994*0 + 3*70*FLEN/8, x4, x1, x2)

inst_92999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffc000000000; valaddr_reg:x3; val_offset:278997*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 278997*0 + 3*71*FLEN/8, x4, x1, x2)

inst_93000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffe000000000; valaddr_reg:x3; val_offset:279000*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279000*0 + 3*72*FLEN/8, x4, x1, x2)

inst_93001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffff000000000; valaddr_reg:x3; val_offset:279003*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279003*0 + 3*73*FLEN/8, x4, x1, x2)

inst_93002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffff800000000; valaddr_reg:x3; val_offset:279006*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279006*0 + 3*74*FLEN/8, x4, x1, x2)

inst_93003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffc00000000; valaddr_reg:x3; val_offset:279009*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279009*0 + 3*75*FLEN/8, x4, x1, x2)

inst_93004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffe00000000; valaddr_reg:x3; val_offset:279012*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279012*0 + 3*76*FLEN/8, x4, x1, x2)

inst_93005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffff00000000; valaddr_reg:x3; val_offset:279015*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279015*0 + 3*77*FLEN/8, x4, x1, x2)

inst_93006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffff80000000; valaddr_reg:x3; val_offset:279018*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279018*0 + 3*78*FLEN/8, x4, x1, x2)

inst_93007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffc0000000; valaddr_reg:x3; val_offset:279021*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279021*0 + 3*79*FLEN/8, x4, x1, x2)

inst_93008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffe0000000; valaddr_reg:x3; val_offset:279024*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279024*0 + 3*80*FLEN/8, x4, x1, x2)

inst_93009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffff0000000; valaddr_reg:x3; val_offset:279027*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279027*0 + 3*81*FLEN/8, x4, x1, x2)

inst_93010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffff8000000; valaddr_reg:x3; val_offset:279030*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279030*0 + 3*82*FLEN/8, x4, x1, x2)

inst_93011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffc000000; valaddr_reg:x3; val_offset:279033*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279033*0 + 3*83*FLEN/8, x4, x1, x2)

inst_93012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffe000000; valaddr_reg:x3; val_offset:279036*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279036*0 + 3*84*FLEN/8, x4, x1, x2)

inst_93013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffff000000; valaddr_reg:x3; val_offset:279039*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279039*0 + 3*85*FLEN/8, x4, x1, x2)

inst_93014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffff800000; valaddr_reg:x3; val_offset:279042*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279042*0 + 3*86*FLEN/8, x4, x1, x2)

inst_93015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffc00000; valaddr_reg:x3; val_offset:279045*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279045*0 + 3*87*FLEN/8, x4, x1, x2)

inst_93016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffe00000; valaddr_reg:x3; val_offset:279048*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279048*0 + 3*88*FLEN/8, x4, x1, x2)

inst_93017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffff00000; valaddr_reg:x3; val_offset:279051*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279051*0 + 3*89*FLEN/8, x4, x1, x2)

inst_93018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffff80000; valaddr_reg:x3; val_offset:279054*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279054*0 + 3*90*FLEN/8, x4, x1, x2)

inst_93019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffc0000; valaddr_reg:x3; val_offset:279057*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279057*0 + 3*91*FLEN/8, x4, x1, x2)

inst_93020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffe0000; valaddr_reg:x3; val_offset:279060*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279060*0 + 3*92*FLEN/8, x4, x1, x2)

inst_93021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffff0000; valaddr_reg:x3; val_offset:279063*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279063*0 + 3*93*FLEN/8, x4, x1, x2)

inst_93022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffff8000; valaddr_reg:x3; val_offset:279066*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279066*0 + 3*94*FLEN/8, x4, x1, x2)

inst_93023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffffc000; valaddr_reg:x3; val_offset:279069*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279069*0 + 3*95*FLEN/8, x4, x1, x2)

inst_93024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffffe000; valaddr_reg:x3; val_offset:279072*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279072*0 + 3*96*FLEN/8, x4, x1, x2)

inst_93025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffff000; valaddr_reg:x3; val_offset:279075*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279075*0 + 3*97*FLEN/8, x4, x1, x2)

inst_93026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffff800; valaddr_reg:x3; val_offset:279078*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279078*0 + 3*98*FLEN/8, x4, x1, x2)

inst_93027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffffc00; valaddr_reg:x3; val_offset:279081*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279081*0 + 3*99*FLEN/8, x4, x1, x2)

inst_93028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffffe00; valaddr_reg:x3; val_offset:279084*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279084*0 + 3*100*FLEN/8, x4, x1, x2)

inst_93029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffffff00; valaddr_reg:x3; val_offset:279087*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279087*0 + 3*101*FLEN/8, x4, x1, x2)

inst_93030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffffff80; valaddr_reg:x3; val_offset:279090*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279090*0 + 3*102*FLEN/8, x4, x1, x2)

inst_93031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffffffc0; valaddr_reg:x3; val_offset:279093*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279093*0 + 3*103*FLEN/8, x4, x1, x2)

inst_93032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffffffe0; valaddr_reg:x3; val_offset:279096*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279096*0 + 3*104*FLEN/8, x4, x1, x2)

inst_93033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffffff0; valaddr_reg:x3; val_offset:279099*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279099*0 + 3*105*FLEN/8, x4, x1, x2)

inst_93034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffffff8; valaddr_reg:x3; val_offset:279102*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279102*0 + 3*106*FLEN/8, x4, x1, x2)

inst_93035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffffffc; valaddr_reg:x3; val_offset:279105*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279105*0 + 3*107*FLEN/8, x4, x1, x2)

inst_93036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3caffffffffffffe; valaddr_reg:x3; val_offset:279108*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279108*0 + 3*108*FLEN/8, x4, x1, x2)

inst_93037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3cafffffffffffff; valaddr_reg:x3; val_offset:279111*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279111*0 + 3*109*FLEN/8, x4, x1, x2)

inst_93038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:279114*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279114*0 + 3*110*FLEN/8, x4, x1, x2)

inst_93039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:279117*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279117*0 + 3*111*FLEN/8, x4, x1, x2)

inst_93040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:279120*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279120*0 + 3*112*FLEN/8, x4, x1, x2)

inst_93041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:279123*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279123*0 + 3*113*FLEN/8, x4, x1, x2)

inst_93042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:279126*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279126*0 + 3*114*FLEN/8, x4, x1, x2)

inst_93043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:279129*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279129*0 + 3*115*FLEN/8, x4, x1, x2)

inst_93044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:279132*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279132*0 + 3*116*FLEN/8, x4, x1, x2)

inst_93045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:279135*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279135*0 + 3*117*FLEN/8, x4, x1, x2)

inst_93046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:279138*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279138*0 + 3*118*FLEN/8, x4, x1, x2)

inst_93047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:279141*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279141*0 + 3*119*FLEN/8, x4, x1, x2)

inst_93048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:279144*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279144*0 + 3*120*FLEN/8, x4, x1, x2)

inst_93049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:279147*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279147*0 + 3*121*FLEN/8, x4, x1, x2)

inst_93050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:279150*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279150*0 + 3*122*FLEN/8, x4, x1, x2)

inst_93051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:279153*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279153*0 + 3*123*FLEN/8, x4, x1, x2)

inst_93052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:279156*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279156*0 + 3*124*FLEN/8, x4, x1, x2)

inst_93053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:279159*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279159*0 + 3*125*FLEN/8, x4, x1, x2)

inst_93054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:279162*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279162*0 + 3*126*FLEN/8, x4, x1, x2)

inst_93055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:279165*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279165*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_93056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:279168*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279168*0 + 3*128*FLEN/8, x4, x1, x2)

inst_93057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:279171*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279171*0 + 3*129*FLEN/8, x4, x1, x2)

inst_93058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:279174*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279174*0 + 3*130*FLEN/8, x4, x1, x2)

inst_93059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd432167879214 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x17f38add1a65e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad432167879214; op2val:0x20317f38add1a65e;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:279177*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279177*0 + 3*131*FLEN/8, x4, x1, x2)

inst_93060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:279180*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279180*0 + 3*132*FLEN/8, x4, x1, x2)

inst_93061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:279183*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279183*0 + 3*133*FLEN/8, x4, x1, x2)

inst_93062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:279186*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279186*0 + 3*134*FLEN/8, x4, x1, x2)

inst_93063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:279189*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279189*0 + 3*135*FLEN/8, x4, x1, x2)

inst_93064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:279192*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279192*0 + 3*136*FLEN/8, x4, x1, x2)

inst_93065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:279195*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279195*0 + 3*137*FLEN/8, x4, x1, x2)

inst_93066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:279198*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279198*0 + 3*138*FLEN/8, x4, x1, x2)

inst_93067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:279201*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279201*0 + 3*139*FLEN/8, x4, x1, x2)

inst_93068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:279204*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279204*0 + 3*140*FLEN/8, x4, x1, x2)

inst_93069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:279207*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279207*0 + 3*141*FLEN/8, x4, x1, x2)

inst_93070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:279210*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279210*0 + 3*142*FLEN/8, x4, x1, x2)

inst_93071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:279213*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279213*0 + 3*143*FLEN/8, x4, x1, x2)

inst_93072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:279216*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279216*0 + 3*144*FLEN/8, x4, x1, x2)

inst_93073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:279219*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279219*0 + 3*145*FLEN/8, x4, x1, x2)

inst_93074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:279222*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279222*0 + 3*146*FLEN/8, x4, x1, x2)

inst_93075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:279225*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279225*0 + 3*147*FLEN/8, x4, x1, x2)

inst_93076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:279228*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279228*0 + 3*148*FLEN/8, x4, x1, x2)

inst_93077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:279231*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279231*0 + 3*149*FLEN/8, x4, x1, x2)

inst_93078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:279234*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279234*0 + 3*150*FLEN/8, x4, x1, x2)

inst_93079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:279237*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279237*0 + 3*151*FLEN/8, x4, x1, x2)

inst_93080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:279240*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279240*0 + 3*152*FLEN/8, x4, x1, x2)

inst_93081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:279243*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279243*0 + 3*153*FLEN/8, x4, x1, x2)

inst_93082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000000000; valaddr_reg:x3; val_offset:279246*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279246*0 + 3*154*FLEN/8, x4, x1, x2)

inst_93083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000000001; valaddr_reg:x3; val_offset:279249*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279249*0 + 3*155*FLEN/8, x4, x1, x2)

inst_93084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000000003; valaddr_reg:x3; val_offset:279252*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279252*0 + 3*156*FLEN/8, x4, x1, x2)

inst_93085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000000007; valaddr_reg:x3; val_offset:279255*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279255*0 + 3*157*FLEN/8, x4, x1, x2)

inst_93086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000000000f; valaddr_reg:x3; val_offset:279258*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279258*0 + 3*158*FLEN/8, x4, x1, x2)

inst_93087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000000001f; valaddr_reg:x3; val_offset:279261*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279261*0 + 3*159*FLEN/8, x4, x1, x2)

inst_93088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000000003f; valaddr_reg:x3; val_offset:279264*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279264*0 + 3*160*FLEN/8, x4, x1, x2)

inst_93089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000000007f; valaddr_reg:x3; val_offset:279267*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279267*0 + 3*161*FLEN/8, x4, x1, x2)

inst_93090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000000000ff; valaddr_reg:x3; val_offset:279270*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279270*0 + 3*162*FLEN/8, x4, x1, x2)

inst_93091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000000001ff; valaddr_reg:x3; val_offset:279273*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279273*0 + 3*163*FLEN/8, x4, x1, x2)

inst_93092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000000003ff; valaddr_reg:x3; val_offset:279276*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279276*0 + 3*164*FLEN/8, x4, x1, x2)

inst_93093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000000007ff; valaddr_reg:x3; val_offset:279279*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279279*0 + 3*165*FLEN/8, x4, x1, x2)

inst_93094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000000fff; valaddr_reg:x3; val_offset:279282*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279282*0 + 3*166*FLEN/8, x4, x1, x2)

inst_93095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000001fff; valaddr_reg:x3; val_offset:279285*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279285*0 + 3*167*FLEN/8, x4, x1, x2)

inst_93096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000003fff; valaddr_reg:x3; val_offset:279288*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279288*0 + 3*168*FLEN/8, x4, x1, x2)

inst_93097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000007fff; valaddr_reg:x3; val_offset:279291*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279291*0 + 3*169*FLEN/8, x4, x1, x2)

inst_93098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000000ffff; valaddr_reg:x3; val_offset:279294*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279294*0 + 3*170*FLEN/8, x4, x1, x2)

inst_93099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000001ffff; valaddr_reg:x3; val_offset:279297*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279297*0 + 3*171*FLEN/8, x4, x1, x2)

inst_93100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000003ffff; valaddr_reg:x3; val_offset:279300*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279300*0 + 3*172*FLEN/8, x4, x1, x2)

inst_93101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000007ffff; valaddr_reg:x3; val_offset:279303*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279303*0 + 3*173*FLEN/8, x4, x1, x2)

inst_93102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000000fffff; valaddr_reg:x3; val_offset:279306*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279306*0 + 3*174*FLEN/8, x4, x1, x2)

inst_93103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000001fffff; valaddr_reg:x3; val_offset:279309*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279309*0 + 3*175*FLEN/8, x4, x1, x2)

inst_93104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000003fffff; valaddr_reg:x3; val_offset:279312*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279312*0 + 3*176*FLEN/8, x4, x1, x2)

inst_93105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000007fffff; valaddr_reg:x3; val_offset:279315*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279315*0 + 3*177*FLEN/8, x4, x1, x2)

inst_93106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000000ffffff; valaddr_reg:x3; val_offset:279318*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279318*0 + 3*178*FLEN/8, x4, x1, x2)

inst_93107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000001ffffff; valaddr_reg:x3; val_offset:279321*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279321*0 + 3*179*FLEN/8, x4, x1, x2)

inst_93108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000003ffffff; valaddr_reg:x3; val_offset:279324*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279324*0 + 3*180*FLEN/8, x4, x1, x2)

inst_93109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000007ffffff; valaddr_reg:x3; val_offset:279327*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279327*0 + 3*181*FLEN/8, x4, x1, x2)

inst_93110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000000fffffff; valaddr_reg:x3; val_offset:279330*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279330*0 + 3*182*FLEN/8, x4, x1, x2)

inst_93111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000001fffffff; valaddr_reg:x3; val_offset:279333*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279333*0 + 3*183*FLEN/8, x4, x1, x2)

inst_93112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000003fffffff; valaddr_reg:x3; val_offset:279336*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279336*0 + 3*184*FLEN/8, x4, x1, x2)

inst_93113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000007fffffff; valaddr_reg:x3; val_offset:279339*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279339*0 + 3*185*FLEN/8, x4, x1, x2)

inst_93114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200000ffffffff; valaddr_reg:x3; val_offset:279342*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279342*0 + 3*186*FLEN/8, x4, x1, x2)

inst_93115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200001ffffffff; valaddr_reg:x3; val_offset:279345*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279345*0 + 3*187*FLEN/8, x4, x1, x2)

inst_93116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200003ffffffff; valaddr_reg:x3; val_offset:279348*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279348*0 + 3*188*FLEN/8, x4, x1, x2)

inst_93117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200007ffffffff; valaddr_reg:x3; val_offset:279351*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279351*0 + 3*189*FLEN/8, x4, x1, x2)

inst_93118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220000fffffffff; valaddr_reg:x3; val_offset:279354*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279354*0 + 3*190*FLEN/8, x4, x1, x2)

inst_93119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220001fffffffff; valaddr_reg:x3; val_offset:279357*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279357*0 + 3*191*FLEN/8, x4, x1, x2)

inst_93120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220003fffffffff; valaddr_reg:x3; val_offset:279360*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279360*0 + 3*192*FLEN/8, x4, x1, x2)

inst_93121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220007fffffffff; valaddr_reg:x3; val_offset:279363*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279363*0 + 3*193*FLEN/8, x4, x1, x2)

inst_93122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22000ffffffffff; valaddr_reg:x3; val_offset:279366*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279366*0 + 3*194*FLEN/8, x4, x1, x2)

inst_93123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22001ffffffffff; valaddr_reg:x3; val_offset:279369*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279369*0 + 3*195*FLEN/8, x4, x1, x2)

inst_93124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22003ffffffffff; valaddr_reg:x3; val_offset:279372*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279372*0 + 3*196*FLEN/8, x4, x1, x2)

inst_93125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22007ffffffffff; valaddr_reg:x3; val_offset:279375*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279375*0 + 3*197*FLEN/8, x4, x1, x2)

inst_93126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2200fffffffffff; valaddr_reg:x3; val_offset:279378*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279378*0 + 3*198*FLEN/8, x4, x1, x2)

inst_93127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2201fffffffffff; valaddr_reg:x3; val_offset:279381*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279381*0 + 3*199*FLEN/8, x4, x1, x2)

inst_93128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2203fffffffffff; valaddr_reg:x3; val_offset:279384*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279384*0 + 3*200*FLEN/8, x4, x1, x2)

inst_93129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x2207fffffffffff; valaddr_reg:x3; val_offset:279387*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279387*0 + 3*201*FLEN/8, x4, x1, x2)

inst_93130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x220ffffffffffff; valaddr_reg:x3; val_offset:279390*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279390*0 + 3*202*FLEN/8, x4, x1, x2)

inst_93131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x221ffffffffffff; valaddr_reg:x3; val_offset:279393*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279393*0 + 3*203*FLEN/8, x4, x1, x2)

inst_93132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x223ffffffffffff; valaddr_reg:x3; val_offset:279396*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279396*0 + 3*204*FLEN/8, x4, x1, x2)

inst_93133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x227ffffffffffff; valaddr_reg:x3; val_offset:279399*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279399*0 + 3*205*FLEN/8, x4, x1, x2)

inst_93134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x228000000000000; valaddr_reg:x3; val_offset:279402*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279402*0 + 3*206*FLEN/8, x4, x1, x2)

inst_93135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22c000000000000; valaddr_reg:x3; val_offset:279405*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279405*0 + 3*207*FLEN/8, x4, x1, x2)

inst_93136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22e000000000000; valaddr_reg:x3; val_offset:279408*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279408*0 + 3*208*FLEN/8, x4, x1, x2)

inst_93137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22f000000000000; valaddr_reg:x3; val_offset:279411*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279411*0 + 3*209*FLEN/8, x4, x1, x2)

inst_93138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22f800000000000; valaddr_reg:x3; val_offset:279414*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279414*0 + 3*210*FLEN/8, x4, x1, x2)

inst_93139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fc00000000000; valaddr_reg:x3; val_offset:279417*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279417*0 + 3*211*FLEN/8, x4, x1, x2)

inst_93140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fe00000000000; valaddr_reg:x3; val_offset:279420*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279420*0 + 3*212*FLEN/8, x4, x1, x2)

inst_93141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ff00000000000; valaddr_reg:x3; val_offset:279423*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279423*0 + 3*213*FLEN/8, x4, x1, x2)

inst_93142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ff80000000000; valaddr_reg:x3; val_offset:279426*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279426*0 + 3*214*FLEN/8, x4, x1, x2)

inst_93143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffc0000000000; valaddr_reg:x3; val_offset:279429*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279429*0 + 3*215*FLEN/8, x4, x1, x2)

inst_93144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffe0000000000; valaddr_reg:x3; val_offset:279432*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279432*0 + 3*216*FLEN/8, x4, x1, x2)

inst_93145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fff0000000000; valaddr_reg:x3; val_offset:279435*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279435*0 + 3*217*FLEN/8, x4, x1, x2)

inst_93146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fff8000000000; valaddr_reg:x3; val_offset:279438*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279438*0 + 3*218*FLEN/8, x4, x1, x2)

inst_93147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffc000000000; valaddr_reg:x3; val_offset:279441*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279441*0 + 3*219*FLEN/8, x4, x1, x2)

inst_93148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffe000000000; valaddr_reg:x3; val_offset:279444*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279444*0 + 3*220*FLEN/8, x4, x1, x2)

inst_93149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffff000000000; valaddr_reg:x3; val_offset:279447*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279447*0 + 3*221*FLEN/8, x4, x1, x2)

inst_93150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffff800000000; valaddr_reg:x3; val_offset:279450*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279450*0 + 3*222*FLEN/8, x4, x1, x2)

inst_93151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffc00000000; valaddr_reg:x3; val_offset:279453*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279453*0 + 3*223*FLEN/8, x4, x1, x2)

inst_93152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffe00000000; valaddr_reg:x3; val_offset:279456*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279456*0 + 3*224*FLEN/8, x4, x1, x2)

inst_93153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffff00000000; valaddr_reg:x3; val_offset:279459*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279459*0 + 3*225*FLEN/8, x4, x1, x2)

inst_93154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffff80000000; valaddr_reg:x3; val_offset:279462*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279462*0 + 3*226*FLEN/8, x4, x1, x2)

inst_93155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffc0000000; valaddr_reg:x3; val_offset:279465*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279465*0 + 3*227*FLEN/8, x4, x1, x2)

inst_93156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffe0000000; valaddr_reg:x3; val_offset:279468*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279468*0 + 3*228*FLEN/8, x4, x1, x2)

inst_93157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffff0000000; valaddr_reg:x3; val_offset:279471*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279471*0 + 3*229*FLEN/8, x4, x1, x2)

inst_93158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffff8000000; valaddr_reg:x3; val_offset:279474*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279474*0 + 3*230*FLEN/8, x4, x1, x2)

inst_93159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffc000000; valaddr_reg:x3; val_offset:279477*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279477*0 + 3*231*FLEN/8, x4, x1, x2)

inst_93160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffe000000; valaddr_reg:x3; val_offset:279480*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279480*0 + 3*232*FLEN/8, x4, x1, x2)

inst_93161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffff000000; valaddr_reg:x3; val_offset:279483*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279483*0 + 3*233*FLEN/8, x4, x1, x2)

inst_93162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffff800000; valaddr_reg:x3; val_offset:279486*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279486*0 + 3*234*FLEN/8, x4, x1, x2)

inst_93163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffc00000; valaddr_reg:x3; val_offset:279489*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279489*0 + 3*235*FLEN/8, x4, x1, x2)

inst_93164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffe00000; valaddr_reg:x3; val_offset:279492*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279492*0 + 3*236*FLEN/8, x4, x1, x2)

inst_93165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffff00000; valaddr_reg:x3; val_offset:279495*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279495*0 + 3*237*FLEN/8, x4, x1, x2)

inst_93166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffff80000; valaddr_reg:x3; val_offset:279498*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279498*0 + 3*238*FLEN/8, x4, x1, x2)

inst_93167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffc0000; valaddr_reg:x3; val_offset:279501*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279501*0 + 3*239*FLEN/8, x4, x1, x2)

inst_93168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffe0000; valaddr_reg:x3; val_offset:279504*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279504*0 + 3*240*FLEN/8, x4, x1, x2)

inst_93169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffff0000; valaddr_reg:x3; val_offset:279507*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279507*0 + 3*241*FLEN/8, x4, x1, x2)

inst_93170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffff8000; valaddr_reg:x3; val_offset:279510*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279510*0 + 3*242*FLEN/8, x4, x1, x2)

inst_93171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffffc000; valaddr_reg:x3; val_offset:279513*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279513*0 + 3*243*FLEN/8, x4, x1, x2)

inst_93172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffffe000; valaddr_reg:x3; val_offset:279516*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279516*0 + 3*244*FLEN/8, x4, x1, x2)

inst_93173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffff000; valaddr_reg:x3; val_offset:279519*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279519*0 + 3*245*FLEN/8, x4, x1, x2)

inst_93174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffff800; valaddr_reg:x3; val_offset:279522*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279522*0 + 3*246*FLEN/8, x4, x1, x2)

inst_93175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffffc00; valaddr_reg:x3; val_offset:279525*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279525*0 + 3*247*FLEN/8, x4, x1, x2)

inst_93176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffffe00; valaddr_reg:x3; val_offset:279528*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279528*0 + 3*248*FLEN/8, x4, x1, x2)

inst_93177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffffff00; valaddr_reg:x3; val_offset:279531*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279531*0 + 3*249*FLEN/8, x4, x1, x2)

inst_93178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffffff80; valaddr_reg:x3; val_offset:279534*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279534*0 + 3*250*FLEN/8, x4, x1, x2)

inst_93179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffffffc0; valaddr_reg:x3; val_offset:279537*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279537*0 + 3*251*FLEN/8, x4, x1, x2)

inst_93180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffffffe0; valaddr_reg:x3; val_offset:279540*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279540*0 + 3*252*FLEN/8, x4, x1, x2)

inst_93181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffffff0; valaddr_reg:x3; val_offset:279543*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279543*0 + 3*253*FLEN/8, x4, x1, x2)

inst_93182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffffff8; valaddr_reg:x3; val_offset:279546*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279546*0 + 3*254*FLEN/8, x4, x1, x2)

inst_93183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffffffc; valaddr_reg:x3; val_offset:279549*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279549*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_93184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22ffffffffffffe; valaddr_reg:x3; val_offset:279552*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279552*0 + 3*256*FLEN/8, x4, x1, x2)

inst_93185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd52151e39cf28 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad52151e39cf28; op2val:0x0;
op3val:0x22fffffffffffff; valaddr_reg:x3; val_offset:279555*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279555*0 + 3*257*FLEN/8, x4, x1, x2)

inst_93186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000000000; valaddr_reg:x3; val_offset:279558*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279558*0 + 3*258*FLEN/8, x4, x1, x2)

inst_93187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000000001; valaddr_reg:x3; val_offset:279561*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279561*0 + 3*259*FLEN/8, x4, x1, x2)

inst_93188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000000003; valaddr_reg:x3; val_offset:279564*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279564*0 + 3*260*FLEN/8, x4, x1, x2)

inst_93189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000000007; valaddr_reg:x3; val_offset:279567*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279567*0 + 3*261*FLEN/8, x4, x1, x2)

inst_93190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000000000f; valaddr_reg:x3; val_offset:279570*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279570*0 + 3*262*FLEN/8, x4, x1, x2)

inst_93191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000000001f; valaddr_reg:x3; val_offset:279573*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279573*0 + 3*263*FLEN/8, x4, x1, x2)

inst_93192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000000003f; valaddr_reg:x3; val_offset:279576*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279576*0 + 3*264*FLEN/8, x4, x1, x2)

inst_93193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000000007f; valaddr_reg:x3; val_offset:279579*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279579*0 + 3*265*FLEN/8, x4, x1, x2)

inst_93194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000000000ff; valaddr_reg:x3; val_offset:279582*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279582*0 + 3*266*FLEN/8, x4, x1, x2)

inst_93195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000000001ff; valaddr_reg:x3; val_offset:279585*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279585*0 + 3*267*FLEN/8, x4, x1, x2)

inst_93196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000000003ff; valaddr_reg:x3; val_offset:279588*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279588*0 + 3*268*FLEN/8, x4, x1, x2)

inst_93197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000000007ff; valaddr_reg:x3; val_offset:279591*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279591*0 + 3*269*FLEN/8, x4, x1, x2)

inst_93198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000000fff; valaddr_reg:x3; val_offset:279594*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279594*0 + 3*270*FLEN/8, x4, x1, x2)

inst_93199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000001fff; valaddr_reg:x3; val_offset:279597*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279597*0 + 3*271*FLEN/8, x4, x1, x2)

inst_93200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000003fff; valaddr_reg:x3; val_offset:279600*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279600*0 + 3*272*FLEN/8, x4, x1, x2)

inst_93201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000007fff; valaddr_reg:x3; val_offset:279603*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279603*0 + 3*273*FLEN/8, x4, x1, x2)

inst_93202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000000ffff; valaddr_reg:x3; val_offset:279606*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279606*0 + 3*274*FLEN/8, x4, x1, x2)

inst_93203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000001ffff; valaddr_reg:x3; val_offset:279609*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279609*0 + 3*275*FLEN/8, x4, x1, x2)

inst_93204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000003ffff; valaddr_reg:x3; val_offset:279612*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279612*0 + 3*276*FLEN/8, x4, x1, x2)

inst_93205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000007ffff; valaddr_reg:x3; val_offset:279615*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279615*0 + 3*277*FLEN/8, x4, x1, x2)

inst_93206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000000fffff; valaddr_reg:x3; val_offset:279618*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279618*0 + 3*278*FLEN/8, x4, x1, x2)

inst_93207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000001fffff; valaddr_reg:x3; val_offset:279621*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279621*0 + 3*279*FLEN/8, x4, x1, x2)

inst_93208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000003fffff; valaddr_reg:x3; val_offset:279624*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279624*0 + 3*280*FLEN/8, x4, x1, x2)

inst_93209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000007fffff; valaddr_reg:x3; val_offset:279627*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279627*0 + 3*281*FLEN/8, x4, x1, x2)

inst_93210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000000ffffff; valaddr_reg:x3; val_offset:279630*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279630*0 + 3*282*FLEN/8, x4, x1, x2)

inst_93211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000001ffffff; valaddr_reg:x3; val_offset:279633*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279633*0 + 3*283*FLEN/8, x4, x1, x2)

inst_93212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000003ffffff; valaddr_reg:x3; val_offset:279636*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279636*0 + 3*284*FLEN/8, x4, x1, x2)

inst_93213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000007ffffff; valaddr_reg:x3; val_offset:279639*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279639*0 + 3*285*FLEN/8, x4, x1, x2)

inst_93214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000000fffffff; valaddr_reg:x3; val_offset:279642*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279642*0 + 3*286*FLEN/8, x4, x1, x2)

inst_93215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000001fffffff; valaddr_reg:x3; val_offset:279645*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279645*0 + 3*287*FLEN/8, x4, x1, x2)

inst_93216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000003fffffff; valaddr_reg:x3; val_offset:279648*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279648*0 + 3*288*FLEN/8, x4, x1, x2)

inst_93217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000007fffffff; valaddr_reg:x3; val_offset:279651*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279651*0 + 3*289*FLEN/8, x4, x1, x2)

inst_93218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300000ffffffff; valaddr_reg:x3; val_offset:279654*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279654*0 + 3*290*FLEN/8, x4, x1, x2)

inst_93219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300001ffffffff; valaddr_reg:x3; val_offset:279657*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279657*0 + 3*291*FLEN/8, x4, x1, x2)

inst_93220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300003ffffffff; valaddr_reg:x3; val_offset:279660*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279660*0 + 3*292*FLEN/8, x4, x1, x2)

inst_93221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300007ffffffff; valaddr_reg:x3; val_offset:279663*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279663*0 + 3*293*FLEN/8, x4, x1, x2)

inst_93222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30000fffffffff; valaddr_reg:x3; val_offset:279666*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279666*0 + 3*294*FLEN/8, x4, x1, x2)

inst_93223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30001fffffffff; valaddr_reg:x3; val_offset:279669*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279669*0 + 3*295*FLEN/8, x4, x1, x2)

inst_93224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30003fffffffff; valaddr_reg:x3; val_offset:279672*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279672*0 + 3*296*FLEN/8, x4, x1, x2)

inst_93225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30007fffffffff; valaddr_reg:x3; val_offset:279675*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279675*0 + 3*297*FLEN/8, x4, x1, x2)

inst_93226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3000ffffffffff; valaddr_reg:x3; val_offset:279678*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279678*0 + 3*298*FLEN/8, x4, x1, x2)

inst_93227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3001ffffffffff; valaddr_reg:x3; val_offset:279681*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279681*0 + 3*299*FLEN/8, x4, x1, x2)

inst_93228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3003ffffffffff; valaddr_reg:x3; val_offset:279684*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279684*0 + 3*300*FLEN/8, x4, x1, x2)

inst_93229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3007ffffffffff; valaddr_reg:x3; val_offset:279687*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279687*0 + 3*301*FLEN/8, x4, x1, x2)

inst_93230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a300fffffffffff; valaddr_reg:x3; val_offset:279690*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279690*0 + 3*302*FLEN/8, x4, x1, x2)

inst_93231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a301fffffffffff; valaddr_reg:x3; val_offset:279693*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279693*0 + 3*303*FLEN/8, x4, x1, x2)

inst_93232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a303fffffffffff; valaddr_reg:x3; val_offset:279696*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279696*0 + 3*304*FLEN/8, x4, x1, x2)

inst_93233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a307fffffffffff; valaddr_reg:x3; val_offset:279699*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279699*0 + 3*305*FLEN/8, x4, x1, x2)

inst_93234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a30ffffffffffff; valaddr_reg:x3; val_offset:279702*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279702*0 + 3*306*FLEN/8, x4, x1, x2)

inst_93235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a31ffffffffffff; valaddr_reg:x3; val_offset:279705*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279705*0 + 3*307*FLEN/8, x4, x1, x2)

inst_93236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a33ffffffffffff; valaddr_reg:x3; val_offset:279708*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279708*0 + 3*308*FLEN/8, x4, x1, x2)

inst_93237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a37ffffffffffff; valaddr_reg:x3; val_offset:279711*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279711*0 + 3*309*FLEN/8, x4, x1, x2)

inst_93238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a38000000000000; valaddr_reg:x3; val_offset:279714*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279714*0 + 3*310*FLEN/8, x4, x1, x2)

inst_93239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3c000000000000; valaddr_reg:x3; val_offset:279717*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279717*0 + 3*311*FLEN/8, x4, x1, x2)

inst_93240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3e000000000000; valaddr_reg:x3; val_offset:279720*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279720*0 + 3*312*FLEN/8, x4, x1, x2)

inst_93241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3f000000000000; valaddr_reg:x3; val_offset:279723*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279723*0 + 3*313*FLEN/8, x4, x1, x2)

inst_93242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3f800000000000; valaddr_reg:x3; val_offset:279726*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279726*0 + 3*314*FLEN/8, x4, x1, x2)

inst_93243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fc00000000000; valaddr_reg:x3; val_offset:279729*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279729*0 + 3*315*FLEN/8, x4, x1, x2)

inst_93244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fe00000000000; valaddr_reg:x3; val_offset:279732*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279732*0 + 3*316*FLEN/8, x4, x1, x2)

inst_93245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ff00000000000; valaddr_reg:x3; val_offset:279735*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279735*0 + 3*317*FLEN/8, x4, x1, x2)

inst_93246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ff80000000000; valaddr_reg:x3; val_offset:279738*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279738*0 + 3*318*FLEN/8, x4, x1, x2)

inst_93247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffc0000000000; valaddr_reg:x3; val_offset:279741*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279741*0 + 3*319*FLEN/8, x4, x1, x2)

inst_93248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffe0000000000; valaddr_reg:x3; val_offset:279744*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279744*0 + 3*320*FLEN/8, x4, x1, x2)

inst_93249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fff0000000000; valaddr_reg:x3; val_offset:279747*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279747*0 + 3*321*FLEN/8, x4, x1, x2)

inst_93250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fff8000000000; valaddr_reg:x3; val_offset:279750*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279750*0 + 3*322*FLEN/8, x4, x1, x2)

inst_93251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffc000000000; valaddr_reg:x3; val_offset:279753*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279753*0 + 3*323*FLEN/8, x4, x1, x2)

inst_93252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffe000000000; valaddr_reg:x3; val_offset:279756*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279756*0 + 3*324*FLEN/8, x4, x1, x2)

inst_93253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffff000000000; valaddr_reg:x3; val_offset:279759*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279759*0 + 3*325*FLEN/8, x4, x1, x2)

inst_93254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffff800000000; valaddr_reg:x3; val_offset:279762*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279762*0 + 3*326*FLEN/8, x4, x1, x2)

inst_93255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffc00000000; valaddr_reg:x3; val_offset:279765*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279765*0 + 3*327*FLEN/8, x4, x1, x2)

inst_93256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffe00000000; valaddr_reg:x3; val_offset:279768*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279768*0 + 3*328*FLEN/8, x4, x1, x2)

inst_93257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffff00000000; valaddr_reg:x3; val_offset:279771*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279771*0 + 3*329*FLEN/8, x4, x1, x2)

inst_93258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffff80000000; valaddr_reg:x3; val_offset:279774*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279774*0 + 3*330*FLEN/8, x4, x1, x2)

inst_93259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffc0000000; valaddr_reg:x3; val_offset:279777*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279777*0 + 3*331*FLEN/8, x4, x1, x2)

inst_93260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffe0000000; valaddr_reg:x3; val_offset:279780*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279780*0 + 3*332*FLEN/8, x4, x1, x2)

inst_93261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffff0000000; valaddr_reg:x3; val_offset:279783*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279783*0 + 3*333*FLEN/8, x4, x1, x2)

inst_93262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffff8000000; valaddr_reg:x3; val_offset:279786*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279786*0 + 3*334*FLEN/8, x4, x1, x2)

inst_93263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffc000000; valaddr_reg:x3; val_offset:279789*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279789*0 + 3*335*FLEN/8, x4, x1, x2)

inst_93264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffe000000; valaddr_reg:x3; val_offset:279792*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279792*0 + 3*336*FLEN/8, x4, x1, x2)

inst_93265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffff000000; valaddr_reg:x3; val_offset:279795*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279795*0 + 3*337*FLEN/8, x4, x1, x2)

inst_93266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffff800000; valaddr_reg:x3; val_offset:279798*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279798*0 + 3*338*FLEN/8, x4, x1, x2)

inst_93267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffc00000; valaddr_reg:x3; val_offset:279801*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279801*0 + 3*339*FLEN/8, x4, x1, x2)

inst_93268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffe00000; valaddr_reg:x3; val_offset:279804*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279804*0 + 3*340*FLEN/8, x4, x1, x2)

inst_93269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffff00000; valaddr_reg:x3; val_offset:279807*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279807*0 + 3*341*FLEN/8, x4, x1, x2)

inst_93270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffff80000; valaddr_reg:x3; val_offset:279810*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279810*0 + 3*342*FLEN/8, x4, x1, x2)

inst_93271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffc0000; valaddr_reg:x3; val_offset:279813*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279813*0 + 3*343*FLEN/8, x4, x1, x2)

inst_93272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffe0000; valaddr_reg:x3; val_offset:279816*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279816*0 + 3*344*FLEN/8, x4, x1, x2)

inst_93273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffff0000; valaddr_reg:x3; val_offset:279819*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279819*0 + 3*345*FLEN/8, x4, x1, x2)

inst_93274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffff8000; valaddr_reg:x3; val_offset:279822*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279822*0 + 3*346*FLEN/8, x4, x1, x2)

inst_93275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffffc000; valaddr_reg:x3; val_offset:279825*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279825*0 + 3*347*FLEN/8, x4, x1, x2)

inst_93276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffffe000; valaddr_reg:x3; val_offset:279828*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279828*0 + 3*348*FLEN/8, x4, x1, x2)

inst_93277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffff000; valaddr_reg:x3; val_offset:279831*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279831*0 + 3*349*FLEN/8, x4, x1, x2)

inst_93278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffff800; valaddr_reg:x3; val_offset:279834*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279834*0 + 3*350*FLEN/8, x4, x1, x2)

inst_93279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffffc00; valaddr_reg:x3; val_offset:279837*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279837*0 + 3*351*FLEN/8, x4, x1, x2)

inst_93280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffffe00; valaddr_reg:x3; val_offset:279840*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279840*0 + 3*352*FLEN/8, x4, x1, x2)

inst_93281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffffff00; valaddr_reg:x3; val_offset:279843*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279843*0 + 3*353*FLEN/8, x4, x1, x2)

inst_93282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffffff80; valaddr_reg:x3; val_offset:279846*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279846*0 + 3*354*FLEN/8, x4, x1, x2)

inst_93283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffffffc0; valaddr_reg:x3; val_offset:279849*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279849*0 + 3*355*FLEN/8, x4, x1, x2)

inst_93284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffffffe0; valaddr_reg:x3; val_offset:279852*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279852*0 + 3*356*FLEN/8, x4, x1, x2)

inst_93285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffffff0; valaddr_reg:x3; val_offset:279855*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279855*0 + 3*357*FLEN/8, x4, x1, x2)

inst_93286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffffff8; valaddr_reg:x3; val_offset:279858*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279858*0 + 3*358*FLEN/8, x4, x1, x2)

inst_93287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffffffc; valaddr_reg:x3; val_offset:279861*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279861*0 + 3*359*FLEN/8, x4, x1, x2)

inst_93288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3ffffffffffffe; valaddr_reg:x3; val_offset:279864*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279864*0 + 3*360*FLEN/8, x4, x1, x2)

inst_93289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3a3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3a3fffffffffffff; valaddr_reg:x3; val_offset:279867*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279867*0 + 3*361*FLEN/8, x4, x1, x2)

inst_93290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:279870*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279870*0 + 3*362*FLEN/8, x4, x1, x2)

inst_93291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:279873*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279873*0 + 3*363*FLEN/8, x4, x1, x2)

inst_93292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:279876*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279876*0 + 3*364*FLEN/8, x4, x1, x2)

inst_93293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:279879*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279879*0 + 3*365*FLEN/8, x4, x1, x2)

inst_93294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:279882*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279882*0 + 3*366*FLEN/8, x4, x1, x2)

inst_93295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:279885*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279885*0 + 3*367*FLEN/8, x4, x1, x2)

inst_93296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:279888*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279888*0 + 3*368*FLEN/8, x4, x1, x2)

inst_93297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:279891*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279891*0 + 3*369*FLEN/8, x4, x1, x2)

inst_93298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:279894*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279894*0 + 3*370*FLEN/8, x4, x1, x2)

inst_93299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:279897*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279897*0 + 3*371*FLEN/8, x4, x1, x2)

inst_93300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:279900*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279900*0 + 3*372*FLEN/8, x4, x1, x2)

inst_93301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:279903*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279903*0 + 3*373*FLEN/8, x4, x1, x2)

inst_93302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:279906*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279906*0 + 3*374*FLEN/8, x4, x1, x2)

inst_93303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:279909*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279909*0 + 3*375*FLEN/8, x4, x1, x2)

inst_93304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:279912*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279912*0 + 3*376*FLEN/8, x4, x1, x2)

inst_93305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:279915*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279915*0 + 3*377*FLEN/8, x4, x1, x2)

inst_93306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:279918*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279918*0 + 3*378*FLEN/8, x4, x1, x2)

inst_93307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:279921*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279921*0 + 3*379*FLEN/8, x4, x1, x2)

inst_93308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:279924*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279924*0 + 3*380*FLEN/8, x4, x1, x2)

inst_93309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:279927*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279927*0 + 3*381*FLEN/8, x4, x1, x2)

inst_93310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:279930*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279930*0 + 3*382*FLEN/8, x4, x1, x2)

inst_93311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd598223c1d4d2 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x171e175da8d25 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad598223c1d4d2; op2val:0x203171e175da8d25;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:279933*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279933*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_93312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:279936*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279936*0 + 3*384*FLEN/8, x4, x1, x2)

inst_93313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:279939*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279939*0 + 3*385*FLEN/8, x4, x1, x2)

inst_93314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:279942*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279942*0 + 3*386*FLEN/8, x4, x1, x2)

inst_93315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:279945*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279945*0 + 3*387*FLEN/8, x4, x1, x2)

inst_93316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:279948*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279948*0 + 3*388*FLEN/8, x4, x1, x2)

inst_93317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:279951*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279951*0 + 3*389*FLEN/8, x4, x1, x2)

inst_93318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:279954*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279954*0 + 3*390*FLEN/8, x4, x1, x2)

inst_93319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:279957*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279957*0 + 3*391*FLEN/8, x4, x1, x2)

inst_93320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:279960*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279960*0 + 3*392*FLEN/8, x4, x1, x2)

inst_93321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:279963*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279963*0 + 3*393*FLEN/8, x4, x1, x2)

inst_93322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:279966*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279966*0 + 3*394*FLEN/8, x4, x1, x2)

inst_93323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:279969*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279969*0 + 3*395*FLEN/8, x4, x1, x2)

inst_93324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:279972*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279972*0 + 3*396*FLEN/8, x4, x1, x2)

inst_93325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:279975*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279975*0 + 3*397*FLEN/8, x4, x1, x2)

inst_93326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:279978*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279978*0 + 3*398*FLEN/8, x4, x1, x2)

inst_93327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:279981*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279981*0 + 3*399*FLEN/8, x4, x1, x2)

inst_93328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:279984*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279984*0 + 3*400*FLEN/8, x4, x1, x2)

inst_93329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:279987*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279987*0 + 3*401*FLEN/8, x4, x1, x2)

inst_93330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:279990*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279990*0 + 3*402*FLEN/8, x4, x1, x2)

inst_93331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:279993*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279993*0 + 3*403*FLEN/8, x4, x1, x2)

inst_93332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:279996*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279996*0 + 3*404*FLEN/8, x4, x1, x2)

inst_93333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:279999*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279999*0 + 3*405*FLEN/8, x4, x1, x2)

inst_93334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000000000; valaddr_reg:x3; val_offset:280002*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280002*0 + 3*406*FLEN/8, x4, x1, x2)

inst_93335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000000001; valaddr_reg:x3; val_offset:280005*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280005*0 + 3*407*FLEN/8, x4, x1, x2)

inst_93336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000000003; valaddr_reg:x3; val_offset:280008*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280008*0 + 3*408*FLEN/8, x4, x1, x2)

inst_93337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000000007; valaddr_reg:x3; val_offset:280011*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280011*0 + 3*409*FLEN/8, x4, x1, x2)

inst_93338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000000000f; valaddr_reg:x3; val_offset:280014*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280014*0 + 3*410*FLEN/8, x4, x1, x2)

inst_93339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000000001f; valaddr_reg:x3; val_offset:280017*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280017*0 + 3*411*FLEN/8, x4, x1, x2)

inst_93340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000000003f; valaddr_reg:x3; val_offset:280020*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280020*0 + 3*412*FLEN/8, x4, x1, x2)

inst_93341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000000007f; valaddr_reg:x3; val_offset:280023*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280023*0 + 3*413*FLEN/8, x4, x1, x2)

inst_93342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000000000ff; valaddr_reg:x3; val_offset:280026*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280026*0 + 3*414*FLEN/8, x4, x1, x2)

inst_93343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000000001ff; valaddr_reg:x3; val_offset:280029*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280029*0 + 3*415*FLEN/8, x4, x1, x2)

inst_93344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000000003ff; valaddr_reg:x3; val_offset:280032*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280032*0 + 3*416*FLEN/8, x4, x1, x2)

inst_93345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000000007ff; valaddr_reg:x3; val_offset:280035*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280035*0 + 3*417*FLEN/8, x4, x1, x2)

inst_93346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000000fff; valaddr_reg:x3; val_offset:280038*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280038*0 + 3*418*FLEN/8, x4, x1, x2)

inst_93347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000001fff; valaddr_reg:x3; val_offset:280041*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280041*0 + 3*419*FLEN/8, x4, x1, x2)

inst_93348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000003fff; valaddr_reg:x3; val_offset:280044*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280044*0 + 3*420*FLEN/8, x4, x1, x2)

inst_93349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000007fff; valaddr_reg:x3; val_offset:280047*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280047*0 + 3*421*FLEN/8, x4, x1, x2)

inst_93350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000000ffff; valaddr_reg:x3; val_offset:280050*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280050*0 + 3*422*FLEN/8, x4, x1, x2)

inst_93351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000001ffff; valaddr_reg:x3; val_offset:280053*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280053*0 + 3*423*FLEN/8, x4, x1, x2)

inst_93352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000003ffff; valaddr_reg:x3; val_offset:280056*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280056*0 + 3*424*FLEN/8, x4, x1, x2)

inst_93353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000007ffff; valaddr_reg:x3; val_offset:280059*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280059*0 + 3*425*FLEN/8, x4, x1, x2)

inst_93354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000000fffff; valaddr_reg:x3; val_offset:280062*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280062*0 + 3*426*FLEN/8, x4, x1, x2)

inst_93355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000001fffff; valaddr_reg:x3; val_offset:280065*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280065*0 + 3*427*FLEN/8, x4, x1, x2)

inst_93356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000003fffff; valaddr_reg:x3; val_offset:280068*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280068*0 + 3*428*FLEN/8, x4, x1, x2)

inst_93357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000007fffff; valaddr_reg:x3; val_offset:280071*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280071*0 + 3*429*FLEN/8, x4, x1, x2)

inst_93358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000000ffffff; valaddr_reg:x3; val_offset:280074*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280074*0 + 3*430*FLEN/8, x4, x1, x2)

inst_93359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000001ffffff; valaddr_reg:x3; val_offset:280077*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280077*0 + 3*431*FLEN/8, x4, x1, x2)

inst_93360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000003ffffff; valaddr_reg:x3; val_offset:280080*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280080*0 + 3*432*FLEN/8, x4, x1, x2)

inst_93361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000007ffffff; valaddr_reg:x3; val_offset:280083*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280083*0 + 3*433*FLEN/8, x4, x1, x2)

inst_93362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000000fffffff; valaddr_reg:x3; val_offset:280086*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280086*0 + 3*434*FLEN/8, x4, x1, x2)

inst_93363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000001fffffff; valaddr_reg:x3; val_offset:280089*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280089*0 + 3*435*FLEN/8, x4, x1, x2)

inst_93364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000003fffffff; valaddr_reg:x3; val_offset:280092*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280092*0 + 3*436*FLEN/8, x4, x1, x2)

inst_93365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000007fffffff; valaddr_reg:x3; val_offset:280095*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280095*0 + 3*437*FLEN/8, x4, x1, x2)

inst_93366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00000ffffffff; valaddr_reg:x3; val_offset:280098*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280098*0 + 3*438*FLEN/8, x4, x1, x2)

inst_93367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00001ffffffff; valaddr_reg:x3; val_offset:280101*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280101*0 + 3*439*FLEN/8, x4, x1, x2)

inst_93368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00003ffffffff; valaddr_reg:x3; val_offset:280104*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280104*0 + 3*440*FLEN/8, x4, x1, x2)

inst_93369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00007ffffffff; valaddr_reg:x3; val_offset:280107*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280107*0 + 3*441*FLEN/8, x4, x1, x2)

inst_93370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0000fffffffff; valaddr_reg:x3; val_offset:280110*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280110*0 + 3*442*FLEN/8, x4, x1, x2)

inst_93371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0001fffffffff; valaddr_reg:x3; val_offset:280113*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280113*0 + 3*443*FLEN/8, x4, x1, x2)

inst_93372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0003fffffffff; valaddr_reg:x3; val_offset:280116*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280116*0 + 3*444*FLEN/8, x4, x1, x2)

inst_93373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0007fffffffff; valaddr_reg:x3; val_offset:280119*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280119*0 + 3*445*FLEN/8, x4, x1, x2)

inst_93374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb000ffffffffff; valaddr_reg:x3; val_offset:280122*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280122*0 + 3*446*FLEN/8, x4, x1, x2)

inst_93375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb001ffffffffff; valaddr_reg:x3; val_offset:280125*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280125*0 + 3*447*FLEN/8, x4, x1, x2)

inst_93376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb003ffffffffff; valaddr_reg:x3; val_offset:280128*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280128*0 + 3*448*FLEN/8, x4, x1, x2)

inst_93377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb007ffffffffff; valaddr_reg:x3; val_offset:280131*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280131*0 + 3*449*FLEN/8, x4, x1, x2)

inst_93378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb00fffffffffff; valaddr_reg:x3; val_offset:280134*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280134*0 + 3*450*FLEN/8, x4, x1, x2)

inst_93379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb01fffffffffff; valaddr_reg:x3; val_offset:280137*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280137*0 + 3*451*FLEN/8, x4, x1, x2)

inst_93380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb03fffffffffff; valaddr_reg:x3; val_offset:280140*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280140*0 + 3*452*FLEN/8, x4, x1, x2)

inst_93381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb07fffffffffff; valaddr_reg:x3; val_offset:280143*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280143*0 + 3*453*FLEN/8, x4, x1, x2)

inst_93382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb0ffffffffffff; valaddr_reg:x3; val_offset:280146*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280146*0 + 3*454*FLEN/8, x4, x1, x2)

inst_93383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb1ffffffffffff; valaddr_reg:x3; val_offset:280149*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280149*0 + 3*455*FLEN/8, x4, x1, x2)

inst_93384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb3ffffffffffff; valaddr_reg:x3; val_offset:280152*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280152*0 + 3*456*FLEN/8, x4, x1, x2)

inst_93385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb7ffffffffffff; valaddr_reg:x3; val_offset:280155*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280155*0 + 3*457*FLEN/8, x4, x1, x2)

inst_93386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfb8000000000000; valaddr_reg:x3; val_offset:280158*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280158*0 + 3*458*FLEN/8, x4, x1, x2)

inst_93387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbc000000000000; valaddr_reg:x3; val_offset:280161*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280161*0 + 3*459*FLEN/8, x4, x1, x2)

inst_93388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbe000000000000; valaddr_reg:x3; val_offset:280164*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280164*0 + 3*460*FLEN/8, x4, x1, x2)

inst_93389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbf000000000000; valaddr_reg:x3; val_offset:280167*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280167*0 + 3*461*FLEN/8, x4, x1, x2)

inst_93390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbf800000000000; valaddr_reg:x3; val_offset:280170*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280170*0 + 3*462*FLEN/8, x4, x1, x2)

inst_93391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfc00000000000; valaddr_reg:x3; val_offset:280173*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280173*0 + 3*463*FLEN/8, x4, x1, x2)

inst_93392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfe00000000000; valaddr_reg:x3; val_offset:280176*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280176*0 + 3*464*FLEN/8, x4, x1, x2)

inst_93393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbff00000000000; valaddr_reg:x3; val_offset:280179*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280179*0 + 3*465*FLEN/8, x4, x1, x2)

inst_93394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbff80000000000; valaddr_reg:x3; val_offset:280182*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280182*0 + 3*466*FLEN/8, x4, x1, x2)

inst_93395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffc0000000000; valaddr_reg:x3; val_offset:280185*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280185*0 + 3*467*FLEN/8, x4, x1, x2)

inst_93396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffe0000000000; valaddr_reg:x3; val_offset:280188*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280188*0 + 3*468*FLEN/8, x4, x1, x2)

inst_93397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfff0000000000; valaddr_reg:x3; val_offset:280191*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280191*0 + 3*469*FLEN/8, x4, x1, x2)

inst_93398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfff8000000000; valaddr_reg:x3; val_offset:280194*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280194*0 + 3*470*FLEN/8, x4, x1, x2)

inst_93399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffc000000000; valaddr_reg:x3; val_offset:280197*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280197*0 + 3*471*FLEN/8, x4, x1, x2)

inst_93400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffe000000000; valaddr_reg:x3; val_offset:280200*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280200*0 + 3*472*FLEN/8, x4, x1, x2)

inst_93401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffff000000000; valaddr_reg:x3; val_offset:280203*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280203*0 + 3*473*FLEN/8, x4, x1, x2)

inst_93402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffff800000000; valaddr_reg:x3; val_offset:280206*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280206*0 + 3*474*FLEN/8, x4, x1, x2)

inst_93403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffc00000000; valaddr_reg:x3; val_offset:280209*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280209*0 + 3*475*FLEN/8, x4, x1, x2)

inst_93404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffe00000000; valaddr_reg:x3; val_offset:280212*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280212*0 + 3*476*FLEN/8, x4, x1, x2)

inst_93405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffff00000000; valaddr_reg:x3; val_offset:280215*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280215*0 + 3*477*FLEN/8, x4, x1, x2)

inst_93406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffff80000000; valaddr_reg:x3; val_offset:280218*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280218*0 + 3*478*FLEN/8, x4, x1, x2)

inst_93407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffc0000000; valaddr_reg:x3; val_offset:280221*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280221*0 + 3*479*FLEN/8, x4, x1, x2)

inst_93408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffe0000000; valaddr_reg:x3; val_offset:280224*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280224*0 + 3*480*FLEN/8, x4, x1, x2)

inst_93409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffff0000000; valaddr_reg:x3; val_offset:280227*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280227*0 + 3*481*FLEN/8, x4, x1, x2)

inst_93410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffff8000000; valaddr_reg:x3; val_offset:280230*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280230*0 + 3*482*FLEN/8, x4, x1, x2)

inst_93411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffc000000; valaddr_reg:x3; val_offset:280233*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280233*0 + 3*483*FLEN/8, x4, x1, x2)

inst_93412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffe000000; valaddr_reg:x3; val_offset:280236*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280236*0 + 3*484*FLEN/8, x4, x1, x2)

inst_93413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffff000000; valaddr_reg:x3; val_offset:280239*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280239*0 + 3*485*FLEN/8, x4, x1, x2)

inst_93414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffff800000; valaddr_reg:x3; val_offset:280242*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280242*0 + 3*486*FLEN/8, x4, x1, x2)

inst_93415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffc00000; valaddr_reg:x3; val_offset:280245*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280245*0 + 3*487*FLEN/8, x4, x1, x2)

inst_93416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffe00000; valaddr_reg:x3; val_offset:280248*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280248*0 + 3*488*FLEN/8, x4, x1, x2)

inst_93417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffff00000; valaddr_reg:x3; val_offset:280251*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280251*0 + 3*489*FLEN/8, x4, x1, x2)

inst_93418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffff80000; valaddr_reg:x3; val_offset:280254*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280254*0 + 3*490*FLEN/8, x4, x1, x2)

inst_93419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffc0000; valaddr_reg:x3; val_offset:280257*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280257*0 + 3*491*FLEN/8, x4, x1, x2)

inst_93420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffe0000; valaddr_reg:x3; val_offset:280260*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280260*0 + 3*492*FLEN/8, x4, x1, x2)

inst_93421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffff0000; valaddr_reg:x3; val_offset:280263*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280263*0 + 3*493*FLEN/8, x4, x1, x2)

inst_93422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffff8000; valaddr_reg:x3; val_offset:280266*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280266*0 + 3*494*FLEN/8, x4, x1, x2)

inst_93423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffffc000; valaddr_reg:x3; val_offset:280269*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280269*0 + 3*495*FLEN/8, x4, x1, x2)

inst_93424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffffe000; valaddr_reg:x3; val_offset:280272*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280272*0 + 3*496*FLEN/8, x4, x1, x2)

inst_93425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffff000; valaddr_reg:x3; val_offset:280275*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280275*0 + 3*497*FLEN/8, x4, x1, x2)

inst_93426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffff800; valaddr_reg:x3; val_offset:280278*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280278*0 + 3*498*FLEN/8, x4, x1, x2)

inst_93427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffffc00; valaddr_reg:x3; val_offset:280281*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280281*0 + 3*499*FLEN/8, x4, x1, x2)

inst_93428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffffe00; valaddr_reg:x3; val_offset:280284*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280284*0 + 3*500*FLEN/8, x4, x1, x2)

inst_93429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffffff00; valaddr_reg:x3; val_offset:280287*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280287*0 + 3*501*FLEN/8, x4, x1, x2)

inst_93430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffffff80; valaddr_reg:x3; val_offset:280290*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280290*0 + 3*502*FLEN/8, x4, x1, x2)

inst_93431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffffffc0; valaddr_reg:x3; val_offset:280293*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280293*0 + 3*503*FLEN/8, x4, x1, x2)

inst_93432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffffffe0; valaddr_reg:x3; val_offset:280296*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280296*0 + 3*504*FLEN/8, x4, x1, x2)

inst_93433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffffff0; valaddr_reg:x3; val_offset:280299*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280299*0 + 3*505*FLEN/8, x4, x1, x2)

inst_93434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffffff8; valaddr_reg:x3; val_offset:280302*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280302*0 + 3*506*FLEN/8, x4, x1, x2)

inst_93435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffffffc; valaddr_reg:x3; val_offset:280305*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280305*0 + 3*507*FLEN/8, x4, x1, x2)

inst_93436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbffffffffffffe; valaddr_reg:x3; val_offset:280308*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280308*0 + 3*508*FLEN/8, x4, x1, x2)

inst_93437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5dda329d16e8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16f4cdb64bfef and fs3 == 1 and fe3 == 0x3fb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad5dda329d16e8; op2val:0x9fc16f4cdb64bfef;
op3val:0xbfbfffffffffffff; valaddr_reg:x3; val_offset:280311*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280311*0 + 3*509*FLEN/8, x4, x1, x2)

inst_93438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:280314*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280314*0 + 3*510*FLEN/8, x4, x1, x2)

inst_93439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:280317*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280317*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_93440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:280320*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280320*0 + 3*512*FLEN/8, x4, x1, x2)

inst_93441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:280323*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280323*0 + 3*513*FLEN/8, x4, x1, x2)

inst_93442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:280326*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280326*0 + 3*514*FLEN/8, x4, x1, x2)

inst_93443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:280329*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280329*0 + 3*515*FLEN/8, x4, x1, x2)

inst_93444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:280332*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280332*0 + 3*516*FLEN/8, x4, x1, x2)

inst_93445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:280335*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280335*0 + 3*517*FLEN/8, x4, x1, x2)

inst_93446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:280338*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280338*0 + 3*518*FLEN/8, x4, x1, x2)

inst_93447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:280341*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280341*0 + 3*519*FLEN/8, x4, x1, x2)

inst_93448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:280344*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280344*0 + 3*520*FLEN/8, x4, x1, x2)

inst_93449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:280347*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280347*0 + 3*521*FLEN/8, x4, x1, x2)

inst_93450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:280350*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280350*0 + 3*522*FLEN/8, x4, x1, x2)

inst_93451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:280353*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280353*0 + 3*523*FLEN/8, x4, x1, x2)

inst_93452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:280356*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280356*0 + 3*524*FLEN/8, x4, x1, x2)

inst_93453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:280359*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280359*0 + 3*525*FLEN/8, x4, x1, x2)

inst_93454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:280362*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280362*0 + 3*526*FLEN/8, x4, x1, x2)

inst_93455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:280365*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280365*0 + 3*527*FLEN/8, x4, x1, x2)

inst_93456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:280368*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280368*0 + 3*528*FLEN/8, x4, x1, x2)

inst_93457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:280371*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280371*0 + 3*529*FLEN/8, x4, x1, x2)

inst_93458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:280374*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280374*0 + 3*530*FLEN/8, x4, x1, x2)

inst_93459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:280377*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280377*0 + 3*531*FLEN/8, x4, x1, x2)

inst_93460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000000000; valaddr_reg:x3; val_offset:280380*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280380*0 + 3*532*FLEN/8, x4, x1, x2)

inst_93461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000000001; valaddr_reg:x3; val_offset:280383*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280383*0 + 3*533*FLEN/8, x4, x1, x2)

inst_93462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000000003; valaddr_reg:x3; val_offset:280386*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280386*0 + 3*534*FLEN/8, x4, x1, x2)

inst_93463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000000007; valaddr_reg:x3; val_offset:280389*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280389*0 + 3*535*FLEN/8, x4, x1, x2)

inst_93464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000000000f; valaddr_reg:x3; val_offset:280392*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280392*0 + 3*536*FLEN/8, x4, x1, x2)

inst_93465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000000001f; valaddr_reg:x3; val_offset:280395*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280395*0 + 3*537*FLEN/8, x4, x1, x2)

inst_93466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000000003f; valaddr_reg:x3; val_offset:280398*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280398*0 + 3*538*FLEN/8, x4, x1, x2)

inst_93467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000000007f; valaddr_reg:x3; val_offset:280401*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280401*0 + 3*539*FLEN/8, x4, x1, x2)

inst_93468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000000000ff; valaddr_reg:x3; val_offset:280404*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280404*0 + 3*540*FLEN/8, x4, x1, x2)

inst_93469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000000001ff; valaddr_reg:x3; val_offset:280407*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280407*0 + 3*541*FLEN/8, x4, x1, x2)

inst_93470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000000003ff; valaddr_reg:x3; val_offset:280410*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280410*0 + 3*542*FLEN/8, x4, x1, x2)

inst_93471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000000007ff; valaddr_reg:x3; val_offset:280413*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280413*0 + 3*543*FLEN/8, x4, x1, x2)

inst_93472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000000fff; valaddr_reg:x3; val_offset:280416*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280416*0 + 3*544*FLEN/8, x4, x1, x2)

inst_93473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000001fff; valaddr_reg:x3; val_offset:280419*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280419*0 + 3*545*FLEN/8, x4, x1, x2)

inst_93474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000003fff; valaddr_reg:x3; val_offset:280422*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280422*0 + 3*546*FLEN/8, x4, x1, x2)

inst_93475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000007fff; valaddr_reg:x3; val_offset:280425*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280425*0 + 3*547*FLEN/8, x4, x1, x2)

inst_93476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000000ffff; valaddr_reg:x3; val_offset:280428*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280428*0 + 3*548*FLEN/8, x4, x1, x2)

inst_93477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000001ffff; valaddr_reg:x3; val_offset:280431*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280431*0 + 3*549*FLEN/8, x4, x1, x2)

inst_93478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000003ffff; valaddr_reg:x3; val_offset:280434*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280434*0 + 3*550*FLEN/8, x4, x1, x2)

inst_93479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000007ffff; valaddr_reg:x3; val_offset:280437*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280437*0 + 3*551*FLEN/8, x4, x1, x2)

inst_93480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000000fffff; valaddr_reg:x3; val_offset:280440*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280440*0 + 3*552*FLEN/8, x4, x1, x2)

inst_93481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000001fffff; valaddr_reg:x3; val_offset:280443*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280443*0 + 3*553*FLEN/8, x4, x1, x2)

inst_93482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000003fffff; valaddr_reg:x3; val_offset:280446*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280446*0 + 3*554*FLEN/8, x4, x1, x2)

inst_93483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000007fffff; valaddr_reg:x3; val_offset:280449*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280449*0 + 3*555*FLEN/8, x4, x1, x2)

inst_93484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000000ffffff; valaddr_reg:x3; val_offset:280452*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280452*0 + 3*556*FLEN/8, x4, x1, x2)

inst_93485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000001ffffff; valaddr_reg:x3; val_offset:280455*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280455*0 + 3*557*FLEN/8, x4, x1, x2)

inst_93486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000003ffffff; valaddr_reg:x3; val_offset:280458*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280458*0 + 3*558*FLEN/8, x4, x1, x2)

inst_93487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000007ffffff; valaddr_reg:x3; val_offset:280461*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280461*0 + 3*559*FLEN/8, x4, x1, x2)

inst_93488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000000fffffff; valaddr_reg:x3; val_offset:280464*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280464*0 + 3*560*FLEN/8, x4, x1, x2)

inst_93489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000001fffffff; valaddr_reg:x3; val_offset:280467*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280467*0 + 3*561*FLEN/8, x4, x1, x2)

inst_93490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000003fffffff; valaddr_reg:x3; val_offset:280470*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280470*0 + 3*562*FLEN/8, x4, x1, x2)

inst_93491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000007fffffff; valaddr_reg:x3; val_offset:280473*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280473*0 + 3*563*FLEN/8, x4, x1, x2)

inst_93492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900000ffffffff; valaddr_reg:x3; val_offset:280476*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280476*0 + 3*564*FLEN/8, x4, x1, x2)

inst_93493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900001ffffffff; valaddr_reg:x3; val_offset:280479*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280479*0 + 3*565*FLEN/8, x4, x1, x2)

inst_93494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900003ffffffff; valaddr_reg:x3; val_offset:280482*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280482*0 + 3*566*FLEN/8, x4, x1, x2)

inst_93495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900007ffffffff; valaddr_reg:x3; val_offset:280485*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280485*0 + 3*567*FLEN/8, x4, x1, x2)

inst_93496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390000fffffffff; valaddr_reg:x3; val_offset:280488*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280488*0 + 3*568*FLEN/8, x4, x1, x2)

inst_93497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390001fffffffff; valaddr_reg:x3; val_offset:280491*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280491*0 + 3*569*FLEN/8, x4, x1, x2)

inst_93498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390003fffffffff; valaddr_reg:x3; val_offset:280494*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280494*0 + 3*570*FLEN/8, x4, x1, x2)

inst_93499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390007fffffffff; valaddr_reg:x3; val_offset:280497*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280497*0 + 3*571*FLEN/8, x4, x1, x2)

inst_93500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839000ffffffffff; valaddr_reg:x3; val_offset:280500*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280500*0 + 3*572*FLEN/8, x4, x1, x2)

inst_93501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839001ffffffffff; valaddr_reg:x3; val_offset:280503*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280503*0 + 3*573*FLEN/8, x4, x1, x2)

inst_93502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839003ffffffffff; valaddr_reg:x3; val_offset:280506*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280506*0 + 3*574*FLEN/8, x4, x1, x2)

inst_93503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839007ffffffffff; valaddr_reg:x3; val_offset:280509*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280509*0 + 3*575*FLEN/8, x4, x1, x2)

inst_93504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83900fffffffffff; valaddr_reg:x3; val_offset:280512*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280512*0 + 3*576*FLEN/8, x4, x1, x2)

inst_93505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83901fffffffffff; valaddr_reg:x3; val_offset:280515*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280515*0 + 3*577*FLEN/8, x4, x1, x2)

inst_93506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83903fffffffffff; valaddr_reg:x3; val_offset:280518*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280518*0 + 3*578*FLEN/8, x4, x1, x2)

inst_93507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x83907fffffffffff; valaddr_reg:x3; val_offset:280521*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280521*0 + 3*579*FLEN/8, x4, x1, x2)

inst_93508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8390ffffffffffff; valaddr_reg:x3; val_offset:280524*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280524*0 + 3*580*FLEN/8, x4, x1, x2)

inst_93509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8391ffffffffffff; valaddr_reg:x3; val_offset:280527*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280527*0 + 3*581*FLEN/8, x4, x1, x2)

inst_93510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8393ffffffffffff; valaddr_reg:x3; val_offset:280530*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280530*0 + 3*582*FLEN/8, x4, x1, x2)

inst_93511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8397ffffffffffff; valaddr_reg:x3; val_offset:280533*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280533*0 + 3*583*FLEN/8, x4, x1, x2)

inst_93512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x8398000000000000; valaddr_reg:x3; val_offset:280536*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280536*0 + 3*584*FLEN/8, x4, x1, x2)

inst_93513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839c000000000000; valaddr_reg:x3; val_offset:280539*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280539*0 + 3*585*FLEN/8, x4, x1, x2)

inst_93514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839e000000000000; valaddr_reg:x3; val_offset:280542*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280542*0 + 3*586*FLEN/8, x4, x1, x2)

inst_93515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839f000000000000; valaddr_reg:x3; val_offset:280545*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280545*0 + 3*587*FLEN/8, x4, x1, x2)

inst_93516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839f800000000000; valaddr_reg:x3; val_offset:280548*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280548*0 + 3*588*FLEN/8, x4, x1, x2)

inst_93517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fc00000000000; valaddr_reg:x3; val_offset:280551*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280551*0 + 3*589*FLEN/8, x4, x1, x2)

inst_93518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fe00000000000; valaddr_reg:x3; val_offset:280554*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280554*0 + 3*590*FLEN/8, x4, x1, x2)

inst_93519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ff00000000000; valaddr_reg:x3; val_offset:280557*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280557*0 + 3*591*FLEN/8, x4, x1, x2)

inst_93520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ff80000000000; valaddr_reg:x3; val_offset:280560*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280560*0 + 3*592*FLEN/8, x4, x1, x2)

inst_93521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffc0000000000; valaddr_reg:x3; val_offset:280563*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280563*0 + 3*593*FLEN/8, x4, x1, x2)

inst_93522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffe0000000000; valaddr_reg:x3; val_offset:280566*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280566*0 + 3*594*FLEN/8, x4, x1, x2)

inst_93523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fff0000000000; valaddr_reg:x3; val_offset:280569*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280569*0 + 3*595*FLEN/8, x4, x1, x2)

inst_93524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fff8000000000; valaddr_reg:x3; val_offset:280572*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280572*0 + 3*596*FLEN/8, x4, x1, x2)

inst_93525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffc000000000; valaddr_reg:x3; val_offset:280575*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280575*0 + 3*597*FLEN/8, x4, x1, x2)

inst_93526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffe000000000; valaddr_reg:x3; val_offset:280578*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280578*0 + 3*598*FLEN/8, x4, x1, x2)

inst_93527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffff000000000; valaddr_reg:x3; val_offset:280581*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280581*0 + 3*599*FLEN/8, x4, x1, x2)

inst_93528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffff800000000; valaddr_reg:x3; val_offset:280584*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280584*0 + 3*600*FLEN/8, x4, x1, x2)

inst_93529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffc00000000; valaddr_reg:x3; val_offset:280587*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280587*0 + 3*601*FLEN/8, x4, x1, x2)

inst_93530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffe00000000; valaddr_reg:x3; val_offset:280590*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280590*0 + 3*602*FLEN/8, x4, x1, x2)

inst_93531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffff00000000; valaddr_reg:x3; val_offset:280593*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280593*0 + 3*603*FLEN/8, x4, x1, x2)

inst_93532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffff80000000; valaddr_reg:x3; val_offset:280596*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280596*0 + 3*604*FLEN/8, x4, x1, x2)

inst_93533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffc0000000; valaddr_reg:x3; val_offset:280599*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280599*0 + 3*605*FLEN/8, x4, x1, x2)

inst_93534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffe0000000; valaddr_reg:x3; val_offset:280602*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280602*0 + 3*606*FLEN/8, x4, x1, x2)

inst_93535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffff0000000; valaddr_reg:x3; val_offset:280605*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280605*0 + 3*607*FLEN/8, x4, x1, x2)

inst_93536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffff8000000; valaddr_reg:x3; val_offset:280608*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280608*0 + 3*608*FLEN/8, x4, x1, x2)

inst_93537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffc000000; valaddr_reg:x3; val_offset:280611*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280611*0 + 3*609*FLEN/8, x4, x1, x2)

inst_93538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffe000000; valaddr_reg:x3; val_offset:280614*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280614*0 + 3*610*FLEN/8, x4, x1, x2)

inst_93539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffff000000; valaddr_reg:x3; val_offset:280617*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280617*0 + 3*611*FLEN/8, x4, x1, x2)

inst_93540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffff800000; valaddr_reg:x3; val_offset:280620*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280620*0 + 3*612*FLEN/8, x4, x1, x2)

inst_93541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffc00000; valaddr_reg:x3; val_offset:280623*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280623*0 + 3*613*FLEN/8, x4, x1, x2)

inst_93542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffe00000; valaddr_reg:x3; val_offset:280626*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280626*0 + 3*614*FLEN/8, x4, x1, x2)

inst_93543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffff00000; valaddr_reg:x3; val_offset:280629*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280629*0 + 3*615*FLEN/8, x4, x1, x2)

inst_93544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffff80000; valaddr_reg:x3; val_offset:280632*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280632*0 + 3*616*FLEN/8, x4, x1, x2)

inst_93545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffc0000; valaddr_reg:x3; val_offset:280635*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280635*0 + 3*617*FLEN/8, x4, x1, x2)

inst_93546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffe0000; valaddr_reg:x3; val_offset:280638*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280638*0 + 3*618*FLEN/8, x4, x1, x2)

inst_93547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffff0000; valaddr_reg:x3; val_offset:280641*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280641*0 + 3*619*FLEN/8, x4, x1, x2)

inst_93548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffff8000; valaddr_reg:x3; val_offset:280644*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280644*0 + 3*620*FLEN/8, x4, x1, x2)

inst_93549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffffc000; valaddr_reg:x3; val_offset:280647*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280647*0 + 3*621*FLEN/8, x4, x1, x2)

inst_93550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffffe000; valaddr_reg:x3; val_offset:280650*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280650*0 + 3*622*FLEN/8, x4, x1, x2)

inst_93551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffff000; valaddr_reg:x3; val_offset:280653*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280653*0 + 3*623*FLEN/8, x4, x1, x2)

inst_93552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffff800; valaddr_reg:x3; val_offset:280656*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280656*0 + 3*624*FLEN/8, x4, x1, x2)

inst_93553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffffc00; valaddr_reg:x3; val_offset:280659*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280659*0 + 3*625*FLEN/8, x4, x1, x2)

inst_93554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffffe00; valaddr_reg:x3; val_offset:280662*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280662*0 + 3*626*FLEN/8, x4, x1, x2)

inst_93555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffffff00; valaddr_reg:x3; val_offset:280665*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280665*0 + 3*627*FLEN/8, x4, x1, x2)

inst_93556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffffff80; valaddr_reg:x3; val_offset:280668*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280668*0 + 3*628*FLEN/8, x4, x1, x2)

inst_93557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffffffc0; valaddr_reg:x3; val_offset:280671*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280671*0 + 3*629*FLEN/8, x4, x1, x2)

inst_93558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffffffe0; valaddr_reg:x3; val_offset:280674*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280674*0 + 3*630*FLEN/8, x4, x1, x2)

inst_93559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffffff0; valaddr_reg:x3; val_offset:280677*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280677*0 + 3*631*FLEN/8, x4, x1, x2)

inst_93560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffffff8; valaddr_reg:x3; val_offset:280680*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280680*0 + 3*632*FLEN/8, x4, x1, x2)

inst_93561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffffffc; valaddr_reg:x3; val_offset:280683*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280683*0 + 3*633*FLEN/8, x4, x1, x2)

inst_93562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839ffffffffffffe; valaddr_reg:x3; val_offset:280686*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280686*0 + 3*634*FLEN/8, x4, x1, x2)

inst_93563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6723a0c895e2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6723a0c895e2; op2val:0x8000;
op3val:0x839fffffffffffff; valaddr_reg:x3; val_offset:280689*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280689*0 + 3*635*FLEN/8, x4, x1, x2)

inst_93564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000000000; valaddr_reg:x3; val_offset:280692*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280692*0 + 3*636*FLEN/8, x4, x1, x2)

inst_93565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000000001; valaddr_reg:x3; val_offset:280695*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280695*0 + 3*637*FLEN/8, x4, x1, x2)

inst_93566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000000003; valaddr_reg:x3; val_offset:280698*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280698*0 + 3*638*FLEN/8, x4, x1, x2)

inst_93567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000000007; valaddr_reg:x3; val_offset:280701*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280701*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_93568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000000000f; valaddr_reg:x3; val_offset:280704*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280704*0 + 3*640*FLEN/8, x4, x1, x2)

inst_93569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000000001f; valaddr_reg:x3; val_offset:280707*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280707*0 + 3*641*FLEN/8, x4, x1, x2)

inst_93570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000000003f; valaddr_reg:x3; val_offset:280710*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280710*0 + 3*642*FLEN/8, x4, x1, x2)

inst_93571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000000007f; valaddr_reg:x3; val_offset:280713*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280713*0 + 3*643*FLEN/8, x4, x1, x2)

inst_93572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000000000ff; valaddr_reg:x3; val_offset:280716*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280716*0 + 3*644*FLEN/8, x4, x1, x2)

inst_93573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000000001ff; valaddr_reg:x3; val_offset:280719*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280719*0 + 3*645*FLEN/8, x4, x1, x2)

inst_93574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000000003ff; valaddr_reg:x3; val_offset:280722*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280722*0 + 3*646*FLEN/8, x4, x1, x2)

inst_93575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000000007ff; valaddr_reg:x3; val_offset:280725*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280725*0 + 3*647*FLEN/8, x4, x1, x2)

inst_93576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000000fff; valaddr_reg:x3; val_offset:280728*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280728*0 + 3*648*FLEN/8, x4, x1, x2)

inst_93577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000001fff; valaddr_reg:x3; val_offset:280731*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280731*0 + 3*649*FLEN/8, x4, x1, x2)

inst_93578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000003fff; valaddr_reg:x3; val_offset:280734*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280734*0 + 3*650*FLEN/8, x4, x1, x2)

inst_93579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000007fff; valaddr_reg:x3; val_offset:280737*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280737*0 + 3*651*FLEN/8, x4, x1, x2)

inst_93580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000000ffff; valaddr_reg:x3; val_offset:280740*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280740*0 + 3*652*FLEN/8, x4, x1, x2)

inst_93581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000001ffff; valaddr_reg:x3; val_offset:280743*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280743*0 + 3*653*FLEN/8, x4, x1, x2)

inst_93582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000003ffff; valaddr_reg:x3; val_offset:280746*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280746*0 + 3*654*FLEN/8, x4, x1, x2)

inst_93583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000007ffff; valaddr_reg:x3; val_offset:280749*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280749*0 + 3*655*FLEN/8, x4, x1, x2)

inst_93584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000000fffff; valaddr_reg:x3; val_offset:280752*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280752*0 + 3*656*FLEN/8, x4, x1, x2)

inst_93585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000001fffff; valaddr_reg:x3; val_offset:280755*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280755*0 + 3*657*FLEN/8, x4, x1, x2)

inst_93586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000003fffff; valaddr_reg:x3; val_offset:280758*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280758*0 + 3*658*FLEN/8, x4, x1, x2)

inst_93587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000007fffff; valaddr_reg:x3; val_offset:280761*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280761*0 + 3*659*FLEN/8, x4, x1, x2)

inst_93588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000000ffffff; valaddr_reg:x3; val_offset:280764*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280764*0 + 3*660*FLEN/8, x4, x1, x2)

inst_93589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000001ffffff; valaddr_reg:x3; val_offset:280767*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280767*0 + 3*661*FLEN/8, x4, x1, x2)

inst_93590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000003ffffff; valaddr_reg:x3; val_offset:280770*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280770*0 + 3*662*FLEN/8, x4, x1, x2)

inst_93591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000007ffffff; valaddr_reg:x3; val_offset:280773*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280773*0 + 3*663*FLEN/8, x4, x1, x2)

inst_93592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000000fffffff; valaddr_reg:x3; val_offset:280776*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280776*0 + 3*664*FLEN/8, x4, x1, x2)

inst_93593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000001fffffff; valaddr_reg:x3; val_offset:280779*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280779*0 + 3*665*FLEN/8, x4, x1, x2)

inst_93594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000003fffffff; valaddr_reg:x3; val_offset:280782*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280782*0 + 3*666*FLEN/8, x4, x1, x2)

inst_93595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000007fffffff; valaddr_reg:x3; val_offset:280785*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280785*0 + 3*667*FLEN/8, x4, x1, x2)

inst_93596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200000ffffffff; valaddr_reg:x3; val_offset:280788*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280788*0 + 3*668*FLEN/8, x4, x1, x2)

inst_93597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200001ffffffff; valaddr_reg:x3; val_offset:280791*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280791*0 + 3*669*FLEN/8, x4, x1, x2)

inst_93598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200003ffffffff; valaddr_reg:x3; val_offset:280794*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280794*0 + 3*670*FLEN/8, x4, x1, x2)

inst_93599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200007ffffffff; valaddr_reg:x3; val_offset:280797*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280797*0 + 3*671*FLEN/8, x4, x1, x2)

inst_93600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20000fffffffff; valaddr_reg:x3; val_offset:280800*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280800*0 + 3*672*FLEN/8, x4, x1, x2)

inst_93601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20001fffffffff; valaddr_reg:x3; val_offset:280803*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280803*0 + 3*673*FLEN/8, x4, x1, x2)

inst_93602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20003fffffffff; valaddr_reg:x3; val_offset:280806*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280806*0 + 3*674*FLEN/8, x4, x1, x2)

inst_93603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20007fffffffff; valaddr_reg:x3; val_offset:280809*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280809*0 + 3*675*FLEN/8, x4, x1, x2)

inst_93604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2000ffffffffff; valaddr_reg:x3; val_offset:280812*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280812*0 + 3*676*FLEN/8, x4, x1, x2)

inst_93605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2001ffffffffff; valaddr_reg:x3; val_offset:280815*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280815*0 + 3*677*FLEN/8, x4, x1, x2)

inst_93606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2003ffffffffff; valaddr_reg:x3; val_offset:280818*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280818*0 + 3*678*FLEN/8, x4, x1, x2)

inst_93607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2007ffffffffff; valaddr_reg:x3; val_offset:280821*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280821*0 + 3*679*FLEN/8, x4, x1, x2)

inst_93608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc200fffffffffff; valaddr_reg:x3; val_offset:280824*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280824*0 + 3*680*FLEN/8, x4, x1, x2)

inst_93609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc201fffffffffff; valaddr_reg:x3; val_offset:280827*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280827*0 + 3*681*FLEN/8, x4, x1, x2)

inst_93610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc203fffffffffff; valaddr_reg:x3; val_offset:280830*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280830*0 + 3*682*FLEN/8, x4, x1, x2)

inst_93611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc207fffffffffff; valaddr_reg:x3; val_offset:280833*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280833*0 + 3*683*FLEN/8, x4, x1, x2)

inst_93612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc20ffffffffffff; valaddr_reg:x3; val_offset:280836*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280836*0 + 3*684*FLEN/8, x4, x1, x2)

inst_93613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc21ffffffffffff; valaddr_reg:x3; val_offset:280839*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280839*0 + 3*685*FLEN/8, x4, x1, x2)

inst_93614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc23ffffffffffff; valaddr_reg:x3; val_offset:280842*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280842*0 + 3*686*FLEN/8, x4, x1, x2)

inst_93615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc27ffffffffffff; valaddr_reg:x3; val_offset:280845*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280845*0 + 3*687*FLEN/8, x4, x1, x2)

inst_93616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc28000000000000; valaddr_reg:x3; val_offset:280848*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280848*0 + 3*688*FLEN/8, x4, x1, x2)

inst_93617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2c000000000000; valaddr_reg:x3; val_offset:280851*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280851*0 + 3*689*FLEN/8, x4, x1, x2)

inst_93618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2e000000000000; valaddr_reg:x3; val_offset:280854*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280854*0 + 3*690*FLEN/8, x4, x1, x2)

inst_93619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2f000000000000; valaddr_reg:x3; val_offset:280857*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280857*0 + 3*691*FLEN/8, x4, x1, x2)

inst_93620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2f800000000000; valaddr_reg:x3; val_offset:280860*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280860*0 + 3*692*FLEN/8, x4, x1, x2)

inst_93621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fc00000000000; valaddr_reg:x3; val_offset:280863*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280863*0 + 3*693*FLEN/8, x4, x1, x2)

inst_93622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fe00000000000; valaddr_reg:x3; val_offset:280866*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280866*0 + 3*694*FLEN/8, x4, x1, x2)

inst_93623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ff00000000000; valaddr_reg:x3; val_offset:280869*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280869*0 + 3*695*FLEN/8, x4, x1, x2)

inst_93624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ff80000000000; valaddr_reg:x3; val_offset:280872*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280872*0 + 3*696*FLEN/8, x4, x1, x2)

inst_93625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffc0000000000; valaddr_reg:x3; val_offset:280875*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280875*0 + 3*697*FLEN/8, x4, x1, x2)

inst_93626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffe0000000000; valaddr_reg:x3; val_offset:280878*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280878*0 + 3*698*FLEN/8, x4, x1, x2)

inst_93627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fff0000000000; valaddr_reg:x3; val_offset:280881*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280881*0 + 3*699*FLEN/8, x4, x1, x2)

inst_93628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fff8000000000; valaddr_reg:x3; val_offset:280884*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280884*0 + 3*700*FLEN/8, x4, x1, x2)

inst_93629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffc000000000; valaddr_reg:x3; val_offset:280887*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280887*0 + 3*701*FLEN/8, x4, x1, x2)

inst_93630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffe000000000; valaddr_reg:x3; val_offset:280890*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280890*0 + 3*702*FLEN/8, x4, x1, x2)

inst_93631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffff000000000; valaddr_reg:x3; val_offset:280893*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280893*0 + 3*703*FLEN/8, x4, x1, x2)

inst_93632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffff800000000; valaddr_reg:x3; val_offset:280896*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280896*0 + 3*704*FLEN/8, x4, x1, x2)

inst_93633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffc00000000; valaddr_reg:x3; val_offset:280899*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280899*0 + 3*705*FLEN/8, x4, x1, x2)

inst_93634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffe00000000; valaddr_reg:x3; val_offset:280902*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280902*0 + 3*706*FLEN/8, x4, x1, x2)

inst_93635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffff00000000; valaddr_reg:x3; val_offset:280905*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280905*0 + 3*707*FLEN/8, x4, x1, x2)

inst_93636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffff80000000; valaddr_reg:x3; val_offset:280908*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280908*0 + 3*708*FLEN/8, x4, x1, x2)

inst_93637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffc0000000; valaddr_reg:x3; val_offset:280911*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280911*0 + 3*709*FLEN/8, x4, x1, x2)

inst_93638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffe0000000; valaddr_reg:x3; val_offset:280914*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280914*0 + 3*710*FLEN/8, x4, x1, x2)

inst_93639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffff0000000; valaddr_reg:x3; val_offset:280917*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280917*0 + 3*711*FLEN/8, x4, x1, x2)

inst_93640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffff8000000; valaddr_reg:x3; val_offset:280920*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280920*0 + 3*712*FLEN/8, x4, x1, x2)

inst_93641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffc000000; valaddr_reg:x3; val_offset:280923*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280923*0 + 3*713*FLEN/8, x4, x1, x2)

inst_93642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffe000000; valaddr_reg:x3; val_offset:280926*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280926*0 + 3*714*FLEN/8, x4, x1, x2)

inst_93643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffff000000; valaddr_reg:x3; val_offset:280929*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280929*0 + 3*715*FLEN/8, x4, x1, x2)

inst_93644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffff800000; valaddr_reg:x3; val_offset:280932*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280932*0 + 3*716*FLEN/8, x4, x1, x2)

inst_93645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffc00000; valaddr_reg:x3; val_offset:280935*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280935*0 + 3*717*FLEN/8, x4, x1, x2)

inst_93646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffe00000; valaddr_reg:x3; val_offset:280938*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280938*0 + 3*718*FLEN/8, x4, x1, x2)

inst_93647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffff00000; valaddr_reg:x3; val_offset:280941*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280941*0 + 3*719*FLEN/8, x4, x1, x2)

inst_93648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffff80000; valaddr_reg:x3; val_offset:280944*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280944*0 + 3*720*FLEN/8, x4, x1, x2)

inst_93649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffc0000; valaddr_reg:x3; val_offset:280947*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280947*0 + 3*721*FLEN/8, x4, x1, x2)

inst_93650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffe0000; valaddr_reg:x3; val_offset:280950*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280950*0 + 3*722*FLEN/8, x4, x1, x2)

inst_93651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffff0000; valaddr_reg:x3; val_offset:280953*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280953*0 + 3*723*FLEN/8, x4, x1, x2)

inst_93652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffff8000; valaddr_reg:x3; val_offset:280956*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280956*0 + 3*724*FLEN/8, x4, x1, x2)

inst_93653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffffc000; valaddr_reg:x3; val_offset:280959*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280959*0 + 3*725*FLEN/8, x4, x1, x2)

inst_93654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffffe000; valaddr_reg:x3; val_offset:280962*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280962*0 + 3*726*FLEN/8, x4, x1, x2)

inst_93655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffff000; valaddr_reg:x3; val_offset:280965*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280965*0 + 3*727*FLEN/8, x4, x1, x2)

inst_93656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffff800; valaddr_reg:x3; val_offset:280968*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280968*0 + 3*728*FLEN/8, x4, x1, x2)

inst_93657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffffc00; valaddr_reg:x3; val_offset:280971*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280971*0 + 3*729*FLEN/8, x4, x1, x2)

inst_93658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffffe00; valaddr_reg:x3; val_offset:280974*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280974*0 + 3*730*FLEN/8, x4, x1, x2)

inst_93659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffffff00; valaddr_reg:x3; val_offset:280977*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280977*0 + 3*731*FLEN/8, x4, x1, x2)

inst_93660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffffff80; valaddr_reg:x3; val_offset:280980*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280980*0 + 3*732*FLEN/8, x4, x1, x2)

inst_93661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffffffc0; valaddr_reg:x3; val_offset:280983*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280983*0 + 3*733*FLEN/8, x4, x1, x2)

inst_93662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffffffe0; valaddr_reg:x3; val_offset:280986*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280986*0 + 3*734*FLEN/8, x4, x1, x2)

inst_93663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffffff0; valaddr_reg:x3; val_offset:280989*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280989*0 + 3*735*FLEN/8, x4, x1, x2)

inst_93664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffffff8; valaddr_reg:x3; val_offset:280992*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280992*0 + 3*736*FLEN/8, x4, x1, x2)

inst_93665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffffffc; valaddr_reg:x3; val_offset:280995*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280995*0 + 3*737*FLEN/8, x4, x1, x2)

inst_93666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2ffffffffffffe; valaddr_reg:x3; val_offset:280998*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 280998*0 + 3*738*FLEN/8, x4, x1, x2)

inst_93667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3c2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbc2fffffffffffff; valaddr_reg:x3; val_offset:281001*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281001*0 + 3*739*FLEN/8, x4, x1, x2)

inst_93668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:281004*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281004*0 + 3*740*FLEN/8, x4, x1, x2)

inst_93669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:281007*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281007*0 + 3*741*FLEN/8, x4, x1, x2)

inst_93670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:281010*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281010*0 + 3*742*FLEN/8, x4, x1, x2)

inst_93671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:281013*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281013*0 + 3*743*FLEN/8, x4, x1, x2)

inst_93672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:281016*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281016*0 + 3*744*FLEN/8, x4, x1, x2)

inst_93673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:281019*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281019*0 + 3*745*FLEN/8, x4, x1, x2)

inst_93674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:281022*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281022*0 + 3*746*FLEN/8, x4, x1, x2)

inst_93675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:281025*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281025*0 + 3*747*FLEN/8, x4, x1, x2)

inst_93676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:281028*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281028*0 + 3*748*FLEN/8, x4, x1, x2)

inst_93677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:281031*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281031*0 + 3*749*FLEN/8, x4, x1, x2)

inst_93678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:281034*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281034*0 + 3*750*FLEN/8, x4, x1, x2)

inst_93679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:281037*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281037*0 + 3*751*FLEN/8, x4, x1, x2)

inst_93680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:281040*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281040*0 + 3*752*FLEN/8, x4, x1, x2)

inst_93681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:281043*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281043*0 + 3*753*FLEN/8, x4, x1, x2)

inst_93682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:281046*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281046*0 + 3*754*FLEN/8, x4, x1, x2)

inst_93683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:281049*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281049*0 + 3*755*FLEN/8, x4, x1, x2)

inst_93684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:281052*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281052*0 + 3*756*FLEN/8, x4, x1, x2)

inst_93685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:281055*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281055*0 + 3*757*FLEN/8, x4, x1, x2)

inst_93686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:281058*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281058*0 + 3*758*FLEN/8, x4, x1, x2)

inst_93687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:281061*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281061*0 + 3*759*FLEN/8, x4, x1, x2)

inst_93688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:281064*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281064*0 + 3*760*FLEN/8, x4, x1, x2)

inst_93689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6b5f3e68568b and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x16749beb7b709 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6b5f3e68568b; op2val:0x9fc16749beb7b709;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:281067*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281067*0 + 3*761*FLEN/8, x4, x1, x2)

inst_93690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:281070*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281070*0 + 3*762*FLEN/8, x4, x1, x2)

inst_93691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:281073*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281073*0 + 3*763*FLEN/8, x4, x1, x2)

inst_93692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:281076*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281076*0 + 3*764*FLEN/8, x4, x1, x2)

inst_93693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:281079*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281079*0 + 3*765*FLEN/8, x4, x1, x2)

inst_93694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:281082*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281082*0 + 3*766*FLEN/8, x4, x1, x2)

inst_93695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd6ffd92a6486c and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad6ffd92a6486c; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:281085*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 281085*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336608,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336624,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336632,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336636,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336638,64,FLEN)
NAN_BOXED(6894240175399387073,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336639,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381120,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381121,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381123,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381127,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381135,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381151,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381183,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381247,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381375,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549381631,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549382143,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549383167,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549385215,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549389311,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549397503,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549413887,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549446655,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549512191,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549643263,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638549905407,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638550429695,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638551478271,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638553575423,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638557769727,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638566158335,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638582935551,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638616489983,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638683598847,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491638817816575,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491639086252031,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491639623122943,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491640696864767,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491642844348415,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491647139315711,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491655729250303,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491672909119487,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491707268857855,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491775988334591,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368491913427288063,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368492188305195007,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368492738061008895,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368493837572636671,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368496036595892223,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368500434642403327,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368509230735425535,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368526822921469951,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368562007293558783,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368632376037736447,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4368773113526091775,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4369054588502802431,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4369617538456223743,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4370743438363066367,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4370743438363066368,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4371869338269908992,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372432288223330304,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372713763200040960,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372854500688396288,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372924869432573952,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372960053804662784,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372977645990707200,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372986442083729408,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372990840130240512,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372993039153496064,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372994138665123840,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372994688420937728,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372994963298844672,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995100737798144,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995169457274880,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995203817013248,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995220996882432,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995229586817024,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995233881784320,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995236029267968,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995237103009792,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995237639880704,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995237908316160,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238042533888,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238109642752,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238143197184,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238159974400,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238168363008,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238172557312,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238174654464,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238175703040,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176227328,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176489472,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176620544,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176686080,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176718848,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176735232,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176743424,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176747520,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176749568,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176750592,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751104,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751360,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751488,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751552,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751584,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751600,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751608,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751612,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751614,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4372995238176751615,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894240415324017172,64,FLEN)
NAN_BOXED(2319775164483610206,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596864,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596865,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596867,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596871,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596879,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596895,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596927,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596991,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597119,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597375,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597887,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330598911,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330600959,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330605055,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330613247,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330629631,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330662399,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330727935,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330859007,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331121151,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331645439,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387332694015,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387334791167,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387338985471,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387347374079,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387364151295,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387397705727,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387464814591,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387599032319,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387867467775,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122388404338687,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122389478080511,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122391625564159,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122395920531455,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122404510466047,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122421690335231,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122456050073599,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122524769550335,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122662208503807,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122937086410751,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153123486842224639,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153124586353852415,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153126785377107967,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153131183423619071,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153139979516641279,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153157571702685695,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153192756074774527,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153263124818952191,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153403862307307519,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153685337284018175,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(154248287237439487,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282111,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282112,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(156500087051124736,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157063037004546048,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157344511981256704,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157485249469612032,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157555618213789696,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157590802585878528,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157608394771922944,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157617190864945152,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157621588911456256,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157623787934711808,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157624887446339584,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625437202153472,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625712080060416,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625849519013888,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625918238490624,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625952598228992,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625969778098176,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625978368032768,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625982663000064,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625984810483712,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625985884225536,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986421096448,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986689531904,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986823749632,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986890858496,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986924412928,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986941190144,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986949578752,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986953773056,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986955870208,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986956918784,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957443072,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957705216,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957836288,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957901824,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957934592,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957950976,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957959168,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957963264,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957965312,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966336,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966848,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967104,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967232,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967296,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967328,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967344,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967352,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967356,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967358,64,FLEN)
NAN_BOXED(6894256855228993320,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967359,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931776,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931777,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931779,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931783,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931791,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931807,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931839,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081931903,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081932031,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081932287,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081932799,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081933823,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081935871,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081939967,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081948159,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081964543,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253081997311,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253082062847,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253082193919,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253082456063,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253082980351,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253084028927,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253086126079,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253090320383,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253098708991,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253115486207,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253149040639,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253216149503,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253350367231,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851253618802687,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851254155673599,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851255229415423,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851257376899071,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851261671866367,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851270261800959,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851287441670143,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851321801408511,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851390520885247,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851527959838719,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192851802837745663,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192852352593559551,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192853452105187327,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192855651128442879,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192860049174953983,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192868845267976191,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192886437454020607,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192921621826109439,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4192991990570287103,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4193132728058642431,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4193414203035353087,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4193977152988774399,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4195103052895617023,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4195103052895617024,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4196228952802459648,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4196791902755880960,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197073377732591616,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197214115220946944,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197284483965124608,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197319668337213440,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197337260523257856,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197346056616280064,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197350454662791168,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197352653686046720,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197353753197674496,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354302953488384,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354577831395328,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354715270348800,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354783989825536,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354818349563904,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354835529433088,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354844119367680,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354848414334976,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354850561818624,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354851635560448,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852172431360,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852440866816,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852575084544,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852642193408,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852675747840,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852692525056,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852700913664,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852705107968,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852707205120,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852708253696,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852708777984,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709040128,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709171200,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709236736,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709269504,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709285888,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709294080,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709298176,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709300224,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709301248,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709301760,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302016,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302144,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302208,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302240,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302256,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302264,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302268,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302270,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4197354852709302271,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894265020054623442,64,FLEN)
NAN_BOXED(2319760496231353637,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311232,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311233,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311235,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311239,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311247,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311263,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311295,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311359,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311487,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145311743,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145312255,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145313279,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145315327,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145319423,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145327615,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145343999,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145376767,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145442303,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145573375,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057145835519,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057146359807,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057147408383,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057149505535,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057153699839,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057162088447,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057178865663,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057212420095,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057279528959,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057413746687,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540057682182143,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540058219053055,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540059292794879,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540061440278527,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540065735245823,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540074325180415,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540091505049599,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540125864787967,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540194584264703,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540332023218175,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812540606901125119,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812541156656939007,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812542256168566783,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812544455191822335,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812548853238333439,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812557649331355647,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812575241517400063,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812610425889488895,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812680794633666559,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13812821532122021887,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13813103007098732543,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13813665957052153855,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13814791856958996479,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13814791856958996480,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13815917756865839104,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13816480706819260416,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13816762181795971072,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13816902919284326400,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13816973288028504064,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817008472400592896,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817026064586637312,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817034860679659520,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817039258726170624,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817041457749426176,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817042557261053952,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043107016867840,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043381894774784,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043519333728256,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043588053204992,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043622412943360,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043639592812544,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043648182747136,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043652477714432,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043654625198080,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043655698939904,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656235810816,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656504246272,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656638464000,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656705572864,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656739127296,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656755904512,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656764293120,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656768487424,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656770584576,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656771633152,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772157440,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772419584,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772550656,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772616192,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772648960,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772665344,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772673536,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772677632,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772679680,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772680704,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681216,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681472,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681600,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681664,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681696,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681712,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681720,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681724,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681726,64,FLEN)
NAN_BOXED(6894269796307506920,64,FLEN)
NAN_BOXED(11511604498424709103,64,FLEN)
NAN_BOXED(13817043656772681727,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894080,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894081,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894083,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894087,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894095,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894111,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894143,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894207,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894335,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894591,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614895103,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614896127,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614898175,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614902271,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614910463,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614926847,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614959615,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615025151,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615156223,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615418367,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215615942655,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215616991231,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215619088383,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215623282687,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215631671295,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215648448511,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215682002943,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215749111807,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215883329535,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216151764991,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077216688635903,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077217762377727,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077219909861375,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077224204828671,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077232794763263,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077249974632447,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077284334370815,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077353053847551,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077490492801023,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077765370707967,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480078315126521855,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480079414638149631,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480081613661405183,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480086011707916287,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480094807800938495,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480112399986982911,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480147584359071743,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480217953103249407,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480358690591604735,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480640165568315391,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9481203115521736703,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579327,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9482329015428579328,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9483454915335421952,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484017865288843264,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484299340265553920,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484440077753909248,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484510446498086912,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484545630870175744,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484563223056220160,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484572019149242368,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484576417195753472,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484578616219009024,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484579715730636800,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580265486450688,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580540364357632,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580677803311104,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580746522787840,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580780882526208,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580798062395392,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580806652329984,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580810947297280,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580813094780928,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814168522752,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814705393664,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580814973829120,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815108046848,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815175155712,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815208710144,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815225487360,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815233875968,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815238070272,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815240167424,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241216000,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815241740288,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242002432,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242133504,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242199040,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242231808,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242248192,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242256384,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242260480,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242262528,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242263552,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264064,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264320,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264448,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264512,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264544,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264560,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264568,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264572,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264574,64,FLEN)
NAN_BOXED(6894280007293113826,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9484580815242264575,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385192960,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385192961,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385192963,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385192967,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385192975,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385192991,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385193023,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385193087,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385193215,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385193471,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385193983,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385195007,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385197055,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385201151,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385209343,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385225727,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385258495,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385324031,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385455103,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878385717247,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878386241535,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878387290111,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878389387263,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878393581567,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878401970175,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878418747391,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878452301823,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878519410687,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878653628415,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834878922063871,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834879458934783,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834880532676607,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834882680160255,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834886975127551,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834895565062143,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834912744931327,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555834947104669695,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555835015824146431,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555835153263099903,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555835428141006847,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555835977896820735,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555837077408448511,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555839276431704063,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555843674478215167,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555852470571237375,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555870062757281791,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555905247129370623,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13555975615873548287,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13556116353361903615,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13556397828338614271,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13556960778292035583,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13558086678198878207,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13558086678198878208,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13559212578105720832,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13559775528059142144,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560057003035852800,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560197740524208128,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560268109268385792,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560303293640474624,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560320885826519040,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560329681919541248,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560334079966052352,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560336278989307904,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560337378500935680,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560337928256749568,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338203134656512,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338340573609984,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338409293086720,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338443652825088,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338460832694272,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338469422628864,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338473717596160,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338475865079808,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338476938821632,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338477475692544,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338477744128000,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338477878345728,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338477945454592,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338477979009024,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338477995786240,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478004174848,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478008369152,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478010466304,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478011514880,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012039168,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012301312,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012432384,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012497920,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012530688,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012547072,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012555264,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012559360,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012561408,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012562432,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012562944,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563200,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563328,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563392,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563424,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563440,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563448,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563452,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563454,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13560338478012563455,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6894284661387187851,64,FLEN)
NAN_BOXED(11511595688965682953,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894289739451877484,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
